{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/log.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/layoutButton/LayoutChooser.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/viewer/ToolbarButton.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/layoutButton/LayoutButton.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/tableList/TableListItem.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/measurementTable/MeasurementTableItem.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/ScrollableArea/ScrollableArea.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/utils/throttled.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/utils/getScrollbarSize.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/tableList/TableList.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/measurementTable/MeasurementTable.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/content/aboutContent/AboutContent.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/tabComponents/TabComponents.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/tabComponents/TabFooter.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/customForm/HotkeyField.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/languageSwitcher/LanguageSwitcher.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/checkbox/checkbox.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/cineDialog/CineDialog.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/content/viewportDownloadForm/ViewportDownloadForm.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/quickSwitch/StudiesItem.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/quickSwitch/StudiesList.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/quickSwitch/SeriesList.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/quickSwitch/QuickSwitch.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/roundedButtonGroup/RoundedButtonGroup.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/selectTree/InputRadio.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/selectTree/SelectTreeBreadcrumb.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/selectTree/SelectTree.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/simpleDialog/SimpleDialog.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/ohifModal/OHIFModal.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/contextMenu/ContextMenu.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/errorPage/ErrorPage.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/errorPage/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/studyList/CustomDateRangePicker.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/studyList/TableSearchFilter.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/studyList/StudyListLoadingText.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/studyList/StudyList.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/studyList/TablePagination.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/studyList/PageToolbar.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/viewer/ExpandableToolMenu.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/toolbarSection/ToolbarSection.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/errorBoundary/ErrorBoundary.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/hooks/useMedia.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/hooks/useDebounce.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/elements/form/OldSelect.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/elements/form/Select.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/elements/form/Label.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/elements/form/Range.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/elements/form/TextArea.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/elements/form/TextInput.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/elements/form/DropdownMenu.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/viewer/PlayClipButton.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/viewer/SimpleToolbarButton.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/viewer/Toolbar.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/utils/viewerbaseDragDropContext.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/utils/asyncComponent/asyncComponent.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/DICOMWeb/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/DICOMWeb/getAttribute.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/DICOMWeb/getAuthorizationHeader.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/DICOMWeb/getModalities.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/DICOMWeb/getName.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/DICOMWeb/getNumber.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/DICOMWeb/getString.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/cornerstone.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/lib/cornerstone.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/hanging-protocols/lib/validate.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/hanging-protocols/customAttributes.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/hanging-protocols/HPMatcher.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/hanging-protocols/customViewportSettings.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/hanging-protocols/lib/comparators.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/hanging-protocols/classes/Rule.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/hanging-protocols/classes/rules.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/hanging-protocols/lib/removeFromArray.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/hanging-protocols/classes/ViewportStructure.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/hanging-protocols/classes/Viewport.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/hanging-protocols/classes/Stage.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/hanging-protocols/classes/Protocol.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/hanging-protocols/ProtocolEngine.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/hanging-protocols/lib/sortByScore.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/hanging-protocols/protocolStore/classes/ProtocolStore.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/hanging-protocols/protocolStore/defaultProtocol.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/hanging-protocols/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/hanging-protocols/protocolStore/classes/ProtocolStrategy.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/header.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/object.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/string.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/ui/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/ui/getScrollbarSize.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/ui/getOffset.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/ui/isCharacterKeyPress.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/ui/handleError.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/elements/Icon/getIcon.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/elements/Icon/Icon.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/elements/Icon/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/contextProviders/ModalProvider.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/snackbar/SnackbarItem.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/snackbar/SnackbarContainer.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/snackbar/SnackbarTypes.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/contextProviders/SnackbarProvider.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/contextProviders/LanguageProvider.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/contextProviders/DialogProvider.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/contextProviders/LoggerProvider.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/contextProviders/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/guid.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/classes/OHIFError.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/errorHandler.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/xhrRetryRequestHook.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/user.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/classes/metadata/Metadata.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/cornerstone/src/state.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/classes/metadata/InstanceMetadata.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/classes/metadata/SeriesMetadata.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/overlayTrigger/Fade.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/overlayTrigger/Overlay.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/overlayTrigger/createChainedFunction.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/overlayTrigger/OverlayTrigger.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/overlayTrigger/index.js","webpack:///./context/AppContext.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/tooltip/Tooltip.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/tooltip/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/metadataProvider/fetchPaletteColorLookupTableData.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/metadataProvider/unpackOverlay.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/metadataProvider/fetchOverlayData.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/metadataProvider/validNumber.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/classes/MetadataProvider.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/metadataProvider/getPixelSpacingInformation.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/hotkeys/pausePlugin.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/hotkeys/recordPlugin.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/hotkeys/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/enums.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/studyMetadataManager.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/classes/metadata/OHIFInstanceMetadata.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/classes/metadata/OHIFSeriesMetadata.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/classes/metadata/OHIFStudyMetadata.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/classes/metadata/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/isDisplaySetReconstructable.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/classes/metadata/StudyMetadata.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/classes/ImageSet.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/getImageId.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/classes/StudyMetadataSource.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/i18n/src/config.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/i18n/src/debugger.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/i18n/src/locales/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/i18n/src/locales/de/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/i18n/src/locales/en-US/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/i18n/src/locales/es/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/i18n/src/locales/fr/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/i18n/src/locales/ja-JP/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/i18n/src/locales/nl/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/i18n/src/locales/pt-BR/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/i18n/src/locales/ru/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/i18n/src/locales/vi/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/i18n/src/locales/zh/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/i18n/src/getAvailableLanguagesInfo.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/i18n/src/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/studies/retrieveStudyMetadata.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/str2ab.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/objectPath.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/absoluteUrl.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/addServers.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/dicomLoaderService.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/b64toBlob.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/loadAndCacheDerivedDisplaySets.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/urlUtil.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/makeDeferred.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/Queue.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/hierarchicalListUtils.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/progressTrackingUtils.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/writeScript.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/makeCancelable.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/isDicomUid.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/resolveObjectPath.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/classes/StudyPrefetcher.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/classes/StudyLoadingListener.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/classes/PubSub.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/classes/LogManager.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/classes/OHIFStudyMetadataSource.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/classes/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/isLowPriorityModality.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/sortBy.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/StackManager.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/classes/TypeSafeCollection.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/tools/arrowAnnotate.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/tools/bidirectional.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/tools/ellipticalRoi.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/tools/circleRoi.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/tools/freehandMouse.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/tools/length.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/tools/nonTarget.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/tools/rectangleRoi.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/tools/angle.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/tools/targetCR.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/tools/targetNE.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/tools/targetUN.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/tools/dicomSRDisplayTool.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/toolGroups/allTools.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/configuration.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/dataExchange.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/classes/TimepointApi.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/lib/getLabel.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/lib/getDescription.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/lib/getImageIdForImagePath.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/classes/MeasurementApi.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/conformance/criteria/BaseCriterion.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/conformance/criteria/Location.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/conformance/criteria/MaxTargetsPerOrgan.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/conformance/criteria/MaxTargets.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/conformance/criteria/MeasurementsLength.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/conformance/criteria/Modality.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/conformance/criteria/NonTargetResponse.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/conformance/criteria/TargetType.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/conformance/CriteriaEvaluator.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/conformance/evaluations/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/conformance/ConformanceCriteria.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/lib/getImageAttributes.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/lib/refreshCornerstoneViewports.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/measurementHandlers/handleSingleMeasurementAdded.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/measurementHandlers/handleChildMeasurementAdded.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/measurementHandlers/handleSingleMeasurementModified.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/measurementHandlers/handleChildMeasurementModified.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/measurementHandlers/handleSingleMeasurementRemoved.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/measurementHandlers/handleChildMeasurementRemoved.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/measurementHandlers/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/toolGroups/targets.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/toolGroups/nonTargets.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/toolGroups/temp.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/ltTools.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/measurements/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/studies/services/qido/instances.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/studies/services/qido/studies.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/studies/services/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/studies/searchStudies.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/studies/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/studies/retrieveStudiesMetadata.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/studies/getStudyBoxData.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/getWADORSImageId.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/studies/getSeriesInfo.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/studies/sortStudy.js","webpack:///./routes/routesUtil.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/studies/services/wado/getReferencedSeriesSequence.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/studies/services/wado/studyInstanceHelpers.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/studies/services/wado/retrieveMetadataLoader.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/studies/services/wado/retrieveMetadataLoaderSync.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/studies/services/wado/retrieveMetadataLoaderAsync.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/studies/services/wado/retrieveMetadata.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/viewer/ViewportErrorIndicator.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/viewer/ViewportLoadingIndicator.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/studyBrowser/ImageThumbnail.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/studyBrowser/Thumbnail.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/studies/services/qido/StaticWadoClient.js","webpack:///./store/layout/selectors.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/sopClassDictionary.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/utils/isImage.js","webpack:///./context/WhiteLabelingContext.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/classes/CommandsManager.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/classes/HotkeysManager.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/DICOMSR/SCOORD3D/enums.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/DICOMSR/SCOORD3D/utils/getSequenceAsArray.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/DICOMSR/SCOORD3D/utils/getMergedContentSequencesByTrackingUniqueIdentifiers.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/DICOMSR/SCOORD3D/utils/getLabelFromMeasuredValueSequence.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/DICOMSR/SCOORD3D/utils/getCoordsFromSCOORDOrSCOORD3D.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/DICOMSR/SCOORD3D/utils/processTID1410Measurement.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/DICOMSR/SCOORD3D/utils/processNonGeometricallyDefinedMeasurement.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/DICOMSR/SCOORD3D/utils/processMeasurement.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/DICOMSR/SCOORD3D/utils/getMeasurements.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/DICOMSR/SCOORD3D/utils/getReferencedImagesList.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/DICOMSR/SCOORD3D/utils/isRehydratable.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/DICOMSR/SCOORD3D/constants/toolNames.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/DICOMSR/SCOORD3D/constants/scoordTypes.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/DICOMSR/SCOORD3D/utils/getRenderableData.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/DICOMSR/SCOORD3D/utils/addMeasurement.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/DICOMSR/SCOORD3D/parseSCOORD3D.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/DICOMSR/utils/findInstanceMetadataBySopInstanceUid.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/DICOMSR/parseDicomStructuredReport.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/DICOMSR/utils/isToolSupported.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/DICOMSR/parseMeasurementsData.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/DICOMSR/utils/getAllDisplaySets.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/DICOMSR/handleStructuredReport.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/DICOMSR/utils/findMostRecentStructuredReport.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/DICOMSR/dataExchange.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/DICOMSR/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/redux/constants/ActionTypes.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/redux/actions.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/redux/reducers/extensions.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/redux/reducers/preferences.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/redux/reducers/servers.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/redux/reducers/studies.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/redux/reducers/timepointManager.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/redux/reducers/viewports.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/redux/reducers/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/redux/localStorage.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/redux/sessionStorage.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/redux/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/cornerstone/src/initCornerstoneTools.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/cornerstone/src/utils/measurementServiceMappings/measurementServiceMappingsFactory.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/cornerstone/src/tools/modules/dicomSRModule.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/cornerstone/src/init.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/cornerstone/src/utils/setCornerstoneLayout.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/cornerstone/src/CornerstoneViewportDownloadForm.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/cornerstone/src/commandsModule.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/cornerstone/src/toolbarModule.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/cornerstone/src/index.js","webpack:///./version.js","webpack:///./utils/getUserManagerForOpenIdConnectClient.js","webpack:///./utils/initWebWorkers.js","webpack:///./store/index.js","webpack:///./appExtensions/GenericViewerCommands/commandsModule.js","webpack:///./appExtensions/GenericViewerCommands/index.js","webpack:///./appExtensions/MeasurementsPanel/jumpToRowItem.js","webpack:///./appExtensions/MeasurementsPanel/ConnectedMeasurementTable.js","webpack:///./components/Labelling/LabellingTransition.js","webpack:///./components/Labelling/OHIFLabellingData.js","webpack:///./components/SimpleDialog/SimpleDialog.js","webpack:///./components/EditDescriptionDialog/EditDescriptionDialog.js","webpack:///./components/Labelling/LabellingFlow.js","webpack:///./connectedComponents/ToolContextMenu.js","webpack:///./appExtensions/MeasurementsPanel/init.js","webpack:///./appExtensions/MeasurementsPanel/index.js","webpack:///./components/LoadingBar/Bar.js","webpack:///./components/LoadingBar/Container.js","webpack:///./OHIFStandaloneViewer.js","webpack:///./App.js","webpack:///./config.js","webpack:///./routes/NotFound.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/ui/src/components/studyBrowser/StudyBrowser.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/cornerstone/src/tools/id.js","webpack:///./context/UserManagerContext.js","webpack:///./components/OHIFLogo/OHIFLogo.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/extensions/MODULE_TYPES.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/vtk/src/VTKViewport.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/vtk/src/ConnectedVTKViewport.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/vtk/src/LoadingIndicator.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/vtk/src/OHIFVTKViewport.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/node_modules/moment/locale sync ^\\.\\/.*$","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/vtk/src/utils/setLayoutAndViewportData.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/vtk/src/utils/setMPRLayout.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/vtk/src/utils/setViewportToVTK.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/vtk/src/commandsModule.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/vtk/src/toolbarComponents/SlabThicknessToolbarComponent.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/vtk/src/toolbarComponents/VTKMPRToolbarButton.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/vtk/src/toolbarModule.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/vtk/src/withCommandsManager.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/vtk/src/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-html/src/OHIFDicomHtmlSopClassHandler.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-html/src/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-segmentation/src/utils/drawCanvasCrosshairs.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-segmentation/src/tools/DICOMSegTempCrosshairsTool.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-segmentation/src/tools/TOOL_NAMES.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-segmentation/src/toolbarModule.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-segmentation/src/loadSegmentation.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-segmentation/src/utils/refreshViewports.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-segmentation/src/utils/setActiveLabelMap.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-segmentation/src/getSourceDisplaySet.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-segmentation/src/getOHIFDicomSegSopClassHandler.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-segmentation/src/components/BrushColorSelector/BrushColorSelector.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-segmentation/src/components/BrushRadius/BrushRadius.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-segmentation/src/components/SegmentationItem/SegmentationItem.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-segmentation/src/components/SegmentationSettings/SegmentationSettings.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-segmentation/src/components/SegmentItem/SegmentItem.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-segmentation/src/components/SegmentationSelect.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-segmentation/src/components/SegmentationPanel/SegmentationPanel.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-segmentation/src/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-segmentation/src/init.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-rt/src/utils/toolNames.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-rt/src/utils/drawCanvasCrosshairs.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-rt/src/tools/RTStructDisplayTool.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-rt/src/tools/modules/lib/getImageIdOfCenterFrameOfROIContour.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-rt/src/tools/modules/rtStructModule.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-rt/src/tools/modules/lib/structureSetReferencesSeriesInstanceUid.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-rt/src/init.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-rt/src/utils/transformPointsToImagePlane.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-rt/src/loadRTStruct.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-rt/src/getSourceDisplaySet.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-rt/src/OHIFDicomRTStructSopClassHandler.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-rt/src/components/StructureSetItem/StructureSetItem.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-rt/src/components/RTSettings/RTSettings.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-rt/src/components/LoadingIndicator/LoadingIndicator.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-rt/src/components/PanelSection/PanelSection.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-rt/src/components/RTPanel/RTPanel.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-rt/src/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-rt/src/id.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-microscopy/src/DicomMicroscopySopClassHandler.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-microscopy/src/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-pdf/src/OHIFDicomPDFSopClassHandler.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/extensions/dicom-pdf/src/index.js","webpack:///./index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/extensions/ExtensionManager.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/services/ServicesManager.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/services/UINotificationService/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/services/UIModalService/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/services/UIDialogService/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/services/LoggerService/index.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/services/_shared/pubSubServiceInterface.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/services/MeasurementService/MeasurementService.js","webpack:///C:/Users/blais/Desktop/Blain Tech/Diagnosoft/Sprint2/pacs/Viewers/platform/core/src/services/MeasurementService/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","8","exports","module","l","e","promises","Promise","resolve","reject","href","fullhref","p","existingLinkTags","document","getElementsByTagName","dataHref","tag","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","jsonpScriptSrc","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","head","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","log","warn","info","trace","debug","time","timeEnd","LayoutChooser","props","cell","parentCell","row","col","currentCell","table","Rows","newRow","Columns","isRange","className","emptyCell","state","selectedCell","setState","column","this","highlightCells","onClick","onChange","style","display","visible","minWidth","boxSize","cellBorder","role","map","width","height","border","onMouseEnter","onMouseLeave","PureComponent","PropTypes","number","isRequired","bool","func","ToolbarButton","isActive","icon","labelWhenActive","classnames","active","iconProps","label","arrowIconName","isExpanded","arrowIcon","isExpandable","Icon","cypressSelectorId","toLowerCase","data-cy","propTypes","id","string","oneOfType","shape","defaultProps","withTranslation","LayoutButton","dropdownVisible","prevProps","TableListItem","onItemClick","preventDefault","stopPropagation","itemKey","itemClass","itemMetaClass","itemIndex","itemMeta","children","Component","node","MeasurementTableItem","btnLabel","onClickCallback","marginRight","hasWarningClass","measurementData","hasWarnings","isReadOnly","actionButtons","onRelabel","relabelButton","getActionButton","onRelabelClick","onEditDescription","descriptionButton","onEditDescriptionClick","onDelete","deleteButton","onDeleteClick","measurementNumber","keySeparator","nsSeparator","getDataDisplayText","index","displayText","warningList","Array","isArray","listedWarnings","Fragment","warningTitle","placement","overlay","getWarningContent","getTableListItem","connectedComponent","ScrollableArea","delay","callback","args","context","isThrottled","scrollableElement","currentTop","scrollTop","offsetHeight","limit","scrollHeight","scrollStep","hideScrollbar","x","scrollX","y","scrollY","scrollbarSize","inner","outer","position","top","left","visibility","overflow","body","w1","offsetWidth","h1","w2","h2","clientWidth","clientHeight","getScrollbarSize","marginBottom","scrollAreaClasses","scrollHandlerThrottled","scrollHandler","wrapper","arguments","scrollableClass","class","ref","element","onScroll","onTransitionEnd","scrollNavUp","scrollNavDown","adjustMargins","addEventListener","removeEventListener","TableList","customHeader","headerTitle","headless","onHeaderClick","getHeader","defaultItems","MeasurementTable","selectedKey","saveFunction","onSaveComplete","title","measurementCollection","measureGroup","getCustomHeader","getMeasurements","selectedMeasurementNumber","measurements","measurement","itemNumber","readOnly","groupName","maxMeasurements","timepoints","timepoint","date","overallWarnings","hasOverallWarnings","getTimepointsHeader","getMeasurementsGroups","array","AboutContent","useTranslation","detect","os","version","link","process","substr","toUpperCase","item","backgroundColor","renderTableRow","getDataCy","split","join","TabComponents","tabs","customProps","useState","currentTabIndex","setCurrentTabIndex","tab","hidden","tabCustomProps","arrayOf","any","translate","word","TabFooter","onResetPreferences","onSave","onCancel","hasErrors","disabled","formatKeysForInput","keys","getKeys","sequence","modifier_keys","keysArray","modifiers","forEach","includes","HotkeyField","handleChange","classNames","inputValue","onKeyDown","hotkeys","record","unpause","onFocus","pause","startRecording","allowed_keys","LanguageSwitcher","language","onLanguageChange","languages","lng","Checkbox","checked","checkbox","CineDialog","parseFloat","onFrameRateChanged","isPlaying","onPlayPauseChanged","onClickNextButton","onClickBackButton","onClickSkipToStart","onClickSkipToEnd","cineFrameRate","data-toggle","onClickPlayPause","min","cineMinFrameRate","max","cineMaxFrameRate","step","cineStepFrameRate","handleInputChange","toFixed","FILE_TYPE_OPTIONS","ViewportDownloadForm","activeViewport","onClose","updateViewportPreview","enableViewport","disableViewport","toggleAnnotations","loadImage","downloadBlob","defaultSize","minimumSize","maximumSize","canvasClass","filename","setFilename","fileType","setFileType","dimensions","setDimensions","showAnnotations","setShowAnnotations","keepAspect","setKeepAspect","aspectMultiplier","setAspectMultiplier","viewportElement","setViewportElement","viewportElementDimensions","setViewportElementDimensions","createRef","downloadCanvas","setDownloadCanvas","viewportPreview","setViewportPreview","setError","hasError","values","refreshViewport","useRef","onDimensionsChange","dimension","oppositeDimension","sanitizedTargetValue","replace","isEmpty","newDimensions","updatedDimension","Math","round","error_messages","renderErrorHandler","validSize","loadAndUpdateViewports","useCallback","scaledWidth","scaledHeight","scaledDimensions","current","dataUrl","viewportElementWidth","viewportElementHeight","useEffect","evt","alt","base","options","htmlFor","StudiesItem","studyData","StudyDate","StudyDescription","modalities","studyAvailable","activeClass","hasDescriptionAndDate","getModalitiesStyle","StudiesList","studyListData","StudyInstanceUID","activeStudyInstanceUID","getBrowserItems","SeriesList","seriesItems","seriesData","Thumbnail","displaySetInstanceUID","activeDisplaySetInstanceUID","getSeriesItems","QuickSwitch","find","study","thumbnails","studyDataSelected","onStudySelected","seriesQuickSwitchOpen","seriesDataSelected","onSeriesSelected","sideClass","side","quickSwitchClass","hideSeriesSwitch","showSeriesSwitch","getSmallListItems","onSeriesClick","onStudyClick","RoundedButtonGroup","badgeNumbers","newValue","onValueChanged","onStateEvent","optionIndex","findIndex","detail","badgeNumber","option","stateEvent","prevState","buttons","roundedButtonWrapper","noselect","optionText","bottomLabel","badgeNumberOverflow","String","onClickOption","InputRadio","onSelected","itemData","labelClass","SelectTreeBreadcrumb","SelectTree","onComponentChange","items","searchTerm","selectTreeFirstTitle","currentNode","selectTreeSecondTitle","searchEnabled","placeholder","autoFocus","searchLocations","currentTarget","isLeafSelected","treeItems","getTreeItems","headerItem","onBreadcrumbSelected","filteredItems","cloneDeep","indexOf","filterItems","getLabelClass","SimpleDialog","onConfirm","isOpen","rootClass","componentRef","componentStyle","onSubmit","defaultValue","setValue","customStyle","zIndex","alignItems","justifyContent","Modal","setAppElement","getElementById","OHIFModal","closeButton","shouldCloseOnEsc","fullscreen","classes","ContextMenu","onContextMenu","ErrorPage","description","onRetry","stack","location","reload","CustomDateRangePicker","moment","locale","i18n","onDatesChange","startDate","endDate","dateRangePickerProps","presets","renderCalendarInfo","text","start","end","isSelected","preset","renderMonthElement","month","onMonthSelect","onYearSelect","containerStyle","margin","months","year","renderYearsOptions","startDatePlaceholderText","endDatePlaceholderText","phrases","closeDatePicker","clearDates","required","instanceOf","Date","getDateEntry","datePicked","rangeDatePicked","getDateEntryFromRange","today","numOfDays","edge","subtract","TableSearchFilter","meta","onSort","onValueChange","sortFieldName","sortDirection","studyListDateFilterNumDays","studyDateTo","studyDateFrom","focusedInput","setFocusedInput","translationsAreReady","ready","sortIcons","sortIconForSortField","lastWeek","lastMonth","defaultStartDate","defaultEndDate","studyDatePresets","field","fieldName","inputType","sortIcon","fontSize","startDateId","endDateId","onFocusChange","updatedVal","numberOfMonths","showClearDates","anchorDirection","hideKeyboardShortcutsPanel","isOutsideRange","day","isInclusivelyBeforeDay","oneOf","size","animation","getContentFromUseMediaValue","displaySize","contentArrayMap","defaultContent","StudyList","isLoading","studies","sort","handleSort","filterValues","handleFilterChange","onFilterChange","handleSelectItem","onSelectItem","largeTableMeta","mediumTableMeta","smallTableMeta","tableMeta","large","medium","small","totalSize","reduce","prev","next","percentWidth","direction","colSpan","TableRow","AccessionNumber","PatientID","PatientName","isHighlighted","handleClick","largeRowTemplate","mediumRowTemplate","color","whiteSpace","flexGrow","flexDirection","maxWidth","aria-label","textOverflow","textAlign","smallRowTemplate","fontWeight","paddingTop","paddingLeft","patientNameOrId","accessionOrModalityOrDescription","allFields","TablePagination","nextPageFunc","currentPage","prevPageFunc","onRowsPerPageChange","parseInt","prevPage","nextPage","recordCount","rowsPerPage","pageOptions","pageNumber","renderRowsPerPageDropdown","renderPaginationButtons","PageToolbar","onImport","getImportTool","ExpandableToolMenu","random","getButtons","button","activeCommand","btn","onGroupMenuClick","toolbarComponent","activeIcon","trigger","rootClose","handleHide","onOverlayHide","onExpandableToolClick","toolbarMenuOverlay","React","ToolbarSection","activeButton","activeButtons","ErrorFallback","componentStack","resetErrorBoundary","OHIFErrorBoundary","onReset","onError","fallbackComponent","FallbackComponent","getDisplaySize","mediaQueryMap","mediaTypesAliases","defaultDisplaySize","mql","matches","getMediaQueryMap","mediaQueriesStringList","q","matchMedia","useMedia","defaultMediaType","_mediaQueryMap","mount","onMediaQueryChange","mediaQuery","nextDisplaySize","media","originalMediaQuery","getMediaTypeAlias","_mediaQueriesStringList","_mediaTypesAliases","isEqual","updateState","removeListener","addListener","useDebounce","debouncedValue","setDebouncedValue","handler","Select","selected","for","Range","showPercentage","showValue","valueRenderer","cols","TextInput","toTimeString","DropdownMenu","open","list","align","handleOnClick","getListItems","toggleList","contains","titleElement","handleMouseClick","renderTitleElement","renderList","PlayClipButton","iconName","data-container","data-placement","SimpleToolbarButton","Toolbar","maybePlayClipButton","maybeLayoutButton","includePlayClipButton","includeLayoutButton","isTouchDevice","navigator","maxTouchPoints","viewerbaseDragDropContext","DecoratedClass","backend","TouchBackend","HTML5Backend","opts","enableMouseEvents","retryImport","fn","retriesLeft","interval","catch","retry","component","asyncComponent","importComponent","isFunction","default","onLoaded","toString","addDynamicallyLoadedComponentToState","DICOMWeb","Value","input","padFour","output","charCodeAt","convertToInt","getAuthorizationHeader","requestOptions","headers","accessToken","user","getAccessToken","auth","Authorization","btoa","getModalities","Modality","ModalitiesInStudy","vr","getName","Alphabetic","getNumber","getString","cornerstone","metadataProvider","getBoundingBox","textLines","font","cornerstoneTools","textStyle","getFont","getFontSize","save","textBaseline","measureText","boundingBox","padding","centering","restore","pixelToPage","enabledElement","getEnabledElement","canvas","canvasOffset","$","offset","canvasPosition","pixelToCanvas","repositionTextBox","eventData","config","isCreating","image","allowedBorders","OHIF","uiSettings","autoPositionMeasurementsTextCallOuts","allow","T","R","B","L","getRenderingInformation","limits","tool","mid","directions","diffX","cornerAxis","x1","y1","calculateAxisCenter","axis","a","b","lowest","handles","textBox","$canvas","canvasWidth","outerWidth","canvasHeight","outerHeight","canvasDimensions","bounds","getHandlePosition","cornerAxisPosition","availableAreas","labelWidth","labelHeight","topLeft","bottomRight","getAvailableBlankAreas","tempDirections","assign","tempCornerAxis","foundPlace","renderingInformation","pageToPixel","toolAxis","getTextBoxSizeInPixels","textBoxOffset","centerX","centerY","halfBoxSizeX","halfBoxSizeY","offsetY","offsetX","getTextBoxOffset","canvasBorders","x0","y0","pixelPosition","validate","validators","equals","attributes","doesNotEqual","doesNotContain","startsWith","endsWith","CustomAttributeRetrievalCallbacks","InstanceMetadata","metadata","HPMatcher","metadataInstance","rules","OHIFError","format","details","passed","failed","requiredFailed","score","rule","attribute","customAttribute","setCustomAttribute","errorMessages","testConstraint","constraint","attributeMap","customAttributeExists","getCustomAttribute","getTagValue","weight","CustomViewportSettings","comparators","validator","validatorOption","freeze","EQUALS_REGEXP","Rule","guid","_constraintInfo","_validatorAndValue","constraintInfo","ruleConstraint","comparator","isRuleForPrior","ruleValidatorAndValue","getConstraintValidatorAndValue","intValue","test","validatorAndValue","getConstraintInfo","currentValidator","ProtocolMatchingRule","StudyMatchingRule","SeriesMatchingRule","ImageMatchingRule","removeFromArray","indexToRemove","ViewportStructure","properties","Viewport","viewportSettings","imageMatchingRules","seriesMatchingRules","studyMatchingRules","ruleObject","fromObject","Stage","viewportStructure","viewports","createdDate","currentStage","clonedStage","viewportObject","viewport","Protocol","locked","hasUpdatedPriorsInformation","modifiedDate","userLoggedIn","createdBy","getUserId","modifiedBy","availableTo","Set","editableBy","protocolMatchingRules","stages","numberOfPriorsReferenced","skipCache","stage","priorsReferenced","getNumberOfPriorsReferenced","updateNumberOfPriorsReferenced","stageObject","currentProtocol","clonedProtocol","protocolWasModified","StudyMetadata","ProtocolEngine","protocolStore","priorStudies","studyMetadataSource","Map","StudyMetadataSource","every","reset","newStageIds","protocol","getBestProtocolMatch","setHangingProtocol","matched","studyInstance","getFirstInstance","numberOfAvailablePriors","getNumberOfAvailablePriors","getObjectID","getProtocol","matchedProtocols","clear","matchedProtocolScores","_clearMatchedProtocols","findMatchByStudy","matchedDetail","has","set","obj","highestScoringProtocolId","_largestKeyByValue","updateProtocolMatches","bestMatch","_getHighestScoringProtocol","studyObjectID","getAvailableStudyPriors","priors","viewportIndex","instanceMatchingRules","matchingScores","currentStudy","firstInstance","highestStudyMatchingScore","highestSeriesMatchingScore","priorStudy","validatorType","abstractPriorValue","studyIndex","priorStudyObjectID","loadStudy","studyMetadata","updateViewports","studyMatchDetails","forEachSeries","series","seriesMatchDetails","forEachInstance","instance","isImage","instanceMatchDetails","matchDetails","concat","totalMatchScore","currentSOPInstanceUID","getSOPInstanceUID","imageDetails","getStudyInstanceUID","SeriesInstanceUID","getSeriesInstanceUID","SOPInstanceUID","currentImageIdIndex","matchingScore","sortingInfo","displaySet","findDisplaySet","images","getUID","imageId","getImageId","sortingFunction","sortBy","reverse","numRows","numColumns","setLayout","numViewports","getNumProtocolStages","stageModel","getCurrentStageModel","getLayoutTemplateName","layoutProps","viewportData","matchImages","cornerstoneViewportParams","viewportSettingsKeys","currentViewportData","customSettings","renderedCallback","customSetting","currentMatch","currentPosition","scoresLength","setViewportSpecificData","viewportSpecificData","newProtocol","isPrototypeOf","numberOfStages","stageAction","isPreviousStageAvailable","isNextStageAvailable","setCurrentProtocolStage","ProtocolStore","strategy","protocolObject","protocolInstance","onReady","protocolId","getProtocolInstance","addProtocol","updateProtocol","removeProtocol","defaultProtocol","oneByOne","first","getDefaultProtocol","hangingProtocols","ProtocolStrategy","defaultsAdded","from","delete","addCustomAttribute","attributeId","attributeName","addCustomViewportSetting","settingId","settingName","header","getNestedObject","shallowObject","nestedObject","propertyArray","currentObject","currentProperty","getShallowObject","putValues","baseKey","resultObject","currentKey","currentValue","isString","subject","search","query","pattern","RegExp","trim","encodeId","match","ui","getOffset","offsetParent","offsetLeft","offsetTop","isCharacterKeyPress","which","ctrlKey","metaKey","altKey","handleError","hideConfirm","cancelLabel","cancelClass","MODULE_TYPES","CommandsManager","ExtensionManager","HotkeysManager","ServicesManager","utils","redux","errorHandler","DICOMSR","viewer","UINotificationService","UIModalService","UIDialogService","MeasurementService","LoggerService","adjust","angleDoubleDown","angleDoubleUp","angleLeft","arrows","arrowsAltH","arrowsAltV","bars","brain","brush","caretDown","caretUp","check","checkCircle","checkCircleO","chevronDown","circle","circleNotch","circleO","clipboard","cog","createComment","createScreenCapture","crosshairs","cube","d3Rotate","database","dotCircle","edit","ellipseCircle","ellipseH","ellipseV","exclamationCircle","exclamationTriangle","fastBackward","fastForward","stop","inlineEdit","level","linkCircles","liver","lock","lockAlt","lung","measureNonTarget","measureTarget","measureTargetCr","measureTargetNe","measureTargetUn","measureTemp","objectGroup","ohifLogo","ohifTextLogo","oval","palette","play","plus","powerOff","rotate","rotateRight","saveRegular","scissors","searchPlus","softTissue","sortDown","sortUp","sphere","squareO","star","stepBackward","stepForward","sun","th","thLarge","thList","times","trash","unlink","youtube","eye","eyeClosed","envelopeSquare","ICONS","getIcon","ModalContext","createContext","Provider","ModalProvider","modal","service","DEFAULT_OPTIONS","content","contentProps","showScrollbar","customClassName","setOptions","show","hide","setServiceImplementation","ModalContent","noScroll","visibleScrollbar","withModal","useContext","Consumer","SnackbarItem","handleClose","autoClose","duration","action","close","SnackbarContainer","useSnackbarContext","snackbarItems","topCenter","topRight","bottomLeft","bottomCenter","pos","itemId","renderItem","LogManager","SnackbarContext","SnackbarProvider","SnackbarTypes","count","setCount","setSnackbarItems","onLogHandler","notify","subscribe","EVENTS","OnLog","unsubscribe","newItem","filter","hideAll","snackbar","namespace","WrapperI18n","I18NextWithTranslation","DialogContext","DialogProvider","isDragging","setIsDragging","dialogs","setDialogs","lastDialogId","setLastDialogId","lastDialogPosition","setLastDialogPosition","centerPositions","setCenterPositions","dialog","getCenterPosition","root","querySelector","itemBounds","getBoundingClientRect","dialogId","dismiss","dismissAll","_bringToFront","topDialog","_updateLastDialogPosition","draggableItemBounds","validCallback","DialogContent","defaultPosition","centralize","preservePosition","isDraggable","onStart","onStop","onDrag","showOverlay","dragableItem","srcElement","tagName","withDialog","LoggerContext","useLogger","LoggerProvider","errors","infos","onErrorHandler","errorObject","displayOnConsole","getFourRandomValues","floor","substring","constructor","getHTTPErrorHandler","defaultRetryOptions","retries","factor","minTimeout","maxTimeout","randomize","retryableStatusCodes","retryOptions","xhrRetryRequestHook","url","method","originalRequestSend","send","operation","attempt","currentAttempt","originalOnReadyStateChange","onreadystatechange","status","errorMessage","attemptFailedError","getXHRRetryRequestHook","login","logout","getData","setData","Metadata","uid","configurable","writable","_data","propertyName","propertyValue","_uid","_custom","_hasOwn","enabledElements","setEnabledElement","defineProperties","_imageId","_definePublicProperties","hasIndexValues","splitValues","isValidIndex","indexedValue","tagOrProperty","getIndexedValue","val","idx","frame","SeriesMetadata","_seriesInstanceUID","_instances","_firstInstance","getInstanceByUID","found","getInstanceByIndex","isValidUID","isValidCallback","in","mountOnEnter","unmountOnExit","appear","onEnter","onEntering","onEntered","onExit","onExiting","onExited","fadeStyles","ENTERING","ENTERED","Fade","innerProps","cloneElement","onHide","elementType","Overlay","child","transition","createChainedFunction","funcs","f","acc","isOneOf","one","of","triggerType","delayShow","delayHide","defaultOverlayShown","onBlur","onMouseOut","onMouseOver","OverlayTrigger","handleToggle","handleDelayedShow","handleDelayedHide","handleMouseOver","handleMouseOverOut","handleMouseOut","_mountNode","renderOverlay","ReactDOM","unmountComponentAtNode","_hoverShowDelay","_hoverHideDelay","relatedNative","related","relatedTarget","nativeEvent","unstable_renderSubtreeIntoContainer","_overlay","Children","only","childProps","triggerProps","warning","makeOverlay","AppContext","CONTEXTS","CORNERSTONE","VTK","useAppContext","AppProvider","activeContexts","useSelector","getActiveContexts","appConfig","withAppContext","positionTop","positionLeft","arrowOffsetTop","arrowOffsetLeft","Tooltip","outerStyle","arrowStyle","fetchPaletteColorLookupTableData","server","PaletteColorLookupTableUID","RedPaletteColorLookupTableDescriptor","GreenPaletteColorLookupTableDescriptor","BluePaletteColorLookupTableDescriptor","RedPaletteColorLookupTableData","GreenPaletteColorLookupTableData","BluePaletteColorLookupTableData","entry","_paletteColorCache","_getPaletteColor","add","maxAge","entries","now","paletteColorLookupTableData","lutDescriptor","numLutEntries","bits","arrayBufferToPaletteColorLUT","arraybuffer","byteArray","Uint16Array","Uint8Array","lut","BulkDataURI","uri","wadoRoot","errorInterceptor","requestHooks","api","DICOMwebClient","retrieveBulkData","InlineBinary","inlineBinaryData","atob","str2ab","unpackOverlay","arrayBuffer","bitArray","byteIndex","bitIndex","bitByteIndex","fetchOverlayData","OverlayDataPromises","OverlayDataTags","overlayGroup","groupStr","OverlayDataTag","_getOverlayData","ArrayBuffer","results","dicomWeb","validNumber","v","Number","datasets","dicomJSONDatasetOrP10ArrayBuffer","dicomData","DicomMessage","readFile","dicomJSONDataset","dict","naturalizedDataset","dcmjs","DicomMetaDictionary","naturalizeDataset","_getAndCacheStudyDataset","_getAndCacheStudy","_getAndCacheSeriesFromStudy","_getAndCacheInstanceFromStudy","_checkBulkDataAndInlineBinaries","uids","imageIdToUIDs","dataset","instances","PhotometricInterpretation","_getUIDsFromImageID","_getInstanceData","fallback","_getInstance","INSTANCE","getTagFromInstance","naturalizedTagOrWADOImageLoaderTag","_getCornerstoneWADOImageLoaderTag","wadoImageLoaderTag","WADO_IMAGE_LOADER_TAGS","GENERAL_SERIES_MODULE","seriesDate","seriesTime","SeriesDate","SeriesTime","dicomParser","parseDA","parseTM","modality","seriesInstanceUID","seriesNumber","SeriesNumber","studyInstanceUID","PATIENT_STUDY_MODULE","patientAge","PatientAge","patientSize","PatientSize","patientWeight","PatientWeight","IMAGE_PLANE_MODULE","rowPixelSpacing","columnPixelSpacing","rowCosines","columnCosines","ImageOrientationPatient","PixelSpacing","ImagerPixelSpacing","SOPClassUID","PixelSpacingCalibrationType","PixelSpacingCalibrationDescription","EstimatedRadiographicMagnificationFactor","SequenceOfUltrasoundRegions","isProjection","TYPES","CorrectedImagerPixelSpacing","pixelSpacing","PhysicalDeltaX","PhysicalDeltaY","getPixelSpacingInformation","frameOfReferenceUID","FrameOfReferenceUID","rows","columns","imageOrientationPatient","imagePositionPatient","ImagePositionPatient","sliceThickness","SliceThickness","sliceLocation","SliceLocation","IMAGE_PIXEL_MODULE","samplesPerPixel","SamplesPerPixel","photometricInterpretation","bitsAllocated","BitsAllocated","bitsStored","BitsStored","highBit","HighBit","pixelRepresentation","PixelRepresentation","planarConfiguration","PlanarConfiguration","pixelAspectRatio","PixelAspectRatio","smallestPixelValue","SmallestPixelValue","largestPixelValue","LargestPixelValue","redPaletteColorLookupTableDescriptor","greenPaletteColorLookupTableDescriptor","bluePaletteColorLookupTableDescriptor","redPaletteColorLookupTableData","greenPaletteColorLookupTableData","bluePaletteColorLookupTableData","VOI_LUT_MODULE","WindowCenter","WindowWidth","windowCenter","windowWidth","MODALITY_LUT_MODULE","rescaleSlope","RescaleSlope","rescaleIntercept","RescaleIntercept","rescaleType","RescaleType","SOP_COMMON_MODULE","sopClassUID","sopInstanceUID","PET_ISOTOPE_MODULE","RadiopharmaceuticalInformationSequence","RadiopharmaceuticalInformation","RadiopharmaceuticalStartTime","RadionuclideTotalDose","RadionuclideHalfLife","radiopharmaceuticalInfo","radiopharmaceuticalStartTime","radionuclideTotalDose","radionuclideHalfLife","OVERLAY_PLANE_MODULE","overlays","OverlayData","OverlayRowsTag","OverlayColumnsTag","OverlayType","OverlayOriginTag","OverlayDescriptionTag","OverlayLabelTag","ROIAreaTag","ROIMeanTag","ROIStandardDeviationTag","OverlayOrigin","pixelData","roiArea","roiMean","roiStandardDeviation","PATIENT_MODULE","patientName","patientId","GENERAL_IMAGE_MODULE","sopInstanceUid","instanceNumber","InstanceNumber","lossyImageCompression","LossyImageCompression","lossyImageCompressionRatio","LossyImageCompressionRatio","lossyImageCompressionMethod","LossyImageCompressionMethod","GENERAL_STUDY_MODULE","studyDescription","studyDate","studyTime","StudyTime","accessionNumber","CINE_MODULE","frameTime","FrameTime","splitImageId","qs","queryString","parse","studyUID","seriesUID","objectUID","Mousetrap","_originalStopCallback","_recordedSequence","_recordedSequenceCallback","_currentRecordedKeys","_recordedCharacterKey","_origHandleKey","handleKey","_handleKey","character","recording","_recordCurrentCombo","_recordKey","_finishRecording","_normalizeSequence","self","stopRecord","init","recordPlugin","stopCallback","combo","paused","ReconstructionIssues","DATASET_4D","VARYING_IMAGESDIMENSIONS","VARYING_IMAGESCOMPONENTS","VARYING_IMAGESORIENTATION","MISSING_FRAMES","IRREGULAR_SPACING","MULTIFFRAMES","studyMetadataList","TypeSafeCollection","insert","findBy","remove","purge","removeAll","OHIFInstanceMetadata","_sopInstanceUID","_study","_series","_instance","_cache","bypassCache","rawValue","instanceData","thumbnail","OHIFSeriesMetadata","addInstance","OHIFStudyMetadata","addSeries","isDisplaySetReconstructable","isMultiframe","NumberOfFrames","constructableModalities","reconstructionIssues","MULTIFRAMES","firstImage","firstImageRows","firstImageColumns","firstImageSamplesPerPixel","firstImageOrientationPatient","ii","_isSameArray","instanceMetadataControl","jj","instanceMetadata","_isDataset4D","processSingleframe","iop1","iop2","abs","iopTolerance","spacingTolerance","_getSpacingIssue","spacing","averageSpacing","multipleOfAverageSpacing","numberOfSpacings","issue","missingFrames","_getPerpendicularDistance","sqrt","pow","_studyInstanceUID","_displaySets","_derivedDisplaySets","_firstSeries","derivatedDisplaySet","allDisplaySets","displaySets","otherDisplaySets","ds","referencedSeriesInstanceUIDs","SourceImageSequence","firstFunctionalGroups","_toArray","PerFrameFunctionalGroupsSequence","DerivationImageSequence","sourceImageArray","ReferencedSOPInstanceUID","_findReferencedSeriesInstanceUIDsFromSOPInstanceUID","_findReferencedSeriesInstanceUIDsFromSourceImageSequence","noReferencedSeriesAvailable","ReferencedSeriesSequence","ReferencedSeries","_findReferencedSeriesInstanceUIDsFromReferencedSeriesSequence","ReferencedImageSequence","referencedImageArray","_findReferencedSeriesInstanceUIDsFromReferencedImageSequence","sopClassHandlerModules","getInstanceCount","ImageSet","setAttributes","SeriesDescription","sopClassUIDs","uniqueSopClassUIDsInSeries","instanceSopClassUID","getSopClassUIDs","sopClassHandlerExtensions","handlersForSopClassUID","extension","plugin","dicomWebClient","dwc","getDisplaySetFromSeries","_getDisplaySetFromSopClassModule","sopClassModule","isDerived","_addDerivedDisplaySet","stackableInstances","isMultiFrame","makeDisplaySet","isClip","numImageFrames","AcquisitionDatetime","isSingleImageModality","frameRate","isReconstructable","isModalitySupported","referencedSeriesInstanceUID","referencedFrameOfReferenceUID","filteredDerivedDisplaySets","getReferencedDisplaySet","getSeriesCount","_createDisplaySetsForSeries","_insertDisplaySet","containsSeries","addDisplaySet","firstIndexWithSameSeriesNumber","insertIndex","isLowPriorityModality","startingIndex","seriesDateTime","displaySetI","some","getSeriesByUID","sum","getSeriesByIndex","firstSeries","getFirstSeries","findInstance","findSeriesAndInstanceByInstance","imageSet","getImage","displayReconstructableInfo","displaySpacingInfo","sortByImagePositionPatient","datasetIs4D","firstImagePositionPatient","lastIpp","averageSpacingBetweenFrames","previousImagePositionPatient","spacingBetweenFrames","spacingIssue","isUniform","isSpacingUniform","imageSets","arrayOrObject","hasOwn","sortingCallback","referenceImagePositionPatient","_getImagePositionPatient","refIppVec","Vector3","scanAxisNormal","cross","distanceImagePairs","ippVec","distance","clone","sub","dot","sortedImages","regex","separator","renderingAttr","wadorsuri","getWADORSImageId","wadouri","debugMode","detectionOptions","order","lookupQuerystring","lookupCookie","lookupLocalStorage","lookupFromPathIndex","lookupFromSubdomainIndex","caches","excludeCacheFor","htmlTag","documentElement","AboutModal","Buttons","Common","DatePicker","Header","UserPreferencesModal","languagesMap","ar","am","bg","bn","ca","cs","da","de","el","en","es","et","fa","fi","fil","fr","gu","he","hi","hr","hu","it","ja","kn","ko","lt","lv","ml","mr","ms","nl","no","pl","ro","ru","sk","sl","sr","sv","sw","ta","te","tr","uk","vi","zh","locizeOptions","projectId","apiKey","referenceLng","fallbacklng","envUseLocize","envApiKeyAvailable","DEFAULT_LANGUAGE","initI18n","initialized","detection","useLocize","apiKeyAvailable","customDebug","use","Backend","LastUsed","Editor","LanguageDetector","initReactI18next","fallbackLng","saveMissing","interpolation","escapeValue","locizeLastUsed","editor","onEditorSaved","reloadResources","emit","react","useSuspense","wait","bindI18n","resources","locales","pkg","initializing","addLocales","newLocales","resourceBundle","addResourceBundle","defaultLanguage","availableLanguages","availableLanguagesInfo","getAvailableLanguagesInfo","moduleName","StudyMetaDataPromises","retrieveStudyMetadata","filters","separateSeriesInstanceUIDFilters","seriesInstanceUIDs","seriesSpecificFilters","RetrieveMetadata","__separateSeriesRequestToAggregatePromiseateSeriesRequestToAggregatePromise","deleteStudyMetadataPromise","str","strLen","bytes","buffer","ObjectPath","path","components","getPathComponents","isValidObject","last","isValid","absoluteUrl","absolutePath","origin","absoluteUrlParts","rootUrlPrefixIndex","addServers","servers","store","serverType","endpoint","dispatch","imageObj","someInvalidStrings","strings","getImageInstance","getImageInstanceId","imageInstance","fetchIt","fetch","response","cornerstoneRetriever","loadAndCacheImage","wadorsRetriever","retrieveInstance","dicomLoaderService","localFile","findImageIdOnStudies","cornerstoneWADOImageLoader","loadFileRequest","getDicomDataMethod","loaderRegExp","loaderType","exec","lastIndex","getImageLoaderType","authorizationHeaders","wadoUri","getLocalData","getDataByImageType","getDataByDatasetType","loaderIterator","getLoaderIterator","loader","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","byteArrays","byteNumbers","blob","Blob","referencedDisplaySet","logger","studyMetadataManager","derivedDisplaySets","getDerivedDatasets","displaySetsPerModality","isLoaded","loadError","recentDateTime","recentDisplaySet","dateTime","getSourceDisplaySet","load","CustomEvent","dispatchEvent","loadAndCacheDerivedDisplaySets","toLowerCaseFirstLetter","toParse","lib","getQueryFilters","searchParameters","paramString","isValidPath","paramPatternPiece","parseParam","paramStr","_paramDecoded","strToDecode","decoded","decode","replaceParam","paramKey","paramValue","paramPattern","makeDeferred","res","rej","Queue","awaiting","task","boundTask","queue","cleaner","clean","chain","SEPARATOR","addToList","addValuesToList","isSublist","sublist","toSublist","forEachValue","getItem","indexOrPath","subpath","print","prevLen","repeat","TYPE","TASK","LIST","createList","objectWithType","named","observers","isList","isOfType","createTask","isTask","progress","increaseList","getOverallProgress","update","isValidProgress","finish","seal","total","partial","failures","waitOn","thenable","addDeferred","deferred","setTaskName","getTaskByName","addObserver","observer","removeObserver","writeScript","fileName","StackManager","DicomLoaderService","urlUtil","makeCancelable","isCanceled","cancel","isDicomUid","resolveObjectPath","hierarchicalListUtils","progressTrackingUtils","noop","StudyPrefetcher","displaySetCount","onImageCached","requestType","preventCache","prefetchDisplaySetsTimeout","maxNumPrefetchRequests","includeActiveDisplaySet","stopPrefetching","events","cacheFullHandler","prefetchDisplaySets","imageLoadPoolManager","clearRequestStack","prefetchDisplaySetsHandler","displaySetsToPrefetch","getDisplaySetsToPrefetch","imageIds","getImageIdsFromDisplaySets","prefetchImageIds","requestFn","nonCachedImageIds","filterCachedImageIds","maxNumRequests","prefetch","addRequest","metaData","displaySetImage","getActiveViewportImage","getStudy","getSeries","getInstance","activeDisplaySet","getDisplaySetByUID","getDisplaySetBySOPInstanceUID","prefetchOrder","getDisplaySets","topdown","downward","upward","closest","selectedDisplaySets","activeDisplaySetIndex","begin","right","getImageIdsFromDisplaySet","numFrames","isImageCached","imageCache","sizeInBytes","BaseLoadingListener","getNewId","statsItemsLimit","stats","elapsedTime","speed","_setProgressData","_clearProgressById","_addStatsData","_updateProgress","oldestItem","getTime","progressId","_getProgressId","stopListening","_clearProgress","timeSlice","randomNumber","DICOMFileLoadingListener","dataSetUrl","_convertImageIdToDataSetUrl","bytesDiff","loaded","_lastLoaded","_dataSetUrl","imageLoadProgressEventHandler","_imageLoadProgressEventHandler","_getDataSetUrl","_checkCachedData","startListening","dataSet","dataSetCacheManager","dataSetLength","percentComplete","imageLoadProgressEventName","_getImageLoadProgressEventName","imageLoadProgressEventHandle","progressData","multiFrame","bytesLoaded","bytesTotal","bytesPerSecond","StudyLoadingListenerEvents","OnProgress","promiseState","uniqueValue","race","reason","StackLoadingListener","imageLoadedEventHandler","_imageLoadedEventHandler","imageCachePromiseRemovedEventHandler","_imageCachePromiseRemovedEventHandler","imageDataMap","_convertImageIdsArrayToMap","framesStatus","_createArray","loadedCount","_debouncedSetProgressData","debounce","studyPrefetcher","getElement","imageIdsMap","debounced","imageObject","getImageLoadObject","_updateFrameStatus","IMAGE_LOADED","IMAGE_CACHE_PROMISE_REMOVED","imageLoadedEventName","_getImageLoadedEventName","imageCachePromiseRemovedEventName","_getImageCachePromiseRemoveEventName","imageData","totalFramesCount","loadedFramesCount","loadingFramesCount","framesPerSecond","progressBar","ch","StudyLoadingListener","listeners","stackMetaData","listener","_createListener","findOrCreateStack","addStack","addStudy","displaySetInstanceUIDs","destroy","_getSchema","colonIndex","_subscriptions","_lastSubscriptionId","PubSub","eventName","subscriptionId","callbacks","payload","LogEvents","OHIFStudyMetadataSource","studyInfo","Studies","_updateStudyCollections","getByInstanceUID","createDisplaySets","MetadataProvider","LOW_PRIORITY_MODALITIES","fields","n_fields","A","primer","stackMap","configuration","stackUpdatedCallbacks","createAndAddStack","numImages","imageIndex","naturalizedInstance","frameNumber","addImageIdToUIDs","clearStacks","makeAndAddStack","findStack","getAllStacks","addStackUpdatedCallback","getConfiguration","setConfiguration","PROPERTY_SEPARATOR","ORDER_ASC","ORDER_DESC","MIN_COUNT","_operationCount","_elementList","_handlers","silent","_elements","handlers","_isFunction","_elementWithPayload","_invalidate","_elementWithId","_trigger","propertyMap","findAllEntriesBy","foundCount","removed","_isObject","_compareToPropertyMapStrict","_sortListBy","_isString","_hasOwnProperty","_getPropertyValue","targetObject","fragments","fragmentCount","firstFragment","remainingFragments","specifiers","_isValidSortingSpecifier","specifierCount","specifier","aValue","bValue","arrowAnnotate","toolGroup","cornerstoneToolType","measurementTable","displayFunction","caseProgress","include","evaluate","bidirectional","shortestDiameter","longestDiameter","ellipticalRoi","meanValue","cachedStats","mean","isNaN","circleRoi","freehandMouse","meanStdDev","lengthValue","nonTarget","rectangleRoi","angle","rAngle","fromCharCode","targetCR","targetNE","targetUN","dicomSRDisplayTool","lesionNamingNumber","childTools","tools","measurementApiDefaultConfig","measurementTools","newLesions","toolGroupId","dataExchange","retrieve","timepointIds","timepointData","timepointId","disassociate","TIMEPOINT_TYPE_NAMES","prebaseline","baseline","followup","TimepointApi","currentTimepointId","Instance","initialize","comparisonTimepointKey","onTimepointsUpdated","visitNumber","tp1","tp2","visitDate","tp","timepointType","retrievalFn","timepointIndex","storeFn","JSON","stringify","disassociateFn","retrieveTimepoints","removeFn","tpIndex","updateFn","prior","comparisonTimepoint","comparison","userComparison","nextBaselineAfterCurrent","currentTimepoint","allNextTimepoints","latestInitialBeforeNextFUIndex","timepointToCheck","latestInitialTimepointAfterCurrent","visitDateToCheck","preBaselineTimepointIds","baselineTimepointIds","currentVisitDate","nadir","timepointKey","resultIncludes","studyInstanceUIDs","timepointTypeName","calculateVisitNumber","timepointName","currentIndex","parenthesis","0","1","parenthesisText","toolType","imagePath","frameIndex","MeasurementApi","timepointApi","toolsGroupsMap","getToolsGroupsMap","measurementLabel","getLabel","labels","toolState","globalImageIdSpecificToolStateManager","saveToolState","getToolConfiguration","childToolKey","childMeasurement","_id","syncMeasurementAndToolData","getImageIdForImagePath","currentToolState","toolData","alreadyExists","restoreToolState","toolGroups","toolGroupTools","getToolGroupTools","onMeasurementsUpdated","measurementTypeId","addMeasurement","syncMeasurementsAndToolData","getEnabledElements","updateImage","isToolIncluded","timepointFilter","sortedMeasurements","toolId","toolItemId","includedChildTools","toolConfig","parentTool","currentMeasurement","initialTimepointIds","initialtpid","lesionExistsAtTimepoints","groupId","toolGroupMeasurement","isNewLesionsMeasurement","maxTargetMeasurementNumber","calculateLesionMaxMeasurementNumber","maxNonTargetMeasurementNumber","maxNewTargetMeasurementNumber","calculateNewLesionMaxMeasurementNumber","maxNewNonTargetMeasurementNumber","additionalData","TrialPatientLocationUID","childToolTypes","childToolType","collectionToUpdate","propertyFilter","increment","updateNumbering","groupCollection","collection","relatedMeasurement","emptyItem","groupTool","createdAt","measurementsInTimepoint","calculateLesionNamingNumber","calculateMeasurementNumber","addedMeasurement","updateObject","getPreviousMeasurement","isSplitLesion","isNodal","getDescription","hasDuplicateMeasurementNumber","updateMeasurementNumberForAllMeasurements","toolIndex","groupIndex","group","lesionNamingNumberFilter","tGroup","childTool","filterKeys","groupItems","filterKey","groupItem","measurementsData","measurementEntries","measurementEntry","mEntry","onMeasurementRemoved","syncFilter","syncFilterKeys","syncFilterKey","BaseCriterion","criterionName","isGlobal","baselineMeasurementNumbers","newTargetNumbers","newTarget","targets","LocationSchema","LocationCriterion","nonTargets","generateResponse","MaxTargetsPerOrganSchema","minimum","MaxTargetsPerOrganCriterion","targetsPerOrgan","getNewTargetNumbers","MaxTargetsSchema","locationIn","minItems","uniqueItems","locationNotIn","MaxTargetsCriterion","measurementNumbers","lesionType","plural","amount","MeasurementsLengthSchema","longAxis","shortAxis","longAxisSliceThicknessMultiplier","shortAxisSliceThicknessMultiplier","modalityIn","modalityNotIn","anyOf","MeasurementsLengthCriterion","longMultiplier","shortMultiplier","childToolsCount","ModalitySchema","enum","measurementTypes","ModalityCriterion","modalitiesSet","validationMethod","invalidModalities","measurementType","uniqueModalities","uniqueModalitiesText","modalityText","NonTargetResponseSchema","NonTargetResponseCriterion","TargetTypeSchema","TargetTypeCriterion","Criteria","initialCriteria","CriteriaEvaluator","criteriaObject","criteriaValidator","getCriteriaValidator","criteria","dataPath","criterionkey","optionsObject","Criterion","criterionKey","criterionDefinitions","criterion","newTargetMatch","schema","definitions","criterionDefinition","$ref","Ajv","compile","nonconformities","criterionResult","recist11","evaluations","initialEvaluations","ConformanceCriteria","measurementApi","groupedNonConformities","maxTargets","maxNewTargets","trialCriteriaType","baselinePromise","followupPromise","baselineData","followupData","mergedData","resultBoth","validateTimepoint","resultBaseline","resultFollowup","groupNonConformities","groups","nonConformity","globals","messages","measureNumber","evaluators","getEvaluators","evaluator","getMaxTargets","resultItem","trialCriteriaTypeId","evaluation","evaluationTimepoint","studyPromises","fillData","evaluationKey","evaluationDefinitions","refreshCornerstoneViewports","handleSingleMeasurementAdded","cancelled","imageAttributes","getImageAttributes","userId","additionalProperties","parentMeasurement","updateMeasurement","getViewport","handleSingleMeasurementRemoved","deleteMeasurements","measurementIndex","getEventData","toolName","MeasurementHandlers","handleChildMeasurementAdded","handleSingleMeasurementModified","handleChildMeasurementModified","handleChildMeasurementRemoved","onAdded","params","onModified","onRemoved","temp","ltTools","resultDataToStudyMetadata","resultData","seriesMap","wadoUriRoot","dateToString","getFullYear","getMonth","getDate","resultDataToStudies","referringPhysicianName","PatientBirthdate","patientSex","studyId","numberOfStudyRelatedSeries","numberOfStudyRelatedInstances","staticWado","qidoRoot","StaticWadoClient","qidoSupportsIncludeField","queryParams","serverSupportsQIDOIncludeField","commaSeparatedFields","parameters","fuzzymatching","includefield","dateFrom","dateTo","studyUIDs","getQIDOQueryParams","searchForStudies","WADO","QIDO","Instances","searchForInstances","studySearchPromises","services","loadingDict","retrieveStudiesMetadata","getStudyBoxData","searchStudies","promiseKeyObj","promiseKey","sortStudy","getWADORSImageUrl","INFO","getSeriesInfo","isLowPriority","seriesSortCriteria","seriesInfoSortingCriteria","secondSeries","instancesSortCriteria","sortingCriteria","sortStudySeries","seriesSortingCriteria","sortStudyInstances","instancesList","instancesSortingCriteria","deepSort","UrlUtil","IHEInvokeImageDisplay","ViewerRouting","StudyListRouting","StandaloneRouting","ViewerLocalFileData","ROUTES_DEF","standaloneViewer","condition","showStudyList","local","gcloud","enableGoogleCloudAdapter","getRoutes","routes","keyConfig","routesConfig","routeKey","route","parsePath","_path","_paramsCopy","parseViewerPath","viewerPath","parseStudyListPath","studyListPath","getReferencedSeriesSequence","referencedSeriesSequenceRaw","referencedSeriesSequence","referencedSeries","referencedInstanceSequenceRaw","referencedInstanceSequence","referencedInstance","referencedSOPClassUID","referencedSOPInstanceUID","createStudy","aSopInstance","seriesLoader","NumberOfStudyRelatedInstances","InstitutionName","buildInstanceWadoUrl","buildInstanceWadoRsUri","buildInstanceFrameWadoRsUri","baseWadoRsUri","makeSOPInstance","sopInstance","imageRendering","thumbnailRendering","wadoRSMetadata","wadorsImageId","wadors","metaDataManager","addInstancesToStudy","sopInstanceList","createStudyFromSOPInstanceList","firstSopInstance","RetrieveMetadataLoader","configLoad","preLoad","preLoadData","loadData","posLoad","postLoadData","loaders","done","RetrieveMetadataLoaderSync","client","retrieveSeriesMetadata","getLoaders","runLoaders","attachSeriesLoader","hasNext","sopInstances","makeSeriesAsyncLoader","seriesInstanceUIDList","RetrieveMetadataLoaderAsync","preLoaders","searchForSeries","getPreLoaders","seriesSorted","seriesInstanceUIDsMap","seriesAsyncLoader","asyncLoader","seriesDataFromQIDO","enableStudyLazyLoad","retrieveMetadataLoader","execLoad","ViewportErrorIndicator","bottom","pointerEvents","ViewportLoadingIndicator","ImageThumbnail","loadingOrError","cancelablePromise","imageSrc","stackPercentComplete","propsError","showProgressBar","setLoading","setImage","canvasRef","showStackLoadingProgressBar","shouldRenderToCanvas","fetchImagePromise","setImagePromise","purgeCancelablePromise","renderToCanvas","ThumbnailFooter","hasDerivedDisplaySets","inconsistencyWarnings","inconsistencyWarningsSet","derivedDisplaySetsActive","derivedDisplaySetsActiveSet","unmounted","infoOnly","getInfo","getDerivedInfo","getWarningInfo","getSeriesInformation","altImageText","onDoubleClick","onMouseDown","supportsDrag","setStackPercentComplete","onProgressChange","throttle","percent","useDrag","canDrag","monitor","drag","hasImage","hasAltText","qidoConfig","searchResult","filtered","filterItem","desired","actual","compareValues","actualItem","range","dash","testValue","valueElem","compareDateRange","createSelector","activeViewportIndex","layout","layoutViewports","activeLayoutViewport","activeViewportSpecificData","activeViewportPluginName","activeViewportExtension","sopClassDictionary","imagesTypes","defaultContextValues","createLogoComponentFn","OHIFLogo","WhiteLabelingContext","getAppState","contexts","_getAppState","_getActiveContexts","contextName","clearContext","commandName","definition","getContext","foundCommand","activeContext","getCommand","commandFn","storeContexts","definitionOptions","commandParams","appState","commandsManager","servicesManager","hotkeyDefinitions","hotkeyDefaults","isEnabled","_servicesManager","_commandsManager","_getValidDefinitions","registerHotkeys","_parseToArrayLike","hotkeyDefinitionsObj","copy","entryValue","_parseToHotKeyObj","previouslyRegisteredDefinition","previouslyRegisteredKeys","_unbindHotkeys","_bindHotkeys","setHotkeys","combinedKeys","runCommand","unbind","CodeNameCodeSequenceValues","ImagingMeasurementReport","ImageLibrary","ImagingMeasurements","MeasurementGroup","ImageLibraryGroup","TrackingUniqueIdentifier","TrackingIdentifier","Finding","FindingSite","CornerstoneFreeText","Score","RELATIONSHIP_TYPE","INFERRED_FROM","SELECTED_FROM","CodingSchemeDesignators","SRT","cornerstoneTools4","getSequenceAsArray","getMergedContentSequencesByTrackingUniqueIdentifiers","MeasurementGroups","mergedContentSequencesByTrackingUniqueIdentifiers","ContentSequence","TrackingUniqueIdentifierItem","ConceptNameCodeSequence","CodeValue","trackingUniqueIdentifier","UID","getLabelFromMeasuredValueSequence","MeasuredValueSequence","CodeMeaning","NumericValue","MeasurementUnitsCodeSequence","formatedNumericValue","getCoordsFromSCOORDOrSCOORD3D","graphicItem","ValueType","coords","RelationshipType","GraphicType","GraphicData","ReferencedSOPSequence","ReferencedFrameOfReferenceUID","ReferencedFrameOfReferenceSequence","processTID1410Measurement","mergedContentSequence","UIDREFContentItem","TrackingIdentifierContentItem","NUMContentItems","TextValue","coord","processNonGeometricallyDefinedMeasurement","FindingSites","CodingSchemeDesignator","ConceptCodeSequence","cornerstoneFreeTextFindingSite","processMeasurement","ImagingMeasurementReportContentSequence","getReferencedImagesList","referencedImages","ReferencedSOPClassUID","cornerstoneAdapters","adapters","Cornerstone","TOOL_NAMES","DICOM_SR_DISPLAY_TOOL","getRenderableData","imageMetadata","renderableData","orientation","sliceSpacing","M","M1","inv","worldToIJK","point","z","SCOORD_TYPES","center","onPerimeter","radius","csMath","majorAxis","minorAxis","minorAxisLength","minorAxisDirection","halfMinorAxisLength","corner1","corner2","csTools","addToMeasurementApi","checkIfCanAddMeasurementsToDisplaySet","srDisplaySet","imageDisplaySet","sliceNormal","distanceAlongNormal","SOPInstanceUIDs","imageIdToolState","parseSCOORD3D","mappings","getSourceMappings","isHydrated","isRehydratable","mappingDefinitions","adapterKeys","adapterKey","isValidCornerstoneTrackingIdentifier","adapter","findInstanceMetadataBySopInstanceUID","instanceFound","getImagePath","parseDicomStructuredReport","part10SRArrayBuffer","external","storedMeasurementByToolType","MeasurementReport","generateToolState","seriesDescription","publish","isToolSupported","parseMeasurementsData","unsupportedTools","annotation","generateReport","getAllDisplaySets","retrieveMeasurementFromSR","serverUrl","stowSRFromMeasurements","DicomDict","FileMetaInformationVersion","_meta","MediaStorageSOPClassUID","MediaStorageSOPInstanceUID","TransferSyntaxUID","ImplementationClassUID","ImplementationVersionName","denaturalized","denaturalizeDataset","dicomDict","part10Buffer","write","storeInstances","isStructuredReportSeries","compareSeriesDate","series1","series2","findMostRecentStructuredReport","mostRecentStructuredReport","retrieveMeasurements","latestSeries","storeMeasurements","firstMeasurementKey","firstMeasurement","actions","setViewportActive","setViewportLayoutAndData","clearViewportSpecificData","setActiveViewportSpecificData","setUserPreferences","setExtensionData","setTimepoints","setMeasurements","setStudyData","setServers","defaultState","extensions","extensionName","currentData","incomingData","windowLevelData","2","3","4","5","6","7","9","10","generalPreferences","preferences","uniqBy","newServer","newServers","updatedStudyData","timepointManager","setAutoFreeze","DEFAULT_STATE","findActiveViewportSpecificData","currentViewportSpecificData","numberOfViewports","getActiveViewportIndex","currentActiveViewportIndex","reducers","useActiveViewport","produce","draftState","LocalStorageApi","localStorage","saveState","serializedState","setItem","loadState","SessionStorageApi","sessionStorage","Hammer","cornerstoneMath","loadHandlerManager","setErrorLoadingHandler","fontFamily","setFont","toolStyle","setToolWidth","toolColors","setToolColor","setActiveColor","touchProximity","stackPrefetch","maxImagesToPrefetch","preserveExistingPool","maxSimultaneousRequests","SUPPORTED_TOOLS","measurementServiceMappingsFactory","measurementService","_getAttributes","_getValueTypeFromToolType","VALUE_TYPES","POLYLINE","Length","EllipticalRoi","ELLIPSE","RectangleRoi","ArrowAnnotate","POINT","_getPointsFromHandles","points","handle","_getHandlesFromPoints","toAnnotation","unit","referenceSeriesUID","_measurementServiceId","toMeasurement","csToolsAnnotation","area","trackingIdentifiersByEnabledElementUUID","getters","trackingUniqueIdentifiersForElement","uuid","trackingUniqueIdentifiers","setters","activeIndex","activeTrackingUniqueIdentifierForElement","trackingIdentifiersForElement","tuid","register","srModuleId","dicomSRModule","callInputDialog","InputDialog","useLastPosition","csToolsConfig","Infinity","addProvider","initCornerstoneTools","globalToolSyncEnabled","showSVGCursors","autoResizeViewports","toolsGroupedByType","touch","PanMultiTouchTool","ZoomTouchPinchTool","annotations","ArrowAnnotateTool","BidirectionalTool","LengthTool","AngleTool","FreehandRoiTool","EllipticalRoiTool","DragProbeTool","RectangleRoiTool","other","PanTool","ZoomTool","WwwcTool","WwwcRegionTool","MagnifyTool","StackScrollTool","StackScrollMouseWheelTool","OverlayTool","toolsGroup","_connectToolsToMeasurementService","internalToolsConfig","getTextCallback","eventDetails","changeTextCallback","externalToolProps","internalToolProps","merge","toolsWithHideableHandles","parsedProps","hideHandles","drawHandlesOnHover","parseToolProps","addTool","BaseAnnotationTool","importInternal","setToolPassive","setToolActive","mouseButtonMask","pointers","setToolEnabled","csToolsVer4MeasurementSource","createSource","matchingCriteria","valueType","addMapping","_initMeasurementService","sourceId","addOrUpdate","getAnnotation","ELEMENT_ENABLED","MEASUREMENT_ADDED","MEASUREMENT_UPDATED","source","addMeasurementServiceId","MEASUREMENT_MODIFIED","csToolsEvtName","csTool","measurementServiceId","addOrUpdateMeasurement","setCornerstoneLayout","CornerstoneViewportDownloadForm","activeEnabledElement","enable","disable","fitToWindow","updateViewport","toDataURL","newWidth","newHeight","multiplier","scale","translation","displayImage","setViewport","resize","toggle","setToolEnabledForElement","setToolDisabledForElement","file","mimetype","msToBlob","msSaveBlob","toBlob","URLObj","URL","webkitURL","createObjectURL","download","click","scroll","import","commandsModule","rotateViewport","rotation","flipViewportHorizontal","hflip","flipViewportVertical","vflip","scaleViewport","resetViewport","invertViewport","invert","clearAnnotations","measurementsToRemove","nextImage","previousImage","getActiveViewportEnabledElement","showDownloadViewportModal","updateTableWithNewMeasurementData","getNearbyToolData","canvasCoordinates","availableToolTypes","nearbyTool","pointNearTool","elementToolData","getToolState","elementToolInstance","getToolForElement","removeToolState","setWindowLevel","voi","jumpToImage","refreshViewports","rotateViewportCW","rotateViewportCCW","scaleUpViewport","scaleDownViewport","fitViewportToWindow","setZoomTool","defaultContext","TOOLBAR_BUTTON_TYPES","COMMAND","SET_TOOL_ACTIVE","BUILT_IN","TOOLBAR_BUTTON_BEHAVIORS","CINE","DOWNLOAD_SCREEN_SHOT","commandOptions","behavior","togglable","lazy","OHIFCornerstoneViewport","Suspense","preRegistration","getViewportModule","isStackPrefetchEnabled","enabled","onNewImage","jumpData","getToolbarModule","toolbarModule","getCommandsModule","oidcSettings","settings","automaticSilentRenew","revokeAccessTokenOnSignout","filterProtocolClaims","userManager","createUserManager","loadUser","MAX_CONCURRENCY","middleware","thunkMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","oidc","oidcReducer","rootReducer","combineReducers","preloadedState","disableServersCache","createStore","applyMiddleware","getState","updateActiveViewport","maxIndex","newIndex","setWindowLevelPreset","updateViewportDisplaySet","currentDisplaySetIndex","newDisplaySetData","incrementActiveViewport","decrementActiveViewport","windowLevelPreset1","windowLevelPreset2","windowLevelPreset3","windowLevelPreset4","windowLevelPreset5","windowLevelPreset6","windowLevelPreset7","windowLevelPreset8","windowLevelPreset9","nextViewportDisplaySet","previousViewportDisplaySet","getMeasurementText","getDataForEachMeasurementNumber","measurementNumberList","eachData","convertMeasurementsToTableData","toolCollections","getAllTools","tableMeasurements","toolMeasurements","groupedMeasurements","groupedMeasurementsIndex","measurementId","tableMeasurement","tm","m1","m2","convertTimepointsToTableData","latestDate","ConnectedMeasurementTable","connect","getSaveFunction","ownProps","dispatchRelabel","viewportsState","persist","toolForLocation","dispatchEditDescription","dispatchJumpToRowItem","timepointManagerState","invertViewportTimepointsOrder","numTimepoints","numViewportsToUpdate","measurementsForToolGroup","measurementsToJumpTo","dataAtThisTimepoint","displaySetContainsSopInstance","jumpToRowItem","measurementToActive","propsFromState","propsFromDispatch","LabellingTransition","displayComponent","onTransitionExit","OHIFLabellingData","EditDescriptionDialog","onUpdate","autoComplete","LabellingFlow","editLocation","editDescription","skipAddLabelButton","updateLabelling","labellingDoneCallback","editDescriptionOnDialog","fadeOutTimer","setFadeOutTimer","showComponent","setShowComponent","descriptionInput","newMeasurementData","newEditLocation","focus","relabel","setDescriptionUpdateMode","descriptionCancel","handleKeyPress","descriptionSave","selectTreeSelectCallback","itemSelected","locationLabel","showLabelling","fadeOutAndLeaveFast","onKeyPress","labellingStateFragment","initialTopDistance","toolTypes","ToolContextMenu","onSetLabel","onSetDescription","isTouchEvent","defaultDropdownItems","actionType","nearbyToolData","dropdownItems","currentPoints","getDropdownItems","MEASUREMENT_ACTION_MAP","added","modified","onMeasurementsChanged","onMeasurementAdded","onMeasurementModified","onLabelmapModified","_getDefaultPosition","showLabellingDialog","labellingData","_updateLabellingHandler","onTouchPress","onTouchStart","resetLabelligAndContextMenu","cornerstoneMouseClickEvent","onRightClick","MEASUREMENT_REMOVED","LABELMAP_MODIFIED","TOUCH_PRESS","MOUSE_CLICK","TOUCH_START","ELEMENT_DISABLED","getPanelModule","menuOptions","Bar","animationDuration","background","marginLeft","boxShadow","opacity","transform","Container","isFinished","CallbackPage","OHIFStandaloneViewer","unlisten","history","listen","setContext","pathname","expired","exact","RoutesUtil","render","successCallback","errorCallback","URLSearchParams","iss","loginHint","targetLinkUri","authority","removeUser","ohifRedirectTo","signinRedirect","login_hint","getUser","signinSilent","currentPath","noMatchingRoutes","matchPath","isAnimating","NotFound","ConnectedOHIFStandaloneViewer","ViewerbaseDragDropContext","withRouter","extensionManager","commandsManagerConfig","hotkeysManager","ohif","app","App","defaultExtensions","_appConfig","cornerstoneExtensionConfig","routerBasename","homepage","appConfigHotkeys","env","PUBLIC_URL","access_token","httpErrorHandler","configure","beforeSend","xhr","setRequestHeader","initUserManager","registerServices","hooks","requiredExtensions","GenericViewerCommands","OHIFCornerstoneExtension","disableMeasurementPanel","MeasurementsPanel","mergedExtensions","registerExtensions","_initExtensions","userPreferredHotkeys","setDefaultHotKeys","_initHotkeys","_initServers","maxWebWorkers","hardwareConcurrency","startWebWorkersOnDemand","taskConfiguration","decodeTask","initializeCodecsOnStartup","usePDFJS","strict","webWorkerManager","initWebWorkers","whiteLabeling","_userManager","UserManagerContext","basename","firstOpenIdClient","host","baseUri","redirect_uri","silent_redirect_uri","post_logout_redirect_uri","openIdConnectConfiguration","_makeAbsoluteIfNecessary","getUserManagerForOpenIdConnectClient","base_url","_isAbsoluteUrl","ExportedApp","showGoBackButton","to","StudyBrowser","onThumbnailClick","onThumbnailDoubleClick","showThumbnailProgressBar","thumb","thumbIndex","derivedDisplaySetsNumber","flat","COMMANDS","PANEL","SOP_CLASS_HANDLER","TOOLBAR","VIEWPORT","VTKViewport","setViewportActiveHandler","handleScrollEvent","ConnectedVTKViewport","dataFromStore","vtk","pluginDetails","enableStackPrefetch","afterCreation","onCreated","LoadingIndicator","percComplete","segmentationModule","getModule","volumeCache","labelmapCache","OHIFVTKViewport","volumes","paintFilterLabelMapImageData","paintFilterBackgroundImageData","labelmapDataObject","labelmapColorLUT","getCornerstoneStack","imageDataObject","getImageData","firstImageId","brushStackState","activeLabelmapIndex","labelmap3D","labelmaps3D","segmentsDefaultProperties","segmentsHidden","isHidden","vtkLabelmapID","labelmapBuffer","vtkImageData","newInstance","dataArray","vtkDataArray","numberOfComponents","getPointData","setScalars","setSpacing","getSpacing","setOrigin","getOrigin","setDirection","getDirection","colorLutTables","colorLUTIndex","storedStack","imageMetaData0","lower","upper","_getRangeFromWindowLevels","volumeActor","vtkVolume","volumeMapper","vtkVolumeMapper","setMapper","setInputData","getProperty","getRGBTransferFunction","setRange","sampleDistance","setSampleDistance","setMaximumSamplesPerRay","dataDetails","getViewportData","getOrCreateVolume","loadProgressively","setStateFromProps","prevDisplaySet","loadImageData","onPixelDataInserted","numberProcessed","onAllPixelDataInserted","onPixelDataInsertedError","childrenWithProps","labelmapRenderingOptions","colorLUT","globalOpacity","fillAlpha","renderFill","outlineThickness","outlineWidth","renderOutline","onNewSegmentationRequested","webpackContext","req","webpackContextResolve","setLayoutAndViewportData","setMPRLayout","viewportPropsArray","apis","viewportProps","setViewportToVTK","BlendMode","Constants","defaultVOI","_getActiveViewportVTKApi","_setView","viewUp","renderWindow","genericRenderWindow","getRenderWindow","istyle","getInteractor","getInteractorStyle","setSliceNormal","setViewUp","getVOIFromCornerstoneViewport","dom","cornerstoneElement","setVOI","updateVOI","_convertModelToWorldSpace","indexToWorld","getIndexToWorld","vec3","transformMat4","getVtkApis","resetMPRView","resetOrientation","svgWidgets","rotatableCrosshairsWidget","resetCrosshairs","axial","sagittal","coronal","requestNewSegmentation","allViewports","jumpToSlice","segmentNumber","pixelIndex","worldPos","moveCrosshairs","setSegmentationConfiguration","setGlobalOpacity","setVisibility","setOutlineThickness","setOutlineRendering","setSegmentConfiguration","setSegmentVisibility","enableRotateTool","apiIndex","vtkInteractorStyleMPRRotate","setInteractorStyle","enableCrosshairsTool","vtkInteractorStyleRotatableMPRCrosshairs","getReferenceLines","enableLevelTool","throttledUpdateVOIs","trailing","setOnLevelsChanged","vtkInteractorStyleMPRWindowLevel","setSlabThickness","slabThickness","changeSlabThickness","change","getSlabThickness","setBlendModeToComposite","mapper","getMapper","setBlendModeToMaximumIntensity","setBlendMode","blendMode","mpr2d","cornerstoneVOI","addSVGWidget","vtkSVGRotatableCrosshairsWidget","setApiIndex","setApis","firstApi","openGLRenderWindow","getOpenGLRenderWindow","getWebgl2","openGLContext","maxTextureSizeInBytes","getParameter","MAX_TEXTURE_SIZE","maxBufferLengthFloat32","getInputData","getDimensions","vtkActions","COMPOSITE_BLEND","MAXIMUM_INTENSITY_BLEND","setBlendModeToMinimumIntensity","MINIMUM_INTENSITY_BLEND","setBlendModeToAverageIntensity","AVERAGE_INTENSITY_BLEND","increaseSlabThickness","decreaseSlabThickness","getVtkApiForViewportIndex","SLIDER","ToolbarLabel","ToolbarSlider","_getSelectOptions","operationButtons","_getClassNames","_applySlabThickness","modeChecked","toolbarClickCallback","generatedOperation","generateOperation","actionButton","_applyModeOperation","deactivateButton","_operation","_getInitialState","currentSelectedOption","sliderMin","sliderMax","INITIAL_OPTION_INDEX","_getInitialtSelectedOption","SlabThicknessToolbarComponent","parentContext","_className","selectOptions","selectedValue","isVisible","_isDisplaySetReconstructable","VTKMPRToolbarButton","CustomComponent","withCommandsManager","vtkExtension","BASIC_TEXT_SR","ENHANCED_SR","COMPREHENSIVE_SR","COMPREHENSIVE_3D_SR","PROCEDURE_LOG_STORAGE","MAMMOGRAPHY_CAD_SR","CHEST_CAD_SR","X_RAY_RADIATION_DOSE_SR","ACQUISITION_CONTEXT_SR_STORAGE","OHIFDicomHtmlSopClassHandler","sopClassUids","OHIFDicomHtmlViewport","getSopClassHandlerModule","draw","drawLine","getNewContext","_drawCanvasCrosshairs","canvasContext","centerCanvas","DICOM_SEG_TEMP_CROSSHAIRS_TOOL","DICOMSegTempCrosshairsTool","mixins","initialProps","_rtStructModule","drawCanvasCrosshairs","getActiveColor","lineWidth","pop","addCrosshair","stackToolState","imageIdIndex","imgId","labelmaps2D","xCenter","yCenter","globalToolState","imageIdSpecificToolState","loadSegmentation","segDisplaySet","segMetadata","segmentsOnFrame","labelmapSegments","labelmapIndex","_getNextLabelmapIndex","_makeColorLUTAndGetIndex","labelmap3DByFirstImageId","_getNextColorLUTIndex","segment","ROIDisplayColor","RecommendedDisplayCIELabValue","rgb","Colors","dicomlab2RGB","setActiveLabelmap","onDisplaySetLoadFailure","getFirstImageId","hasOverlapping","originLabelMapIndex","activatedLabelmapPromise","activateLabelMap","onDisplaySetLoadFailureHandler","DICOM_SEG","_parseSeg","Segmentation","_getImageIdsForDisplaySet","BrushColorSelector","defaultColor","onNext","onPrev","BrushRadius","SegmentationItem","SegmentationSettings","onBack","disabledFields","shouldRenderInactiveLabelmaps","outlineAlpha","fillAlphaInactive","outlineAlphaInactive","toFloat","CustomCheck","CustomRange","ColoredCircle","SegmentItem","onVisibilityChange","setIsVisible","data-tip","data-for","place","newVisibility","computedstyle","getComputedStyle","uiGrayDarker","getPropertyValue","activeColor","uiGrayDark","segmentationSelectStyles","singleValue","control","cursor","borderRadius","isFocused","borderColor","minHeight","menu","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","SegmentationSelect","formatOptionLabel","styles","SegmentationPanel","onSegmentItemClick","onSegmentVisibilityChange","onConfigurationChange","onSelectedSegmentationChange","isVTK","DEFAULT_BRUSH_RADIUS","brushRadius","brushColor","selectedSegment","selectedSegmentation","showSettings","labelMapList","segmentList","segmentNumbers","isDisabled","getActiveViewport","getActiveLabelMaps3D","getBrushStackState","getActiveSegmentIndex","activeSegmentIndex","getActiveLabelMaps2D","setActiveSegment","segmentIndex","newLabelmapIndex","labelmapModifiedHandler","refreshSegmentations","updateSegmentationComboBox","activatedLabelmapIndex","cleanSegmentationComboBox","getLabelMapList","getSegmentList","numbers","_getReferencedSegDisplaysets","segDisplay","dateStr","displayDate","setCurrentSelectedSegment","validIndexList","labelMap2D","segmentsOnLabelmap","average","curr","labelMaps3D","currentDisplaySet","getCurrentDisplaySet","getColorLUTTable","onSegmentVisibilityChangeHandler","segmentationSeriesInstanceUID","uniqueSegmentIndexes","labelmap2D","segmentIndexes","colorLutTable","hasLabelmapMeta","segmentLabel","segmentMeta","SegmentNumber","SegmentLabel","sameSegment","selectedSegmentationOption","newConfiguration","referencedDisplaysets","aNumber","SegmentsSection","defaultVisibility","BrushTool","SphericalBrushTool","CorrectionScissorsTool","alwaysEraseOnClick","triggerSegmentationPanelTabUpdatedEvent","seriesInstanceUid","referencedDS","referencedDisplaySetUID","findDicomDataPromise","segArrayBuffer","namifyDataset","labelmapBufferArray","segmentsOnFrameArray","labelmapIndexes","RTSTRUCT_DISPLAY_TOOL","drawCircle","drawJoinedLines","RTStructDisplayTool","rtstructModule","crossHairCenter","highlightOpacity","structureSet","structureSetSeriesInstanceUid","ROIContourData","ROIContour","ROINumber","colorArray","highlight","_renderClosedPlanar","_renderPoint","_renderOpenPlanar","_toolDataContainsROIContour","toolDataI","StructureSets","getStructureSet","getROIContour","ROIContours","_setStructureSetVisible","StructureSet","_setROIContourVisible","structuresSetsWhichReferenceSeriesInstanceUid","structureSetReferencesSeriesInstanceUid","imageIdOfCenterFrameOfROIContour","imageIdsInStack","rtStructDisplayToolName","imageIdIndicies","structureSetData","hideROIContour","showROIContour","toggleROIContour","hideStructureSet","showStructureSet","toggleStructureSet","defaultConfig","RT_STRUCT_DISPLAY_TOOL","transformPointsToImagePlane","imagePlane","deltaI","deltaJ","X","Y","S","ix","iy","largestDirectionCosineMagnitude","ci","directionCosineMagnitude","pointI","rtStructDisplaySet","rtStructModule","rtStructDataset","StructureSetROISequence","ROIContourSequence","RTROIObservationsSequence","StructureSetLabel","imageIdSopInstanceUidPairs","_getImageIdSopInstanceUidPairsForDisplaySet","ReferencedROINumber","ContourSequence","isSupported","objOrArray","ContourSequenceArray","ContourImageSequence","ContourData","NumberOfContourPoints","ContourGeometricType","_getClosestSOPInstanceUID","_getImageId","imageIdSpecificToolData","_getOrCreateImageIdSpecificToolData","_setROIContourMetadata","_setToolEnabledIfNotEnabled","StructureSetROI","structureSetROI","ROIName","ROIGenerationAlgorithm","ROIDescription","colorForSegmentIndexColorLUT","_setROIContourDataColor","RTROIObservations","ObservationNumber","ROIObservationDescription","RTROIInterpretedType","ROIInterpreter","_setROIContourRTROIObservations","imageIdSopInstanceUidPairsEntry","pair","imagePlaneModule","P","Q","N","C","D","distanceFromPointToPlane","DICOM_RT_STRUCT","_getSequenceAsArray","OHIFDicomRTStructSopClassHandler","referencedFrameOfReference","RTReferencedStudySequence","rtReferencedStudy","RTReferencedSeriesSequence","rtReferencedSeries","ReferencedInstanceSequence","contourImage","_deriveReferencedSeriesSequenceFromFrameOfReferenceSequence","loadRTStruct","StructureSetItem","dcmrtClassNames","warningIcon","tableListItem","RTSettings","expand","shapeRendering","viewBox","preserveAspectRatio","rx","ry","fill","keyTimes","dur","repeatCount","PanelSection","expanded","loading","hideVisibleButton","onExpandChange","setIsExpanded","newExpandValue","RTPanel","onContourItemClick","selectedContour","setSelectedContour","sets","selectedSet","isLocked","setShowSettings","updateStructureSets","viewportSets","defaultSet","toContourItem","loadedSet","interpretedType","isSameContour","rtData","conifg","triggerRTPanelUpdatedEvent","referencedDisplaySets","contourData","sopClassHandlerModule","DicomMicroscopySopClassHandler","ContentDate","ContentTime","OHIFDicomPDFSopClassHandler","ConnectedOHIFDicomPDFViewer","appProps","OHIFVTKExtension","OHIFDicomHtmlExtension","OHIFDicomMicroscopyExtension","OHIFDicomPDFExtension","OHIFDicomSegmentationExtension","OHIFDicomRtExtension","registeredExtensionIds","registeredExtensionVesions","moduleTypeNames","_api","moduleType","ohifExtension","registerExtension","extensionId","extensionModule","_getExtensionModule","_initSpecialModuleTypes","getModuleFnName","charAt","getModuleFn","ex","_initCommandsModule","commandDefinitions","commandDefinition","registerCommand","registeredServiceNames","ohifService","registerService","serviceShowRequestQueue","publicAPI","serviceImplementation","_hide","_show","hideImplementation","showImplementation","showArguments","_dismiss","_dismissAll","_create","dismissImplementation","dismissAllImplementation","createImplementation","_info","_error","infoImplementation","errorImplementation","_isValidEvent","listenerId","subscription","_unsubscribe","callbackProps","hasListeners","hasCallbacks","MEASUREMENT_SCHEMA_KEYS","INTERNAL_MEASUREMENT_UPDATED","RAW_MEASUREMENT_ADDED","MEASUREMENTS_CLEARED","JUMP_TO_MEASUREMENT","BIDIRECTIONAL","MULTIPOINT","CIRCLE","sources","_jumpToMeasurementCache","pubSubServiceInterface","_arrayOfObjects","_getSourceId","toSourceSchema","toMeasurementSchema","_isValidSource","mapping","_getSourceInfo","_getMappingByMeasurementSource","getMeasurement","matchingMapping","_getMatchingMapping","notYetUpdatedAtSource","updatedMeasurement","modifiedTimestamp","dataSource","sourceInfo","_sourceHasMappings","_isValidMeasurement","internalId","newMeasurement","sourceMeasurement","_addJumpToMeasurement"],"mappings":"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,E,qjBAAAA,E,yHACAC,E,4bAAAA,E,iIACAC,E,qUAAAA,E,+HACAC,E,0YAAAA,E,yHACAC,E,6MAAAA,E,uHACAC,E,onBAAAA,E,yHACAC,E,oKAAAA,E,sHACAC,E,8LAAAA,E,yHACAC,E,mlBAAAA,E,yHACAC,E,yRAAAA,E,yHACAC,E,+dAAAA,E,yHACAC,E,0xBAAAA,E,uHACAC,E,wTAAAA,E,uHACAC,E,0dAAAA,E,uHACAC,E,mjCAAAA,E,yHACAC,E,69FAAAA,E,8HACAC,E,inDAAAA,E,uHACAC,E,ihBAAAA,E,uHACAC,E,iaAAAA,E,yHACAC,E,knBAAAA,E,yHACAC,E,8RAAAA,E,uHACAC,E,ubAAAA,E,uHACAC,E,2aAAAA,E,sHACAC,E,oLAAAA,E,qJACAC,E,6KAAAA,E,uHACAC,E,0VAAAA,E,yHACAC,E,6VAAAA,E,yHACAC,E,gOAAAA,E,yHACA7oC,E,2aAAAA,E,yHACA8oC,E,sNAAAA,E,uHACAC,E,2PAAAA,E,6IACA/7B,E,4gCAAAA,E,uHACAg8B,E,6RAAAA,E,qIACApe,E,4LAAAA,E,uHACAqe,E,guBAAAA,E,2KACAC,E,mTAAAA,E,uHACAC,E,+RAAAA,E,uHACAC,E,wxBAAAA,E,uJACAC,E,+QAAAA,E,kLACAC,E,4fAAAA,E,uIACAC,G,wOAAAA,G,kLACAC,G,gQAAAA,G,kLACAC,G,wOAAAA,G,kLACAC,G,qWAAAA,G,qIACAC,G,mVAAAA,G,oKACAC,G,+aAAAA,G,uJACAC,G,0mfAAAA,G,uFACAC,G,wRAAAA,G,uHACAC,G,soBAAAA,G,uHACAC,G,+LAAAA,G,yHACAC,G,mQAAAA,G,uHACAC,G,yfAAAA,G,uHACA5O,G,gjBAAAA,G,uHACA6O,G,+hBAAAA,G,uHACAC,G,wiBAAAA,G,uHACAC,G,2mBAAAA,G,+FACAC,G,ytBAAAA,G,yHACAjG,G,oaAAAA,G,uHACAkG,G,2QAAAA,G,yHACAC,G,6xBAAAA,G,uNACA9nB,G,6TAAAA,G,yHACA+nB,G,+NAAAA,G,yHACAC,G,8NAAAA,G,yHACAC,G,k4BAAAA,G,yHACAC,G,iUAAAA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,CACJolD,W,OACAC,Q,OACA1mD,W,OACA2mD,O,OACAC,W,OACAC,O,OACApsD,iB,OACAoX,U,OACAi1C,qB,OACAzlD,qB,SHXJ,GIAe,CACb,GAAM,CACJolD,W,OACAC,Q,OACA1mD,W,OACA2mD,O,OACAC,W,OACAC,O,OACApsD,iB,OACAoX,U,OACAi1C,qB,OACAzlD,qB,SJXJ,GKAe,CACb,QAAS,CACPolD,W,OACAC,Q,OACA1mD,W,OACA2mD,O,OACAC,W,OACAC,O,OACApsD,iB,OACAoX,U,OACAi1C,qB,OACAzlD,qB,SLXJ,GMAe,CACb,GAAM,CACJolD,W,OACAC,Q,OACA1mD,W,OACA2mD,O,OACAC,W,OACAC,O,OACApsD,iB,OACAoX,U,OACAi1C,qB,OACAzlD,qB,SNXJ,GOAe,CACb,QAAS,CACPolD,W,OACAC,Q,OACA1mD,W,OACA2mD,O,OACAC,W,OACAC,O,OACApsD,iB,OACAoX,U,OACAi1C,qB,OACAzlD,qB,SPXJ,GQAe,CACb,GAAM,CACJolD,W,OACAC,Q,OACA1mD,W,OACA2mD,O,OACAC,W,OACAC,O,OACApsD,iB,OACAoX,U,OACAi1C,qB,OACAzlD,qB,SRXJ,GSAe,CACb,GAAM,CACJolD,W,OACAC,Q,OACA1mD,W,OACA2mD,O,OACAC,W,OACAC,O,OACApsD,iB,OACAoX,U,OACAi1C,qB,OACAzlD,qB,STXJ,GUAe,CACb,GAAM,CACJolD,W,OACAC,Q,OACA1mD,W,OACA2mD,O,OACAC,W,OACAC,O,OACApsD,iB,OACAoX,U,OACAi1C,qB,OACAzlD,qB,UCtBE0lD,EAAe,CACnBC,GAAI,SACJC,GAAI,UACJC,GAAI,YACJC,GAAI,UACJC,GAAI,UACJC,GAAI,QACJC,GAAI,SACJC,GAAI,SACJC,GAAI,QACJC,GAAI,UACJ,QAAS,0BACT,QAAS,gBACTC,GAAI,UACJC,GAAI,WACJC,GAAI,UACJC,GAAI,UACJC,IAAK,WACLC,GAAI,SACJC,GAAI,WACJC,GAAI,SACJC,GAAI,QACJC,GAAI,WACJC,GAAI,YACJ/0D,GAAI,aACJg1D,GA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","file":"app.bundle.7da1c1acb03a6a024f29.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t8: 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t8: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({\"0\":\"ConnectedStandaloneRouting~IHEInvokeImageDisplay~StudyListRouting~ViewerLocalFileData~ViewerRouting\",\"1\":\"ConnectedStandaloneRouting~IHEInvokeImageDisplay~ViewerLocalFileData~ViewerRouting\",\"2\":\"CallbackPage\",\"3\":\"ConnectedStandaloneRouting\",\"4\":\"IHEInvokeImageDisplay\",\"5\":\"StudyListRouting\",\"6\":\"ViewerLocalFileData\",\"7\":\"ViewerRouting\",\"9\":\"vendors~ViewerLocalFileData\",\"11\":\"vendors~dicom-microscopy-viewer\"}[chunkId]||chunkId) + \".bundle.\" + {\"0\":\"6a60d293bf5a1ae28cb3\",\"1\":\"b97bbd5a2d84500b6787\",\"2\":\"02a7a4753c63171f152e\",\"3\":\"b688d26e559cff26b88c\",\"4\":\"0d070d854bfa9bf613cb\",\"5\":\"1b19e0105e52786bb694\",\"6\":\"35606be366c6cfd88425\",\"7\":\"9f41980b77ffbef384c3\",\"9\":\"fc891dbe04bac7fdc1d1\",\"11\":\"f35bd0eb4a755af06711\",\"12\":\"9fe2cf2e8b04841654b0\",\"13\":\"df26041b41d21d02592f\",\"14\":\"ab1c6f476c81e5c3512d\",\"15\":\"6e0e92ff3995842144b4\",\"16\":\"8abad1919772ba4641ef\",\"17\":\"683f37cd4b9977de87de\",\"18\":\"e6d11c375bbe2896cb22\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// extract-css-chunks-webpack-plugin CSS loading\n \t\tvar cssChunks = {\"0\":1,\"1\":1,\"5\":1,\"6\":1,\"13\":1,\"14\":1,\"15\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"\" + chunkId + \".\" + \"525aa5e1c792ef528bb8\" + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1022,10]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","const log = {\r\n  error: console.error,\r\n  warn: console.warn,\r\n  info: console.log,\r\n  trace: console.trace,\r\n  debug: console.debug,\r\n  time: console.time,\r\n  timeEnd: console.timeEnd,\r\n};\r\n\r\nexport default log;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './LayoutChooser.styl';\r\n\r\n/**\r\n * Adds the 'hover' class to cells above and to the left of the current cell\r\n * This is used to \"fill in\" the grid that the user will change the layout to,\r\n * if they click on a specific table cell.\r\n **/\r\n\r\nclass LayoutChooser extends PureComponent {\r\n  static propTypes = {\r\n    Rows: PropTypes.number.isRequired,\r\n    Columns: PropTypes.number.isRequired,\r\n    visible: PropTypes.bool.isRequired,\r\n    selectedCell: PropTypes.object,\r\n    boxSize: PropTypes.number.isRequired,\r\n    cellBorder: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n  };\r\n\r\n  static defaultProps = {\r\n    Rows: 3,\r\n    Columns: 3,\r\n    visible: true,\r\n    boxSize: 20,\r\n    cellBorder: 1,\r\n    selectedCell: {\r\n      row: -1,\r\n      col: -1,\r\n    },\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.emptyCell = {\r\n      row: -1,\r\n      column: -1,\r\n    };\r\n    this.state = {\r\n      table: [[]],\r\n      selectedCell: this.props.selectedCell,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.highlightCells(this.emptyCell);\r\n  }\r\n  onClick(currentCell) {\r\n    this.setState({\r\n      selectedCell: currentCell,\r\n    });\r\n    this.highlightCells(currentCell);\r\n    if (this.props.onClick) {\r\n      this.props.onClick(currentCell);\r\n    }\r\n    if (this.props.onChange) {\r\n      this.props.onChange(currentCell);\r\n    }\r\n  }\r\n  isRange = (cell, parentCell) => {\r\n    return cell.row <= parentCell.row && cell.col <= parentCell.col;\r\n  };\r\n  highlightCells = currentCell => {\r\n    let table = [];\r\n    for (let row = 0; row < this.props.Rows; row++) {\r\n      let newRow = [];\r\n      for (let col = 0; col < this.props.Columns; col++) {\r\n        let cell = { row: row, col: col };\r\n        if (this.isRange(cell, currentCell)) {\r\n          cell.className = 'hover';\r\n        } else if (\r\n          this.isRange(currentCell, this.emptyCell) &&\r\n          this.isRange(cell, this.state.selectedCell)\r\n        ) {\r\n          cell.className = 'selectedBefore';\r\n        }\r\n        newRow.push(cell);\r\n      }\r\n      table.push(newRow);\r\n    }\r\n    this.setState({ table: table });\r\n  };\r\n\r\n  render() {\r\n    let Columns = this.props.Columns;\r\n    const style = {\r\n      display: this.props.visible ? 'block' : 'none',\r\n      minWidth:\r\n        Columns * this.props.boxSize + (Columns + 5) * this.props.cellBorder,\r\n    };\r\n    return (\r\n      <div\r\n        className=\"layoutChooser layoutChooser-dropdown-menu\"\r\n        role=\"menu\"\r\n        style={style}\r\n      >\r\n        <table>\r\n          <tbody>\r\n            {this.state.table.map((row, i) => {\r\n              return (\r\n                <tr key={i}>\r\n                  {row.map((cell, j) => {\r\n                    return (\r\n                      <td\r\n                        className={cell.className}\r\n                        style={{\r\n                          width: this.props.boxSize,\r\n                          height: this.props.boxSize,\r\n                          border: 'solid 1px black',\r\n                        }}\r\n                        key={j}\r\n                        onMouseEnter={() => this.highlightCells(cell)}\r\n                        onMouseLeave={() => this.highlightCells(this.emptyCell)}\r\n                        onClick={() => this.onClick(cell)}\r\n                      />\r\n                    );\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport { LayoutChooser };\r\n","import './toolbar-button.styl';\r\n\r\nimport { Icon } from './../elements/Icon';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport classnames from 'classnames';\r\nimport { withTranslation } from '../contextProviders';\r\n\r\nexport function ToolbarButton(props) {\r\n  const { isActive, icon, labelWhenActive, onClick, t } = props;\r\n  const className = classnames(props.className, { active: isActive });\r\n  const iconProps = typeof icon === 'string' ? { name: icon } : icon;\r\n  const label = isActive && labelWhenActive ? labelWhenActive : props.label;\r\n\r\n  const arrowIconName = props.isExpanded ? 'caret-up' : 'caret-down';\r\n  const arrowIcon = props.isExpandable && (\r\n    <Icon name={arrowIconName} className=\"expand-caret\" />\r\n  );\r\n\r\n  const handleClick = event => {\r\n    if (onClick) {\r\n      onClick(event, props);\r\n    }\r\n  };\r\n\r\n  const cypressSelectorId = props.label.toLowerCase();\r\n\r\n  return (\r\n    <div\r\n      className={className}\r\n      onClick={handleClick}\r\n      data-cy={cypressSelectorId}\r\n    >\r\n      {iconProps && <Icon {...iconProps} />}\r\n      <div className=\"toolbar-button-label\">\r\n        {t(label)}\r\n        {arrowIcon}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nToolbarButton.propTypes = {\r\n  id: PropTypes.string,\r\n  isActive: PropTypes.bool,\r\n  /** Display label for button */\r\n  label: PropTypes.string.isRequired,\r\n  /** Alternative text to show when button is active */\r\n  labelWhenActive: PropTypes.string,\r\n  className: PropTypes.string.isRequired,\r\n  icon: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n    }),\r\n  ]),\r\n  onClick: PropTypes.func,\r\n  /** Determines if we show expandable 'caret' symbol */\r\n  isExpandable: PropTypes.bool,\r\n  /** Direction of expandable 'caret' symbol */\r\n  isExpanded: PropTypes.bool,\r\n  t: PropTypes.func.isRequired,\r\n};\r\n\r\nToolbarButton.defaultProps = {\r\n  isActive: false,\r\n  className: 'toolbar-button',\r\n};\r\n\r\nexport default withTranslation('Buttons')(ToolbarButton);\r\n","import React, { PureComponent } from 'react';\r\n\r\nimport { LayoutChooser } from './LayoutChooser.js';\r\nimport PropTypes from 'prop-types';\r\nimport ToolbarButton from '../../viewer/ToolbarButton';\r\n\r\nexport class LayoutButton extends PureComponent {\r\n  static defaultProps = {\r\n    dropdownVisible: false,\r\n  };\r\n\r\n  static propTypes = {\r\n    dropdownVisible: PropTypes.bool.isRequired,\r\n    /** Called with the selectedCell number when grid sell is selected */\r\n    onChange: PropTypes.func,\r\n    /** The cell to show as selected */\r\n    selectedCell: PropTypes.object,\r\n  };\r\n\r\n  state = {\r\n    dropdownVisible: this.props.dropdownVisible,\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.dropdownVisible !== prevProps.dropdownVisible) {\r\n      this.setState({\r\n        dropdownVisible: this.props.dropdownVisible,\r\n      });\r\n    }\r\n  }\r\n\r\n  onClick = () => {\r\n    this.setState({\r\n      dropdownVisible: !this.state.dropdownVisible,\r\n    });\r\n  };\r\n\r\n  onChange = selectedCell => {\r\n    if (this.props.onChange) {\r\n      this.props.onChange(selectedCell);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"btn-group\">\r\n        <ToolbarButton\r\n          isActive={this.state.dropdownVisible}\r\n          label={'Layout'}\r\n          icon=\"th\"\r\n          onClick={this.onClick}\r\n        />\r\n        <LayoutChooser\r\n          visible={this.state.dropdownVisible}\r\n          onChange={this.onChange}\r\n          onClick={this.onClick}\r\n          selectedCell={this.props.selectedCell}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LayoutButton;\r\n","import './TableListItem.styl';\r\n\r\nimport { Component } from 'react';\r\nimport { Icon } from './../../elements/Icon';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nexport class TableListItem extends Component {\r\n  static propTypes = {\r\n    children: PropTypes.node,\r\n    itemClass: PropTypes.string,\r\n    itemIndex: PropTypes.number,\r\n    itemMeta: PropTypes.node,\r\n    itemMetaClass: PropTypes.string,\r\n    itemKey: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n    ]),\r\n    onItemClick: PropTypes.func.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    itemMeta: null,\r\n    itemMetaClass: ''\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`tableListItem ${this.props.itemClass}`}\r\n        onClick={this.onItemClick}\r\n      >\r\n        <div className={`itemIndex ${this.props.itemMetaClass}`}>\r\n          {this.props.itemIndex}\r\n          {this.props.itemMeta}\r\n          <span className=\"warning-icon\">\r\n            <Icon name=\"exclamation-triangle\" />\r\n          </span>\r\n        </div>\r\n        <div className=\"itemContent\">{this.props.children}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onItemClick = event => {\r\n    if (this.props.onItemClick) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n\r\n      this.props.onItemClick(event, this.props.itemKey);\r\n    }\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from '../../contextProviders';\r\n\r\nimport { Icon } from './../../elements/Icon';\r\nimport { OverlayTrigger } from './../overlayTrigger';\r\nimport { Tooltip } from './../tooltip';\r\nimport { TableListItem } from './../tableList/TableListItem.js';\r\n\r\nimport './MeasurementTableItem.styl';\r\n\r\nclass MeasurementTableItem extends Component {\r\n  static propTypes = {\r\n    measurementData: PropTypes.object.isRequired,\r\n    onItemClick: PropTypes.func.isRequired,\r\n    onRelabel: PropTypes.func,\r\n    onDelete: PropTypes.func,\r\n    onEditDescription: PropTypes.func,\r\n    itemClass: PropTypes.string,\r\n    itemIndex: PropTypes.number,\r\n    t: PropTypes.func,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      warningTitle = '',\r\n      hasWarnings,\r\n      isReadOnly,\r\n    } = this.props.measurementData;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {hasWarnings && !isReadOnly ? (\r\n          <OverlayTrigger\r\n            key={this.props.itemIndex}\r\n            placement=\"left\"\r\n            overlay={\r\n              <Tooltip\r\n                placement=\"left\"\r\n                className=\"in tooltip-warning\"\r\n                id=\"tooltip-left\"\r\n              >\r\n                <div className=\"warningTitle\">{this.props.t(warningTitle)}</div>\r\n                <div className=\"warningContent\">{this.getWarningContent()}</div>\r\n              </Tooltip>\r\n            }\r\n          >\r\n            <div>{this.getTableListItem()}</div>\r\n          </OverlayTrigger>\r\n        ) : (\r\n          <React.Fragment>{this.getTableListItem()}</React.Fragment>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  getActionButton = (btnLabel, onClickCallback) => {\r\n    return (\r\n      <button key={btnLabel} className=\"btnAction\" onClick={onClickCallback}>\r\n        <span style={{ marginRight: '4px' }}>\r\n          <Icon name=\"edit\" width=\"14px\" height=\"14px\" />\r\n        </span>\r\n        {this.props.t(btnLabel)}\r\n      </button>\r\n    );\r\n  };\r\n\r\n  getTableListItem = () => {\r\n    const hasWarningClass =\r\n      this.props.measurementData.hasWarnings &&\r\n      !this.props.measurementData.isReadOnly\r\n        ? 'hasWarnings'\r\n        : '';\r\n\r\n    const actionButtons = [];\r\n\r\n    if (typeof this.props.onRelabel === 'function') {\r\n      const relabelButton = this.getActionButton(\r\n        'Relabel',\r\n        this.onRelabelClick\r\n      );\r\n      actionButtons.push(relabelButton);\r\n    }\r\n    if (typeof this.props.onEditDescription === 'function') {\r\n      const descriptionButton = this.getActionButton(\r\n        'Description',\r\n        this.onEditDescriptionClick\r\n      );\r\n      actionButtons.push(descriptionButton);\r\n    }\r\n    if (typeof this.props.onDelete === 'function') {\r\n      const deleteButton = this.getActionButton('Delete', this.onDeleteClick);\r\n      actionButtons.push(deleteButton);\r\n    }\r\n\r\n    return (\r\n      <TableListItem\r\n        itemKey={this.props.measurementData.measurementNumber}\r\n        itemClass={`measurementItem ${this.props.itemClass} ${hasWarningClass}`}\r\n        itemIndex={this.props.itemIndex}\r\n        onItemClick={this.onItemClick}\r\n      >\r\n        <div>\r\n          <div className=\"measurementLocation\">\r\n            {this.props.t(this.props.measurementData.label, {\r\n              keySeparator: '>',\r\n              nsSeparator: '|',\r\n            })}\r\n          </div>\r\n          <div className=\"displayTexts\">{this.getDataDisplayText()}</div>\r\n          {!this.props.measurementData.isReadOnly && (\r\n            <div className=\"rowActions\">{actionButtons}</div>\r\n          )}\r\n        </div>\r\n      </TableListItem>\r\n    );\r\n  };\r\n\r\n  onItemClick = event => {\r\n    this.props.onItemClick(event, this.props.measurementData);\r\n  };\r\n\r\n  onRelabelClick = event => {\r\n    // Prevent onItemClick from firing\r\n    event.stopPropagation();\r\n\r\n    this.props.onRelabel(event, this.props.measurementData);\r\n  };\r\n\r\n  onEditDescriptionClick = event => {\r\n    // Prevent onItemClick from firing\r\n    event.stopPropagation();\r\n\r\n    this.props.onEditDescription(event, this.props.measurementData);\r\n  };\r\n\r\n  onDeleteClick = event => {\r\n    // Prevent onItemClick from firing\r\n    event.stopPropagation();\r\n\r\n    this.props.onDelete(event, this.props.measurementData);\r\n  };\r\n\r\n  getDataDisplayText = () => {\r\n    return this.props.measurementData.data.map((data, index) => {\r\n      return (\r\n        <div key={`displayText_${index}`} className=\"measurementDisplayText\">\r\n          {data.displayText ? data.displayText : '...'}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  getWarningContent = () => {\r\n    const { warningList = '' } = this.props.measurementData;\r\n\r\n    if (Array.isArray(warningList)) {\r\n      const listedWarnings = warningList.map((warn, index) => {\r\n        return <li key={index}>{warn}</li>;\r\n      });\r\n\r\n      return <ol>{listedWarnings}</ol>;\r\n    } else {\r\n      return <React.Fragment>{warningList}</React.Fragment>;\r\n    }\r\n  };\r\n}\r\n\r\nconst connectedComponent = withTranslation('MeasurementTable')(\r\n  MeasurementTableItem\r\n);\r\nexport { connectedComponent as MeasurementTableItem };\r\nexport default connectedComponent;\r\n","import './ScrollableArea.styl';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport { Icon } from './../elements/Icon';\r\nimport PropTypes from 'prop-types';\r\nimport getScrollbarSize from '../utils/getScrollbarSize.js';\r\nimport throttled from '../utils/throttled.js';\r\n\r\nexport class ScrollableArea extends Component {\r\n  static propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    class: PropTypes.string,\r\n    scrollableClass: PropTypes.string,\r\n    scrollX: PropTypes.bool,\r\n    scrollY: PropTypes.bool,\r\n    hideScrollbar: PropTypes.bool,\r\n    scrollStep: PropTypes.number,\r\n  };\r\n\r\n  static defaultProps = {\r\n    hideScrollbar: true,\r\n    class: 'flex-grow fit',\r\n    scrollY: true,\r\n    scrollX: false,\r\n    scrollStep: 100,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      scrollAreaClasses: '',\r\n    };\r\n\r\n    this.scrollHandlerThrottled = throttled(150, this.scrollHandler);\r\n  }\r\n\r\n  render() {\r\n    let scrollableClass = 'scrollable';\r\n    if (this.props.scrollableClass) {\r\n      scrollableClass += ` ${this.props.scrollableClass}`;\r\n    }\r\n    if (this.props.scrollX) {\r\n      scrollableClass += ` scrollX`;\r\n    }\r\n    if (this.props.scrollY) {\r\n      scrollableClass += ` scrollY`;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={`scrollArea ${this.props.class} ${\r\n          this.state.scrollAreaClasses\r\n        }`}\r\n      >\r\n        <div\r\n          className={scrollableClass}\r\n          ref={element => {\r\n            this.scrollableElement = element;\r\n          }}\r\n          onScroll={this.scrollHandlerThrottled}\r\n          onMouseEnter={this.scrollHandlerThrottled}\r\n          onTransitionEnd={this.scrollHandlerThrottled}\r\n        >\r\n          {this.props.children}\r\n        </div>\r\n        <div className=\"scrollNav scrollNavUp\" onClick={this.scrollNavUp}>\r\n          {/* <svg className=\"scrollNavIcon\"> */}\r\n          <Icon name=\"angle-double-up\" />\r\n        </div>\r\n        <div className=\"scrollNav scrollNavDown\" onClick={this.scrollNavDown}>\r\n          <Icon name=\"angle-double-down\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.adjustMargins();\r\n    this.scrollHandler();\r\n    window.addEventListener('resize', this.adjustMargins);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.adjustMargins();\r\n    this.scrollHandler();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.adjustMargins);\r\n  }\r\n\r\n  scrollNavDown = event => {\r\n    const {\r\n      scrollTop: currentTop,\r\n      offsetHeight: height,\r\n      scrollHeight,\r\n    } = this.scrollableElement;\r\n\r\n    const limit = scrollHeight - height;\r\n    let scrollTop = currentTop + this.props.scrollStep;\r\n    scrollTop = scrollTop > limit ? limit : scrollTop;\r\n    this.scrollableElement.scrollTop = scrollTop;\r\n  };\r\n\r\n  scrollNavUp = event => {\r\n    const { scrollTop: currentTop } = this.scrollableElement;\r\n\r\n    let scrollTop = currentTop - this.props.scrollStep;\r\n    scrollTop = scrollTop < 0 ? 0 : scrollTop;\r\n\r\n    this.scrollableElement.scrollTop = scrollTop;\r\n  };\r\n\r\n  adjustMargins = () => {\r\n    if (this.props.hideScrollbar) {\r\n      const x = this.props.scrollX ? 1 : 0;\r\n      const y = this.props.scrollY ? 1 : 0;\r\n      const scrollbarSize = getScrollbarSize();\r\n      this.scrollableElement.style.marginRight = `${0 -\r\n        scrollbarSize[0] * y}px`;\r\n      this.scrollableElement.style.marginBottom = `${0 -\r\n        scrollbarSize[1] * x}px`;\r\n    }\r\n  };\r\n\r\n  scrollHandler = () => {\r\n    const {\r\n      offsetHeight: height,\r\n      scrollTop: scrollTop,\r\n      scrollHeight,\r\n    } = this.scrollableElement;\r\n    let scrollAreaClasses = '';\r\n\r\n    // Check if can scroll up\r\n    if (scrollTop) {\r\n      scrollAreaClasses += 'canScrollUp';\r\n    }\r\n\r\n    // Check if can scroll down\r\n    if (scrollTop + height < scrollHeight) {\r\n      scrollAreaClasses += ' canScrollDown';\r\n    }\r\n\r\n    if (this.state.scrollAreaClasses !== scrollAreaClasses) {\r\n      this.setState({\r\n        scrollAreaClasses,\r\n      });\r\n    }\r\n  };\r\n}\r\n","export default function throttled(delay, callback) {\r\n  let isThrottled = false,\r\n    args,\r\n    context;\r\n\r\n  function wrapper() {\r\n    if (isThrottled) {\r\n      args = arguments;\r\n      context = this;\r\n      return;\r\n    }\r\n\r\n    isThrottled = true;\r\n    callback.apply(this, arguments);\r\n\r\n    setTimeout(() => {\r\n      isThrottled = false;\r\n      if (args) {\r\n        wrapper.apply(context, args);\r\n        args = context = null;\r\n      }\r\n    }, delay);\r\n  }\r\n\r\n  return wrapper;\r\n}\r\n","/**\r\n * Get the vertical and horizontal scrollbar sizes\r\n * Got from https://stackoverflow.com/questions/986937/how-can-i-get-the-browsers-scrollbar-sizes\r\n *\r\n * @returns {Array} Array containing the scrollbar horizontal and vertical sizes\r\n */\r\nexport default function getScrollbarSize() {\r\n  const inner = document.createElement('p');\r\n  inner.style.width = '100%';\r\n  inner.style.height = '100%';\r\n\r\n  const outer = document.createElement('div');\r\n  outer.style.position = 'absolute';\r\n  outer.style.top = '0px';\r\n  outer.style.left = '0px';\r\n  outer.style.visibility = 'hidden';\r\n  outer.style.width = '100px';\r\n  outer.style.height = '100px';\r\n  outer.style.overflow = 'hidden';\r\n  outer.appendChild(inner);\r\n\r\n  document.body.appendChild(outer);\r\n\r\n  const w1 = inner.offsetWidth;\r\n  const h1 = inner.offsetHeight;\r\n  outer.style.overflow = 'scroll';\r\n  let w2 = inner.offsetWidth;\r\n  let h2 = inner.offsetHeight;\r\n\r\n  if (w1 === w2) {\r\n    w2 = outer.clientWidth;\r\n  }\r\n\r\n  if (h1 === h2) {\r\n    h2 = outer.clientHeight;\r\n  }\r\n\r\n  document.body.removeChild(outer);\r\n\r\n  return [w1 - w2, h1 - h2];\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './TableList.styl';\r\n\r\nexport class TableList extends Component {\r\n  static propTypes = {\r\n    customHeader: PropTypes.node,\r\n    defaultItems: PropTypes.object,\r\n    children: PropTypes.node.isRequired,\r\n    headerTitle: PropTypes.string,\r\n    headless: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    headless: false,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"tableList\">\r\n        {!this.props.headless && (\r\n          <div className=\"tableListHeader\" onClick={this.onHeaderClick}>\r\n            {this.getHeader()}\r\n          </div>\r\n        )}\r\n        <div className=\"tableListContent\">{this.props.children}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getHeader = () => {\r\n    if (this.props.customHeader) {\r\n      return this.props.customHeader;\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"tableListHeaderTitle\">{this.props.headerTitle}</div>\r\n          <div className=\"numberOfItems\">{this.props.children.length}</div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  };\r\n}\r\n","import './MeasurementTable.styl';\r\n\r\nimport React, { Component } from 'react';\r\nimport { withTranslation } from '../../contextProviders';\r\n\r\nimport { Icon } from './../../elements/Icon';\r\nimport { MeasurementTableItem } from './MeasurementTableItem.js';\r\nimport { OverlayTrigger } from './../overlayTrigger';\r\nimport PropTypes from 'prop-types';\r\nimport { ScrollableArea } from './../../ScrollableArea/ScrollableArea.js';\r\nimport { TableList } from './../tableList';\r\nimport { Tooltip } from './../tooltip';\r\n\r\nclass MeasurementTable extends Component {\r\n  static propTypes = {\r\n    measurementCollection: PropTypes.array.isRequired,\r\n    timepoints: PropTypes.array.isRequired,\r\n    overallWarnings: PropTypes.object.isRequired,\r\n    readOnly: PropTypes.bool,\r\n    onItemClick: PropTypes.func,\r\n    onRelabelClick: PropTypes.func,\r\n    onDeleteClick: PropTypes.func,\r\n    onEditDescriptionClick: PropTypes.func,\r\n    selectedMeasurementNumber: PropTypes.number,\r\n    t: PropTypes.func,\r\n    saveFunction: PropTypes.func,\r\n    onSaveComplete: PropTypes.func,\r\n  };\r\n\r\n  static defaultProps = {\r\n    overallWarnings: {\r\n      warningList: [],\r\n    },\r\n    readOnly: false,\r\n  };\r\n\r\n  state = {\r\n    selectedKey: null,\r\n  };\r\n\r\n  render() {\r\n    const { overallWarnings, saveFunction, t } = this.props;\r\n    const hasOverallWarnings = overallWarnings.warningList.length > 0;\r\n\r\n    return (\r\n      <div className=\"measurementTable\">\r\n        <div className=\"measurementTableHeader\">\r\n          {hasOverallWarnings && (\r\n            <OverlayTrigger\r\n              key={'overwall-warning'}\r\n              placement=\"left\"\r\n              overlay={\r\n                <Tooltip\r\n                  placement=\"left\"\r\n                  className=\"in tooltip-warning\"\r\n                  id=\"tooltip-left\"\r\n                  style={{}}\r\n                >\r\n                  <div className=\"warningTitle\">\r\n                    {t('Criteria nonconformities')}\r\n                  </div>\r\n                  <div className=\"warningContent\">\r\n                    {this.getWarningContent()}\r\n                  </div>\r\n                </Tooltip>\r\n              }\r\n            >\r\n              <span className=\"warning-status\">\r\n                <span className=\"warning-border\">\r\n                  <Icon name=\"exclamation-triangle\" />\r\n                </span>\r\n              </span>\r\n            </OverlayTrigger>\r\n          )}\r\n          {this.getTimepointsHeader()}\r\n        </div>\r\n        <ScrollableArea>\r\n          <div>{this.getMeasurementsGroups()}</div>\r\n        </ScrollableArea>\r\n        <div className=\"measurementTableFooter\">\r\n          {saveFunction && (\r\n            <button\r\n              onClick={this.saveFunction}\r\n              className=\"saveBtn\"\r\n              data-cy=\"save-measurements-btn\"\r\n            >\r\n              <Icon name=\"save\" width=\"14px\" height=\"14px\" />\r\n              Save measurements\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  saveFunction = async event => {\r\n    const { saveFunction, onSaveComplete } = this.props;\r\n    if (saveFunction) {\r\n      try {\r\n        const result = await saveFunction();\r\n        if (onSaveComplete) {\r\n          onSaveComplete({\r\n            title: 'STOW SR',\r\n            message: result.message,\r\n            type: 'success',\r\n          });\r\n        }\r\n      } catch (error) {\r\n        if (onSaveComplete) {\r\n          onSaveComplete({\r\n            title: 'STOW SR',\r\n            message: error.message,\r\n            type: 'error',\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  getMeasurementsGroups = () => {\r\n    return this.props.measurementCollection.map((measureGroup, index) => {\r\n      return (\r\n        <TableList\r\n          key={index}\r\n          customHeader={this.getCustomHeader(measureGroup)}\r\n        >\r\n          {this.getMeasurements(measureGroup)}\r\n        </TableList>\r\n      );\r\n    });\r\n  };\r\n\r\n  getMeasurements = measureGroup => {\r\n    const selectedKey = this.props.selectedMeasurementNumber\r\n      ? this.props.selectedMeasurementNumber\r\n      : this.state.selectedKey;\r\n    return measureGroup.measurements.map((measurement, index) => {\r\n      const key = measurement.measurementNumber;\r\n      const itemIndex = measurement.itemNumber || index + 1;\r\n      const itemClass =\r\n        selectedKey === key && !this.props.readOnly ? 'selected' : '';\r\n      return (\r\n        <MeasurementTableItem\r\n          key={key}\r\n          itemIndex={itemIndex}\r\n          itemClass={itemClass}\r\n          measurementData={measurement}\r\n          onItemClick={this.onItemClick}\r\n          onRelabel={this.props.onRelabelClick}\r\n          onDelete={this.props.onDeleteClick}\r\n          onEditDescription={this.props.onEditDescriptionClick}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  onItemClick = (event, measurementData) => {\r\n    if (this.props.readOnly) return;\r\n\r\n    this.setState({\r\n      selectedKey: measurementData.measurementNumber,\r\n    });\r\n\r\n    if (this.props.onItemClick) {\r\n      this.props.onItemClick(event, measurementData);\r\n    }\r\n  };\r\n\r\n  getCustomHeader = measureGroup => {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"tableListHeaderTitle\">\r\n          {this.props.t(measureGroup.groupName)}\r\n        </div>\r\n        {measureGroup.maxMeasurements && (\r\n          <div className=\"maxMeasurements\">\r\n            {this.props.t('MAX')} {measureGroup.maxMeasurements}\r\n          </div>\r\n        )}\r\n        <div className=\"numberOfItems\">{measureGroup.measurements.length}</div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  getTimepointsHeader = () => {\r\n    const { timepoints, t } = this.props;\r\n\r\n    return timepoints.map((timepoint, index) => {\r\n      return (\r\n        <div key={index} className=\"measurementTableHeaderItem\">\r\n          <div className=\"timepointLabel\">{t(timepoint.key)}</div>\r\n          <div className=\"timepointDate\">{timepoint.date}</div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  getWarningContent = () => {\r\n    const { warningList = '' } = this.props.overallWarnings;\r\n\r\n    if (Array.isArray(warningList)) {\r\n      const listedWarnings = warningList.map((warn, index) => {\r\n        return <li key={index}>{warn}</li>;\r\n      });\r\n\r\n      return <ol>{listedWarnings}</ol>;\r\n    } else {\r\n      return <React.Fragment>{warningList}</React.Fragment>;\r\n    }\r\n  };\r\n}\r\n\r\nconst connectedComponent = withTranslation(['MeasurementTable', 'Common'])(\r\n  MeasurementTable\r\n);\r\nexport { connectedComponent as MeasurementTable };\r\nexport default connectedComponent;\r\n","import React from 'react';\r\nimport detect from 'browser-detect';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport './AboutContent.styl';\r\n\r\nconst AboutContent = () => {\r\n  const { t } = useTranslation('AboutContent');\r\n\r\n  const { os, version, name } = detect();\r\n  const capitalize = s =>\r\n    s.substr(0, 1).toUpperCase() + s.substr(1).toLowerCase();\r\n\r\n  const itemsPreset = () => {\r\n    return [\r\n      {\r\n        name: t('Repository URL'),\r\n        value: 'https://github.com/OHIF/Viewers/',\r\n        link: 'https://github.com/OHIF/Viewers/',\r\n      },\r\n      {\r\n        name: t('Latest Master Commits'),\r\n        value: 'https://github.com/OHIF/Viewers/commits/master',\r\n        link: 'https://github.com/OHIF/Viewers/commits/master',\r\n      },\r\n      {\r\n        name: 'Version Number',\r\n        value: process.env.VERSION_NUMBER,\r\n      },\r\n      {\r\n        name: t('Build Number'),\r\n        value: process.env.BUILD_NUM,\r\n      },\r\n      {\r\n        name: t('Browser'),\r\n        value: `${capitalize(name)} ${version}`,\r\n      },\r\n      {\r\n        name: t('OS'),\r\n        value: os,\r\n      },\r\n    ];\r\n  };\r\n\r\n  const renderTableRow = ({ name, value, link }) => (\r\n    <tr key={name} style={{ backgroundColor: 'transparent' }}>\r\n      <td>{name}</td>\r\n      <td>\r\n        {link ? (\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href={link}>\r\n            {value}\r\n          </a>\r\n        ) : (\r\n          value\r\n        )}\r\n      </td>\r\n    </tr>\r\n  );\r\n\r\n  return (\r\n    <div className=\"AboutContent\" data-cy=\"about-modal\">\r\n      <div className=\"btn-group\">\r\n        <a\r\n          className=\"btn btn-default\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          href=\"https://groups.google.com/forum/#!forum/cornerstone-platform\"\r\n        >\r\n          {t('Visit the forum')}\r\n        </a>\r\n        {` `}\r\n        <a\r\n          className=\"btn btn-default\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          href=\"https://github.com/OHIF/Viewers/issues/new/choose\"\r\n        >\r\n          {t('Report an issue')}\r\n        </a>\r\n        {` `}\r\n        <a\r\n          className=\"btn btn-default\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          href=\"http://ohif.org\"\r\n        >\r\n          {t('More details')}\r\n        </a>\r\n      </div>\r\n      <div>\r\n        <h3>{t('Version Information')}</h3>\r\n        <table className=\"table table-responsive\">\r\n          <thead>\r\n            <tr>\r\n              <th>{t('Name')}</th>\r\n              <th>{t('Value')}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{itemsPreset().map(item => renderTableRow(item))}</tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { AboutContent };\r\nexport default AboutContent;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n// Style\r\nimport './TabComponents.styl';\r\n\r\n/**\r\n * Take name of the tab and create the data-cy value for it\r\n *\r\n * @param {string} [name=''] tab name\r\n * @returns {string} data-cy value\r\n */\r\nconst getDataCy = (name = '') => {\r\n  return name\r\n    .split(' ')\r\n    .join('-')\r\n    .toLowerCase();\r\n};\r\n\r\n/**\r\n * Single tab data information\r\n *\r\n * @typedef {Object} tabData\r\n * @property {string} name - name of the tab\r\n * @property {Object} Component - tab component to be rendered\r\n * @property {Object} customProps - tab custom properties\r\n * @property {bool} hidden - bool to define if tab is hidden of not\r\n */\r\n\r\n/**\r\n * Take a list of components data and render then into tabs\r\n *\r\n * @param {Object} props\r\n * @param {[tabData]} props.tabs array of tab data\r\n * @param {Object} props.customProps common custom properties\r\n */\r\nfunction TabComponents({ tabs, customProps = {} }) {\r\n  const [currentTabIndex, setCurrentTabIndex] = useState(0);\r\n\r\n  return (\r\n    tabs.length > 0 && (\r\n      <div className=\"TabComponents\">\r\n        <div className=\"TabComponents_tabHeader\">\r\n          <div className=\"TabComponents_tabHeader_selector\">\r\n            <div className=\"dialog-separator-after\">\r\n              <ul className=\"nav nav-tabs\">\r\n                {tabs.map((tab, index) => {\r\n                  const { name, hidden = false } = tab;\r\n                  return (\r\n                    !hidden && (\r\n                      <li\r\n                        key={index}\r\n                        onClick={() => {\r\n                          setCurrentTabIndex(index);\r\n                        }}\r\n                        className={classnames(\r\n                          'nav-link',\r\n                          index === currentTabIndex && 'active'\r\n                        )}\r\n                        data-cy={getDataCy(name)}\r\n                      >\r\n                        <button>{name}</button>\r\n                      </li>\r\n                    )\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {tabs.map((tab, index) => {\r\n          const {\r\n            Component,\r\n            customProps: tabCustomProps,\r\n            hidden = false,\r\n          } = tab;\r\n          return (\r\n            !hidden && (\r\n              <div\r\n                key={index}\r\n                className={classnames(\r\n                  'TabComponents_content',\r\n                  index === currentTabIndex && 'active'\r\n                )}\r\n              >\r\n                <Component {...customProps} {...tabCustomProps} />\r\n              </div>\r\n            )\r\n          );\r\n        })}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nTabComponents.propTypes = {\r\n  tabs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      Component: PropTypes.any,\r\n      customProps: PropTypes.object,\r\n      hidden: PropTypes.bool,\r\n    })\r\n  ),\r\n  customProps: PropTypes.object,\r\n};\r\n\r\nexport { TabComponents };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './TabFooter.styl';\r\n\r\n// In case translate is not passed\r\nconst translate = word => word;\r\n\r\nfunction TabFooter({\r\n  onResetPreferences,\r\n  onSave,\r\n  onCancel,\r\n  hasErrors,\r\n  t = translate,\r\n}) {\r\n  return (\r\n    <div className=\"footer\">\r\n      <button\r\n        className=\"btn btn-danger pull-left\"\r\n        data-cy=\"reset-default-btn\"\r\n        onClick={onResetPreferences}\r\n      >\r\n        {t('Reset to Defaults')}\r\n      </button>\r\n      <div>\r\n        <div\r\n          onClick={onCancel}\r\n          data-cy=\"cancel-btn\"\r\n          className=\"btn btn-default\"\r\n        >\r\n          {t('Cancel')}\r\n        </div>\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          data-cy=\"save-btn\"\r\n          disabled={hasErrors}\r\n          onClick={onSave}\r\n        >\r\n          {t('Save')}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nTabFooter.propTypes = {\r\n  onResetPreferences: PropTypes.func,\r\n  onSave: PropTypes.func,\r\n  onCancel: PropTypes.func,\r\n  hasErrors: PropTypes.bool,\r\n  t: PropTypes.func,\r\n};\r\n\r\nexport { TabFooter };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { hotkeys } from '@ohif/core';\r\n\r\n/**\r\n * Take the pressed key array and return the readable string for the keys\r\n *\r\n * @param {Array} [keys=[]]\r\n * @returns {string} string representation of an array of keys\r\n */\r\nconst formatKeysForInput = (keys = []) => keys.join('+');\r\n\r\n/**\r\n * formats given keys sequence to insert the modifier keys in the first index of the array\r\n * @param {string} sequence keys sequence from MouseTrap Record -> \"shift+left\"\r\n * @returns {Array} keys in array-format -> ['shift','left']\r\n */\r\nconst getKeys = ({ sequence, modifier_keys }) => {\r\n  const keysArray = sequence.join(' ').split('+');\r\n  let keys = [];\r\n  let modifiers = [];\r\n  keysArray.forEach(key => {\r\n    if (modifier_keys && modifier_keys.includes(key)) {\r\n      modifiers.push(key);\r\n    } else {\r\n      keys.push(key);\r\n    }\r\n  });\r\n  return [...modifiers, ...keys];\r\n};\r\n\r\n/**\r\n * HotkeyField\r\n * Renders a hotkey input\r\n *\r\n * @param {object} props component props\r\n * @param {Array[]} props.keys array of keys to be controlled by this field\r\n * @param {function} props.handleChange Callback function to communicate parent once value is changed\r\n * @param {string} props.classNames string caontaining classes to be added in the input field\r\n * @param {Array[]} props.modifier_keys\r\n */\r\nfunction HotkeyField({ keys, handleChange, classNames, modifier_keys }) {\r\n  const inputValue = formatKeysForInput(keys);\r\n\r\n  const onInputKeyDown = event => {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n\r\n    hotkeys.record(sequence => {\r\n      const keys = getKeys({ sequence, modifier_keys });\r\n      hotkeys.unpause();\r\n      handleChange(keys);\r\n    });\r\n  };\r\n\r\n  const onFocus = () => {\r\n    hotkeys.pause();\r\n    hotkeys.startRecording();\r\n  };\r\n\r\n  return (\r\n    <input\r\n      readOnly={true}\r\n      type=\"text\"\r\n      value={inputValue}\r\n      className={classNames}\r\n      onKeyDown={onInputKeyDown}\r\n      onFocus={onFocus}\r\n    />\r\n  );\r\n}\r\n\r\nHotkeyField.propTypes = {\r\n  keys: PropTypes.array.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  classNames: PropTypes.string,\r\n  modifier_keys: PropTypes.array,\r\n  allowed_keys: PropTypes.array,\r\n};\r\n\r\nexport { HotkeyField };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './LanguageSwitcher.styl';\r\n\r\nconst LanguageSwitcher = ({ language, onLanguageChange, languages }) => {\r\n  const onChange = event => {\r\n    const { value } = event.target;\r\n    onLanguageChange(value);\r\n  };\r\n\r\n  return (\r\n    <select\r\n      name=\"language-select\"\r\n      id=\"language-select\"\r\n      className=\"language-select\"\r\n      value={language}\r\n      onChange={onChange}\r\n    >\r\n      {languages.map(lng => (\r\n        <option key={lng.value} value={lng.value}>\r\n          {lng.label}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nLanguageSwitcher.propTypes = {\r\n  language: PropTypes.string.isRequired,\r\n  languages: PropTypes.array.isRequired,\r\n  onLanguageChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport { LanguageSwitcher };\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './checkbox.css';\r\n\r\nexport class Checkbox extends Component {\r\n  static propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    checked: PropTypes.bool,\r\n    onChange: PropTypes.func,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { checked: !!props.checked, label: props.label };\r\n  }\r\n\r\n  handleChange(e) {\r\n    const checked = e.target.checked;\r\n    this.setState({ checked });\r\n    if (this.props.onChange) this.props.onChange(checked);\r\n  }\r\n\r\n  componentDidUpdate(props) {\r\n    const { checked = false, label } = props;\r\n\r\n    if (this.state.checked !== checked || this.state.label !== label) {\r\n      this.setState({\r\n        checked,\r\n        label,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let checkbox;\r\n    if (this.state.checked) {\r\n      checkbox = <span className=\"ohif-checkbox ohif-checked\" />;\r\n    } else {\r\n      checkbox = <span className=\"ohif-checkbox\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"ohif-check-container\">\r\n        <form>\r\n          <label className=\"ohif-check-label\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={this.state.checked}\r\n              onChange={this.handleChange.bind(this)}\r\n            />\r\n            {checkbox}\r\n            {this.state.label}\r\n          </label>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import './CineDialog.styl';\r\n\r\nimport React, { PureComponent } from 'react';\r\nimport { withTranslation } from '../../contextProviders';\r\nimport { Icon } from './../../elements/Icon';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass CineDialog extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      cineFrameRate: props.cineFrameRate,\r\n      isPlaying: props.isPlaying,\r\n    };\r\n  }\r\n\r\n  static propTypes = {\r\n    /** Minimum value for range slider */\r\n    cineMinFrameRate: PropTypes.number.isRequired,\r\n    /** Maximum value for range slider */\r\n    cineMaxFrameRate: PropTypes.number.isRequired,\r\n    /** Increment range slider can \"step\" in either direction. */\r\n    cineStepFrameRate: PropTypes.number.isRequired,\r\n    cineFrameRate: PropTypes.number.isRequired,\r\n    /** 'True' if playing, 'False' if paused. */\r\n    isPlaying: PropTypes.bool.isRequired,\r\n    onPlayPauseChanged: PropTypes.func,\r\n    onFrameRateChanged: PropTypes.func,\r\n    onClickNextButton: PropTypes.func,\r\n    onClickBackButton: PropTypes.func,\r\n    onClickSkipToStart: PropTypes.func,\r\n    onClickSkipToEnd: PropTypes.func,\r\n    /** i18next translation function */\r\n    t: PropTypes.func.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    cineMinFrameRate: 1,\r\n    cineMaxFrameRate: 90,\r\n    cineStepFrameRate: 1,\r\n    cineFrameRate: 24,\r\n    isPlaying: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    // TODO: Not sure if we should just switch this to a stateless\r\n    // fully-controlled component instead\r\n    if (\r\n      this.props.isPlaying !== prevProps.isPlaying ||\r\n      this.props.isPlaying !== this.state.isPlaying\r\n    ) {\r\n      this.setState({\r\n        isPlaying: this.props.isPlaying,\r\n      });\r\n    }\r\n\r\n    if (\r\n      this.props.cineFrameRate !== prevProps.cineFrameRate ||\r\n      this.props.cineFrameRate !== this.state.cineFrameRate\r\n    ) {\r\n      this.setState({\r\n        cineFrameRate: this.props.cineFrameRate,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleInputChange = event => {\r\n    const target = event.target;\r\n\r\n    let value = target.value;\r\n\r\n    if (target.type === 'range') {\r\n      value = parseFloat(target.value);\r\n    }\r\n\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n\r\n    if (name === 'cineFrameRate' && this.props.onFrameRateChanged) {\r\n      this.props.onFrameRateChanged(parseFloat(value));\r\n    }\r\n  };\r\n\r\n  onClickPlayPause = () => {\r\n    const value = !this.state.isPlaying;\r\n\r\n    this.setState({\r\n      isPlaying: value,\r\n    });\r\n\r\n    if (this.props.onPlayPauseChanged) {\r\n      this.props.onPlayPauseChanged(value);\r\n    }\r\n  };\r\n\r\n  onClickNextButton = event => {\r\n    if (this.props.onClickNextButton) {\r\n      this.props.onClickNextButton(event);\r\n    }\r\n  };\r\n\r\n  onClickBackButton = event => {\r\n    if (this.props.onClickBackButton) {\r\n      this.props.onClickBackButton(event);\r\n    }\r\n  };\r\n\r\n  onClickSkipToStart = event => {\r\n    if (this.props.onClickSkipToStart) {\r\n      this.props.onClickSkipToStart(event);\r\n    }\r\n  };\r\n\r\n  onClickSkipToEnd = event => {\r\n    if (this.props.onClickSkipToEnd) {\r\n      this.props.onClickSkipToEnd(event);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { t } = this.props;\r\n    return (\r\n      <div className=\"CineDialog\">\r\n        <div className=\"noselect double-row-style\">\r\n          <div className=\"cine-controls\">\r\n            <div className=\"btn-group\">\r\n              <button\r\n                title={t('Skip to first image')}\r\n                className=\"btn\"\r\n                data-toggle=\"tooltip\"\r\n                onClick={this.onClickSkipToStart}\r\n              >\r\n                <Icon name=\"fast-backward\" />\r\n              </button>\r\n              <button\r\n                title={t('Previous image')}\r\n                className=\"btn\"\r\n                data-toggle=\"tooltip\"\r\n                onClick={this.onClickBackButton}\r\n              >\r\n                <Icon name=\"step-backward\" />\r\n              </button>\r\n              <button\r\n                title={t('Play / Stop')}\r\n                className=\"btn\"\r\n                data-toggle=\"tooltip\"\r\n                onClick={this.onClickPlayPause}\r\n              >\r\n                <Icon name={this.state.isPlaying ? 'stop' : 'play'} />\r\n              </button>\r\n              <button\r\n                title={t('Next image')}\r\n                className=\"btn\"\r\n                data-toggle=\"tooltip\"\r\n                onClick={this.onClickNextButton}\r\n              >\r\n                <Icon name=\"step-forward\" />\r\n              </button>\r\n              <button\r\n                title={t('Skip to last image')}\r\n                className=\"btn\"\r\n                data-toggle=\"tooltip\"\r\n                onClick={this.onClickSkipToEnd}\r\n              >\r\n                <Icon name=\"fast-forward\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"cine-options\">\r\n            <div className=\"fps-section\">\r\n              <input\r\n                type=\"range\"\r\n                name=\"cineFrameRate\"\r\n                min={this.props.cineMinFrameRate}\r\n                max={this.props.cineMaxFrameRate}\r\n                step={this.props.cineStepFrameRate}\r\n                value={this.state.cineFrameRate}\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </div>\r\n            <span className=\"fps\">\r\n              {this.state.cineFrameRate.toFixed(1)} {t('fps')}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst connectedComponent = withTranslation('CineDialog')(CineDialog);\r\nexport { connectedComponent as CineDialog };\r\nexport default connectedComponent;\r\n","import React, {\r\n  useRef,\r\n  useCallback,\r\n  useEffect,\r\n  useState,\r\n  createRef,\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport './ViewportDownloadForm.styl';\r\nimport { TextInput, Select, Icon } from '@ohif/ui';\r\nimport classnames from 'classnames';\r\n\r\nconst FILE_TYPE_OPTIONS = [\r\n  {\r\n    key: 'jpg',\r\n    value: 'jpg',\r\n  },\r\n  {\r\n    key: 'png',\r\n    value: 'png',\r\n  },\r\n];\r\n\r\nconst DEFAULT_FILENAME = 'image';\r\nconst REFRESH_VIEWPORT_TIMEOUT = 1000;\r\n\r\nconst ViewportDownloadForm = ({\r\n  activeViewport,\r\n  onClose,\r\n  updateViewportPreview,\r\n  enableViewport,\r\n  disableViewport,\r\n  toggleAnnotations,\r\n  loadImage,\r\n  downloadBlob,\r\n  defaultSize,\r\n  minimumSize,\r\n  maximumSize,\r\n  canvasClass,\r\n}) => {\r\n  const [t] = useTranslation('ViewportDownloadForm');\r\n\r\n  const [filename, setFilename] = useState(DEFAULT_FILENAME);\r\n  const [fileType, setFileType] = useState('jpg');\r\n\r\n  const [dimensions, setDimensions] = useState({\r\n    width: defaultSize,\r\n    height: defaultSize,\r\n  });\r\n\r\n  const [showAnnotations, setShowAnnotations] = useState(true);\r\n\r\n  const [keepAspect, setKeepAspect] = useState(true);\r\n  const [aspectMultiplier, setAspectMultiplier] = useState({\r\n    width: 1,\r\n    height: 1,\r\n  });\r\n\r\n  const [viewportElement, setViewportElement] = useState();\r\n  const [viewportElementDimensions, setViewportElementDimensions] = useState({\r\n    width: defaultSize,\r\n    height: defaultSize,\r\n  });\r\n\r\n  const [downloadCanvas, setDownloadCanvas] = useState({\r\n    ref: createRef(),\r\n    width: defaultSize,\r\n    height: defaultSize,\r\n  });\r\n\r\n  const [viewportPreview, setViewportPreview] = useState({\r\n    src: null,\r\n    width: defaultSize,\r\n    height: defaultSize,\r\n  });\r\n\r\n  const [error, setError] = useState({\r\n    width: false,\r\n    height: false,\r\n    filename: false,\r\n  });\r\n\r\n  const hasError = Object.values(error).includes(true);\r\n\r\n  const refreshViewport = useRef(null);\r\n\r\n  const downloadImage = () => {\r\n    downloadBlob(\r\n      filename || DEFAULT_FILENAME,\r\n      fileType,\r\n      viewportElement,\r\n      downloadCanvas.ref.current\r\n    );\r\n  };\r\n\r\n  /**\r\n   * @param {object} event - Input change event\r\n   * @param {string} dimension - \"height\" | \"width\"\r\n   */\r\n  const onDimensionsChange = (event, dimension) => {\r\n    const oppositeDimension = dimension === 'height' ? 'width' : 'height';\r\n    const sanitizedTargetValue = event.target.value.replace(/\\D/, '');\r\n    const isEmpty = sanitizedTargetValue === '';\r\n    const newDimensions = { ...dimensions };\r\n    const updatedDimension = isEmpty\r\n      ? ''\r\n      : Math.min(sanitizedTargetValue, maximumSize);\r\n\r\n    if (updatedDimension === dimensions[dimension]) {\r\n      return;\r\n    }\r\n\r\n    newDimensions[dimension] = updatedDimension;\r\n\r\n    if (keepAspect && newDimensions[oppositeDimension] !== '') {\r\n      newDimensions[oppositeDimension] = Math.round(\r\n        newDimensions[dimension] * aspectMultiplier[oppositeDimension]\r\n      );\r\n    }\r\n\r\n    // In current code, keepAspect is always `true`\r\n    // And we always start w/ a square width/height\r\n    setDimensions(newDimensions);\r\n\r\n    // Only update if value is non-empty\r\n    if (!isEmpty) {\r\n      setViewportElementDimensions(newDimensions);\r\n      setDownloadCanvas(state => ({\r\n        ...state,\r\n        ...newDimensions,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const error_messages = {\r\n    width: t('minWidthError'),\r\n    height: t('minHeightError'),\r\n    filename: t('emptyFilenameError'),\r\n  };\r\n\r\n  const renderErrorHandler = errorType => {\r\n    if (!error[errorType]) {\r\n      return null;\r\n    }\r\n\r\n    return <div className=\"input-error\">{error_messages[errorType]}</div>;\r\n  };\r\n\r\n  const onKeepAspectToggle = () => {\r\n    const { width, height } = dimensions;\r\n    const aspectMultiplier = { ...aspectMultiplier };\r\n    if (!keepAspect) {\r\n      const base = Math.min(width, height);\r\n      aspectMultiplier.width = width / base;\r\n      aspectMultiplier.height = height / base;\r\n      setAspectMultiplier(aspectMultiplier);\r\n    }\r\n\r\n    setKeepAspect(!keepAspect);\r\n  };\r\n\r\n  const validSize = value => (value >= minimumSize ? value : minimumSize);\r\n  const loadAndUpdateViewports = useCallback(async () => {\r\n    const { width: scaledWidth, height: scaledHeight } = await loadImage(\r\n      activeViewport,\r\n      viewportElement,\r\n      dimensions.width,\r\n      dimensions.height\r\n    );\r\n\r\n    toggleAnnotations(showAnnotations, viewportElement);\r\n\r\n    const scaledDimensions = {\r\n      height: validSize(scaledHeight),\r\n      width: validSize(scaledWidth),\r\n    };\r\n\r\n    setViewportElementDimensions(scaledDimensions);\r\n    setDownloadCanvas(state => ({\r\n      ...state,\r\n      ...scaledDimensions,\r\n    }));\r\n\r\n    const {\r\n      dataUrl,\r\n      width: viewportElementWidth,\r\n      height: viewportElementHeight,\r\n    } = await updateViewportPreview(\r\n      viewportElement,\r\n      downloadCanvas.ref.current,\r\n      fileType\r\n    );\r\n\r\n    setViewportPreview(state => ({\r\n      ...state,\r\n      src: dataUrl,\r\n      width: validSize(viewportElementWidth),\r\n      height: validSize(viewportElementHeight),\r\n    }));\r\n  }, [\r\n    activeViewport,\r\n    viewportElement,\r\n    showAnnotations,\r\n    loadImage,\r\n    toggleAnnotations,\r\n    updateViewportPreview,\r\n    fileType,\r\n    downloadCanvas.ref,\r\n    minimumSize,\r\n    maximumSize,\r\n    viewportElementDimensions,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    enableViewport(viewportElement);\r\n\r\n    return () => {\r\n      disableViewport(viewportElement);\r\n    };\r\n  }, [disableViewport, enableViewport, viewportElement]);\r\n\r\n  useEffect(() => {\r\n    if (refreshViewport.current !== null) {\r\n      clearTimeout(refreshViewport.current);\r\n    }\r\n\r\n    refreshViewport.current = setTimeout(() => {\r\n      refreshViewport.current = null;\r\n      loadAndUpdateViewports();\r\n    }, REFRESH_VIEWPORT_TIMEOUT);\r\n  }, [\r\n    activeViewport,\r\n    viewportElement,\r\n    showAnnotations,\r\n    dimensions,\r\n    loadImage,\r\n    toggleAnnotations,\r\n    updateViewportPreview,\r\n    fileType,\r\n    downloadCanvas.ref,\r\n    minimumSize,\r\n    maximumSize,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const { width, height } = dimensions;\r\n    const hasError = {\r\n      width: width < minimumSize,\r\n      height: height < minimumSize,\r\n      filename: !filename,\r\n    };\r\n\r\n    setError({ ...hasError });\r\n  }, [dimensions, filename, minimumSize]);\r\n\r\n  return (\r\n    <div className=\"ViewportDownloadForm\">\r\n      <div className=\"title\">{t('formTitle')}</div>\r\n\r\n      <div className=\"file-info-container\" data-cy=\"file-info-container\">\r\n        <div className=\"dimension-wrapper\">\r\n          <div className=\"dimensions\">\r\n            <div className=\"width\">\r\n              <TextInput\r\n                type=\"number\"\r\n                min={minimumSize}\r\n                max={maximumSize}\r\n                value={dimensions.width}\r\n                label={t('imageWidth')}\r\n                onChange={evt => onDimensionsChange(evt, 'width')}\r\n                data-cy=\"image-width\"\r\n              />\r\n              {renderErrorHandler('width')}\r\n            </div>\r\n            <div className=\"height\">\r\n              <TextInput\r\n                type=\"number\"\r\n                min={minimumSize}\r\n                max={maximumSize}\r\n                value={dimensions.height}\r\n                label={t('imageHeight')}\r\n                onChange={evt => onDimensionsChange(evt, 'height')}\r\n                data-cy=\"image-height\"\r\n              />\r\n              {renderErrorHandler('height')}\r\n            </div>\r\n          </div>\r\n          <div className=\"keep-aspect-wrapper\">\r\n            <button\r\n              id=\"keep-aspect\"\r\n              className={classnames(\r\n                'form-button btn',\r\n                keepAspect ? 'active' : ''\r\n              )}\r\n              data-cy=\"keep-aspect\"\r\n              alt={t('keepAspectRatio')}\r\n              onClick={onKeepAspectToggle}\r\n            >\r\n              <Icon\r\n                name={keepAspect ? 'link' : 'unlink'}\r\n                alt={keepAspect ? 'Dismiss Aspect' : 'Keep Aspect'}\r\n              />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col\">\r\n          <div className=\"file-name\">\r\n            <TextInput\r\n              type=\"text\"\r\n              data-cy=\"file-name\"\r\n              value={filename}\r\n              onChange={event => setFilename(event.target.value)}\r\n              label={t('filename')}\r\n              id=\"file-name\"\r\n            />\r\n            {renderErrorHandler('filename')}\r\n          </div>\r\n          <div className=\"file-type\">\r\n            <Select\r\n              value={fileType}\r\n              data-cy=\"file-type\"\r\n              onChange={event => setFileType(event.target.value)}\r\n              options={FILE_TYPE_OPTIONS}\r\n              label={t('fileType')}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col\">\r\n          <div className=\"show-annotations\">\r\n            <label htmlFor=\"show-annotations\" className=\"form-check-label\">\r\n              <input\r\n                id=\"show-annotations\"\r\n                data-cy=\"show-annotations\"\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n                checked={showAnnotations}\r\n                onChange={event => setShowAnnotations(event.target.checked)}\r\n              />\r\n              {t('showAnnotations')}\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          height: viewportElementDimensions.height,\r\n          width: viewportElementDimensions.width,\r\n          position: 'absolute',\r\n          left: '9999px',\r\n        }}\r\n        ref={ref => setViewportElement(ref)}\r\n      >\r\n        <canvas\r\n          className={canvasClass}\r\n          style={{\r\n            height: downloadCanvas.height,\r\n            width: downloadCanvas.width,\r\n            display: 'block',\r\n          }}\r\n          width={downloadCanvas.width}\r\n          height={downloadCanvas.height}\r\n          ref={downloadCanvas.ref}\r\n        ></canvas>\r\n      </div>\r\n\r\n      {viewportPreview.src ? (\r\n        <div className=\"preview\" data-cy=\"image-preview\">\r\n          <div className=\"preview-header\"> {t('imagePreview')}</div>\r\n          <img\r\n            className=\"viewport-preview\"\r\n            src={viewportPreview.src}\r\n            alt={t('imagePreview')}\r\n            data-cy=\"image-preview\"\r\n            data-cy=\"viewport-preview-img\"\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div className=\"loading-image\">\r\n          <Icon name=\"circle-notch\" className=\"icon-spin\" />\r\n          {t('loadingPreview')}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"actions\">\r\n        <div className=\"action-cancel\">\r\n          <button\r\n            type=\"button\"\r\n            data-cy=\"cancel-btn\"\r\n            className=\"btn btn-danger\"\r\n            onClick={onClose}\r\n          >\r\n            {t('Buttons:Cancel')}\r\n          </button>\r\n        </div>\r\n        <div className=\"action-save\">\r\n          <button\r\n            disabled={hasError}\r\n            onClick={downloadImage}\r\n            className=\"btn btn-primary\"\r\n            data-cy=\"download-btn\"\r\n          >\r\n            {t('Buttons:Download')}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nViewportDownloadForm.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  activeViewport: PropTypes.object,\r\n  updateViewportPreview: PropTypes.func.isRequired,\r\n  enableViewport: PropTypes.func.isRequired,\r\n  disableViewport: PropTypes.func.isRequired,\r\n  toggleAnnotations: PropTypes.func.isRequired,\r\n  loadImage: PropTypes.func.isRequired,\r\n  downloadBlob: PropTypes.func.isRequired,\r\n  /** A default width & height, between the minimum and maximum size */\r\n  defaultSize: PropTypes.number.isRequired,\r\n  minimumSize: PropTypes.number.isRequired,\r\n  maximumSize: PropTypes.number.isRequired,\r\n  canvasClass: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ViewportDownloadForm;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './StudiesItem.styl';\r\n\r\nexport class StudiesItem extends Component {\r\n  static propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    studyData: PropTypes.object.isRequired,\r\n    active: PropTypes.bool,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      StudyDate,\r\n      StudyDescription,\r\n      modalities,\r\n      studyAvailable,\r\n    } = this.props.studyData;\r\n    const activeClass = this.props.active ? ' active' : '';\r\n    const hasDescriptionAndDate = StudyDate && StudyDescription;\r\n    return (\r\n      <div\r\n        className={`studyBrowseItem${activeClass}`}\r\n        onClick={this.props.onClick}\r\n      >\r\n        <div className=\"studyItemBox\">\r\n          <div className=\"studyModality\">\r\n            <div\r\n              className=\"studyModalityText\"\r\n              style={this.getModalitiesStyle()}\r\n            >\r\n              {modalities}\r\n            </div>\r\n          </div>\r\n          <div className=\"studyText\">\r\n            {hasDescriptionAndDate ? (\r\n              <React.Fragment>\r\n                <div className=\"studyDate\">{StudyDate}</div>\r\n                <div className=\"studyDescription\">{StudyDescription}</div>\r\n              </React.Fragment>\r\n            ) : (\r\n              <div className=\"studyAvailability\">\r\n                {studyAvailable ? (\r\n                  <React.Fragment>N/A</React.Fragment>\r\n                ) : (\r\n                  <React.Fragment>Click to load</React.Fragment>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getModalitiesStyle = () => {\r\n    return {};\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { StudiesItem } from './StudiesItem.js';\r\nimport './StudiesList.styl';\r\n\r\nexport class StudiesList extends Component {\r\n  static propTypes = {\r\n    class: PropTypes.string,\r\n    studyListData: PropTypes.array.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    activeStudyInstanceUID: PropTypes.string,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={`studiesList ${this.props.class}`}>\r\n        {this.getBrowserItems()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getBrowserItems = () => {\r\n    return this.props.studyListData.map((studyData, index) => {\r\n      return (\r\n        <StudiesItem\r\n          key={index}\r\n          studyData={studyData}\r\n          active={\r\n            studyData.StudyInstanceUID === this.props.activeStudyInstanceUID\r\n          }\r\n          onClick={event => this.props.onClick(studyData)}\r\n        />\r\n      );\r\n    });\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Thumbnail } from './../studyBrowser';\r\nimport './SeriesList.styl';\r\n\r\nexport class SeriesList extends Component {\r\n  static propTypes = {\r\n    seriesItems: PropTypes.array.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    activeDisplaySetInstanceUID: PropTypes.string,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"study-browser-series clearfix thumbnails-wrapper\">\r\n          <div className=\"study-series-container\">{this.getSeriesItems()}</div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  getSeriesItems = () => {\r\n    return this.props.seriesItems.map((seriesData, index) => {\r\n      return (\r\n        <Thumbnail\r\n          key={seriesData.displaySetInstanceUID}\r\n          id={`series_thumb_${index}`}\r\n          {...seriesData}\r\n          active={\r\n            seriesData.displaySetInstanceUID ===\r\n            this.props.activeDisplaySetInstanceUID\r\n          }\r\n          onClick={() => this.props.onClick(seriesData)}\r\n        />\r\n      );\r\n    });\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { StudiesList } from './StudiesList.js';\r\nimport { ScrollableArea } from './../../ScrollableArea/ScrollableArea.js';\r\nimport { SeriesList } from './SeriesList.js';\r\n\r\nimport './QuickSwitch.styl';\r\n\r\nexport class QuickSwitch extends Component {\r\n  static propTypes = {\r\n    side: PropTypes.string,\r\n    studyListData: PropTypes.array.isRequired,\r\n    onSeriesSelected: PropTypes.func.isRequired,\r\n    seriesData: PropTypes.array,\r\n    onStudySelected: PropTypes.func,\r\n    activeStudyInstanceUID: PropTypes.string,\r\n    activeDisplaySetInstanceUID: PropTypes.string,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      seriesQuickSwitchOpen: false,\r\n      sideClass: this.props.side || '',\r\n      activeStudyInstanceUID: this.props.activeStudyInstanceUID,\r\n      activeDisplaySetInstanceUID: this.props.activeDisplaySetInstanceUID,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const props = this.props;\r\n\r\n    if (props.activeStudyInstanceUID !== prevProps.activeStudyInstanceUID) {\r\n      this.setState({\r\n        activeStudyInstanceUID: props.activeStudyInstanceUID,\r\n      });\r\n    }\r\n\r\n    if (\r\n      props.activeDisplaySetInstanceUID !==\r\n      prevProps.activeDisplaySetInstanceUID\r\n    ) {\r\n      this.setState({\r\n        activeDisplaySetInstanceUID: props.activeDisplaySetInstanceUID,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const quickSwitchClass = this.state.seriesQuickSwitchOpen\r\n      ? 'series-triggered'\r\n      : '';\r\n\r\n    return (\r\n      <div\r\n        className={`series-quick-switch clearfix noselect ${this.state.sideClass} ${quickSwitchClass}`}\r\n        onMouseLeave={this.hideSeriesSwitch}\r\n      >\r\n        <div className=\"series-switch\" onMouseEnter={this.showSeriesSwitch}>\r\n          <div className=\"title-label\">Series</div>\r\n          <div className=\"series-box\">\r\n            {this.getSmallListItems()}\r\n            <ScrollableArea scrollStep={201} class=\"series-browser\">\r\n              <SeriesList\r\n                seriesItems={this.getSeriesItems()}\r\n                onClick={this.onSeriesClick}\r\n                activeDisplaySetInstanceUID={\r\n                  this.state.activeDisplaySetInstanceUID\r\n                }\r\n              />\r\n            </ScrollableArea>\r\n          </div>\r\n        </div>\r\n        <div className=\"study-switch\">\r\n          <div className=\"title-label\">Study</div>\r\n          <div className=\"study-box\">\r\n            <ScrollableArea scrollStep={91} class=\"study-browser\">\r\n              <StudiesList\r\n                studyListData={this.props.studyListData}\r\n                onClick={this.onStudyClick}\r\n                activeStudyInstanceUID={this.state.activeStudyInstanceUID}\r\n              />\r\n            </ScrollableArea>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getSeriesItems = () => {\r\n    let seriesData;\r\n\r\n    if (this.props.seriesData) {\r\n      seriesData = this.props.seriesData;\r\n    } else if (this.state.activeStudyInstanceUID) {\r\n      const study = this.props.studyListData.find(\r\n        study => study.StudyInstanceUID === this.state.activeStudyInstanceUID\r\n      );\r\n\r\n      seriesData = study.thumbnails;\r\n    } else {\r\n      seriesData = this.props.studyListData[0].thumbnails;\r\n    }\r\n\r\n    return seriesData || [];\r\n  };\r\n\r\n  getSmallListItems = () => {\r\n    const seriesItems = this.getSeriesItems() || [];\r\n    return seriesItems.map((seriesData, index) => {\r\n      const active =\r\n        seriesData.displaySetInstanceUID ===\r\n        this.state.activeDisplaySetInstanceUID;\r\n      return (\r\n        <div key={index} className={`series-item ${active ? 'active' : ''}`} />\r\n      );\r\n    });\r\n  };\r\n\r\n  onStudyClick = studyDataSelected => {\r\n    if (this.props.onStudySelected) {\r\n      this.props.onStudySelected(studyDataSelected);\r\n    }\r\n    this.setState({\r\n      activeStudyInstanceUID: studyDataSelected.StudyInstanceUID,\r\n      seriesQuickSwitchOpen: true,\r\n    });\r\n  };\r\n\r\n  onSeriesClick = seriesDataSelected => {\r\n    this.setState({\r\n      activeDisplaySetInstanceUID: seriesDataSelected.displaySetInstanceUID,\r\n    });\r\n\r\n    this.props.onSeriesSelected(seriesDataSelected);\r\n  };\r\n\r\n  showSeriesSwitch = () => {\r\n    this.setState({\r\n      seriesQuickSwitchOpen: true,\r\n    });\r\n  };\r\n\r\n  hideSeriesSwitch = () => {\r\n    this.setState({\r\n      seriesQuickSwitchOpen: false,\r\n    });\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport { Icon } from './../../elements/Icon';\r\nimport './RoundedButtonGroup.css';\r\n\r\n// TODO: Rename to Toggle?\r\nclass RoundedButtonGroup extends Component {\r\n  static className = 'RoundedButtonGroup';\r\n\r\n  static propTypes = {\r\n    options: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        value: PropTypes.any,\r\n        label: PropTypes.string,\r\n        stateEvent: PropTypes.string,\r\n        icon: PropTypes.oneOfType([\r\n          PropTypes.string,\r\n          PropTypes.shape({\r\n            name: PropTypes.string.isRequired,\r\n          }),\r\n        ]),\r\n      })\r\n    ),\r\n    value: PropTypes.string,\r\n    onValueChanged: PropTypes.func,\r\n  };\r\n\r\n  static defaultProps = {\r\n    options: [],\r\n    value: null,\r\n  };\r\n\r\n  state = {\r\n    badgeNumbers: [],\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.onStateEvent = this.onStateEvent.bind(this);\r\n  }\r\n\r\n  onClickOption = value => {\r\n    let newValue = value;\r\n    if (this.props.value === value) {\r\n      newValue = null;\r\n    }\r\n\r\n    if (this.props.onValueChanged) {\r\n      this.props.onValueChanged(newValue);\r\n    }\r\n  };\r\n\r\n  onStateEvent(event) {\r\n    const optionIndex = this.props.options.findIndex(\r\n      o => o.value === event.detail.target\r\n    );\r\n    if (optionIndex > -1) {\r\n      const badgeNumbers = this.state.badgeNumbers;\r\n      badgeNumbers[optionIndex] = event.detail.badgeNumber;\r\n      this.setState({ badgeNumbers });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.options.forEach(option => {\r\n      if (option.stateEvent) {\r\n        document.addEventListener(option.stateEvent, this.onStateEvent);\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    this.props.options.forEach((option, index) => {\r\n      if (\r\n        option.stateEvent &&\r\n        option.stateEvent !==\r\n          (prevProps.options[index]\r\n            ? prevProps.options[index].stateEvent\r\n            : null)\r\n      ) {\r\n        document.removeEventListener(option.stateEvent, this.onStateEvent);\r\n        document.addEventListener(option.stateEvent, this.onStateEvent);\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.options.forEach(option => {\r\n      if (option.stateEvent) {\r\n        document.removeEventListener(option.stateEvent, this.onStateEvent);\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let className = classnames(\r\n      RoundedButtonGroup.className,\r\n      'clearfix center-table'\r\n    );\r\n\r\n    const buttons = this.props.options.map((option, index) => {\r\n      const className = classnames({\r\n        roundedButtonWrapper: true,\r\n        noselect: true,\r\n        active: this.props.value === option.value,\r\n      });\r\n\r\n      const optionText = option.label && <span>{option.label}</span>;\r\n      const iconProps =\r\n        typeof option.icon === 'string' ? { name: option.icon } : option.icon;\r\n\r\n      const bottomLabel = option.bottomLabel && (\r\n        <div className=\"bottomLabel\">{option.bottomLabel}</div>\r\n      );\r\n\r\n      let badgeNumber = this.state.badgeNumbers[index];\r\n      const badgeNumberOverflow = String(badgeNumber).length > 2;\r\n      badgeNumber = badgeNumber\r\n        ? badgeNumberOverflow\r\n          ? 99\r\n          : badgeNumber\r\n        : null;\r\n\r\n      return (\r\n        <div\r\n          key={index}\r\n          className={className}\r\n          onClick={() => this.onClickOption(option.value)}\r\n        >\r\n          <div className=\"roundedButton\">\r\n            {optionText}\r\n            {badgeNumber && (\r\n              <div className=\"badgeNumber-container\">\r\n                <span className=\"badgeNumber\">\r\n                  {badgeNumber}\r\n                  {badgeNumberOverflow && '+'}\r\n                </span>\r\n              </div>\r\n            )}\r\n            {iconProps && <Icon {...iconProps} />}\r\n          </div>\r\n          {bottomLabel}\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return <div className={className}>{buttons}</div>;\r\n  }\r\n}\r\n\r\nexport { RoundedButtonGroup };\r\n","import { Component } from 'react';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class InputRadio extends Component {\r\n  static propTypes = {\r\n    value: PropTypes.string,\r\n    label: PropTypes.string.isRequired,\r\n    itemData: PropTypes.object.isRequired,\r\n    labelClass: PropTypes.string,\r\n    id: PropTypes.string.isRequired,\r\n    onSelected: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const labelClass = this.props.labelClass ? this.props.labelClass : '';\r\n    return (\r\n      <label\r\n        className={'wrapperLabel radioLabel ' + labelClass}\r\n        htmlFor={this.props.id}\r\n      >\r\n        <input\r\n          type=\"radio\"\r\n          id={this.props.id}\r\n          className=\"radioInput\"\r\n          value={this.props.value}\r\n          onChange={this.onSelected}\r\n        />\r\n        <span className=\"wrapperText\">{this.props.label}</span>\r\n      </label>\r\n    );\r\n  }\r\n\r\n  onSelected = evt => {\r\n    this.props.onSelected(evt, this.props.itemData);\r\n  };\r\n}\r\n","import { Component } from 'react';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon } from './../../elements/Icon';\r\n\r\nexport default class SelectTreeBreadcrumb extends Component {\r\n  static propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onSelected: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"selectTreeBreadcrumb\">\r\n        <label\r\n          className=\"wrapperLabel radioLabel\"\r\n          htmlFor=\"selectTreeBreadcrumb\"\r\n        >\r\n          <input\r\n            type=\"radio\"\r\n            id=\"selectTreeBreadcrumb\"\r\n            className=\"treeNode radioInput\"\r\n            value={this.props.value}\r\n            onChange={this.props.onSelected}\r\n          />\r\n          <span className=\"wrapperText\">\r\n            <span className=\"backIcon\">\r\n              <Icon name=\"fast-backward\" />\r\n            </span>\r\n            {this.props.label}\r\n          </span>\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import './SelectTree.styl';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport { Icon } from './../../elements/Icon';\r\nimport InputRadio from './InputRadio.js';\r\nimport PropTypes from 'prop-types';\r\nimport SelectTreeBreadcrumb from './SelectTreeBreadcrumb.js';\r\nimport cloneDeep from 'lodash.clonedeep';\r\n\r\nexport class SelectTree extends Component {\r\n  static propTypes = {\r\n    autoFocus: PropTypes.bool,\r\n    searchEnabled: PropTypes.bool,\r\n    selectTreeFirstTitle: PropTypes.string,\r\n    selectTreeSecondTitle: PropTypes.string,\r\n    /** Called when 'componentDidUpdate' is triggered */\r\n    onComponentChange: PropTypes.func,\r\n    /** [{ label, value, items[]}] - An array of items than can be expanded to show child items */\r\n    items: PropTypes.array.isRequired,\r\n    /** fn(evt, item) - Called when a child item is selected; receives event and selected item */\r\n    onSelected: PropTypes.func.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    searchEnabled: true,\r\n    autoFocus: true,\r\n    selectTreeFirstTitle: 'First Level itens',\r\n    items: [],\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      searchTerm: null,\r\n      currentNode: null,\r\n      value: null,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const treeItems = this.getTreeItems();\r\n\r\n    return (\r\n      <div className=\"selectTree selectTreeRoot\">\r\n        <div className=\"treeContent\">\r\n          {this.headerItem()}\r\n          <div className=\"treeOptions\">\r\n            {this.state.currentNode && (\r\n              <SelectTreeBreadcrumb\r\n                onSelected={this.onBreadcrumbSelected}\r\n                label={this.state.currentNode.label}\r\n                value={this.state.currentNode.value}\r\n              />\r\n            )}\r\n            <div className=\"treeInputsWrapper\">\r\n              <div className=\"treeInputs\">{treeItems}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidUpdate = () => {\r\n    if (this.props.onComponentChange) {\r\n      this.props.onComponentChange();\r\n    }\r\n  };\r\n\r\n  isLeafSelected = item => item && !Array.isArray(item.items);\r\n\r\n  getLabelClass = item => {\r\n    let labelClass = 'treeLeaf';\r\n    if (this.state.searchTerm || Array.isArray(item.items)) {\r\n      labelClass = 'treeNode';\r\n    }\r\n    return labelClass;\r\n  };\r\n\r\n  filterItems() {\r\n    const filteredItems = [];\r\n    const rawItems = cloneDeep(this.props.items);\r\n    rawItems.forEach(item => {\r\n      if (Array.isArray(item.items)) {\r\n        item.items.forEach(item => {\r\n          const label = item.label.toLowerCase();\r\n          const searchTerm = this.state.searchTerm.toLowerCase();\r\n          if (label.indexOf(searchTerm) !== -1) {\r\n            filteredItems.push(item);\r\n          }\r\n        });\r\n      } else {\r\n        const label = item.label.toLowerCase();\r\n        const searchTerm = this.state.searchTerm.toLowerCase();\r\n        if (label.indexOf(searchTerm) !== -1) {\r\n          filteredItems.push(item);\r\n        }\r\n      }\r\n    });\r\n    return filteredItems;\r\n  }\r\n\r\n  getTreeItems() {\r\n    const storageKey = 'SelectTree';\r\n    let treeItems;\r\n\r\n    if (this.state.searchTerm) {\r\n      treeItems = this.filterItems();\r\n    } else if (this.state.currentNode) {\r\n      treeItems = cloneDeep(this.state.currentNode.items);\r\n    } else {\r\n      treeItems = cloneDeep(this.props.items);\r\n    }\r\n\r\n    return treeItems.map((item, index) => {\r\n      let itemKey = index;\r\n      if (this.state.currentNode) {\r\n        itemKey += `_${this.state.currentNode.value}`;\r\n      }\r\n      return (\r\n        <InputRadio\r\n          key={itemKey}\r\n          id={`${storageKey}_${item.value}`}\r\n          name={index}\r\n          itemData={item}\r\n          value={item.value}\r\n          label={item.label}\r\n          labelClass={this.getLabelClass(item)}\r\n          onSelected={this.onSelected}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  headerItem = () => {\r\n    let title = this.props.selectTreeFirstTitle;\r\n    if (this.state.currentNode && this.props.selectTreeSecondTitle) {\r\n      title = this.props.selectTreeSecondTitle;\r\n    }\r\n\r\n    return (\r\n      <div className=\"wrapperLabel treeHeader\">\r\n        <div className=\"wrapperText\">{title}</div>\r\n        {this.props.searchEnabled && (\r\n          <div className=\"wrapperSearch\">\r\n            <div className=\"searchIcon\">\r\n              <Icon name=\"search\" />\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"searchInput\"\r\n              placeholder=\"Search labels\"\r\n              autoFocus={this.props.autoFocus}\r\n              onChange={this.searchLocations}\r\n              value={this.state.searchTerm ? this.state.searchTerm : ''}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  searchLocations = evt => {\r\n    this.setState({\r\n      currentNode: null,\r\n      searchTerm: evt.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  onSelected = (event, item) => {\r\n    if (this.isLeafSelected(item)) {\r\n      this.setState({\r\n        searchTerm: null,\r\n        currentNode: null,\r\n        value: null,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        currentNode: item,\r\n      });\r\n    }\r\n    return this.props.onSelected(event, item);\r\n  };\r\n\r\n  onBreadcrumbSelected = () => {\r\n    this.setState({\r\n      currentNode: null,\r\n    });\r\n  };\r\n}\r\n","import React, { Component, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TextInput } from '@ohif/ui';\r\n\r\nimport './SimpleDialog.styl';\r\n\r\nclass SimpleDialog extends Component {\r\n  static propTypes = {\r\n    children: PropTypes.node,\r\n    componentRef: PropTypes.any,\r\n    componentStyle: PropTypes.object,\r\n    rootClass: PropTypes.string,\r\n    isOpen: PropTypes.bool,\r\n    headerTitle: PropTypes.string.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onConfirm: PropTypes.func.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    isOpen: true,\r\n    componentStyle: {},\r\n    rootClass: '',\r\n  };\r\n\r\n  static InputDialog = ({ onSubmit, defaultValue, title, label, onClose }) => {\r\n    const [value, setValue] = useState(defaultValue);\r\n\r\n    const onSubmitHandler = () => {\r\n      onSubmit(value);\r\n    };\r\n\r\n    return (\r\n      <div className=\"InputDialog\">\r\n        <SimpleDialog\r\n          headerTitle={title}\r\n          onClose={onClose}\r\n          onConfirm={onSubmitHandler}\r\n        >\r\n          <TextInput\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={event => setValue(event.target.value)}\r\n            label={label}\r\n          />\r\n        </SimpleDialog>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.isOpen && (\r\n          <div\r\n            className={`simpleDialog ${this.props.rootClass} `}\r\n            ref={this.props.componentRef}\r\n            style={this.props.componentStyle}\r\n          >\r\n            <form>\r\n              <div className=\"header\">\r\n                <span className=\"closeBtn\" onClick={this.onClose}>\r\n                  <span className=\"closeIcon\">x</span>\r\n                </span>\r\n                <h4 className=\"title\">{this.props.headerTitle}</h4>\r\n              </div>\r\n              <div className=\"content\">{this.props.children}</div>\r\n              <div className=\"footer\">\r\n                <button className=\"btn btn-default\" onClick={this.onClose}>\r\n                  Cancel\r\n                </button>\r\n                <button className=\"btn btn-primary\" onClick={this.onConfirm}>\r\n                  Confirm\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  onClose = event => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.props.onClose();\r\n  };\r\n\r\n  onConfirm = event => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.props.onConfirm();\r\n  };\r\n}\r\n\r\nexport { SimpleDialog };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Modal from 'react-modal';\r\nimport classNames from 'classnames';\r\n\r\nimport './OHIFModal.styl';\r\n\r\nconst customStyle = {\r\n  overlay: {\r\n    zIndex: 1071,\r\n    backgroundColor: 'rgb(0, 0, 0, 0.5)',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n};\r\n\r\nModal.setAppElement(document.getElementById('root'));\r\n\r\nconst OHIFModal = ({\r\n  className,\r\n  closeButton,\r\n  shouldCloseOnEsc,\r\n  isOpen,\r\n  fullscreen,\r\n  title,\r\n  onClose,\r\n  children,\r\n}) => {\r\n  const renderHeader = () => {\r\n    return (\r\n      title && (\r\n        <div className=\"OHIFModal__header\" data-cy=\"modal-header\">\r\n          <h4>{title}</h4>\r\n          {closeButton && (\r\n            <button data-cy=\"close-button\" onClick={onClose}>\r\n              ×\r\n            </button>\r\n          )}\r\n        </div>\r\n      )\r\n    );\r\n  };\r\n\r\n  const classes = fullscreen\r\n    ? classNames('OHIFModal', className, 'OHIFModal-fullscreen')\r\n    : classNames('OHIFModal', className);\r\n\r\n  return (\r\n    <Modal\r\n      className={classes}\r\n      data-cy=\"modal\"\r\n      shouldCloseOnEsc={shouldCloseOnEsc}\r\n      isOpen={isOpen}\r\n      title={title}\r\n      style={customStyle}\r\n    >\r\n      <>\r\n        {renderHeader()}\r\n        <div className=\"OHIFModal__content\" data-cy=\"modal-content\">\r\n          {children}\r\n        </div>\r\n      </>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nOHIFModal.propTypes = {\r\n  className: PropTypes.string,\r\n  closeButton: PropTypes.bool,\r\n  shouldCloseOnEsc: PropTypes.bool,\r\n  isOpen: PropTypes.bool,\r\n  title: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]).isRequired,\r\n};\r\n\r\nexport default OHIFModal;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport './ContextMenu.css';\r\n\r\nconst ContextMenu = ({ items, onClick }) => {\r\n  return (\r\n    <div className=\"ContextMenu\" onContextMenu={e => e.preventDefault()}>\r\n      <ul>\r\n        {items.map((item, index) => (\r\n          <li key={index}>\r\n            <button className=\"form-action\" onClick={() => onClick(item)}>\r\n              <span key={index}>{item.label}</span>\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nContextMenu.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContextMenu;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon } from '@ohif/ui';\r\n\r\nimport './ErrorPage.css';\r\n\r\nconst ErrorPage = ({ error, title, description, onRetry }) => {\r\n  return (\r\n    <div className=\"ErrorPage\">\r\n      {title && <h3>{title}</h3>}\r\n      <p>{description}</p>\r\n      <Icon\r\n        className=\"retry-icon\"\r\n        name=\"rotate-right\"\r\n        width=\"25px\"\r\n        height=\"25px\"\r\n        onClick={onRetry}\r\n      />\r\n      {error && (\r\n        <div className=\"error-container\">\r\n          <pre>{error.message}</pre>\r\n          <pre>{error.stack}</pre>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nErrorPage.propTypes = {\r\n  error: PropTypes.object,\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  onRetry: PropTypes.func\r\n};\r\n\r\nErrorPage.defaultProps = {\r\n  description: 'Oh snap, something went wrong, please try reloading',\r\n  onRetry: () => window.location.reload()\r\n};\r\n\r\nexport default ErrorPage;\r\n","import ErrorPage from './ErrorPage';\r\nexport default ErrorPage;\r\n","//  If you want to continue using CSS stylesheets and classes...\r\n//  https://github.com/airbnb/react-dates#initialize\r\nimport 'react-dates/initialize';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport './CustomDateRangePicker.css';\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { DateRangePicker } from 'react-dates';\r\nimport moment from 'moment';\r\nimport i18n from '@ohif/i18n';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nfunction CustomDateRangePicker(props) {\r\n  moment.locale(i18n.language); // using i18n in the date picker\r\n\r\n  const { t } = useTranslation('DatePicker');\r\n\r\n  const {\r\n    onDatesChange,\r\n    startDate,\r\n    endDate,\r\n    presets,\r\n    ...dateRangePickerProps\r\n  } = props;\r\n\r\n  const renderDatePresets = () => {\r\n    const { presets } = props;\r\n\r\n    return (\r\n      <div className=\"PresetDateRangePicker_panel\">\r\n        {presets.map(({ text, start, end }) => {\r\n          const isSelected = startDate === start && endDate === end;\r\n\r\n          return (\r\n            <button\r\n              key={text}\r\n              type=\"button\"\r\n              className={`PresetDateRangePicker_button ${\r\n                isSelected ? 'PresetDateRangePicker_button__selected' : ''\r\n              }`}\r\n              onClick={() =>\r\n                onDatesChange({\r\n                  startDate: start,\r\n                  endDate: end,\r\n                  preset: true,\r\n                })\r\n              }\r\n            >\r\n              {text}\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n  const renderMonthElement = ({ month, onMonthSelect, onYearSelect }) => {\r\n    const containerStyle = {\r\n      margin: '0 5px',\r\n    };\r\n\r\n    const renderYearsOptions = () => {\r\n      const yearsRange = 20;\r\n      const options = [];\r\n\r\n      for (let i = 0; i < yearsRange; i++) {\r\n        const year = moment().year() - i;\r\n        options.push(<option value={year}>{year}</option>);\r\n      }\r\n\r\n      return options;\r\n    };\r\n\r\n    renderMonthElement.propTypes = {\r\n      onMonthSelect: PropTypes.func,\r\n      onYearSelect: PropTypes.func,\r\n    };\r\n\r\n    return (\r\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <div style={containerStyle}>\r\n          <select\r\n            className=\"DateRangePicker_select\"\r\n            value={month.month()}\r\n            onChange={e => onMonthSelect(month, e.target.value)}\r\n          >\r\n            {moment.months().map((label, value) => (\r\n              <option key={value} value={value}>\r\n                {label}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div style={containerStyle}>\r\n          {}\r\n          <select\r\n            className=\"DateRangePicker_select\"\r\n            value={month.year()}\r\n            onChange={e => onYearSelect(month, e.target.value)}\r\n          >\r\n            {renderYearsOptions()}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <DateRangePicker\r\n      {...dateRangePickerProps}\r\n      startDate={startDate}\r\n      endDate={endDate}\r\n      renderCalendarInfo={renderDatePresets}\r\n      onDatesChange={onDatesChange}\r\n      renderMonthElement={renderMonthElement}\r\n      startDatePlaceholderText={t('Start Date')}\r\n      endDatePlaceholderText={t('End Date')}\r\n      phrases={{\r\n        closeDatePicker: t('Common:Close'),\r\n        clearDates: t('Clear dates'),\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nCustomDateRangePicker.propTypes = {\r\n  presets: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      text: PropTypes.string,\r\n      start: PropTypes.required,\r\n      end: PropTypes.required,\r\n    })\r\n  ),\r\n  onDatesChange: PropTypes.func.isRequired,\r\n  startDate: PropTypes.instanceOf(Date),\r\n  endDate: PropTypes.instanceOf(Date),\r\n  month: PropTypes.instanceOf(Date),\r\n};\r\n\r\nexport default CustomDateRangePicker;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport { isInclusivelyBeforeDay } from 'react-dates';\r\nimport CustomDateRangePicker from './CustomDateRangePicker.js';\r\nimport { Icon } from './../../elements/Icon';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst getDateEntry = (datePicked, rangeDatePicked) => {\r\n  return rangeDatePicked || datePicked || null;\r\n};\r\n\r\nconst getDateEntryFromRange = (today, numOfDays, edge = 'start') => {\r\n  if (typeof numOfDays !== 'number') {\r\n    return;\r\n  }\r\n\r\n  if (edge === 'end') {\r\n    return today;\r\n  } else {\r\n    today.subtract(numOfDays, 'days');\r\n  }\r\n};\r\n\r\nfunction TableSearchFilter(props) {\r\n  const {\r\n    meta,\r\n    values,\r\n    onSort,\r\n    onValueChange,\r\n    sortFieldName,\r\n    sortDirection,\r\n    // TODO: Rename\r\n    studyListDateFilterNumDays,\r\n  } = props;\r\n\r\n  const { studyDateTo, studyDateFrom } = values || {};\r\n  const [focusedInput, setFocusedInput] = useState(null);\r\n  const { t, ready: translationsAreReady } = useTranslation('Common');\r\n\r\n  const sortIcons = ['sort', 'sort-up', 'sort-down'];\r\n  const sortIconForSortField =\r\n    sortDirection === 'asc' ? sortIcons[1] : sortIcons[2];\r\n\r\n  const today = moment();\r\n  const lastWeek = moment().subtract(7, 'day');\r\n  const lastMonth = moment().subtract(1, 'month');\r\n\r\n  const defaultStartDate = getDateEntryFromRange(\r\n    today,\r\n    studyListDateFilterNumDays,\r\n    'start'\r\n  );\r\n  const defaultEndDate = getDateEntryFromRange(\r\n    today,\r\n    studyListDateFilterNumDays,\r\n    'end'\r\n  );\r\n\r\n  const studyDatePresets = [\r\n    {\r\n      text: t('Today'),\r\n      start: today,\r\n      end: today,\r\n    },\r\n    {\r\n      text: t('Last 7 days'),\r\n      start: lastWeek,\r\n      end: today,\r\n    },\r\n    {\r\n      text: t('Last 30 days'),\r\n      start: lastMonth,\r\n      end: today,\r\n    },\r\n  ];\r\n\r\n  return translationsAreReady\r\n    ? meta.map((field, i) => {\r\n        const { displayText, fieldName, inputType } = field;\r\n        const isSortField = sortFieldName === fieldName;\r\n        const sortIcon = isSortField ? sortIconForSortField : sortIcons[0];\r\n\r\n        return (\r\n          <th key={`${fieldName}-${i}`}>\r\n            <label\r\n              htmlFor={`filter-${fieldName}`}\r\n              onClick={() => onSort(fieldName)}\r\n            >\r\n              {`${displayText}`}\r\n              <Icon name={sortIcon} style={{ fontSize: '12px' }} />\r\n            </label>\r\n            {inputType === 'text' && (\r\n              <input\r\n                type=\"text\"\r\n                id={`filter-${fieldName}`}\r\n                className=\"form-control studylist-search\"\r\n                value={values[fieldName]}\r\n                onChange={e => onValueChange(fieldName, e.target.value)}\r\n              />\r\n            )}\r\n            {inputType === 'date-range' && (\r\n              // https://github.com/airbnb/react-dates\r\n              <CustomDateRangePicker\r\n                // Required\r\n                startDate={getDateEntry(studyDateFrom, defaultStartDate)}\r\n                startDateId=\"start-date\"\r\n                endDate={getDateEntry(studyDateTo, defaultEndDate)}\r\n                endDateId=\"end-date\"\r\n                // TODO: We need a dynamic way to determine which fields values to update\r\n                onDatesChange={({ startDate, endDate, preset = false }) => {\r\n                  onValueChange('studyDateFrom', startDate);\r\n                  onValueChange('studyDateTo', endDate);\r\n                }}\r\n                focusedInput={focusedInput}\r\n                onFocusChange={updatedVal => setFocusedInput(updatedVal)}\r\n                // Optional\r\n                numberOfMonths={1} // For med and small screens? 2 for large?\r\n                showClearDates={true}\r\n                anchorDirection=\"left\"\r\n                presets={studyDatePresets}\r\n                hideKeyboardShortcutsPanel={true}\r\n                isOutsideRange={day => !isInclusivelyBeforeDay(day, moment())}\r\n              />\r\n            )}\r\n          </th>\r\n        );\r\n      })\r\n    : null;\r\n}\r\n\r\nTableSearchFilter.propTypes = {\r\n  meta: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      displayText: PropTypes.string.isRequired,\r\n      fieldName: PropTypes.string.isRequired,\r\n      inputType: PropTypes.oneOf(['text', 'date-range']).isRequired,\r\n      size: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n  values: PropTypes.object.isRequired,\r\n  onSort: PropTypes.func.isRequired,\r\n  sortFieldName: PropTypes.string,\r\n  sortDirection: PropTypes.oneOf([null, 'asc', 'desc']),\r\n};\r\n\r\nTableSearchFilter.defaultProps = {};\r\n\r\nexport { TableSearchFilter };\r\nexport default TableSearchFilter;\r\n","import React from 'react';\r\nimport { Icon } from './../../elements/Icon';\r\n// TODO: useTranslation\r\nimport { withTranslation } from '../../contextProviders';\r\n\r\nfunction StudyListLoadingText({ t: translate }) {\r\n  return (\r\n    <div className=\"loading-text\">\r\n      {translate('Loading')}... <Icon name=\"circle-notch\" animation=\"pulse\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst connectedComponent = withTranslation('StudyListLoadingText')(\r\n  StudyListLoadingText\r\n);\r\n\r\nexport { connectedComponent as StudyListLoadingText };\r\n","import './StudyList.styl';\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport TableSearchFilter from './TableSearchFilter.js';\r\nimport PropTypes from 'prop-types';\r\nimport { StudyListLoadingText } from './StudyListLoadingText.js';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst getContentFromUseMediaValue = (\r\n  displaySize,\r\n  contentArrayMap,\r\n  defaultContent\r\n) => {\r\n  const content =\r\n    displaySize in contentArrayMap\r\n      ? contentArrayMap[displaySize]\r\n      : defaultContent;\r\n\r\n  return content;\r\n};\r\n/**\r\n *\r\n *\r\n * @param {*} props\r\n * @returns\r\n */\r\nfunction StudyList(props) {\r\n  const {\r\n    isLoading,\r\n    hasError,\r\n    studies,\r\n    sort,\r\n    onSort: handleSort,\r\n    filterValues,\r\n    onFilterChange: handleFilterChange,\r\n    onSelectItem: handleSelectItem,\r\n    studyListDateFilterNumDays,\r\n    displaySize,\r\n  } = props;\r\n  const { t, ready: translationsAreReady } = useTranslation('StudyList');\r\n\r\n  const largeTableMeta = [\r\n    {\r\n      displayText: t('PatientName'),\r\n      fieldName: 'PatientName',\r\n      inputType: 'text',\r\n      size: 330,\r\n    },\r\n    {\r\n      displayText: t('MRN'),\r\n      fieldName: 'PatientID',\r\n      inputType: 'text',\r\n      size: 378,\r\n    },\r\n    {\r\n      displayText: t('AccessionNumber'),\r\n      fieldName: 'AccessionNumber',\r\n      inputType: 'text',\r\n      size: 180,\r\n    },\r\n    {\r\n      displayText: t('StudyDate'),\r\n      fieldName: 'StudyDate',\r\n      inputType: 'date-range',\r\n      size: 300,\r\n    },\r\n    {\r\n      displayText: t('Modality'),\r\n      fieldName: 'modalities',\r\n      inputType: 'text',\r\n      size: 114,\r\n    },\r\n    {\r\n      displayText: t('StudyDescription'),\r\n      fieldName: 'StudyDescription',\r\n      inputType: 'text',\r\n      size: 335,\r\n    },\r\n  ];\r\n\r\n  const mediumTableMeta = [\r\n    {\r\n      displayText: `${t('PatientName')} / ${t('MRN')}`,\r\n      fieldName: 'patientNameOrId',\r\n      inputType: 'text',\r\n      size: 250,\r\n    },\r\n    {\r\n      displayText: t('Description'),\r\n      fieldName: 'accessionOrModalityOrDescription',\r\n      inputType: 'text',\r\n      size: 350,\r\n    },\r\n    {\r\n      displayText: t('StudyDate'),\r\n      fieldName: 'StudyDate',\r\n      inputType: 'date-range',\r\n      size: 300,\r\n    },\r\n  ];\r\n\r\n  const smallTableMeta = [\r\n    {\r\n      displayText: t('Search'),\r\n      fieldName: 'allFields',\r\n      inputType: 'text',\r\n      size: 100,\r\n    },\r\n  ];\r\n\r\n  const tableMeta = getContentFromUseMediaValue(\r\n    displaySize,\r\n    { large: largeTableMeta, medium: mediumTableMeta, small: smallTableMeta },\r\n    smallTableMeta\r\n  );\r\n\r\n  const totalSize = tableMeta\r\n    .map(field => field.size)\r\n    .reduce((prev, next) => prev + next);\r\n\r\n  return translationsAreReady ? (\r\n    <table className=\"table table--striped table--hoverable\">\r\n      <colgroup>\r\n        {tableMeta.map((field, i) => {\r\n          const size = field.size;\r\n          const percentWidth = (size / totalSize) * 100.0;\r\n\r\n          return <col key={i} style={{ width: `${percentWidth}%` }} />;\r\n        })}\r\n      </colgroup>\r\n      <thead className=\"table-head\">\r\n        <tr className=\"filters\">\r\n          <TableSearchFilter\r\n            meta={tableMeta}\r\n            values={filterValues}\r\n            onSort={handleSort}\r\n            onValueChange={handleFilterChange}\r\n            sortFieldName={sort.fieldName}\r\n            sortDirection={sort.direction}\r\n            studyListDateFilterNumDays={studyListDateFilterNumDays}\r\n          />\r\n        </tr>\r\n      </thead>\r\n      <tbody className=\"table-body\" data-cy=\"study-list-results\">\r\n        {/* I'm not in love with this approach, but it's the quickest way for now\r\n         *\r\n         * - Display different content based on loading, empty, results state\r\n         *\r\n         * This is not ideal because it create a jump in focus. For loading especially,\r\n         * We should keep our current results visible while we load the new ones.\r\n         */}\r\n        {/* LOADING */}\r\n        {isLoading && (\r\n          <tr className=\"no-hover\">\r\n            <td colSpan={tableMeta.length}>\r\n              <StudyListLoadingText />\r\n            </td>\r\n          </tr>\r\n        )}\r\n        {!isLoading && hasError && (\r\n          <tr className=\"no-hover\">\r\n            <td colSpan={tableMeta.length}>\r\n              <div className=\"notFound\">\r\n                {t('There was an error fetching studies')}\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        )}\r\n        {/* EMPTY */}\r\n        {!isLoading && !studies.length && (\r\n          <tr className=\"no-hover\">\r\n            <td colSpan={tableMeta.length}>\r\n              <div className=\"notFound\">{t('No matching results')}</div>\r\n            </td>\r\n          </tr>\r\n        )}\r\n        {!isLoading &&\r\n          studies.map((study, index) => (\r\n            <TableRow\r\n              key={`${study.StudyInstanceUID}-${index}`}\r\n              onClick={StudyInstanceUID => handleSelectItem(StudyInstanceUID)}\r\n              AccessionNumber={study.AccessionNumber || ''}\r\n              modalities={study.modalities}\r\n              PatientID={study.PatientID || ''}\r\n              PatientName={study.PatientName || ''}\r\n              StudyDate={study.StudyDate}\r\n              StudyDescription={study.StudyDescription || ''}\r\n              StudyInstanceUID={study.StudyInstanceUID}\r\n              displaySize={displaySize}\r\n            />\r\n          ))}\r\n      </tbody>\r\n    </table>\r\n  ) : null;\r\n}\r\n\r\nStudyList.propTypes = {\r\n  isLoading: PropTypes.bool.isRequired,\r\n  hasError: PropTypes.bool.isRequired,\r\n  studies: PropTypes.array.isRequired,\r\n  onSelectItem: PropTypes.func.isRequired,\r\n  // ~~ SORT\r\n  sort: PropTypes.shape({\r\n    fieldName: PropTypes.string,\r\n    direction: PropTypes.oneOf(['desc', 'asc', null]),\r\n  }).isRequired,\r\n  onSort: PropTypes.func.isRequired,\r\n  // ~~ FILTERS\r\n  filterValues: PropTypes.shape({\r\n    PatientName: PropTypes.string.isRequired,\r\n    PatientID: PropTypes.string.isRequired,\r\n    AccessionNumber: PropTypes.string.isRequired,\r\n    StudyDate: PropTypes.string.isRequired,\r\n    modalities: PropTypes.string.isRequired,\r\n    StudyDescription: PropTypes.string.isRequired,\r\n    patientNameOrId: PropTypes.string.isRequired,\r\n    accessionOrModalityOrDescription: PropTypes.string.isRequired,\r\n    allFields: PropTypes.string.isRequired,\r\n    studyDateTo: PropTypes.any,\r\n    studyDateFrom: PropTypes.any,\r\n  }).isRequired,\r\n  onFilterChange: PropTypes.func.isRequired,\r\n  studyListDateFilterNumDays: PropTypes.number,\r\n  displaySize: PropTypes.string,\r\n};\r\n\r\nStudyList.defaultProps = {};\r\n\r\nfunction TableRow(props) {\r\n  const {\r\n    AccessionNumber,\r\n    isHighlighted,\r\n    modalities,\r\n    PatientID,\r\n    PatientName,\r\n    StudyDate,\r\n    StudyDescription,\r\n    StudyInstanceUID,\r\n    onClick: handleClick,\r\n    displaySize,\r\n  } = props;\r\n\r\n  const { t } = useTranslation('StudyList');\r\n\r\n  const largeRowTemplate = (\r\n    <tr\r\n      onClick={() => handleClick(StudyInstanceUID)}\r\n      className={classNames({ active: isHighlighted })}\r\n    >\r\n      <td className={classNames({ 'empty-value': !PatientName })}>\r\n        {PatientName || `(${t('Empty')})`}\r\n      </td>\r\n      <td>{PatientID}</td>\r\n      <td>{AccessionNumber}</td>\r\n      <td>{StudyDate}</td>\r\n      <td className={classNames({ 'empty-value': !modalities })}>\r\n        {modalities || `(${t('Empty')})`}\r\n      </td>\r\n      <td>{StudyDescription}</td>\r\n    </tr>\r\n  );\r\n\r\n  const mediumRowTemplate = (\r\n    <tr\r\n      onClick={() => handleClick(StudyInstanceUID)}\r\n      className={classNames({ active: isHighlighted })}\r\n    >\r\n      <td className={classNames({ 'empty-value': !PatientName })}>\r\n        {PatientName || `(${t('Empty')})`}\r\n        <div style={{ color: '#60656f' }}>{PatientID}</div>\r\n      </td>\r\n      <td>\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n          {/* DESCRIPTION */}\r\n          <div\r\n            className=\"hide-xs\"\r\n            style={{\r\n              whiteSpace: 'pre-wrap',\r\n              flexGrow: 1,\r\n            }}\r\n          >\r\n            {StudyDescription}\r\n          </div>\r\n\r\n          {/* MODALITY & ACCESSION */}\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              maxWidth: '80px',\r\n              width: '80px',\r\n            }}\r\n          >\r\n            <div\r\n              className={classNames({\r\n                modalities: modalities,\r\n                'empty-value': !modalities,\r\n              })}\r\n              aria-label={modalities}\r\n              title={modalities}\r\n            >\r\n              {modalities || `(${t('Empty')})`}\r\n            </div>\r\n            <div\r\n              style={{\r\n                textOverflow: 'ellipsis',\r\n                whiteSpace: 'nowrap',\r\n                overflow: 'hidden',\r\n              }}\r\n              aria-label={AccessionNumber}\r\n              title={AccessionNumber}\r\n            >\r\n              {AccessionNumber}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </td>\r\n      {/* DATE */}\r\n      <td style={{ textAlign: 'center' }}>{StudyDate}</td>\r\n    </tr>\r\n  );\r\n\r\n  const smallRowTemplate = (\r\n    <tr\r\n      onClick={() => handleClick(StudyInstanceUID)}\r\n      className={classNames({ active: isHighlighted })}\r\n    >\r\n      <td style={{ position: 'relative', overflow: 'hidden' }}>\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n          {/* NAME AND ID */}\r\n          <div\r\n            className={classNames({ 'empty-value': !PatientName })}\r\n            style={{ width: '150px', minWidth: '150px' }}\r\n          >\r\n            <div style={{ fontWeight: 500, paddingTop: '3px' }}>\r\n              {PatientName || `(${t('Empty')})`}\r\n            </div>\r\n            <div style={{ color: '#60656f' }}>{PatientID}</div>\r\n          </div>\r\n\r\n          {/* DESCRIPTION */}\r\n          <div\r\n            className=\"hide-xs\"\r\n            style={{\r\n              whiteSpace: 'pre-wrap',\r\n              flexGrow: 1,\r\n              paddingLeft: '35px',\r\n            }}\r\n          >\r\n            {StudyDescription}\r\n          </div>\r\n\r\n          {/* MODALITY & DATE */}\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              maxWidth: '80px',\r\n              width: '80px',\r\n            }}\r\n          >\r\n            <div\r\n              className={classNames({\r\n                modalities: modalities,\r\n                'empty-value': !modalities,\r\n              })}\r\n              aria-label={modalities}\r\n              title={modalities}\r\n            >\r\n              {modalities || `(${t('Empty')})`}\r\n            </div>\r\n            <div>{StudyDate}</div>\r\n          </div>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  );\r\n\r\n  const rowTemplate = getContentFromUseMediaValue(\r\n    displaySize,\r\n    {\r\n      large: largeRowTemplate,\r\n      medium: mediumRowTemplate,\r\n      small: smallRowTemplate,\r\n    },\r\n    smallRowTemplate\r\n  );\r\n\r\n  return rowTemplate;\r\n}\r\n\r\nTableRow.propTypes = {\r\n  AccessionNumber: PropTypes.string.isRequired,\r\n  isHighlighted: PropTypes.bool,\r\n  modalities: PropTypes.string,\r\n  PatientID: PropTypes.string.isRequired,\r\n  PatientName: PropTypes.string.isRequired,\r\n  StudyDate: PropTypes.string.isRequired,\r\n  StudyDescription: PropTypes.string.isRequired,\r\n  StudyInstanceUID: PropTypes.string.isRequired,\r\n  displaySize: PropTypes.string,\r\n};\r\n\r\nTableRow.defaultProps = {\r\n  isHighlighted: false,\r\n};\r\n\r\nexport { StudyList };\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './PaginationArea.styl';\r\nimport { withTranslation } from '../../contextProviders';\r\n\r\nclass TablePagination extends PureComponent {\r\n  static defaultProps = {\r\n    pageOptions: [5, 10, 25, 50, 100],\r\n    rowsPerPage: 25,\r\n    currentPage: 0,\r\n  };\r\n\r\n  static propTypes = {\r\n    /* Values to show in \"Rows per page\" select dropdown */\r\n    pageOptions: PropTypes.array,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n    currentPage: PropTypes.number.isRequired,\r\n    nextPageFunc: PropTypes.func,\r\n    prevPageFunc: PropTypes.func,\r\n    onRowsPerPageChange: PropTypes.func,\r\n    recordCount: PropTypes.number.isRequired,\r\n  };\r\n\r\n  nextPage = () => {\r\n    this.props.nextPageFunc(this.props.currentPage);\r\n  };\r\n\r\n  prevPage = () => {\r\n    this.props.prevPageFunc(this.props.currentPage);\r\n  };\r\n\r\n  onRowsPerPageChange = event => {\r\n    this.props.onRowsPerPageChange(parseInt(event.target.value));\r\n  };\r\n\r\n  renderPaginationButtons() {\r\n    return (\r\n      <div className=\"col-xs-8 col-sm-9 col-md-9\">\r\n        <div className=\"form-inline form-group page-buttons noselect\">\r\n          <React.Fragment>\r\n            <ul className=\"pagination-control no-margins\">\r\n              <li className=\"page-item prev\">\r\n                <button\r\n                  onClick={this.prevPage}\r\n                  disabled={this.props.currentPage === 0}\r\n                  className=\"btn page-link\"\r\n                >\r\n                  {this.props.t('Previous')}\r\n                </button>\r\n              </li>\r\n              <li className=\"page-item next\">\r\n                <button\r\n                  onClick={this.nextPage}\r\n                  disabled={\r\n                    this.props.recordCount === 0 ||\r\n                    this.props.rowsPerPage > this.props.recordCount\r\n                  }\r\n                  className=\"btn page-link\"\r\n                >\r\n                  {this.props.t('Next')}\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </React.Fragment>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderRowsPerPageDropdown() {\r\n    return (\r\n      <div className=\"form-inline form-group rows-per-page\">\r\n        <span>{this.props.t('Show')}</span>\r\n        <select\r\n          onChange={this.onRowsPerPageChange}\r\n          defaultValue={this.props.rowsPerPage}\r\n        >\r\n          {this.props.pageOptions.map(pageNumber => {\r\n            return (\r\n              <option key={pageNumber} value={pageNumber}>\r\n                {pageNumber}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n        <span>{this.props.t('RowsPerPage')}</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"pagination-area\">\r\n        <div className=\"rows-dropdown\">{this.renderRowsPerPageDropdown()}</div>\r\n        <div className=\"pagination-buttons\">\r\n          <div className=\"form-inline form-group page-number pull-right\">\r\n            {this.renderPaginationButtons()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst connectedComponent = withTranslation('Common')(TablePagination);\r\nexport { connectedComponent as TablePagination };\r\n","import React, { PureComponent } from 'react';\r\n\r\nimport { Icon } from './../../elements/Icon';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass PageToolbar extends PureComponent {\r\n  static propTypes = {\r\n    onImport: PropTypes.func,\r\n  };\r\n\r\n  onImport = event => {\r\n    if (this.props.onImport) {\r\n      this.props.onImport(event);\r\n    }\r\n  };\r\n\r\n  getImportTool() {\r\n    if (this.props.onImport) {\r\n      return (\r\n        <div className=\"addNewStudy btn-file\">\r\n          <label\r\n            htmlFor=\"btnImport\"\r\n            style={{ width: '18px' }}\r\n            onClick={this.onImport}\r\n          >\r\n            <Icon name=\"plus\" />\r\n          </label>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"studylistToolbar\">{this.getImportTool()}</div>;\r\n  }\r\n}\r\n\r\nexport { PageToolbar };\r\n","import './ExpandableToolMenu.styl';\r\n\r\nimport { OverlayTrigger } from '../components/overlayTrigger';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport ToolbarButton from './ToolbarButton.js';\r\nimport { Tooltip } from '../components/tooltip';\r\n\r\nclass ExpandableToolMenu extends React.Component {\r\n  static propTypes = {\r\n    /** Button label */\r\n    label: PropTypes.string.isRequired,\r\n    /** Array of buttons to render when expanded */\r\n    buttons: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string,\r\n        label: PropTypes.string.isRequired,\r\n        icon: PropTypes.oneOfType([\r\n          PropTypes.string,\r\n          PropTypes.shape({\r\n            name: PropTypes.string.isRequired,\r\n          }),\r\n        ]),\r\n      })\r\n    ).isRequired,\r\n    icon: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.shape({\r\n        name: PropTypes.string.isRequired,\r\n      }),\r\n    ]),\r\n    onGroupMenuClick: PropTypes.func,\r\n    activeCommand: PropTypes.string,\r\n  };\r\n\r\n  static defaultProps = {\r\n    buttons: [],\r\n    icon: 'ellipse-circle',\r\n    label: 'More',\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isExpanded: false,\r\n    };\r\n  }\r\n\r\n  toolbarMenuOverlay = () => (\r\n    <Tooltip\r\n      placement=\"bottom\"\r\n      className=\"tooltip-toolbar-overlay\"\r\n      id={`${Math.random()}_tooltip-toolbar-overlay}`}\r\n    >\r\n      {this.getButtons()}\r\n    </Tooltip>\r\n  );\r\n\r\n  getButtons = () => {\r\n    return this.props.buttons.map((button, index) => {\r\n      return (\r\n        <ToolbarButton\r\n          key={index}\r\n          {...button}\r\n          isActive={button.id === this.props.activeCommand}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  isActive = () => {\r\n    let isActive = false;\r\n    if (this.props.activeCommand) {\r\n      this.props.buttons.forEach(button => {\r\n        if (this.props.activeCommand === button.id) {\r\n          isActive = true;\r\n        }\r\n      });\r\n    }\r\n\r\n    return isActive;\r\n  };\r\n\r\n  activeIcon = () => {\r\n    if (this.props.activeCommand) {\r\n      return (\r\n        this.props.buttons.find(btn => this.props.activeCommand === btn.id)\r\n          .icon || this.props.icon\r\n      );\r\n    }\r\n\r\n    return this.props.icon;\r\n  };\r\n\r\n  onExpandableToolClick = () => {\r\n    if (this.props.onGroupMenuClick) {\r\n      this.props.onGroupMenuClick();\r\n    }\r\n    this.setState({\r\n      isExpanded: !this.state.isExpanded,\r\n    });\r\n  };\r\n\r\n  onOverlayHide = () => {\r\n    this.setState({\r\n      isExpanded: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const getToolBarButtonComponent = () => {\r\n      return (\r\n        <ToolbarButton\r\n          key=\"menu-button\"\r\n          type=\"tool\"\r\n          label={this.props.label}\r\n          icon={this.activeIcon()}\r\n          className={'toolbar-button expandableToolMenu'}\r\n          isActive={this.isActive()}\r\n          isExpandable={true}\r\n          isExpanded={this.state.isExpanded}\r\n        />\r\n      );\r\n    };\r\n\r\n    const toolbarComponent = getToolBarButtonComponent();\r\n\r\n    return (\r\n      <OverlayTrigger\r\n        key=\"menu-button\"\r\n        trigger=\"click\"\r\n        placement=\"bottom\"\r\n        rootClose={true}\r\n        handleHide={this.onOverlayHide}\r\n        onClick={this.onExpandableToolClick}\r\n        overlay={this.toolbarMenuOverlay()}\r\n      >\r\n        {toolbarComponent}\r\n      </OverlayTrigger>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExpandableToolMenu;\r\n","import './ToolbarSection.styl';\r\n\r\nimport React, { PureComponent } from 'react';\r\n\r\nimport ExpandableToolMenu from '../../viewer/ExpandableToolMenu';\r\nimport PropTypes from 'prop-types';\r\nimport ToolbarButton from '../../viewer/ToolbarButton';\r\nimport classnames from 'classnames';\r\n\r\nclass ToolbarSection extends PureComponent {\r\n  static defaultProps = {\r\n    className: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    buttons: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string,\r\n        label: PropTypes.string.isRequired,\r\n        icon: PropTypes.oneOfType([\r\n          PropTypes.string,\r\n          PropTypes.shape({\r\n            name: PropTypes.string.isRequired,\r\n          }),\r\n        ]),\r\n        /** Optional: Expandable Tool Menu */\r\n        buttons: PropTypes.arrayOf(PropTypes.shape({})),\r\n      })\r\n    ).isRequired,\r\n    /** Array of string button ids that should show as active */\r\n    activeButtons: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    /** Class for toolbar section container */\r\n    className: PropTypes.string,\r\n  };\r\n\r\n  render() {\r\n    const items = this.props.buttons.map((button, index) => {\r\n      if (button.buttons && Array.isArray(button.buttons)) {\r\n        return (\r\n          <ExpandableToolMenu\r\n            key={`expandable-${index}`}\r\n            {...button}\r\n            activeCommand={button.activeButton}\r\n          />\r\n        );\r\n      } else {\r\n        return (\r\n          <ToolbarButton\r\n            key={index}\r\n            {...button}\r\n            isActive={this.props.activeButtons.includes(button.id)}\r\n          />\r\n        );\r\n      }\r\n    });\r\n\r\n    return (\r\n      <div className={classnames('ToolbarSection', this.props.className)}>\r\n        {items}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport { ToolbarSection };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ErrorBoundary } from 'react-error-boundary';\r\nimport './ErrorFallback.css';\r\n\r\nconst ErrorFallback = ({ error, componentStack, resetErrorBoundary }) => {\r\n  return (\r\n    <div className=\"ErrorFallback\" role=\"alert\">\r\n      <p>Something went wrong.</p>\r\n      <pre>{error.message}</pre>\r\n      <pre>{componentStack}</pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst OHIFErrorBoundary = ({\r\n  context = 'OHIF',\r\n  onReset = () => { },\r\n  onError = () => { },\r\n  fallbackComponent,\r\n  children,\r\n}) => {\r\n  const onErrorHandler = (error, componentStack) => {\r\n    console.error(`${context} Error Boundary`, error, componentStack);\r\n    onError(error, componentStack);\r\n  };\r\n\r\n  const onResetHandler = () => {\r\n    onReset();\r\n  };\r\n\r\n  return (\r\n    <ErrorBoundary\r\n      FallbackComponent={fallbackComponent || ErrorFallback}\r\n      onReset={onResetHandler}\r\n      onError={onErrorHandler}\r\n    >\r\n      {children}\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nOHIFErrorBoundary.propTypes = {\r\n  context: PropTypes.string,\r\n  onReset: PropTypes.func,\r\n  onError: PropTypes.func,\r\n  children: PropTypes.node.isRequired,\r\n  fallbackComponent: PropTypes.oneOfType([PropTypes.node, PropTypes.func, PropTypes.element]),\r\n};\r\n\r\nexport default OHIFErrorBoundary;\r\n","import { useState, useEffect, useRef, useCallback } from 'react';\r\nimport isEqual from 'lodash.isequal';\r\n/**\r\n * Get display size value for matched mediaQueryList\r\n * @param {MediaQueryList[]} mediaQueryMap - Array of mappings, containing MediaQueryLists\r\n * @param {Array} mediaTypesAliases - Array of strings representing each mediaQueryAlias.\r\n * @param {string} defaultDisplaySize - default display size value. Fallback value.\r\n */\r\nconst getDisplaySize = (\r\n  mediaQueryMap,\r\n  mediaTypesAliases,\r\n  defaultDisplaySize\r\n) => {\r\n  if ((!mediaTypesAliases && !defaultDisplaySize) || !mediaQueryMap) {\r\n    return;\r\n  }\r\n\r\n  // Get index of first media query that matches\r\n  const index = mediaQueryMap.findIndex(mql => mql.matches);\r\n\r\n  // Return related value or defaultDisplaySize if none\r\n  return index >= 0 && typeof mediaTypesAliases[index] !== 'undefined'\r\n    ? mediaTypesAliases[index]\r\n    : defaultDisplaySize;\r\n};\r\n/**\r\n * Map each window MediaQueryLists\r\n * @param {Array} mediaQueriesStringList - array of string media queries to be parsed\r\n */\r\nconst getMediaQueryMap = mediaQueriesStringList => {\r\n  return (\r\n    mediaQueriesStringList &&\r\n    mediaQueriesStringList.map(q => window.matchMedia(q))\r\n  );\r\n};\r\n\r\nconst getMediaTypeAlias = (mediaQuery, state) => {\r\n  const { media } = mediaQuery;\r\n  const { mediaQueriesStringList, mediaTypesAliases } = state;\r\n\r\n  const index = mediaQueriesStringList.findIndex(originalMediaQuery => {\r\n    const { media: toCompareMedia } = window.matchMedia(originalMediaQuery);\r\n    return toCompareMedia === media;\r\n  });\r\n\r\n  return mediaTypesAliases[index];\r\n};\r\n\r\n/**\r\n * Hook to get current displaySize value.\r\n *\r\n * Its state changes and also displaySize value changes in case viewport is resized.\r\n * Its state changes in case mediaQueriesStringList or mediaTypesAliases changes.\r\n *\r\n * Current hook only offers displayMedia size, it wont expose method to change its state.\r\n * @param {Array} mediaQueriesStringList - array of string media queries to be parsed\r\n * @param {Array} mediaTypesAliases - array of aliases. Each value represents one mediaQueryList from array mediaQueriesStringList\r\n * @param {String} defaultMediaType - default mediaTypeAlias\r\n * @returns {String} current displayMedia size based on viewport size.\r\n *\r\n * @example <caption>Example to getDisplayMedia Size based on viewport size</caption>\r\n *\r\n *    const displaySize = useMedia(\r\n *    ['(min-width: 1500px)', '(min-width: 1000px)', '(min-width: 600px)'],\r\n *    // Value to return for matched media query\r\n *    ['large', 'medium', 'small'],\r\n *      // Default value\r\n *    'medium');\r\n *\r\n *  const currentDisplaySize = useMedia();\r\n *\r\n */\r\nconst useMedia = (\r\n  mediaQueriesStringList,\r\n  mediaTypesAliases,\r\n  defaultMediaType\r\n) => {\r\n  // MediaQuery.state is the source of truth. This hook will be dependent on it.\r\n  const [state, setState] = useState(() => {\r\n    const _mediaQueryMap = getMediaQueryMap(mediaQueriesStringList);\r\n    const _displaySize = getDisplaySize(\r\n      _mediaQueryMap,\r\n      mediaTypesAliases,\r\n      defaultMediaType\r\n    );\r\n\r\n    return {\r\n      mediaQueryMap: _mediaQueryMap,\r\n      displaySize: _displaySize,\r\n      mediaQueriesStringList,\r\n      mediaTypesAliases,\r\n      defaultMediaType,\r\n    };\r\n  });\r\n  let mount = useRef(false);\r\n\r\n  const updateDisplaySize = displaySize => {\r\n    if (mount.current) {\r\n      setState({ ...state, displaySize });\r\n    }\r\n  };\r\n\r\n  const updateState = value => {\r\n    const {\r\n      mediaQueriesStringList,\r\n      mediaTypesAliases,\r\n      defaultMediaType,\r\n    } = value;\r\n\r\n    const mediaQueryMap = getMediaQueryMap(mediaQueriesStringList);\r\n    const displaySize = getDisplaySize(\r\n      mediaQueryMap,\r\n      mediaTypesAliases,\r\n      defaultMediaType\r\n    );\r\n    // immutable state\r\n    // last chance to avoid setState of unmount component\r\n    if (mount.current) {\r\n      setState({\r\n        ...state,\r\n        mediaQueriesStringList,\r\n        mediaTypesAliases,\r\n        displaySize,\r\n        mediaQueryMap,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onMediaQueryChange = useCallback(mediaQuery => {\r\n    if (mediaQuery.matches) {\r\n      const nextDisplaySize = getMediaTypeAlias(mediaQuery, state);\r\n      updateDisplaySize(nextDisplaySize);\r\n    }\r\n  }, []);\r\n\r\n  // update state of MediaQuery in case mediaQueriesStringList or mediaTypesAliases has changed\r\n  useEffect(() => {\r\n    const {\r\n      mediaQueriesStringList: _mediaQueriesStringList,\r\n      mediaTypesAliases: _mediaTypesAliases,\r\n    } = state;\r\n    if (\r\n      (mediaQueriesStringList &&\r\n        !isEqual(mediaQueriesStringList, _mediaQueriesStringList)) ||\r\n      (mediaTypesAliases && !isEqual(mediaTypesAliases, _mediaTypesAliases))\r\n    ) {\r\n      updateState({\r\n        mediaQueriesStringList,\r\n        mediaTypesAliases,\r\n      });\r\n    }\r\n  }, [mediaQueriesStringList, mediaTypesAliases]);\r\n\r\n  // re-assign window resizing listeners\r\n  useEffect(() => {\r\n    const { mediaQueryMap } = state;\r\n    mediaQueryMap.forEach(mql => {\r\n      mql.removeListener(onMediaQueryChange);\r\n      mql.addListener(onMediaQueryChange);\r\n    });\r\n  }, [state.mediaQueryMap]);\r\n\r\n  useEffect(() => {\r\n    mount.current = true;\r\n\r\n    return () => {\r\n      mount.current = false;\r\n      const { mediaQueryMap } = state;\r\n      mediaQueryMap.forEach(mql => {\r\n        mql.removeListener(onMediaQueryChange);\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  return state.displaySize;\r\n};\r\n\r\nexport { useMedia };\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n/**\r\n * A hook to set a value\r\n *\r\n * @param {*} value - A value to \"set\"\r\n * @param {number} delay - The debounce delay for setting the value\r\n * @returns\r\n */\r\nexport default function useDebounce(value, delay) {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(\r\n    () => {\r\n      // Set debouncedValue to value (passed in) after the specified delay\r\n      const handler = setTimeout(() => {\r\n        setDebouncedValue(value);\r\n      }, delay);\r\n\r\n      // Return a cleanup function that will be called every time useEffect is\r\n      // re-called. useEffect will only be re-called if value changes (see the\r\n      // inputs array below).\r\n      //\r\n      // This is how we prevent debouncedValue from changing if value is changed\r\n      // within the delay period. Timeout gets cleared and restarted.\r\n      //\r\n      // To put it in context, if the user is typing within our app's search\r\n      // box, we don't want the debouncedValue to update until they've stopped\r\n      // typing for more than 500ms.\r\n      return () => {\r\n        clearTimeout(handler);\r\n      };\r\n    },\r\n    // Only re-call effect if value changes\r\n    // You could also add the \"delay\" var to inputs array if you need to be\r\n    // able to change that dynamically.\r\n    [value]\r\n  );\r\n\r\n  return debouncedValue;\r\n}\r\n","import './Select.css';\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Select extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: this.props.value,\r\n    };\r\n  }\r\n\r\n  handleChange = event => {\r\n    const value = event.target.value;\r\n    this.setState({ value });\r\n    if (this.props.onChange) this.props.onChange(value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <select\r\n        className=\"select-ohif\"\r\n        value={this.state.selected}\r\n        onChange={this.handleChange}\r\n      >\r\n        {this.props.options.map(({ key, value }) => {\r\n          return (\r\n            <option key={key} value={value}>\r\n              {key}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n    );\r\n  }\r\n}\r\n\r\nSelect.propTypes = {\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      key: PropTypes.string.isRequired,\r\n      value: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Select;\r\n","import './Select.css';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Select extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  static propTypes = {\r\n    options: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        key: PropTypes.string.isRequired,\r\n        value: PropTypes.string.isRequired,\r\n      })\r\n    ),\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n  };\r\n\r\n  handleChange = event => {\r\n    const value = event.target.value;\r\n    this.setState({ value });\r\n    if (this.props.onChange) this.props.onChange(value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"select-ohif-container\">\r\n        {this.props.label && (\r\n          <label className=\"select-ohif-label\" htmlFor={this.id}>{this.props.label}</label>\r\n        )}\r\n        <select className=\"form-control select-ohif\" {...this.props}>\r\n          {this.props.options.map(({ key, value }) => {\r\n            return (\r\n              <option key={key} value={value}>\r\n                {key}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport { Select };\r\n","import './Label.css';\r\n\r\nimport React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Label extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { value: this.props.text };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <label className=\"label-ohif\" htmlFor={this.props.for}>\r\n        {this.props.text}\r\n      </label>\r\n    );\r\n  }\r\n}\r\n\r\nLabel.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  for: PropTypes.string,\r\n};\r\n\r\nexport { Label };\r\n","import './Range.css';\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Range extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { value: props.value || 0 };\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({ value: event.target.value });\r\n    if (this.props.onChange) this.props.onChange(event);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <input\r\n          type=\"range\"\r\n          value={this.state.value}\r\n          min={this.props.min}\r\n          max={this.props.max}\r\n          step={this.props.step || 1}\r\n          onChange={this.handleChange}\r\n          id={this.props.id}\r\n          className=\"range\"\r\n        />\r\n        {this.props.showPercentage && <span>{`${this.state.value}%`}</span>}\r\n        {this.props.showValue && (\r\n          <span>\r\n            {this.props.valueRenderer\r\n              ? this.props.valueRenderer(this.state.value)\r\n              : this.state.value}\r\n          </span>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nRange.propTypes = {\r\n  value: PropTypes.number,\r\n  min: PropTypes.number.isRequired,\r\n  max: PropTypes.number.isRequired,\r\n  step: PropTypes.number,\r\n  id: PropTypes.string,\r\n  valueRenderer: PropTypes.func,\r\n  onChange: PropTypes.func,\r\n  showPercentage: PropTypes.bool,\r\n  showValue: PropTypes.bool,\r\n};\r\n\r\nRange.defaultProps = {\r\n  showPercentage: false,\r\n  showValue: false,\r\n};\r\n\r\nexport { Range };\r\n","import './TextArea.css';\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass TextArea extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { value: this.props.value };\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({ value: event.target.value });\r\n    if (this.props.onChange) this.props.onChange();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <textarea\r\n        className=\"textarea-ohif\"\r\n        value={this.state.value}\r\n        Rows={this.props.Rows}\r\n        cols={this.props.cols}\r\n        onChange={this.handleChange}\r\n        id={this.props.id}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nTextArea.propTypes = {\r\n  value: PropTypes.string,\r\n  Rows: PropTypes.number,\r\n  cols: PropTypes.number,\r\n  id: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport { TextArea };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './TextInput.css';\r\n\r\nclass TextInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  static propTypes = {\r\n    value: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number\r\n    ]),\r\n    id: PropTypes.string,\r\n    label: PropTypes.string,\r\n    type: PropTypes.string,\r\n  };\r\n\r\n  static defaultProps = {\r\n    value: '',\r\n    id: `TextInput-${new Date().toTimeString()}`,\r\n    label: undefined,\r\n    type: 'text',\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"input-ohif-container\">\r\n        {this.props.label && (\r\n          <label className=\"input-ohif-label\" htmlFor={this.props.id}>{this.props.label}</label>\r\n        )}\r\n        <input\r\n          type={this.props.type}\r\n          id={this.props.id}\r\n          className=\"form-control input-ohif\"\r\n          {...this.props}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport { TextInput };\r\n","import './DropdownMenu.css';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport { Icon } from '../Icon';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass DropdownMenu extends Component {\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  static propTypes = {\r\n    titleElement: PropTypes.node,\r\n    title: PropTypes.string,\r\n    align: PropTypes.oneOf(['left', 'center', 'right']),\r\n    /** Items to render in the select's drop down */\r\n    list: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        title: PropTypes.string.isRequired,\r\n        icon: PropTypes.object,\r\n        onClick: PropTypes.func,\r\n        link: PropTypes.string,\r\n      })\r\n    ),\r\n  };\r\n\r\n  getListItems = () => {\r\n    const { list, align } = this.props;\r\n\r\n    return list.map(({ icon, title, link, onClick }, key) => {\r\n      if (link) {\r\n        return (\r\n          <a\r\n            href={link || '#'}\r\n            key={key}\r\n            className=\"dd-item\"\r\n            onClick={() => this.handleOnClick(onClick)}\r\n          >\r\n            {icon && <Icon {...icon} className=\"dd-item-icon\" />}\r\n            <span>{title}</span>\r\n          </a>\r\n        );\r\n      } else {\r\n        return (\r\n          <button\r\n            key={key}\r\n            className=\"dd-item\"\r\n            data-cy=\"dd-item-menu\"\r\n            onClick={() => this.handleOnClick(onClick)}\r\n          >\r\n            {icon && <Icon {...icon} className=\"dd-item-icon\" />}\r\n            <span>{title}</span>\r\n          </button>\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  renderList = () => {\r\n    const { align } = this.props;\r\n\r\n    if (!this.state.open) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div className={`dd-menu-list ${align || 'left'}`}>\r\n        {this.getListItems()}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  handleOnClick = onClick => {\r\n    this.toggleList();\r\n\r\n    if (onClick) {\r\n      onClick();\r\n    }\r\n  };\r\n\r\n  handleMouseClick = e => {\r\n    if (this.node.contains(e.target)) {\r\n      return;\r\n    }\r\n\r\n    this.toggleList();\r\n  };\r\n\r\n  renderTitleElement = () => {\r\n    const { titleElement, title } = this.props;\r\n\r\n    if (titleElement) {\r\n      return titleElement;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <span className=\"dd-title\">{title}</span>\r\n        <span className=\"dd-caret-down\" />\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  toggleList = () => {\r\n    const { open } = this.state;\r\n    let state = true;\r\n\r\n    document.addEventListener('mousedown', this.handleMouseClick, false);\r\n\r\n    if (open) {\r\n      document.removeEventListener('mousedown', this.handleMouseClick, false);\r\n      state = false;\r\n    }\r\n\r\n    this.setState({\r\n      open: state,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"dd-menu\"\r\n        data-cy=\"options-menu\"\r\n        ref={node => (this.node = node)}\r\n      >\r\n        <div className=\"dd-menu-toggle\" onClick={this.toggleList}>\r\n          {this.renderTitleElement()}\r\n        </div>\r\n\r\n        {this.renderList()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport { DropdownMenu };\r\n","import React, { Component } from 'react';\r\n\r\nimport { Icon } from './../elements/Icon';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class PlayClipButton extends Component {\r\n  static propTypes = {\r\n    isPlaying: PropTypes.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    isPlaying: false,\r\n  };\r\n\r\n  render() {\r\n    const iconName = this.props.isPlaying ? 'stop' : 'play';\r\n\r\n    return (\r\n      <div className=\"btn-group\">\r\n        <button\r\n          id=\"playClip\"\r\n          type=\"button\"\r\n          className=\"imageViewerCommand btn btn-sm btn-default\"\r\n          data-container=\"body\"\r\n          data-toggle=\"tooltip\"\r\n          data-placement=\"bottom\"\r\n          title=\"Play/Stop Clip\"\r\n        >\r\n          <Icon name={iconName} />\r\n        </button>\r\n        <button\r\n          id=\"toggleCineDialog\"\r\n          type=\"button\"\r\n          className=\"imageViewerCommand btn btn-sm btn-default\"\r\n          data-container=\"body\"\r\n          data-toggle=\"tooltip\"\r\n          data-placement=\"bottom\"\r\n          title=\"Toggle CINE Dialog\"\r\n        >\r\n          <Icon name=\"youtube\" />\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Icon } from './../elements/Icon';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nexport function SimpleToolbarButton(props) {\r\n  const className = classnames(props.className, 'btn btn-sm btn-default');\r\n\r\n  return (\r\n    <button\r\n      id={props.id}\r\n      type=\"button\"\r\n      className={className}\r\n      data-container=\"body\"\r\n      data-toggle=\"tooltip\"\r\n      data-placement=\"bottom\"\r\n      title={props.title}\r\n    >\r\n      {props.icon && <Icon name={props.icon} />}\r\n    </button>\r\n  );\r\n}\r\n\r\nSimpleToolbarButton.propTypes = {\r\n  icon: PropTypes.string,\r\n  title: PropTypes.string,\r\n  className: PropTypes.string,\r\n  id: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\nexport default SimpleToolbarButton;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SimpleToolbarButton from './SimpleToolbarButton';\r\nimport PlayClipButton from './PlayClipButton';\r\nimport { LayoutButton } from './../components/layoutButton';\r\n\r\n// TODO: This should not be built in the `@ohif/ui` component\r\nfunction getDefaultButtonData() {\r\n  var buttonData = [\r\n    {\r\n      id: 'wwwc',\r\n      title: 'WW/WC',\r\n      className: 'imageViewerTool',\r\n      icon: 'sun',\r\n    },\r\n    {\r\n      id: 'wwwcRegion',\r\n      title: 'Window by Region',\r\n      className: 'imageViewerTool',\r\n      icon: 'stop',\r\n    },\r\n    {\r\n      id: 'magnify',\r\n      title: 'Magnify',\r\n      className: 'imageViewerTool',\r\n      icon: 'circle',\r\n    },\r\n    {\r\n      id: 'annotate',\r\n      title: 'Annotation',\r\n      className: 'imageViewerTool',\r\n      icon: 'arrows-alt-h',\r\n    },\r\n    {\r\n      id: 'invert',\r\n      title: 'Invert',\r\n      className: 'imageViewerCommand',\r\n      icon: 'adjust',\r\n    },\r\n    {\r\n      id: 'zoom',\r\n      title: 'Zoom',\r\n      className: 'imageViewerTool',\r\n      icon: 'search-plus',\r\n    },\r\n    {\r\n      id: 'pan',\r\n      title: 'Pan',\r\n      className: 'imageViewerTool',\r\n      icon: 'arrows',\r\n    },\r\n    {\r\n      id: 'stackScroll',\r\n      title: 'Stack Scroll',\r\n      className: 'imageViewerTool',\r\n      icon: 'bars',\r\n    },\r\n    {\r\n      id: 'length',\r\n      title: 'Length Measurement',\r\n      className: 'imageViewerTool',\r\n      icon: 'arrows-alt-v',\r\n    },\r\n    {\r\n      id: 'angle',\r\n      title: 'Angle Measurement',\r\n      className: 'imageViewerTool',\r\n      icon: 'fa fa-angle-left',\r\n    },\r\n    {\r\n      id: 'dragProbe',\r\n      title: 'Pixel Probe',\r\n      className: 'imageViewerTool',\r\n      icon: 'fa fa-dot-circle-o',\r\n    },\r\n    {\r\n      id: 'ellipticalRoi',\r\n      title: 'Elliptical ROI',\r\n      className: 'imageViewerTool',\r\n      icon: 'circle-o',\r\n    },\r\n    {\r\n      id: 'rectangleRoi',\r\n      title: 'Rectangle ROI',\r\n      className: 'imageViewerTool',\r\n      icon: 'square-o',\r\n    },\r\n    {\r\n      id: 'resetViewport',\r\n      title: 'Reset Viewport',\r\n      className: 'imageViewerCommand',\r\n      icon: 'reset',\r\n    },\r\n    {\r\n      id: 'clearTools',\r\n      title: 'Clear tools',\r\n      className: 'imageViewerCommand',\r\n      icon: 'trash',\r\n    },\r\n  ];\r\n  return buttonData;\r\n}\r\n\r\nexport default class Toolbar extends Component {\r\n  static propTypes = {\r\n    buttons: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        icon: PropTypes.oneOfType([\r\n          PropTypes.string,\r\n          PropTypes.shape({\r\n            name: PropTypes.string.isRequired,\r\n          }),\r\n        ]),\r\n      })\r\n    ).isRequired,\r\n    includeLayoutButton: PropTypes.bool.isRequired,\r\n    includePlayClipButton: PropTypes.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    buttons: getDefaultButtonData(),\r\n    includeLayoutButton: true,\r\n    includePlayClipButton: true,\r\n  };\r\n\r\n  render() {\r\n    var maybePlayClipButton;\r\n    if (this.props.includePlayClipButton) {\r\n      maybePlayClipButton = <PlayClipButton />;\r\n    }\r\n\r\n    var maybeLayoutButton;\r\n    if (this.props.includeLayoutButton) {\r\n      maybeLayoutButton = <LayoutButton />;\r\n    }\r\n\r\n    return (\r\n      <div id=\"toolbar\">\r\n        <div className=\"btn-group\">\r\n          {this.props.buttons.map((button, i) => {\r\n            return <SimpleToolbarButton {...button} key={i} />;\r\n          })}\r\n          {maybePlayClipButton}\r\n          {maybeLayoutButton}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { DndProvider } from \"react-dnd\";\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\nimport TouchBackend from 'react-dnd-touch-backend';\r\n\r\nconst isTouchDevice = !!('ontouchstart' in window || navigator.maxTouchPoints);\r\n\r\n// See https://github.com/react-dnd/react-dnd/issues/186#issuecomment-335429067\r\n// https://github.com/react-dnd/react-dnd/issues/186#issuecomment-282789420\r\n//\r\n// http://react-dnd.github.io/react-dnd/docs/api/drag-drop-context\r\nexport default function viewerbaseDragDropContext(DecoratedClass) {\r\n  const backend = isTouchDevice ? TouchBackend : HTML5Backend;\r\n  const opts = isTouchDevice ? { enableMouseEvents: true } : {};\r\n\r\n  return (props) => (\r\n    <DndProvider backend={backend} opts={opts}>\r\n      <DecoratedClass {...props}/>\r\n    </DndProvider>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { ErrorPage } from '@ohif/ui';\r\n\r\nexport const retryImport = (fn, retriesLeft = 5, interval = 1000) =>\r\n  new Promise((resolve, reject) => {\r\n    fn().then(resolve).catch((error) => {\r\n      setTimeout(() => {\r\n        if (retriesLeft === 1) {\r\n          /* reject('maximum retries exceeded'); */\r\n          reject(error);\r\n          return;\r\n        }\r\n\r\n        /* Passing on \"reject\" is the important part */\r\n        retry(fn, retriesLeft - 1, interval).then(resolve, reject);\r\n      }, interval);\r\n    });\r\n  });\r\n\r\nconst onError = (error, setState) => setState({ component: ErrorPage });\r\n\r\n/**\r\n * We use this function to lazy load the import of a component to leverage 'Code Splitting'\r\n * Link: https://serverless-stack.com/chapters/code-splitting-in-create-react-app.html\r\n */\r\nconst asyncComponent = (importComponent, options = { onError }) => props => {\r\n  const [state, setState] = useState({ component: null });\r\n\r\n  const isFunction = item => typeof item === 'function';\r\n  const isChunkError = error => error.toString().indexOf('ChunkLoadError') > -1;\r\n\r\n  useEffect(() => {\r\n    const addDynamicallyLoadedComponentToState = async () => {\r\n      try {\r\n        const { default: component } = await importComponent();\r\n        setState({ component });\r\n        if (options.onLoaded && isFunction(options.onLoaded)) {\r\n          options.onLoaded(component);\r\n        }\r\n      } catch (error) {\r\n        console.error('[AsyncComponent] Failed to import chunk:', error);\r\n\r\n        if (options.onError && isFunction(options.onError)) {\r\n          options.onError(error, setState);\r\n          return;\r\n        }\r\n\r\n        if (isChunkError(error)) {\r\n          console.error('[AsyncComponent] Reloading due to chunk error');\r\n          window.location.reload();\r\n        }\r\n      }\r\n    };\r\n\r\n    addDynamicallyLoadedComponentToState();\r\n  }, []);\r\n\r\n  const Component = state.component;\r\n  return Component ? <Component {...props} /> : null;\r\n};\r\n\r\nexport default asyncComponent;\r\n","import {\r\n  ContextMenu,\r\n  Checkbox,\r\n  CineDialog,\r\n  ViewportDownloadForm,\r\n  LayoutButton,\r\n  LayoutChooser,\r\n  MeasurementTable,\r\n  MeasurementTableItem,\r\n  Overlay,\r\n  OverlayTrigger,\r\n  PageToolbar,\r\n  QuickSwitch,\r\n  RoundedButtonGroup,\r\n  SelectTree,\r\n  SimpleDialog,\r\n  StudyBrowser,\r\n  StudyList,\r\n  TableList,\r\n  TableListItem,\r\n  Thumbnail,\r\n  TabComponents,\r\n  TabFooter,\r\n  HotkeyField,\r\n  LanguageSwitcher,\r\n  TableSearchFilter,\r\n  TablePagination,\r\n  ToolbarSection,\r\n  Tooltip,\r\n  AboutContent,\r\n  OHIFModal,\r\n  ErrorBoundary,\r\n  ErrorPage,\r\n} from './components';\r\nimport { useDebounce, useMedia } from './hooks';\r\n\r\n// Elements\r\nimport {\r\n  ICONS,\r\n  Icon,\r\n  DropdownMenu as Dropdown,\r\n  Select,\r\n  OldSelect,\r\n  Label,\r\n  Range,\r\n  TextArea,\r\n  TextInput,\r\n} from './elements';\r\n\r\n// Alias this for now as not all dependents are using strict versioning\r\nimport ExpandableToolMenu from './viewer/ExpandableToolMenu.js';\r\nimport PlayClipButton from './viewer/PlayClipButton.js';\r\nimport { ScrollableArea } from './ScrollableArea/ScrollableArea.js';\r\nimport Toolbar from './viewer/Toolbar.js';\r\nimport ToolbarButton from './viewer/ToolbarButton.js';\r\nimport ViewerbaseDragDropContext from './utils/viewerbaseDragDropContext.js';\r\nimport { asyncComponent, retryImport } from './utils/asyncComponent';\r\nimport {\r\n  SnackbarProvider,\r\n  useSnackbarContext,\r\n  withSnackbar,\r\n  DialogProvider,\r\n  useDialog,\r\n  withDialog,\r\n  ModalProvider,\r\n  ModalConsumer,\r\n  useModal,\r\n  withModal,\r\n  LoggerProvider,\r\n  withLogger,\r\n  useLogger,\r\n} from './contextProviders';\r\n\r\nexport {\r\n  // Elements\r\n  ICONS,\r\n  //\r\n  Checkbox,\r\n  Dropdown,\r\n  Label,\r\n  TextArea,\r\n  TextInput,\r\n  CineDialog,\r\n  ContextMenu,\r\n  ViewportDownloadForm,\r\n  ExpandableToolMenu,\r\n  Icon,\r\n  LayoutButton,\r\n  LayoutChooser,\r\n  MeasurementTable,\r\n  MeasurementTableItem,\r\n  Overlay,\r\n  OverlayTrigger,\r\n  PlayClipButton,\r\n  PageToolbar,\r\n  QuickSwitch,\r\n  Range,\r\n  RoundedButtonGroup,\r\n  ScrollableArea,\r\n  Select,\r\n  OldSelect,\r\n  SelectTree,\r\n  SimpleDialog,\r\n  StudyBrowser,\r\n  StudyList,\r\n  TableList,\r\n  TableListItem,\r\n  Thumbnail,\r\n  TabComponents,\r\n  TabFooter,\r\n  HotkeyField,\r\n  LanguageSwitcher,\r\n  TableSearchFilter,\r\n  TablePagination,\r\n  Toolbar,\r\n  ToolbarButton,\r\n  ToolbarSection,\r\n  Tooltip,\r\n  AboutContent,\r\n  SnackbarProvider,\r\n  useSnackbarContext,\r\n  withSnackbar,\r\n  ModalProvider,\r\n  useModal,\r\n  ModalConsumer,\r\n  withModal,\r\n  OHIFModal,\r\n  DialogProvider,\r\n  withDialog,\r\n  useDialog,\r\n  ErrorBoundary,\r\n  ErrorPage,\r\n  LoggerProvider,\r\n  withLogger,\r\n  useLogger,\r\n  // Hooks\r\n  useDebounce,\r\n  useMedia,\r\n  // Utils\r\n  ViewerbaseDragDropContext,\r\n  asyncComponent,\r\n  retryImport,\r\n};\r\n","import getAttribute from './getAttribute.js';\r\nimport getAuthorizationHeader from './getAuthorizationHeader.js';\r\nimport getModalities from './getModalities.js';\r\nimport getName from './getName.js';\r\nimport getNumber from './getNumber.js';\r\nimport getString from './getString.js';\r\n\r\nconst DICOMWeb = {\r\n  getAttribute,\r\n  getAuthorizationHeader,\r\n  getModalities,\r\n  getName,\r\n  getNumber,\r\n  getString,\r\n};\r\n\r\nexport default DICOMWeb;\r\n","/**\r\n * Returns the specified element as a dicom attribute group/element.\r\n *\r\n * @param element - The group/element of the element (e.g. '00280009')\r\n * @param [defaultValue] - The value to return if the element is not present\r\n * @returns {*}\r\n */\r\nexport default function getAttribute(element, defaultValue) {\r\n  if (!element) {\r\n    return defaultValue;\r\n  }\r\n  // Value is not present if the attribute has a zero length value\r\n  if (!element.Value) {\r\n    return defaultValue;\r\n  }\r\n  // Sanity check to make sure we have at least one entry in the array.\r\n  if (!element.Value.length) {\r\n    return defaultValue;\r\n  }\r\n\r\n  return convertToInt(element.Value);\r\n}\r\n\r\nfunction convertToInt(input) {\r\n  function padFour(input) {\r\n    const l = input.length;\r\n\r\n    if (l == 0) return '0000';\r\n    if (l == 1) return '000' + input;\r\n    if (l == 2) return '00' + input;\r\n    if (l == 3) return '0' + input;\r\n\r\n    return input;\r\n  }\r\n\r\n  let output = '';\r\n  for (let i = 0; i < input.length; i++) {\r\n    for (let j = 0; j < input[i].length; j++) {\r\n      output += padFour(input[i].charCodeAt(j).toString(16));\r\n    }\r\n  }\r\n\r\n  return parseInt(output, 16);\r\n}\r\n","import user from '../user';\r\n\r\n/**\r\n * Returns the Authorization header as part of an Object.\r\n *\r\n * @export\r\n * @param {Object} [server={}]\r\n * @param {Object} [server.requestOptions]\r\n * @param {string|function} [server.requestOptions.auth]\r\n * @returns {Object} { Authorization }\r\n */\r\nexport default function getAuthorizationHeader({ requestOptions } = {}) {\r\n  const headers = {};\r\n\r\n  // Check for OHIF.user since this can also be run on the server\r\n  const accessToken = user && user.getAccessToken && user.getAccessToken();\r\n\r\n  // Auth for a specific server\r\n  if (requestOptions && requestOptions.auth) {\r\n    if (typeof requestOptions.auth === 'function') {\r\n      // Custom Auth Header\r\n      headers.Authorization = requestOptions.auth(requestOptions);\r\n    } else {\r\n      // HTTP Basic Auth (user:password)\r\n      headers.Authorization = `Basic ${btoa(requestOptions.auth)}`;\r\n    }\r\n  }\r\n  // Auth for the user's default\r\n  else if (accessToken) {\r\n    headers.Authorization = `Bearer ${accessToken}`;\r\n  }\r\n\r\n  return headers;\r\n}\r\n","export default function getModalities(Modality, ModalitiesInStudy) {\r\n  if (!Modality && !ModalitiesInStudy) {\r\n    return {};\r\n  }\r\n\r\n  const modalities = Modality || {\r\n    vr: 'CS',\r\n    Value: [],\r\n  };\r\n\r\n  if (ModalitiesInStudy) {\r\n    if (modalities.vr && modalities.vr === ModalitiesInStudy.vr) {\r\n      for (let i = 0; i < ModalitiesInStudy.Value.length; i++) {\r\n        const value = ModalitiesInStudy.Value[i];\r\n        if (modalities.Value.indexOf(value) === -1) {\r\n          modalities.Value.push(value);\r\n        }\r\n      }\r\n    } else {\r\n      return ModalitiesInStudy;\r\n    }\r\n  }\r\n\r\n  return modalities;\r\n}\r\n","/**\r\n * Returns the Alphabetic version of a PN\r\n *\r\n * @param element - The group/element of the element (e.g. '00200013')\r\n * @param [defaultValue] - The default value to return if the element is not found\r\n * @returns {*}\r\n */\r\nexport default function getName(element, defaultValue) {\r\n  if (!element) {\r\n    return defaultValue;\r\n  }\r\n  // Value is not present if the attribute has a zero length value\r\n  if (!element.Value) {\r\n    return defaultValue;\r\n  }\r\n  // Sanity check to make sure we have at least one entry in the array.\r\n  if (!element.Value.length) {\r\n    return defaultValue;\r\n  }\r\n  // Return the Alphabetic component group\r\n  if (element.Value[0].Alphabetic) {\r\n    return element.Value[0].Alphabetic;\r\n  }\r\n  // Orthanc does not return PN properly so this is a temporary workaround\r\n  return element.Value[0];\r\n}\r\n","/**\r\n * Returns the first string value as a Javascript Number\r\n * @param element - The group/element of the element (e.g. '00200013')\r\n * @param [defaultValue] - The default value to return if the element does not exist\r\n * @returns {*}\r\n */\r\nexport default function getNumber(element, defaultValue) {\r\n  if (!element) {\r\n    return defaultValue;\r\n  }\r\n  // Value is not present if the attribute has a zero length value\r\n  if (!element.Value) {\r\n    return defaultValue;\r\n  }\r\n  // Sanity check to make sure we have at least one entry in the array.\r\n  if (!element.Value.length) {\r\n    return defaultValue;\r\n  }\r\n\r\n  return parseFloat(element.Value[0]);\r\n}\r\n","/**\r\n * Returns the specified element as a string.  Multi-valued elements will be separated by a backslash\r\n *\r\n * @param element - The group/element of the element (e.g. '00200013')\r\n * @param [defaultValue] - The value to return if the element is not present\r\n * @returns {*}\r\n */\r\nexport default function getString(element, defaultValue) {\r\n  if (!element) {\r\n    return defaultValue;\r\n  }\r\n  // Value is not present if the attribute has a zero length value\r\n  if (!element.Value) {\r\n    return defaultValue;\r\n  }\r\n  // Sanity check to make sure we have at least one entry in the array.\r\n  if (!element.Value.length) {\r\n    return defaultValue;\r\n  }\r\n  // Join the array together separated by backslash\r\n  // NOTE: Orthanc does not correctly split values into an array so the join is a no-op\r\n  return element.Value.join('\\\\');\r\n}\r\n","import metadataProvider from './classes/MetadataProvider';\r\nimport {\r\n  getBoundingBox,\r\n  pixelToPage,\r\n  repositionTextBox,\r\n} from './lib/cornerstone.js';\r\n\r\nconst cornerstone = {\r\n  metadataProvider,\r\n  getBoundingBox,\r\n  pixelToPage,\r\n  repositionTextBox,\r\n};\r\n\r\nexport default cornerstone;\r\n","import cornerstone from 'cornerstone-core';\r\nimport cornerstoneTools from 'cornerstone-tools';\r\n\r\nfunction getBoundingBox(context, textLines, x, y, options) {\r\n  if (Object.prototype.toString.call(textLines) !== '[object Array]') {\r\n    textLines = [textLines];\r\n  }\r\n\r\n  const padding = 5;\r\n  const font = cornerstoneTools.textStyle.getFont();\r\n  const fontSize = cornerstoneTools.textStyle.getFontSize();\r\n\r\n  context.save();\r\n  context.font = font;\r\n  context.textBaseline = 'top';\r\n\r\n  // Find the longest text width in the array of text data\r\n  let maxWidth = 0;\r\n\r\n  textLines.forEach(text => {\r\n    // Get the text width in the current font\r\n    const width = context.measureText(text).width;\r\n\r\n    // Find the maximum with for all the text Rows;\r\n    maxWidth = Math.max(maxWidth, width);\r\n  });\r\n\r\n  // Calculate the bounding box for this text box\r\n  const boundingBox = {\r\n    width: maxWidth + padding * 2,\r\n    height: padding + textLines.length * (fontSize + padding),\r\n  };\r\n\r\n  if (options && options.centering && options.centering.x === true) {\r\n    x -= boundingBox.width / 2;\r\n  }\r\n\r\n  if (options && options.centering && options.centering.y === true) {\r\n    y -= boundingBox.height / 2;\r\n  }\r\n\r\n  boundingBox.left = x;\r\n  boundingBox.top = y;\r\n\r\n  context.restore();\r\n\r\n  // Return the bounding box so it can be used for pointNearHandle\r\n  return boundingBox;\r\n}\r\n\r\nfunction pixelToPage(element, position) {\r\n  const enabledElement = cornerstone.getEnabledElement(element);\r\n  const result = {\r\n    x: 0,\r\n    y: 0,\r\n  };\r\n\r\n  // Stop here if the cornerstone element is not enabled or position is not an object\r\n  if (!enabledElement || typeof position !== 'object') {\r\n    return result;\r\n  }\r\n\r\n  const canvas = enabledElement.canvas;\r\n\r\n  const canvasOffset = $(canvas).offset();\r\n  result.x += canvasOffset.left;\r\n  result.y += canvasOffset.top;\r\n\r\n  const canvasPosition = cornerstone.pixelToCanvas(element, position);\r\n  result.x += canvasPosition.x;\r\n  result.y += canvasPosition.y;\r\n\r\n  return result;\r\n}\r\n\r\nfunction repositionTextBox(eventData, measurementData, config) {\r\n  // Stop here if it's not a measurement creating\r\n  if (!measurementData.isCreating) {\r\n    return;\r\n  }\r\n\r\n  const element = eventData.element;\r\n  const enabledElement = cornerstone.getEnabledElement(element);\r\n  const image = enabledElement.image;\r\n\r\n  const allowedBorders = OHIF.uiSettings.autoPositionMeasurementsTextCallOuts;\r\n  const allow = {\r\n    T: !allowedBorders || allowedBorders.includes('T'),\r\n    R: !allowedBorders || allowedBorders.includes('R'),\r\n    B: !allowedBorders || allowedBorders.includes('B'),\r\n    L: !allowedBorders || allowedBorders.includes('L'),\r\n  };\r\n\r\n  const getAvailableBlankAreas = (enabledElement, labelWidth, labelHeight) => {\r\n    const { element, canvas, image } = enabledElement;\r\n\r\n    const topLeft = cornerstone.pixelToCanvas(element, {\r\n      x: 0,\r\n      y: 0,\r\n    });\r\n\r\n    const bottomRight = cornerstone.pixelToCanvas(element, {\r\n      x: image.width,\r\n      y: image.height,\r\n    });\r\n\r\n    const $canvas = $(canvas);\r\n    const canvasWidth = $canvas.outerWidth();\r\n    const canvasHeight = $canvas.outerHeight();\r\n\r\n    const result = {};\r\n    result['x-1'] = allow.L && topLeft.x > labelWidth;\r\n    result['y-1'] = allow.T && topLeft.y > labelHeight;\r\n    result.x1 = allow.R && canvasWidth - bottomRight.x > labelWidth;\r\n    result.y1 = allow.B && canvasHeight - bottomRight.y > labelHeight;\r\n\r\n    return result;\r\n  };\r\n\r\n  const getRenderingInformation = (limits, tool) => {\r\n    const mid = {};\r\n    mid.x = limits.x / 2;\r\n    mid.y = limits.y / 2;\r\n\r\n    const directions = {};\r\n    directions.x = tool.x < mid.x ? -1 : 1;\r\n    directions.y = tool.y < mid.y ? -1 : 1;\r\n\r\n    const diffX = directions.x < 0 ? tool.x : limits.x - tool.x;\r\n    const diffY = directions.y < 0 ? tool.y : limits.y - tool.y;\r\n    let cornerAxis = diffY < diffX ? 'y' : 'x';\r\n\r\n    const map = {\r\n      'x-1': 'L',\r\n      'y-1': 'T',\r\n      x1: 'R',\r\n      y1: 'B',\r\n    };\r\n\r\n    let current = 0;\r\n    while (current < 4 && !allow[map[cornerAxis + directions[cornerAxis]]]) {\r\n      // Invert the direction for the next iteration\r\n      directions[cornerAxis] *= -1;\r\n\r\n      // Invert the tempCornerAxis\r\n      cornerAxis = cornerAxis === 'x' ? 'y' : 'x';\r\n\r\n      current++;\r\n    }\r\n\r\n    return {\r\n      directions,\r\n      cornerAxis,\r\n    };\r\n  };\r\n\r\n  const calculateAxisCenter = (axis, start, end) => {\r\n    const a = start[axis];\r\n    const b = end[axis];\r\n    const lowest = Math.min(a, b);\r\n    const highest = Math.max(a, b);\r\n    return lowest + (highest - lowest) / 2;\r\n  };\r\n\r\n  const getTextBoxSizeInPixels = (element, bounds) => {\r\n    const topLeft = cornerstone.pageToPixel(element, 0, 0);\r\n    const bottomRight = cornerstone.pageToPixel(element, bounds.x, bounds.y);\r\n    return {\r\n      x: bottomRight.x - topLeft.x,\r\n      y: bottomRight.y - topLeft.y,\r\n    };\r\n  };\r\n\r\n  function getTextBoxOffset(config, cornerAxis, toolAxis, boxSize) {\r\n    config = config || {};\r\n    const centering = config.centering || {};\r\n    const centerX = !!centering.x;\r\n    const centerY = !!centering.y;\r\n    const halfBoxSizeX = boxSize.x / 2;\r\n    const halfBoxSizeY = boxSize.y / 2;\r\n    const offset = {\r\n      x: [],\r\n      y: [],\r\n    };\r\n\r\n    if (cornerAxis === 'x') {\r\n      const offsetY = centerY ? 0 : halfBoxSizeY;\r\n\r\n      offset.x[-1] = centerX ? halfBoxSizeX : 0;\r\n      offset.x[1] = centerX ? -halfBoxSizeX : -boxSize.x;\r\n      offset.y[-1] = offsetY;\r\n      offset.y[1] = offsetY;\r\n    } else {\r\n      const offsetX = centerX ? 0 : halfBoxSizeX;\r\n\r\n      offset.x[-1] = offsetX;\r\n      offset.x[1] = offsetX;\r\n      offset.y[-1] = centerY ? halfBoxSizeY : 0;\r\n      offset.y[1] = centerY ? -halfBoxSizeY : -boxSize.y;\r\n    }\r\n\r\n    return offset;\r\n  }\r\n\r\n  const handles = measurementData.handles;\r\n  const textBox = handles.textBox;\r\n\r\n  const $canvas = $(enabledElement.canvas);\r\n  const canvasWidth = $canvas.outerWidth();\r\n  const canvasHeight = $canvas.outerHeight();\r\n  const offset = $canvas.offset();\r\n  const canvasDimensions = {\r\n    x: canvasWidth,\r\n    y: canvasHeight,\r\n  };\r\n\r\n  const bounds = {};\r\n  bounds.x = textBox.boundingBox.width;\r\n  bounds.y = textBox.boundingBox.height;\r\n\r\n  const getHandlePosition = key => {\r\n    const { x, y } = handles[key];\r\n\r\n    return { x, y };\r\n  };\r\n  const start = getHandlePosition('start');\r\n  const end = getHandlePosition('end');\r\n\r\n  const tool = {};\r\n  tool.x = calculateAxisCenter('x', start, end);\r\n  tool.y = calculateAxisCenter('y', start, end);\r\n\r\n  let limits = {};\r\n  limits.x = image.width;\r\n  limits.y = image.height;\r\n\r\n  let { directions, cornerAxis } = getRenderingInformation(limits, tool);\r\n\r\n  const availableAreas = getAvailableBlankAreas(\r\n    enabledElement,\r\n    bounds.x,\r\n    bounds.y\r\n  );\r\n  const tempDirections = Object.assign({}, directions);\r\n  let tempCornerAxis = cornerAxis;\r\n  let foundPlace = false;\r\n  let current = 0;\r\n  while (current < 4) {\r\n    if (availableAreas[tempCornerAxis + tempDirections[tempCornerAxis]]) {\r\n      foundPlace = true;\r\n      break;\r\n    }\r\n\r\n    // Invert the direction for the next iteration\r\n    tempDirections[tempCornerAxis] *= -1;\r\n\r\n    // Invert the tempCornerAxis\r\n    tempCornerAxis = tempCornerAxis === 'x' ? 'y' : 'x';\r\n\r\n    current++;\r\n  }\r\n\r\n  let cornerAxisPosition;\r\n  if (foundPlace) {\r\n    directions = Object.assign({}, directions, tempDirections);\r\n    cornerAxis = tempCornerAxis;\r\n    cornerAxisPosition = directions[cornerAxis] < 0 ? 0 : limits[cornerAxis];\r\n  } else {\r\n    limits = Object.assign({}, limits, canvasDimensions);\r\n\r\n    const toolPositionOnCanvas = cornerstone.pixelToCanvas(element, tool);\r\n    const renderingInformation = getRenderingInformation(\r\n      limits,\r\n      toolPositionOnCanvas\r\n    );\r\n    directions = renderingInformation.directions;\r\n    cornerAxis = renderingInformation.cornerAxis;\r\n\r\n    const position = {\r\n      x: directions.x < 0 ? offset.left : offset.left + canvasWidth,\r\n      y: directions.y < 0 ? offset.top : offset.top + canvasHeight,\r\n    };\r\n\r\n    const pixelPosition = cornerstone.pageToPixel(\r\n      element,\r\n      position.x,\r\n      position.y\r\n    );\r\n    cornerAxisPosition = pixelPosition[cornerAxis];\r\n  }\r\n\r\n  const toolAxis = cornerAxis === 'x' ? 'y' : 'x';\r\n  const boxSize = getTextBoxSizeInPixels(element, bounds);\r\n\r\n  textBox[cornerAxis] = cornerAxisPosition;\r\n  textBox[toolAxis] = tool[toolAxis];\r\n\r\n  // Adjust the text box position reducing its size from the corner axis\r\n  const textBoxOffset = getTextBoxOffset(config, cornerAxis, toolAxis, boxSize);\r\n  textBox[cornerAxis] += textBoxOffset[cornerAxis][directions[cornerAxis]];\r\n\r\n  // Preventing the text box from partially going outside the canvas area\r\n  const topLeft = cornerstone.pixelToCanvas(element, textBox);\r\n  const bottomRight = {\r\n    x: topLeft.x + bounds.x,\r\n    y: topLeft.y + bounds.y,\r\n  };\r\n  const canvasBorders = {\r\n    x0: offset.left,\r\n    y0: offset.top,\r\n    x1: offset.left + canvasWidth,\r\n    y1: offset.top + canvasHeight,\r\n  };\r\n  if (topLeft[toolAxis] < 0) {\r\n    const x = canvasBorders.x0;\r\n    const y = canvasBorders.y0;\r\n    const pixelPosition = cornerstone.pageToPixel(element, x, y);\r\n    textBox[toolAxis] = pixelPosition[toolAxis];\r\n  } else if (bottomRight[toolAxis] > canvasDimensions[toolAxis]) {\r\n    const x = canvasBorders.x1 - bounds.x;\r\n    const y = canvasBorders.y1 - bounds.y;\r\n    const pixelPosition = cornerstone.pageToPixel(element, x, y);\r\n    textBox[toolAxis] = pixelPosition[toolAxis];\r\n  }\r\n}\r\n\r\nexport { getBoundingBox, pixelToPage, repositionTextBox };\r\n","import validate from 'validate.js';\r\n\r\nvalidate.validators.equals = function(value, options, key, attributes) {\r\n  if (options && value !== options.value) {\r\n    return key + 'must equal ' + options.value;\r\n  }\r\n};\r\n\r\nvalidate.validators.doesNotEqual = function(value, options, key) {\r\n  if (options && value === options.value) {\r\n    return key + 'cannot equal ' + options.value;\r\n  }\r\n};\r\n\r\nvalidate.validators.contains = function(value, options, key) {\r\n  if (options && value.indexOf && value.indexOf(options.value) === -1) {\r\n    return key + 'must contain ' + options.value;\r\n  }\r\n};\r\n\r\nvalidate.validators.doesNotContain = function(value, options, key) {\r\n  if (options && value.indexOf && value.indexOf(options.value) !== -1) {\r\n    return key + 'cannot contain ' + options.value;\r\n  }\r\n};\r\n\r\nvalidate.validators.startsWith = function(value, options, key) {\r\n  if (options && value.startsWith && !value.startsWith(options.value)) {\r\n    return key + 'must start with ' + options.value;\r\n  }\r\n};\r\n\r\nvalidate.validators.endsWith = function(value, options, key) {\r\n  if (options && value.endsWith && !value.endsWith(options.value)) {\r\n    return key + 'must end with ' + options.value;\r\n  }\r\n};\r\n\r\nexport { validate };\r\n","// Define an empty object to store callbacks that are used to retrieve custom attributes\r\n// The simplest example for a custom attribute is the Timepoint type (i.e. baseline or follow-up)\r\n// used in the LesionTracker application.\r\n//\r\n// Timepoint type can be obtained given a studyId, and this is done through a custom callback.\r\n// Developers can define attributes (i.e. attributeId = timepointType) with a name ('Timepoint Type')\r\n// and a callback function that is used to calculate them.\r\n//\r\n// The input to the callback, which is called during viewport-image matching rule evaluation\r\n// is the set of attributes that contains the specified attribute. In our example, timepointType is\r\n// linked to the study attributes, and so the inputs to the callback is an object containing\r\n// the study attributes.\r\nconst CustomAttributeRetrievalCallbacks = {};\r\n\r\n/**\r\n * Adds a custom attribute to be used in the HangingProtocol UI and matching rules, including a\r\n * callback that will be used to calculate the attribute value.\r\n *\r\n * @param attributeId The ID used to refer to the attribute (e.g. 'timepointType')\r\n * @param attributeName The name of the attribute to be displayed (e.g. 'Timepoint Type')\r\n * @param callback The function used to calculate the attribute value from the other attributes at its level (e.g. study/series/image)\r\n */\r\nfunction addCustomAttribute(attributeId, attributeName, callback) {\r\n  CustomAttributeRetrievalCallbacks[attributeId] = {\r\n    name: attributeName,\r\n    callback: callback,\r\n  };\r\n}\r\n\r\nexport { CustomAttributeRetrievalCallbacks, addCustomAttribute };\r\n","import OHIFError from '../classes/OHIFError.js';\r\nimport metadata from '../classes/metadata/';\r\nimport { validate } from './lib/validate.js';\r\nimport { CustomAttributeRetrievalCallbacks } from './customAttributes';\r\n\r\n/**\r\n * Import Constants\r\n */\r\nconst { InstanceMetadata } = metadata;\r\n\r\n/**\r\n * Match a Metadata instance against rules using Validate.js for validation.\r\n * @param  {InstanceMetadata} metadataInstance Metadata instance object\r\n * @param  {Array} rules Array of MatchingRules instances (StudyMatchingRule|SeriesMatchingRule|ImageMatchingRule) for the match\r\n * @return {Object}      Matching Object with score and details (which rule passed or failed)\r\n */\r\nconst match = (metadataInstance, rules) => {\r\n  // Make sure the supplied data is valid.\r\n  if (!(metadataInstance instanceof InstanceMetadata)) {\r\n    throw new OHIFError(\r\n      'HPMatcher::match metadataInstance must be an instance of InstanceMetadata'\r\n    );\r\n  }\r\n\r\n  const options = {\r\n    format: 'grouped',\r\n  };\r\n\r\n  const details = {\r\n    passed: [],\r\n    failed: [],\r\n  };\r\n\r\n  let requiredFailed = false;\r\n  let score = 0;\r\n\r\n  rules.forEach(rule => {\r\n    const attribute = rule.attribute;\r\n\r\n    // Do not use the custom attribute from the metadataInstance since it is subject to change\r\n    if (CustomAttributeRetrievalCallbacks.hasOwnProperty(attribute)) {\r\n      const customAttribute = CustomAttributeRetrievalCallbacks[attribute];\r\n      metadataInstance.setCustomAttribute(\r\n        attribute,\r\n        customAttribute.callback(metadataInstance)\r\n      );\r\n    }\r\n\r\n    // Format the constraint as required by Validate.js\r\n    const testConstraint = {\r\n      [attribute]: rule.constraint,\r\n    };\r\n\r\n    // Create a single attribute object to be validated, since metadataInstance is an\r\n    // instance of Metadata (StudyMetadata, SeriesMetadata or InstanceMetadata)\r\n    const attributeValue = metadataInstance.customAttributeExists(attribute)\r\n      ? metadataInstance.getCustomAttribute(attribute)\r\n      : metadataInstance.getTagValue(attribute);\r\n    const attributeMap = {\r\n      [attribute]: attributeValue,\r\n    };\r\n\r\n    // Use Validate.js to evaluate the constraints on the specified metadataInstance\r\n    let errorMessages;\r\n    try {\r\n      errorMessages = validate(attributeMap, testConstraint, [options]);\r\n    } catch (e) {\r\n      errorMessages = ['Something went wrong during validation.', e];\r\n    }\r\n\r\n    if (!errorMessages) {\r\n      // If no errorMessages were returned, then validation passed.\r\n\r\n      // Add the rule's weight to the total score\r\n      score += parseInt(rule.weight, 10);\r\n\r\n      // Log that this rule passed in the matching details object\r\n      details.passed.push({\r\n        rule,\r\n      });\r\n    } else {\r\n      // If errorMessages were present, then validation failed\r\n\r\n      // If the rule that failed validation was Required, then\r\n      // mark that a required Rule has failed\r\n      if (rule.required) {\r\n        requiredFailed = true;\r\n      }\r\n\r\n      // Log that this rule failed in the matching details object\r\n      // and include any error messages\r\n      details.failed.push({\r\n        rule,\r\n        errorMessages,\r\n      });\r\n    }\r\n  });\r\n\r\n  // If a required Rule has failed Validation, set the matching score to zero\r\n  if (requiredFailed) {\r\n    score = 0;\r\n  }\r\n\r\n  return {\r\n    score,\r\n    details,\r\n    requiredFailed,\r\n  };\r\n};\r\n\r\nconst HPMatcher = {\r\n  match,\r\n};\r\n\r\nexport { HPMatcher };\r\n","// Define an empty object to store callbacks that are used to apply custom viewport settings\r\n// after a viewport is rendered.\r\nconst CustomViewportSettings = {};\r\n\r\n/**\r\n * Adds a custom setting that can be chosen in the HangingProtocol UI and applied to a Viewport\r\n *\r\n * @param settingId The ID used to refer to the setting (e.g. 'displayCADMarkers')\r\n * @param settingName The name of the setting to be displayed (e.g. 'Display CAD Markers')\r\n * @param options\r\n * @param callback A function to be run after a viewport is rendered with a series\r\n */\r\nfunction addCustomViewportSetting(settingId, settingName, options, callback) {\r\n  CustomViewportSettings[settingId] = {\r\n    id: settingId,\r\n    text: settingName,\r\n    options: options,\r\n    callback: callback,\r\n  };\r\n}\r\n\r\nexport { CustomViewportSettings, addCustomViewportSetting };\r\n","const comparators = [\r\n  {\r\n    id: 'equals',\r\n    name: '= (Equals)',\r\n    validator: 'equals',\r\n    validatorOption: 'value',\r\n    description: 'The attribute must equal this value.',\r\n  },\r\n  {\r\n    id: 'doesNotEqual',\r\n    name: '!= (Does not equal)',\r\n    validator: 'doesNotEqual',\r\n    validatorOption: 'value',\r\n    description: 'The attribute must not equal this value.',\r\n  },\r\n  {\r\n    id: 'contains',\r\n    name: 'Contains',\r\n    validator: 'contains',\r\n    validatorOption: 'value',\r\n    description: 'The attribute must contain this value.',\r\n  },\r\n  {\r\n    id: 'doesNotContain',\r\n    name: 'Does not contain',\r\n    validator: 'doesNotContain',\r\n    validatorOption: 'value',\r\n    description: 'The attribute must not contain this value.',\r\n  },\r\n  {\r\n    id: 'startsWith',\r\n    name: 'Starts with',\r\n    validator: 'startsWith',\r\n    validatorOption: 'value',\r\n    description: 'The attribute must start with this value.',\r\n  },\r\n  {\r\n    id: 'endsWith',\r\n    name: 'Ends with',\r\n    validator: 'endsWith',\r\n    validatorOption: 'value',\r\n    description: 'The attribute must end with this value.',\r\n  },\r\n  {\r\n    id: 'onlyInteger',\r\n    name: 'Only Integers',\r\n    validator: 'numericality',\r\n    validatorOption: 'onlyInteger',\r\n    description: \"Real numbers won't be allowed.\",\r\n  },\r\n  {\r\n    id: 'greaterThan',\r\n    name: '> (Greater than)',\r\n    validator: 'numericality',\r\n    validatorOption: 'greaterThan',\r\n    description: 'The attribute has to be greater than this value.',\r\n  },\r\n  {\r\n    id: 'greaterThanOrEqualTo',\r\n    name: '>= (Greater than or equal to)',\r\n    validator: 'numericality',\r\n    validatorOption: 'greaterThanOrEqualTo',\r\n    description: 'The attribute has to be at least this value.',\r\n  },\r\n  {\r\n    id: 'lessThanOrEqualTo',\r\n    name: '<= (Less than or equal to)',\r\n    validator: 'numericality',\r\n    validatorOption: 'lessThanOrEqualTo',\r\n    description: 'The attribute can be this value at the most.',\r\n  },\r\n  {\r\n    id: 'lessThan',\r\n    name: '< (Less than)',\r\n    validator: 'numericality',\r\n    validatorOption: 'lessThan',\r\n    description: 'The attribute has to be less than this value.',\r\n  },\r\n  {\r\n    id: 'odd',\r\n    name: 'Odd',\r\n    validator: 'numericality',\r\n    validatorOption: 'odd',\r\n    description: 'The attribute has to be odd.',\r\n  },\r\n  {\r\n    id: 'even',\r\n    name: 'Even',\r\n    validator: 'numericality',\r\n    validatorOption: 'even',\r\n    description: 'The attribute has to be even.',\r\n  },\r\n];\r\n\r\n// Immutable object\r\nObject.freeze(comparators);\r\n\r\nexport { comparators };\r\n","import { comparators } from '../lib/comparators';\r\nimport guid from '../../utils/guid';\r\n\r\nconst EQUALS_REGEXP = /^equals$/;\r\n\r\n/**\r\n * This Class represents a Rule to be evaluated given a set of attributes\r\n * Rules have:\r\n * - An attribute (e.g. 'SeriesDescription')\r\n * - A constraint Object, in the form required by Validate.js:\r\n *\r\n * rule.constraint = {\r\n *   contains: {\r\n *      value: 'T-1'\r\n *      }\r\n *   };\r\n *\r\n *  Note: In this example we use the 'contains' Validator, which is a custom Validator defined in Viewerbase\r\n *\r\n * - A value for whether or not they are Required to be matched (default: False)\r\n * - A value for their relative weighting during Protocol or Image matching (default: 1)\r\n */\r\nexport default class Rule {\r\n  /**\r\n   * The Constructor for the Class to create a Rule with the bare\r\n   * minimum information\r\n   *\r\n   * @param name The desired name for the Rule\r\n   */\r\n  constructor(attribute, constraint, required, weight) {\r\n    // Create a new UUID for this Rule\r\n    this.id = guid();\r\n\r\n    // Set the Rule's weight (defaults to 1)\r\n    this.weight = weight || 1;\r\n\r\n    // If an attribute is specified, assign it\r\n    if (attribute) {\r\n      this.attribute = attribute;\r\n    }\r\n\r\n    // If a constraint is specified, assign it\r\n    if (constraint) {\r\n      this.constraint = constraint;\r\n    }\r\n\r\n    // If a value for 'required' is specified, assign it\r\n    if (required === undefined) {\r\n      // If no value was specified, default to False\r\n      this.required = false;\r\n    } else {\r\n      this.required = required;\r\n    }\r\n\r\n    // Cache for constraint info object\r\n    this._constraintInfo = void 0;\r\n\r\n    // Cache for validator and value object\r\n    this._validatorAndValue = void 0;\r\n  }\r\n\r\n  /**\r\n   * Occasionally the Rule class needs to be instantiated from a JavaScript Object.\r\n   * This function fills in a Protocol with the Object data.\r\n   *\r\n   * @param input A Rule as a JavaScript Object, e.g. retrieved from JSON\r\n   */\r\n  fromObject(input) {\r\n    // Check if the input already has an ID\r\n    // If so, keep it. It not, create a new UUID\r\n    this.id = input.id || guid();\r\n\r\n    // Assign the specified input data to the Rule\r\n    this.required = input.required;\r\n    this.weight = input.weight;\r\n    this.attribute = input.attribute;\r\n    this.constraint = input.constraint;\r\n  }\r\n\r\n  /**\r\n   * Get the constraint info object for the current constraint\r\n   * @return {Object\\undefined} Constraint object or undefined if current constraint\r\n   *                            is not valid or not found in comparators list\r\n   */\r\n  getConstraintInfo() {\r\n    let constraintInfo = this._constraintInfo;\r\n    // Check if info is cached already\r\n    if (constraintInfo !== void 0) {\r\n      return constraintInfo;\r\n    }\r\n\r\n    const ruleConstraint = Object.keys(this.constraint)[0];\r\n\r\n    if (ruleConstraint !== void 0) {\r\n      constraintInfo = comparators.find(\r\n        comparator => ruleConstraint === comparator.id\r\n      );\r\n    }\r\n\r\n    // Cache this information for later use\r\n    this._constraintInfo = constraintInfo;\r\n\r\n    return constraintInfo;\r\n  }\r\n\r\n  /**\r\n   * Check if current rule is related to priors\r\n   * @return {Boolean} True if a rule is related to priors or false otherwise\r\n   */\r\n  isRuleForPrior() {\r\n    // @TODO: Should we check this too? this.attribute === 'relativeTime'\r\n    return this.attribute === 'abstractPriorValue';\r\n  }\r\n\r\n  /**\r\n   * If the current rule is a rule for priors, returns the number of referenced priors. Otherwise, returns -1.\r\n   * @return {Number} The number of referenced priors or -1 if not applicable. Returns zero if the actual value could not be determined.\r\n   */\r\n  getNumberOfPriorsReferenced() {\r\n    if (!this.isRuleForPrior()) {\r\n      return -1;\r\n    }\r\n\r\n    // Get rule's validator and value\r\n    const ruleValidatorAndValue = this.getConstraintValidatorAndValue();\r\n    const { value, validator } = ruleValidatorAndValue;\r\n    const intValue = parseInt(value, 10) || 0; // avoid possible NaN\r\n\r\n    // \"Equal to\" validators\r\n    if (EQUALS_REGEXP.test(validator)) {\r\n      // In this case, -1 (the oldest prior) indicates that at least one study is used\r\n      return intValue < 0 ? 1 : intValue;\r\n    }\r\n\r\n    // Default cases return value\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Get the constraint validator and value\r\n   * @return {Object|undefined} Returns an object containing the validator and it's value or undefined\r\n   */\r\n  getConstraintValidatorAndValue() {\r\n    let validatorAndValue = this._validatorAndValue;\r\n\r\n    // Check if validator and value are cached already\r\n    if (validatorAndValue !== void 0) {\r\n      return validatorAndValue;\r\n    }\r\n\r\n    // Get the constraint info object\r\n    const constraintInfo = this.getConstraintInfo();\r\n\r\n    // Constraint info object exists and is valid\r\n    if (constraintInfo !== void 0) {\r\n      const validator = constraintInfo.validator;\r\n      const currentValidator = this.constraint[validator];\r\n\r\n      if (currentValidator) {\r\n        const constraintValidator = constraintInfo.validatorOption;\r\n        const constraintValue = currentValidator[constraintValidator];\r\n\r\n        validatorAndValue = {\r\n          value: constraintValue,\r\n          validator: constraintInfo.id,\r\n        };\r\n\r\n        this._validatorAndValue = validatorAndValue;\r\n      }\r\n    }\r\n\r\n    return validatorAndValue;\r\n  }\r\n}\r\n","import Rule from './Rule';\r\n\r\n/**\r\n * The ProtocolMatchingRule Class extends the Rule Class.\r\n *\r\n * At present it does not add any new methods or attributes\r\n * @type {ProtocolMatchingRule}\r\n */\r\nclass ProtocolMatchingRule extends Rule {}\r\n\r\n/**\r\n * The StudyMatchingRule Class extends the Rule Class.\r\n *\r\n * At present it does not add any new methods or attributes\r\n * @type {StudyMatchingRule}\r\n */\r\nclass StudyMatchingRule extends Rule {}\r\n\r\n/**\r\n * The SeriesMatchingRule Class extends the Rule Class.\r\n *\r\n * At present it does not add any new methods or attributes\r\n * @type {SeriesMatchingRule}\r\n */\r\nclass SeriesMatchingRule extends Rule {}\r\n\r\n/**\r\n * The ImageMatchingRule class extends the Rule Class.\r\n *\r\n * At present it does not add any new methods or attributes\r\n * @type {ImageMatchingRule}\r\n */\r\nclass ImageMatchingRule extends Rule {}\r\n\r\nexport {\r\n  ProtocolMatchingRule,\r\n  StudyMatchingRule,\r\n  SeriesMatchingRule,\r\n  ImageMatchingRule,\r\n};\r\n","/**\r\n * Removes the first instance of an element from an array, if an equal value exists\r\n *\r\n * @param array\r\n * @param input\r\n *\r\n * @returns {boolean} Whether or not the element was found and removed\r\n */\r\nconst removeFromArray = (array, input) => {\r\n  // If the array is empty, stop here\r\n  if (!array || !array.length) {\r\n    return false;\r\n  }\r\n\r\n  array.forEach((value, index) => {\r\n    // TODO: Double check whether or not this deep equality check is necessary\r\n    //if (_.isEqual(value, input)) {\r\n    if (value === input) {\r\n      indexToRemove = index;\r\n      return false;\r\n    }\r\n  });\r\n\r\n  if (indexToRemove === void 0) {\r\n    return false;\r\n  }\r\n\r\n  array.splice(indexToRemove, 1);\r\n  return true;\r\n};\r\n\r\nexport { removeFromArray };\r\n","/**\r\n * The ViewportStructure class represents the layout and layout properties that\r\n * Viewports are displayed in. ViewportStructure has a type, which corresponds to\r\n * a layout template, and a set of properties, which depend on the type.\r\n *\r\n * @type {ViewportStructure}\r\n */\r\nexport default class ViewportStructure {\r\n  constructor(type, properties) {\r\n    this.type = type;\r\n    this.properties = properties;\r\n  }\r\n\r\n  /**\r\n   * Occasionally the ViewportStructure class needs to be instantiated from a JavaScript Object.\r\n   * This function fills in a ViewportStructure with the Object data.\r\n   *\r\n   * @param input The ViewportStructure as a JavaScript Object, e.g. retrieved from JSON\r\n   */\r\n  fromObject(input) {\r\n    this.type = input.type;\r\n    this.properties = input.properties;\r\n  }\r\n\r\n  /**\r\n   * Retrieve the layout template name based on the layout type\r\n   *\r\n   * @returns {string}\r\n   */\r\n  getLayoutTemplateName() {\r\n    // Viewport structure can be updated later when we build more complex display layouts\r\n    switch (this.type) {\r\n      case 'grid':\r\n        return 'gridLayout';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Retrieve the number of Viewports required for this layout\r\n   * given the layout type and properties\r\n   *\r\n   * @returns {string}\r\n   */\r\n  getNumViewports() {\r\n    // Viewport structure can be updated later when we build more complex display layouts\r\n    switch (this.type) {\r\n      case 'grid':\r\n        // For the typical grid layout, we only need to multiply Rows by Columns to\r\n        // obtain the number of viewports\r\n        return this.properties.Rows * this.properties.Columns;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  StudyMatchingRule,\r\n  SeriesMatchingRule,\r\n  ImageMatchingRule,\r\n} from './rules';\r\nimport { removeFromArray } from '../lib/removeFromArray';\r\n\r\n/**\r\n * This Class defines a Viewport in the Hanging Protocol Stage. A Viewport contains\r\n * arrays of Rules that are matched in the ProtocolEngine in order to determine which\r\n * images should be hung.\r\n *\r\n * @type {Viewport}\r\n */\r\nexport default class Viewport {\r\n  constructor() {\r\n    this.viewportSettings = {};\r\n    this.imageMatchingRules = [];\r\n    this.seriesMatchingRules = [];\r\n    this.studyMatchingRules = [];\r\n  }\r\n\r\n  /**\r\n   * Occasionally the Viewport class needs to be instantiated from a JavaScript Object.\r\n   * This function fills in a Viewport with the Object data.\r\n   *\r\n   * @param input The Viewport as a JavaScript Object, e.g. retrieved from JSON\r\n   */\r\n  fromObject(input) {\r\n    // If ImageMatchingRules exist, create them from the Object data\r\n    // and add them to the Viewport's imageMatchingRules array\r\n    if (input.imageMatchingRules) {\r\n      input.imageMatchingRules.forEach(ruleObject => {\r\n        var rule = new ImageMatchingRule();\r\n        rule.fromObject(ruleObject);\r\n        this.imageMatchingRules.push(rule);\r\n      });\r\n    }\r\n\r\n    // If SeriesMatchingRules exist, create them from the Object data\r\n    // and add them to the Viewport's seriesMatchingRules array\r\n    if (input.seriesMatchingRules) {\r\n      input.seriesMatchingRules.forEach(ruleObject => {\r\n        var rule = new SeriesMatchingRule();\r\n        rule.fromObject(ruleObject);\r\n        this.seriesMatchingRules.push(rule);\r\n      });\r\n    }\r\n\r\n    // If StudyMatchingRules exist, create them from the Object data\r\n    // and add them to the Viewport's studyMatchingRules array\r\n    if (input.studyMatchingRules) {\r\n      input.studyMatchingRules.forEach(ruleObject => {\r\n        var rule = new StudyMatchingRule();\r\n        rule.fromObject(ruleObject);\r\n        this.studyMatchingRules.push(rule);\r\n      });\r\n    }\r\n\r\n    // If ViewportSettings exist, add them to the current protocol\r\n    if (input.viewportSettings) {\r\n      this.viewportSettings = input.viewportSettings;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Finds and removes a rule from whichever array it exists in.\r\n   * It is not required to specify if it exists in studyMatchingRules,\r\n   * seriesMatchingRules, or imageMatchingRules\r\n   *\r\n   * @param rule\r\n   */\r\n  removeRule(rule) {\r\n    var array;\r\n    if (rule instanceof StudyMatchingRule) {\r\n      array = this.studyMatchingRules;\r\n    } else if (rule instanceof SeriesMatchingRule) {\r\n      array = this.seriesMatchingRules;\r\n    } else if (rule instanceof ImageMatchingRule) {\r\n      array = this.imageMatchingRules;\r\n    }\r\n\r\n    removeFromArray(array, rule);\r\n  }\r\n}\r\n","import ViewportStructure from './ViewportStructure';\r\nimport Viewport from './Viewport';\r\nimport guid from '../../utils/guid';\r\n\r\n/**\r\n * A Stage is one step in the Display Set Sequence for a Hanging Protocol\r\n *\r\n * Stages are defined as a ViewportStructure and an array of Viewports\r\n *\r\n * @type {Stage}\r\n */\r\nexport default class Stage {\r\n  constructor(ViewportStructure, name) {\r\n    // Create a new UUID for this Stage\r\n    this.id = guid();\r\n\r\n    // Assign the name and ViewportStructure provided\r\n    this.name = name;\r\n    this.viewportStructure = ViewportStructure;\r\n\r\n    // Create an empty array for the Viewports\r\n    this.viewports = [];\r\n\r\n    // Set the created date to Now\r\n    this.createdDate = new Date();\r\n  }\r\n\r\n  /**\r\n   * Creates a clone of the current Stage with a new name\r\n   *\r\n   * @param name\r\n   * @returns {Stage|*}\r\n   */\r\n  createClone(name) {\r\n    // Create a new JavaScript independent of the current Protocol\r\n    var currentStage = Object.assign({}, this);\r\n\r\n    // Create a new Stage to return\r\n    var clonedStage = new Stage();\r\n\r\n    // Assign the desired properties\r\n    currentStage.id = clonedStage.id;\r\n    clonedStage.fromObject(currentStage);\r\n\r\n    // If we have specified a name, assign it\r\n    if (name) {\r\n      clonedStage.name = name;\r\n    }\r\n\r\n    // Return the cloned Stage\r\n    return clonedStage;\r\n  }\r\n\r\n  /**\r\n   * Occasionally the Stage class needs to be instantiated from a JavaScript Object.\r\n   * This function fills in a Protocol with the Object data.\r\n   *\r\n   * @param input A Stage as a JavaScript Object, e.g. retrieved from JSON\r\n   */\r\n  fromObject(input) {\r\n    // Check if the input already has an ID\r\n    // If so, keep it. It not, create a new UUID\r\n    this.id = input.id || guid();\r\n\r\n    // Assign the input name to the Stage\r\n    this.name = input.name;\r\n\r\n    // If a ViewportStructure is present in the input, add it from the\r\n    // input data\r\n    this.viewportStructure = new ViewportStructure();\r\n    this.viewportStructure.fromObject(input.viewportStructure);\r\n\r\n    // If any viewports are present in the input object\r\n    if (input.viewports) {\r\n      input.viewports.forEach(viewportObject => {\r\n        // Create a new Viewport with their data\r\n        var viewport = new Viewport();\r\n        viewport.fromObject(viewportObject);\r\n\r\n        // Add it to the viewports array\r\n        this.viewports.push(viewport);\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { ProtocolMatchingRule } from './rules';\r\nimport { removeFromArray } from '../lib/removeFromArray';\r\nimport Stage from './Stage';\r\nimport guid from '../../utils/guid';\r\nimport user from '../../user';\r\n\r\n/**\r\n * This class represents a Hanging Protocol at the highest level\r\n *\r\n * @type {Protocol}\r\n */\r\nexport default class Protocol {\r\n  /**\r\n   * The Constructor for the Class to create a Protocol with the bare\r\n   * minimum information\r\n   *\r\n   * @param name The desired name for the Protocol\r\n   */\r\n  constructor(name) {\r\n    // Create a new UUID for this Protocol\r\n    this.id = guid();\r\n\r\n    // Store a value which determines whether or not a Protocol is locked\r\n    // This is probably temporary, since we will eventually have role / user\r\n    // checks for editing. For now we just need it to prevent changes to the\r\n    // default protocols.\r\n    this.locked = false;\r\n\r\n    // Boolean value to indicate if the protocol has updated priors information\r\n    // it's set in \"updateNumberOfPriorsReferenced\" function\r\n    this.hasUpdatedPriorsInformation = false;\r\n\r\n    // Apply the desired name\r\n    this.name = name;\r\n\r\n    // Set the created and modified dates to Now\r\n    this.createdDate = new Date();\r\n    this.modifiedDate = new Date();\r\n\r\n    // If we are logged in while creating this Protocol,\r\n    // store this information as well\r\n    if (user.userLoggedIn && user.userLoggedIn()) {\r\n      this.createdBy = user.getUserId();\r\n      this.modifiedBy = user.getUserId();\r\n    }\r\n\r\n    // Create two empty Sets specifying which roles\r\n    // have read and write access to this Protocol\r\n    this.availableTo = new Set();\r\n    this.editableBy = new Set();\r\n\r\n    // Define empty arrays for the Protocol matching rules\r\n    // and Stages\r\n    this.protocolMatchingRules = [];\r\n    this.stages = [];\r\n\r\n    // Define auxiliary values for priors\r\n    this.numberOfPriorsReferenced = -1;\r\n  }\r\n\r\n  getNumberOfPriorsReferenced(skipCache = false) {\r\n    let numberOfPriorsReferenced =\r\n      skipCache !== true ? this.numberOfPriorsReferenced : -1;\r\n\r\n    // Check if information is cached already\r\n    if (numberOfPriorsReferenced > -1) {\r\n      return numberOfPriorsReferenced;\r\n    }\r\n\r\n    numberOfPriorsReferenced = 0;\r\n\r\n    // Search each study matching rule for prior rules\r\n    // Each stage can have many viewports that can have\r\n    // multiple study matching rules.\r\n    this.stages.forEach(stage => {\r\n      if (!stage.viewports) {\r\n        return;\r\n      }\r\n\r\n      stage.viewports.forEach(viewport => {\r\n        if (!viewport.studyMatchingRules) {\r\n          return;\r\n        }\r\n\r\n        viewport.studyMatchingRules.forEach(rule => {\r\n          // If the current rule is not a priors rule, it will return -1 then numberOfPriorsReferenced will continue to be 0\r\n          const priorsReferenced = rule.getNumberOfPriorsReferenced();\r\n          if (priorsReferenced > numberOfPriorsReferenced) {\r\n            numberOfPriorsReferenced = priorsReferenced;\r\n          }\r\n        });\r\n      });\r\n    });\r\n\r\n    this.numberOfPriorsReferenced = numberOfPriorsReferenced;\r\n\r\n    return numberOfPriorsReferenced;\r\n  }\r\n\r\n  updateNumberOfPriorsReferenced() {\r\n    this.getNumberOfPriorsReferenced(true);\r\n  }\r\n\r\n  /**\r\n   * Method to update the modifiedDate when the Protocol\r\n   * has been changed\r\n   */\r\n  protocolWasModified() {\r\n    // If we are logged in while modifying this Protocol,\r\n    // store this information as well\r\n    if (user.userLoggedIn && user.userLoggedIn()) {\r\n      this.modifiedBy = user.getUserId();\r\n    }\r\n\r\n    // Protocol has been modified, so mark priors information\r\n    // as \"outdated\"\r\n    this.hasUpdatedPriorsInformation = false;\r\n\r\n    // Update number of priors referenced info\r\n    this.updateNumberOfPriorsReferenced();\r\n\r\n    // Update the modifiedDate with the current Date/Time\r\n    this.modifiedDate = new Date();\r\n  }\r\n\r\n  /**\r\n   * Occasionally the Protocol class needs to be instantiated from a JavaScript Object\r\n   * containing the Protocol data. This function fills in a Protocol with the Object\r\n   * data.\r\n   *\r\n   * @param input A Protocol as a JavaScript Object, e.g. retrieved from JSON\r\n   */\r\n  fromObject(input) {\r\n    // Check if the input already has an ID\r\n    // If so, keep it. It not, create a new UUID\r\n    this.id = input.id || guid();\r\n\r\n    // Assign the input name to the Protocol\r\n    this.name = input.name;\r\n\r\n    // Retrieve locked status, use !! to make it truthy\r\n    // so that undefined values will be set to false\r\n    this.locked = !!input.locked;\r\n\r\n    // TODO: Check how to regenerate Set from Object\r\n    //this.availableTo = new Set(input.availableTo);\r\n    //this.editableBy = new Set(input.editableBy);\r\n\r\n    // If the input contains Protocol matching rules\r\n    if (input.protocolMatchingRules) {\r\n      input.protocolMatchingRules.forEach(ruleObject => {\r\n        // Create new Rules from the stored data\r\n        var rule = new ProtocolMatchingRule();\r\n        rule.fromObject(ruleObject);\r\n\r\n        // Add them to the Protocol\r\n        this.protocolMatchingRules.push(rule);\r\n      });\r\n    }\r\n\r\n    // If the input contains data for various Stages in the\r\n    // display set sequence\r\n    if (input.stages) {\r\n      input.stages.forEach(stageObject => {\r\n        // Create Stages from the stored data\r\n        var stage = new Stage();\r\n        stage.fromObject(stageObject);\r\n\r\n        // Add them to the Protocol\r\n        this.stages.push(stage);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates a clone of the current Protocol with a new name\r\n   *\r\n   * @param name\r\n   * @returns {Protocol|*}\r\n   */\r\n  createClone(name) {\r\n    // Create a new JavaScript independent of the current Protocol\r\n    var currentProtocol = Object.assign({}, this);\r\n\r\n    // Create a new Protocol to return\r\n    var clonedProtocol = new Protocol();\r\n\r\n    // Apply the desired properties\r\n    currentProtocol.id = clonedProtocol.id;\r\n    clonedProtocol.fromObject(currentProtocol);\r\n\r\n    // If we have specified a name, assign it\r\n    if (name) {\r\n      clonedProtocol.name = name;\r\n    }\r\n\r\n    // Unlock the clone\r\n    clonedProtocol.locked = false;\r\n\r\n    // Return the cloned Protocol\r\n    return clonedProtocol;\r\n  }\r\n\r\n  /**\r\n   * Adds a Stage to this Protocol's display set sequence\r\n   *\r\n   * @param stage\r\n   */\r\n  addStage(stage) {\r\n    this.stages.push(stage);\r\n\r\n    // Update the modifiedDate and User that last\r\n    // modified this Protocol\r\n    this.protocolWasModified();\r\n  }\r\n\r\n  /**\r\n   * Adds a Rule to this Protocol's array of matching rules\r\n   *\r\n   * @param rule\r\n   */\r\n  addProtocolMatchingRule(rule) {\r\n    this.protocolMatchingRules.push(rule);\r\n\r\n    // Update the modifiedDate and User that last\r\n    // modified this Protocol\r\n    this.protocolWasModified();\r\n  }\r\n\r\n  /**\r\n   * Removes a Rule from this Protocol's array of matching rules\r\n   *\r\n   * @param rule\r\n   */\r\n  removeProtocolMatchingRule(rule) {\r\n    var wasRemoved = removeFromArray(this.protocolMatchingRules, rule);\r\n\r\n    // Update the modifiedDate and User that last\r\n    // modified this Protocol\r\n    if (wasRemoved) {\r\n      this.protocolWasModified();\r\n    }\r\n  }\r\n}\r\n","import OHIFError from '../classes/OHIFError.js';\r\nimport metadata from '../classes/metadata/';\r\nimport { StudyMetadataSource } from '../classes/StudyMetadataSource.js';\r\nimport { isImage } from '../utils/isImage.js';\r\nimport { HPMatcher } from './HPMatcher.js';\r\nimport { sortByScore } from './lib/sortByScore';\r\nimport log from '../log.js';\r\nimport sortBy from '../utils/sortBy.js';\r\nimport { CustomViewportSettings } from './customViewportSettings';\r\nimport Protocol from './classes/Protocol';\r\nimport { ProtocolStore } from './protocolStore/classes';\r\n\r\n/**\r\n * Import Constants\r\n */\r\nconst { StudyMetadata, InstanceMetadata } = metadata;\r\n\r\n// Useful constants\r\nconst ABSTRACT_PRIOR_VALUE = 'abstractPriorValue';\r\n\r\nexport default class ProtocolEngine {\r\n  matchedProtocols = new Map();\r\n  matchedProtocolScores = {};\r\n\r\n  /**\r\n   * Constructor\r\n   * @param  {ProtocolStore} protocolStore Protocol Store used to keep track of all hanging protocols\r\n   * @param  {Array} studies Array of study metadata\r\n   * @param  {Map} priorStudies Map of prior studies\r\n   * @param  {Object} studyMetadataSource Instance of StudyMetadataSource (ohif-viewerbase) Object to get study metadata\r\n   * @param  {Object} options\r\n   */\r\n  constructor(\r\n    protocolStore,\r\n    studies,\r\n    priorStudies,\r\n    studyMetadataSource,\r\n    options = {}\r\n  ) {\r\n    // -----------\r\n    // Type Validations\r\n    if (!(studyMetadataSource instanceof StudyMetadataSource)) {\r\n      throw new OHIFError(\r\n        'ProtocolEngine::constructor studyMetadataSource is not an instance of StudyMetadataSource'\r\n      );\r\n    }\r\n\r\n    if (\r\n      !(studies instanceof Array) &&\r\n      !studies.every(study => study instanceof StudyMetadata)\r\n    ) {\r\n      throw new OHIFError(\r\n        \"ProtocolEngine::constructor studies is not an array or it's items are not instances of StudyMetadata\"\r\n      );\r\n    }\r\n\r\n    // --------------\r\n    // Initialization\r\n    this.protocolStore = protocolStore;\r\n    this.studies = studies;\r\n    this.priorStudies = priorStudies instanceof Map ? priorStudies : new Map();\r\n    this.studyMetadataSource = studyMetadataSource;\r\n    this.options = options;\r\n\r\n    // Put protocol engine in a known state\r\n    this.reset();\r\n\r\n    // Create an array for new stage ids to be stored\r\n    // while editing a stage\r\n    this.newStageIds = [];\r\n  }\r\n\r\n  /**\r\n   * Resets the ProtocolEngine to the best match\r\n   */\r\n  reset() {\r\n    const protocol = this.getBestProtocolMatch();\r\n\r\n    this.setHangingProtocol(protocol);\r\n  }\r\n\r\n  /**\r\n   * Retrieves the current Stage from the current Protocol and stage index\r\n   *\r\n   * @returns {*} The Stage model for the currently displayed Stage\r\n   */\r\n  getCurrentStageModel() {\r\n    return this.protocol.stages[this.stage];\r\n  }\r\n\r\n  /**\r\n   * Finds the best protocols from Protocol Store, matching each protocol matching rules\r\n   * with the given study. The best protocol are orded by score and returned in an array\r\n   * @param  {Object} study StudyMetadata instance object\r\n   * @return {Array}       Array of match objects or an empty array if no match was found\r\n   *                       Each match object has the score of the matching and the matched\r\n   *                       protocol\r\n   */\r\n  findMatchByStudy(study) {\r\n    log.trace('ProtocolEngine::findMatchByStudy');\r\n\r\n    const matched = [];\r\n    const studyInstance = study.getFirstInstance();\r\n\r\n    // Set custom attribute for study metadata\r\n    const numberOfAvailablePriors = this.getNumberOfAvailablePriors(\r\n      study.getObjectID()\r\n    );\r\n\r\n    this.protocolStore.getProtocol().forEach(protocol => {\r\n      // Clone the protocol's protocolMatchingRules array\r\n      // We clone it so that we don't accidentally add the\r\n      // numberOfPriorsReferenced rule to the Protocol itself.\r\n      let rules = protocol.protocolMatchingRules.slice();\r\n      if (!rules) {\r\n        return;\r\n      }\r\n\r\n      // Check if the study has the minimun number of priors used by the protocol.\r\n      const numberOfPriorsReferenced = protocol.getNumberOfPriorsReferenced();\r\n      if (numberOfPriorsReferenced > numberOfAvailablePriors) {\r\n        return;\r\n      }\r\n\r\n      // Run the matcher and get matching details\r\n      const matchedDetails = HPMatcher.match(studyInstance, rules);\r\n      const score = matchedDetails.score;\r\n\r\n      // The protocol matched some rule, add it to the matched list\r\n      if (score > 0) {\r\n        matched.push({\r\n          score,\r\n          protocol,\r\n        });\r\n      }\r\n    });\r\n\r\n    // If no matches were found, select the default protocol\r\n    if (!matched.length) {\r\n      const defaultProtocol = this.protocolStore.getProtocol('defaultProtocol');\r\n\r\n      return [\r\n        {\r\n          score: 1,\r\n          protocol: defaultProtocol,\r\n        },\r\n      ];\r\n    }\r\n\r\n    // Sort the matched list by score\r\n    sortByScore(matched);\r\n\r\n    log.trace('ProtocolEngine::findMatchByStudy matched', matched);\r\n\r\n    return matched;\r\n  }\r\n\r\n  _clearMatchedProtocols() {\r\n    this.matchedProtocols.clear();\r\n    this.matchedProtocolScores = {};\r\n  }\r\n  /**\r\n   * Populates the MatchedProtocols Collection by running the matching procedure\r\n   */\r\n  updateProtocolMatches() {\r\n    log.trace('ProtocolEngine::updateProtocolMatches');\r\n\r\n    // Clear all data currently in matchedProtocols\r\n    this._clearMatchedProtocols();\r\n\r\n    // For each study, find the matching protocols\r\n    this.studies.forEach(study => {\r\n      const matched = this.findMatchByStudy(study);\r\n\r\n      // For each matched protocol, check if it is already in MatchedProtocols\r\n      matched.forEach(matchedDetail => {\r\n        const protocol = matchedDetail.protocol;\r\n        if (!protocol) {\r\n          return;\r\n        }\r\n\r\n        // If it is not already in the MatchedProtocols Collection, insert it with its score\r\n        if (!this.matchedProtocols.has(protocol.id)) {\r\n          log.trace(\r\n            'ProtocolEngine::updateProtocolMatches inserting protocol match',\r\n            matchedDetail\r\n          );\r\n          this.matchedProtocols.set(protocol.id, protocol);\r\n          this.matchedProtocolScores[protocol.id] = matchedDetail.score;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  _largestKeyByValue(obj) {\r\n    return Object.keys(obj).reduce((a, b) => (obj[a] > obj[b] ? a : b));\r\n  }\r\n\r\n  _getHighestScoringProtocol() {\r\n    if (!Object.keys(this.matchedProtocolScores).length) {\r\n      return this.protocolStore.getProtocol('defaultProtocol');\r\n    }\r\n    const highestScoringProtocolId = this._largestKeyByValue(\r\n      this.matchedProtocolScores\r\n    );\r\n    return this.matchedProtocols.get(highestScoringProtocolId);\r\n  }\r\n\r\n  /**\r\n   * Return the best matched Protocol to the current study or set of studies\r\n   * @returns {*}\r\n   */\r\n  getBestProtocolMatch() {\r\n    // Run the matching to populate matchedProtocols Set and Map\r\n    this.updateProtocolMatches();\r\n\r\n    // Retrieve the highest scoring Protocol\r\n    const bestMatch = this._getHighestScoringProtocol();\r\n\r\n    log.trace('ProtocolEngine::getBestProtocolMatch bestMatch', bestMatch);\r\n\r\n    return bestMatch;\r\n  }\r\n\r\n  /**\r\n   * Get the number of prior studies supplied in the priorStudies map property.\r\n   *\r\n   * @param {String} studyObjectID The study object ID of the study whose priors are needed\r\n   * @returns {number} The number of available prior studies with the same PatientID\r\n   */\r\n  getNumberOfAvailablePriors(studyObjectID) {\r\n    return this.getAvailableStudyPriors(studyObjectID).length;\r\n  }\r\n\r\n  /**\r\n   * Get the array of prior studies from a specific study.\r\n   *\r\n   * @param {String} studyObjectID The study object ID of the study whose priors are needed\r\n   * @returns {Array} The array of available priors or an empty array\r\n   */\r\n  getAvailableStudyPriors(studyObjectID) {\r\n    const priors = this.priorStudies.get(studyObjectID);\r\n\r\n    return priors instanceof Array ? priors : [];\r\n  }\r\n\r\n  // Match images given a list of Studies and a Viewport's image matching reqs\r\n  matchImages(viewport, viewportIndex) {\r\n    log.trace('ProtocolEngine::matchImages');\r\n\r\n    const {\r\n      studyMatchingRules,\r\n      seriesMatchingRules,\r\n      imageMatchingRules: instanceMatchingRules,\r\n    } = viewport;\r\n\r\n    const matchingScores = [];\r\n    const currentStudy = this.studies[0]; // @TODO: Should this be: this.studies[this.currentStudy] ???\r\n    const firstInstance = currentStudy.getFirstInstance();\r\n\r\n    let highestStudyMatchingScore = 0;\r\n    let highestSeriesMatchingScore = 0;\r\n\r\n    // Set custom attribute for study metadata and it's first instance\r\n    currentStudy.setCustomAttribute(ABSTRACT_PRIOR_VALUE, 0);\r\n    if (firstInstance instanceof InstanceMetadata) {\r\n      firstInstance.setCustomAttribute(ABSTRACT_PRIOR_VALUE, 0);\r\n    }\r\n\r\n    // Only used if study matching rules has abstract prior values defined...\r\n    let priorStudies;\r\n\r\n    studyMatchingRules.forEach(rule => {\r\n      if (rule.attribute === ABSTRACT_PRIOR_VALUE) {\r\n        const validatorType = Object.keys(rule.constraint)[0];\r\n        const validator = Object.keys(rule.constraint[validatorType])[0];\r\n\r\n        let abstractPriorValue = rule.constraint[validatorType][validator];\r\n        abstractPriorValue = parseInt(abstractPriorValue, 10);\r\n        // TODO: Restrict or clarify validators for abstractPriorValue?\r\n\r\n        // No need to call it more than once...\r\n        if (!priorStudies) {\r\n          priorStudies = this.getAvailableStudyPriors(\r\n            currentStudy.getObjectID()\r\n          );\r\n        }\r\n\r\n        // TODO: Revisit this later: What about two studies with the same\r\n        // study date?\r\n\r\n        let priorStudy;\r\n        if (abstractPriorValue === -1) {\r\n          priorStudy = priorStudies[priorStudies.length - 1];\r\n        } else {\r\n          const studyIndex = Math.max(abstractPriorValue - 1, 0);\r\n          priorStudy = priorStudies[studyIndex];\r\n        }\r\n\r\n        // Invalid data\r\n        if (!priorStudy instanceof StudyMetadata) {\r\n          return;\r\n        }\r\n\r\n        const priorStudyObjectID = priorStudy.getObjectID();\r\n\r\n        // Check if study metadata is already in studies list\r\n        if (\r\n          this.studies.find(study => study.getObjectID() === priorStudyObjectID)\r\n        ) {\r\n          return;\r\n        }\r\n\r\n        // Get study metadata if necessary and load study in the viewer (each viewer should provide it's own load study method)\r\n        this.studyMetadataSource.loadStudy(priorStudy).then(\r\n          studyMetadata => {\r\n            // Set the custom attribute abstractPriorValue for the study metadata\r\n            studyMetadata.setCustomAttribute(\r\n              ABSTRACT_PRIOR_VALUE,\r\n              abstractPriorValue\r\n            );\r\n\r\n            // Also add custom attribute\r\n            const firstInstance = studyMetadata.getFirstInstance();\r\n            if (firstInstance instanceof InstanceMetadata) {\r\n              firstInstance.setCustomAttribute(\r\n                ABSTRACT_PRIOR_VALUE,\r\n                abstractPriorValue\r\n              );\r\n            }\r\n\r\n            // Insert the new study metadata\r\n            this.studies.push(studyMetadata);\r\n\r\n            // Update the viewport to refresh layout manager with new study\r\n            this.updateViewports(viewportIndex);\r\n          },\r\n          error => {\r\n            log.warn(error);\r\n            throw new OHIFError(\r\n              `ProtocolEngine::matchImages could not get study metadata for the Study with the following ObjectID: ${priorStudyObjectID}`\r\n            );\r\n          }\r\n        );\r\n      }\r\n      // TODO: Add relative Date / time\r\n    });\r\n\r\n    this.studies.forEach(study => {\r\n      const studyMatchDetails = HPMatcher.match(\r\n        study.getFirstInstance(),\r\n        studyMatchingRules\r\n      );\r\n\r\n      // Prevent bestMatch from being updated if the matchDetails' required attribute check has failed\r\n      if (\r\n        studyMatchDetails.requiredFailed === true ||\r\n        studyMatchDetails.score < highestStudyMatchingScore\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      highestStudyMatchingScore = studyMatchDetails.score;\r\n\r\n      study.forEachSeries(series => {\r\n        const seriesMatchDetails = HPMatcher.match(\r\n          series.getFirstInstance(),\r\n          seriesMatchingRules\r\n        );\r\n\r\n        // Prevent bestMatch from being updated if the matchDetails' required attribute check has failed\r\n        if (\r\n          seriesMatchDetails.requiredFailed === true ||\r\n          seriesMatchDetails.score < highestSeriesMatchingScore\r\n        ) {\r\n          return;\r\n        }\r\n\r\n        highestSeriesMatchingScore = seriesMatchDetails.score;\r\n\r\n        series.forEachInstance((instance, index) => {\r\n          // This tests to make sure there is actually image data in this instance\r\n          // TODO: Change this when we add PDF and MPEG support\r\n          // See https://ohiforg.atlassian.net/browse/LT-227\r\n          if (\r\n            !isImage(instance.getTagValue('SOPClassUID')) &&\r\n            !instance.getTagValue('Rows')\r\n          ) {\r\n            return;\r\n          }\r\n\r\n          const instanceMatchDetails = HPMatcher.match(\r\n            instance,\r\n            instanceMatchingRules\r\n          );\r\n\r\n          // Prevent bestMatch from being updated if the matchDetails' required attribute check has failed\r\n          if (instanceMatchDetails.requiredFailed === true) {\r\n            return;\r\n          }\r\n\r\n          const matchDetails = {\r\n            passed: [],\r\n            failed: [],\r\n          };\r\n\r\n          matchDetails.passed = matchDetails.passed.concat(\r\n            instanceMatchDetails.details.passed\r\n          );\r\n          matchDetails.passed = matchDetails.passed.concat(\r\n            seriesMatchDetails.details.passed\r\n          );\r\n          matchDetails.passed = matchDetails.passed.concat(\r\n            studyMatchDetails.details.passed\r\n          );\r\n\r\n          matchDetails.failed = matchDetails.failed.concat(\r\n            instanceMatchDetails.details.failed\r\n          );\r\n          matchDetails.failed = matchDetails.failed.concat(\r\n            seriesMatchDetails.details.failed\r\n          );\r\n          matchDetails.failed = matchDetails.failed.concat(\r\n            studyMatchDetails.details.failed\r\n          );\r\n\r\n          const totalMatchScore =\r\n            instanceMatchDetails.score +\r\n            seriesMatchDetails.score +\r\n            studyMatchDetails.score;\r\n          const currentSOPInstanceUID = instance.getSOPInstanceUID();\r\n\r\n          const imageDetails = {\r\n            StudyInstanceUID: study.getStudyInstanceUID(),\r\n            SeriesInstanceUID: series.getSeriesInstanceUID(),\r\n            SOPInstanceUID: currentSOPInstanceUID,\r\n            currentImageIdIndex: index,\r\n            matchingScore: totalMatchScore,\r\n            matchDetails: matchDetails,\r\n            sortingInfo: {\r\n              score: totalMatchScore,\r\n              study:\r\n                instance.getTagValue('StudyDate') +\r\n                instance.getTagValue('StudyTime'),\r\n              series: parseInt(instance.getTagValue('SeriesNumber')), // TODO: change for seriesDateTime\r\n              instance: parseInt(instance.getTagValue('InstanceNumber')), // TODO: change for acquisitionTime\r\n            },\r\n          };\r\n\r\n          // Find the displaySet\r\n          const displaySet = study.findDisplaySet(displaySet =>\r\n            displaySet.images.find(\r\n              image => image.getSOPInstanceUID() === currentSOPInstanceUID\r\n            )\r\n          );\r\n\r\n          // If the instance was found, set the displaySet ID\r\n          if (displaySet) {\r\n            imageDetails.displaySetInstanceUID = displaySet.getUID();\r\n            imageDetails.imageId = instance.getImageId();\r\n          }\r\n\r\n          matchingScores.push(imageDetails);\r\n        });\r\n      });\r\n    });\r\n\r\n    // Sort the matchingScores\r\n    const sortingFunction = sortBy(\r\n      {\r\n        name: 'score',\r\n        reverse: true,\r\n      },\r\n      {\r\n        name: 'study',\r\n        reverse: true,\r\n      },\r\n      {\r\n        name: 'instance',\r\n      },\r\n      {\r\n        name: 'series',\r\n      }\r\n    );\r\n    matchingScores.sort((a, b) =>\r\n      sortingFunction(a.sortingInfo, b.sortingInfo)\r\n    );\r\n\r\n    const bestMatch = matchingScores[0];\r\n\r\n    log.trace('ProtocolEngine::matchImages bestMatch', bestMatch);\r\n\r\n    return {\r\n      bestMatch,\r\n      matchingScores,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Sets the current layout\r\n   *\r\n   * @param {number} numRows\r\n   * @param {number} numColumns\r\n   */\r\n  setLayout(numRows, numColumns) {\r\n    if (numRows < 1 && numColumns < 1) {\r\n      log.error(`Invalid layout ${numRows} x ${numColumns}`);\r\n      return;\r\n    }\r\n\r\n    if (typeof this.options.setLayout !== 'function') {\r\n      log.error('Hanging Protocol Engine setLayout callback is not defined');\r\n      return;\r\n    }\r\n\r\n    let viewports = [];\r\n    const numViewports = numRows * numColumns;\r\n\r\n    for (let i = 0; i < numViewports; i++) {\r\n      viewports.push({});\r\n    }\r\n\r\n    this.options.setLayout({ numRows, numColumns, viewports });\r\n  }\r\n\r\n  /**\r\n   * Rerenders viewports that are part of the current layout manager\r\n   * using the matching rules internal to each viewport.\r\n   *\r\n   * If this function is provided the index of a viewport, only the specified viewport\r\n   * is rerendered.\r\n   *\r\n   * @param viewportIndex\r\n   */\r\n  updateViewports(viewportIndex) {\r\n    log.trace(\r\n      `ProtocolEngine::updateViewports viewportIndex: ${viewportIndex}`\r\n    );\r\n\r\n    // Make sure we have an active protocol with a non-empty array of display sets\r\n    if (!this.getNumProtocolStages()) {\r\n      return;\r\n    }\r\n\r\n    // Retrieve the current stage\r\n    const stageModel = this.getCurrentStageModel();\r\n\r\n    // If the current stage does not fulfill the requirements to be displayed,\r\n    // stop here.\r\n    if (\r\n      !stageModel ||\r\n      !stageModel.viewportStructure ||\r\n      !stageModel.viewports ||\r\n      !stageModel.viewports.length\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // Retrieve the layoutTemplate associated with the current display set's viewport structure\r\n    // If no such template name exists, stop here.\r\n    const layoutTemplateName = stageModel.viewportStructure.getLayoutTemplateName();\r\n    if (!layoutTemplateName) {\r\n      return;\r\n    }\r\n\r\n    // Retrieve the properties associated with the current display set's viewport structure template\r\n    // If no such layout properties exist, stop here.\r\n    const layoutProps = stageModel.viewportStructure.properties;\r\n    if (!layoutProps) {\r\n      return;\r\n    }\r\n\r\n    // Create an empty array to store the output viewportData\r\n    const viewportData = [];\r\n\r\n    // Empty the matchDetails associated with the ProtocolEngine.\r\n    // This will be used to store the pass/fail details and score\r\n    // for each of the viewport matching procedures\r\n    this.matchDetails = [];\r\n\r\n    // Loop through each viewport\r\n    stageModel.viewports.forEach((viewport, viewportIndex) => {\r\n      const details = this.matchImages(viewport, viewportIndex);\r\n\r\n      this.matchDetails[viewportIndex] = details;\r\n\r\n      // Convert any YES/NO values into true/false for Cornerstone\r\n      const cornerstoneViewportParams = {};\r\n\r\n      // Cache viewportSettings keys\r\n      const viewportSettingsKeys = Object.keys(viewport.viewportSettings);\r\n\r\n      viewportSettingsKeys.forEach(key => {\r\n        let value = viewport.viewportSettings[key];\r\n        if (value === 'YES') {\r\n          value = true;\r\n        } else if (value === 'NO') {\r\n          value = false;\r\n        }\r\n\r\n        cornerstoneViewportParams[key] = value;\r\n      });\r\n\r\n      // imageViewerViewports occasionally needs relevant layout data in order to set\r\n      // the element style of the viewport in question\r\n      const currentViewportData = {\r\n        viewportIndex,\r\n        viewport: cornerstoneViewportParams,\r\n        ...layoutProps,\r\n      };\r\n\r\n      const customSettings = [];\r\n      viewportSettingsKeys.forEach(id => {\r\n        const setting = CustomViewportSettings[id];\r\n        if (!setting) {\r\n          return;\r\n        }\r\n\r\n        customSettings.push({\r\n          id: id,\r\n          value: viewport.viewportSettings[id],\r\n        });\r\n      });\r\n\r\n      currentViewportData.renderedCallback = element => {\r\n        //console.log('renderedCallback for ' + element.id);\r\n        customSettings.forEach(customSetting => {\r\n          log.trace(\r\n            `ProtocolEngine::currentViewportData.renderedCallback Applying custom setting: ${customSetting.id}`\r\n          );\r\n          log.trace(\r\n            `ProtocolEngine::currentViewportData.renderedCallback with value: ${customSetting.value}`\r\n          );\r\n\r\n          const setting = CustomViewportSettings[customSetting.id];\r\n          setting.callback(element, customSetting.value);\r\n        });\r\n      };\r\n\r\n      let currentMatch = details.bestMatch;\r\n      let currentPosition = 1;\r\n      const scoresLength = details.matchingScores.length;\r\n      while (\r\n        currentPosition < scoresLength &&\r\n        viewportData.find(a => a.imageId === currentMatch.imageId)\r\n      ) {\r\n        currentMatch = details.matchingScores[currentPosition];\r\n        currentPosition++;\r\n      }\r\n\r\n      if (currentMatch && currentMatch.imageId) {\r\n        currentViewportData.StudyInstanceUID = currentMatch.StudyInstanceUID;\r\n        currentViewportData.SeriesInstanceUID = currentMatch.SeriesInstanceUID;\r\n        currentViewportData.SOPInstanceUID = currentMatch.SOPInstanceUID;\r\n        currentViewportData.currentImageIdIndex =\r\n          currentMatch.currentImageIdIndex;\r\n        currentViewportData.displaySetInstanceUID =\r\n          currentMatch.displaySetInstanceUID;\r\n        currentViewportData.imageId = currentMatch.imageId;\r\n      }\r\n\r\n      // @TODO Why should we throw an exception when a best match is not found? This was aborting the whole process.\r\n      // if (!currentViewportData.displaySetInstanceUID) {\r\n      //     throw new OHIFError('ProtocolEngine::updateViewports No matching display set found?');\r\n      // }\r\n\r\n      viewportData.push(currentViewportData);\r\n    });\r\n\r\n    this.setLayout(layoutProps.Rows, layoutProps.Columns);\r\n\r\n    if (typeof this.options.setViewportSpecificData !== 'function') {\r\n      log.error(\r\n        'Hanging Protocol Engine setViewportSpecificData callback is not defined'\r\n      );\r\n      return;\r\n    }\r\n\r\n    // If viewportIndex is defined, then update only that viewport\r\n    if (viewportIndex !== undefined && viewportData[viewportIndex]) {\r\n      this.options.setViewportSpecificData(\r\n        viewportIndex,\r\n        viewportData[viewportIndex]\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Update all viewports\r\n    viewportData.forEach(viewportSpecificData => {\r\n      this.options.setViewportSpecificData(\r\n        viewportSpecificData.viewportIndex,\r\n        viewportSpecificData\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets the current Hanging Protocol to the specified Protocol\r\n   * An optional argument can also be used to prevent the updating of the Viewports\r\n   *\r\n   * @param newProtocol\r\n   * @param updateViewports\r\n   */\r\n  setHangingProtocol(newProtocol, updateViewports = true) {\r\n    log.trace('ProtocolEngine::setHangingProtocol newProtocol', newProtocol);\r\n    log.trace(\r\n      `ProtocolEngine::setHangingProtocol updateViewports = ${updateViewports}`\r\n    );\r\n\r\n    // Reset the array of newStageIds\r\n    this.newStageIds = [];\r\n\r\n    if (Protocol.prototype.isPrototypeOf(newProtocol)) {\r\n      this.protocol = newProtocol;\r\n    } else {\r\n      this.protocol = new Protocol();\r\n      this.protocol.fromObject(newProtocol);\r\n    }\r\n\r\n    this.stage = 0;\r\n\r\n    // Update viewports by default\r\n    if (updateViewports) {\r\n      this.updateViewports();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if the next stage is available\r\n   * @return {Boolean} True if next stage is available or false otherwise\r\n   */\r\n  isNextStageAvailable() {\r\n    const numberOfStages = this.getNumProtocolStages();\r\n\r\n    return this.stage + 1 < numberOfStages;\r\n  }\r\n\r\n  /**\r\n   * Check if the previous stage is available\r\n   * @return {Boolean} True if previous stage is available or false otherwise\r\n   */\r\n  isPreviousStageAvailable() {\r\n    return this.stage - 1 >= 0;\r\n  }\r\n\r\n  /**\r\n   * Changes the current stage to a new stage index in the display set sequence.\r\n   * It checks if the next stage exists.\r\n   *\r\n   * @param {Integer} stageAction An integer value specifying wheater next (1) or previous (-1) stage\r\n   * @return {Boolean} True if new stage has set or false, otherwise\r\n   */\r\n  setCurrentProtocolStage(stageAction) {\r\n    // Check if previous or next stage is available\r\n    if (stageAction === -1 && !this.isPreviousStageAvailable()) {\r\n      return false;\r\n    } else if (stageAction === 1 && !this.isNextStageAvailable()) {\r\n      return false;\r\n    }\r\n\r\n    // Sets the new stage\r\n    this.stage += stageAction;\r\n\r\n    // Log the new stage\r\n    log.trace(`ProtocolEngine::setCurrentProtocolStage stage = ${this.stage}`);\r\n\r\n    // Since stage has changed, we need to update the viewports\r\n    // and redo matchings\r\n    this.updateViewports();\r\n\r\n    // Everything went well\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Retrieves the number of Stages in the current Protocol or\r\n   * undefined if no protocol or stages are set\r\n   */\r\n  getNumProtocolStages() {\r\n    if (\r\n      !this.protocol ||\r\n      !this.protocol.stages ||\r\n      !this.protocol.stages.length\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    return this.protocol.stages.length;\r\n  }\r\n\r\n  /**\r\n   * Switches to the next protocol stage in the display set sequence\r\n   */\r\n  nextProtocolStage() {\r\n    log.trace('ProtocolEngine::nextProtocolStage');\r\n\r\n    if (!this.setCurrentProtocolStage(1)) {\r\n      log.trace('ProtocolEngine::nextProtocolStage failed');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Switches to the previous protocol stage in the display set sequence\r\n   */\r\n  previousProtocolStage() {\r\n    log.trace('ProtocolEngine::previousProtocolStage');\r\n\r\n    if (!this.setCurrentProtocolStage(-1)) {\r\n      log.trace('ProtocolEngine::previousProtocolStage failed');\r\n    }\r\n  }\r\n}\r\n","// Sorts an array by score\r\nconst sortByScore = arr => {\r\n  arr.sort((a, b) => {\r\n    return b.score - a.score;\r\n  });\r\n};\r\n\r\nexport { sortByScore };\r\n","import Protocol from '../../classes/Protocol';\r\n\r\n// The ProtocolStore class allows persisting hanging protocols using different strategies.\r\n// For example, one strategy stores hanging protocols in the application server while\r\n// another strategy stores them in a remote machine, but only one strategy can be used at a time.\r\n\r\nexport default class ProtocolStore {\r\n  constructor(strategy) {\r\n    this.strategy = strategy;\r\n  }\r\n\r\n  /**\r\n   * Get a Protocol instance or array of Protocol instances for the given protocol object or array\r\n   * @param  {Object|array} protocolObject Protocol plain object or array of Protocol plain objects\r\n   * @return {Protocol|array} Protocol instance or array of Protocol intances for the given protocol object or array\r\n   */\r\n  static getProtocolInstance(protocolObject) {\r\n    let result = protocolObject;\r\n\r\n    // If result is an array of protocols objects\r\n    if (result instanceof Array) {\r\n      result.forEach((protocol, index) => {\r\n        // Check if protocol is an instance of Protocol\r\n        if (!(protocol instanceof Protocol)) {\r\n          const protocolInstance = new Protocol();\r\n          protocolInstance.fromObject(protocol);\r\n          result[index] = protocolInstance;\r\n        }\r\n      });\r\n    } else if (result !== void 0 && !(result instanceof Protocol)) {\r\n      // Check if result exists and is not an instance of Protocol\r\n      const protocolInstance = new Protocol();\r\n      protocolInstance.fromObject(result);\r\n      result = protocolInstance;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Registers a function to be called when the protocol store is ready to persist hanging protocols\r\n   *\r\n   * NOTE: Strategies should implement this function\r\n   *\r\n   * @param callback The function to be called as a callback\r\n   */\r\n  onReady(callback) {\r\n    this.strategy.onReady(callback);\r\n  }\r\n\r\n  /**\r\n   * Gets the hanging protocol by protocolId if defined, otherwise all stored hanging protocols\r\n   *\r\n   * NOTE: Strategies should implement this function\r\n   *\r\n   * @param protocolId The protocol ID used to find the hanging protocol\r\n   * @returns {object|array} The hanging protocol by protocolId or array of the stored hanging protocols\r\n   */\r\n  getProtocol(protocolId) {\r\n    let result = this.strategy.getProtocol(protocolId);\r\n    return ProtocolStore.getProtocolInstance(result);\r\n  }\r\n\r\n  /**\r\n   * Stores the hanging protocol\r\n   *\r\n   * NOTE: Strategies should implement this function\r\n   *\r\n   * @param protocol The hanging protocol to be stored\r\n   */\r\n  addProtocol(protocol) {\r\n    this.strategy.addProtocol(protocol);\r\n  }\r\n\r\n  /**\r\n   * Updates the hanging protocol by protocolId\r\n   *\r\n   * NOTE: Strategies should implement this function\r\n   *\r\n   * @param protocolId The protocol ID used to find the hanging protocol to update\r\n   * @param protocol The updated hanging protocol\r\n   */\r\n  updateProtocol(protocolId, protocol) {\r\n    this.strategy.updateProtocol(protocolId, protocol);\r\n  }\r\n\r\n  /**\r\n   * Removes the hanging protocol\r\n   *\r\n   * NOTE: Strategies should implement this function\r\n   *\r\n   * @param protocolId The protocol ID used to remove the hanging protocol\r\n   */\r\n  removeProtocol(protocolId) {\r\n    this.strategy.removeProtocol(protocolId);\r\n  }\r\n}\r\n","import Protocol from '../classes/Protocol';\r\nimport ViewportStructure from '../classes/ViewportStructure';\r\nimport Viewport from '../classes/Viewport';\r\nimport Stage from '../classes/Stage';\r\n\r\nfunction getDefaultProtocol() {\r\n  const protocol = new Protocol('Default');\r\n  protocol.id = 'defaultProtocol';\r\n  protocol.locked = true;\r\n\r\n  const oneByOne = new ViewportStructure('grid', {\r\n    Rows: 1,\r\n    Columns: 1,\r\n  });\r\n\r\n  const viewport = new Viewport();\r\n  const first = new Stage(oneByOne, 'oneByOne');\r\n  first.viewports.push(viewport);\r\n\r\n  protocol.stages.push(first);\r\n\r\n  return protocol;\r\n}\r\n\r\nconst defaultProtocol = getDefaultProtocol();\r\n\r\nexport default defaultProtocol;\r\n","import ProtocolEngine from './ProtocolEngine.js';\r\nimport { ProtocolStore, ProtocolStrategy } from './protocolStore';\r\nimport { addCustomAttribute } from './customAttributes';\r\nimport { addCustomViewportSetting } from './customViewportSettings';\r\n\r\nconst hangingProtocols = {\r\n  ProtocolEngine,\r\n  ProtocolStore,\r\n  ProtocolStrategy,\r\n  addCustomAttribute,\r\n  addCustomViewportSetting,\r\n};\r\n\r\nexport default hangingProtocols;\r\n","import log from '../../../log';\r\nimport defaultProtocol from '../defaultProtocol';\r\n\r\nexport default class ProtocolStrategy {\r\n  constructor() {\r\n    this.hangingProtocols = new Map();\r\n    this.defaultsAdded = false;\r\n  }\r\n\r\n  /**\r\n   * Registers a function to be called when the hangingProtocols collection is subscribed\r\n   * The callback is called only one time when the subscription is ready\r\n   *\r\n   * @param callback The function to be called as a callback\r\n   */\r\n  onReady(callback) {\r\n    if (!this.defaultsAdded) {\r\n      log.info('Inserting the default hanging protocol...');\r\n      this.addProtocol(defaultProtocol);\r\n      this.defaultsAdded = true;\r\n    }\r\n\r\n    callback();\r\n  }\r\n\r\n  /**\r\n   * Gets the hanging protocol by protocolId if defined, otherwise all stored hanging protocols\r\n   *\r\n   * @param protocolId The protocol ID used to find the hanging protocol\r\n   * @returns {object|array} The hanging protocol by protocolId or array of the stored hanging protocols\r\n   */\r\n  getProtocol(protocolId) {\r\n    // Return the hanging protocol by protocolId if defined\r\n    if (protocolId) {\r\n      return this.hangingProtocols.get(protocolId);\r\n    }\r\n\r\n    // Otherwise, return all protocols\r\n    return Array.from(this.hangingProtocols.values());\r\n  }\r\n\r\n  /**\r\n   * Stores the hanging protocol\r\n   *\r\n   * @param protocol The hanging protocol to be stored\r\n   */\r\n  addProtocol(protocol) {\r\n    this.hangingProtocols.set(protocol.id, protocol);\r\n  }\r\n\r\n  /**\r\n   * Updates the hanging protocol by protocolId\r\n   *\r\n   * @param protocolId The protocol ID used to find the hanging protocol to update\r\n   * @param protocol The updated hanging protocol\r\n   */\r\n  updateProtocol(protocolId, protocol) {\r\n    if (!this.hangingProtocols.has(protocolId)) {\r\n      return;\r\n    }\r\n\r\n    this.hangingProtocols.set(protocolId, protocol);\r\n  }\r\n\r\n  /**\r\n   * Removes the hanging protocol\r\n   *\r\n   * @param protocolId The protocol ID used to remove the hanging protocol\r\n   */\r\n  removeProtocol(protocolId) {\r\n    if (!this.hangingProtocols.has(protocolId)) {\r\n      return;\r\n    }\r\n\r\n    this.hangingProtocols.delete(protocolId);\r\n  }\r\n}\r\n","//import Dropdown from './ui/dropdown/class.js';\r\n\r\n/*\r\n * Defines the base OHIF header object\r\n */\r\n//const dropdown = new OHIF.ui.Dropdown();\r\nconst header = {};\r\n\r\nexport default header;\r\n","// Transforms a shallow object with keys separated by \".\" into a nested object\r\nfunction getNestedObject(shallowObject) {\r\n  const nestedObject = {};\r\n  for (let key in shallowObject) {\r\n    if (!shallowObject.hasOwnProperty(key)) continue;\r\n    const value = shallowObject[key];\r\n    const propertyArray = key.split('.');\r\n    let currentObject = nestedObject;\r\n    while (propertyArray.length) {\r\n      const currentProperty = propertyArray.shift();\r\n      if (!propertyArray.length) {\r\n        currentObject[currentProperty] = value;\r\n      } else {\r\n        if (!currentObject[currentProperty]) {\r\n          currentObject[currentProperty] = {};\r\n        }\r\n\r\n        currentObject = currentObject[currentProperty];\r\n      }\r\n    }\r\n  }\r\n\r\n  return nestedObject;\r\n}\r\n\r\n// Transforms a nested object into a shallowObject merging its keys with \".\" character\r\nfunction getShallowObject(nestedObject) {\r\n  const shallowObject = {};\r\n  const putValues = (baseKey, nestedObject, resultObject) => {\r\n    for (let key in nestedObject) {\r\n      if (!nestedObject.hasOwnProperty(key)) continue;\r\n      let currentKey = baseKey ? `${baseKey}.${key}` : key;\r\n      const currentValue = nestedObject[key];\r\n      if (typeof currentValue === 'object') {\r\n        if (currentValue instanceof Array) {\r\n          currentKey += '[]';\r\n        }\r\n\r\n        putValues(currentKey, currentValue, resultObject);\r\n      } else {\r\n        resultObject[currentKey] = currentValue;\r\n      }\r\n    }\r\n  };\r\n\r\n  putValues('', nestedObject, shallowObject);\r\n  return shallowObject;\r\n}\r\n\r\nconst object = {\r\n  getNestedObject,\r\n  getShallowObject,\r\n};\r\n\r\nexport default object;\r\n","// TODO: This is duplicated in TypeSafeCollection\r\nfunction isObject(subject) {\r\n  return (\r\n    subject instanceof Object ||\r\n    (typeof subject === 'object' && subject !== null)\r\n  );\r\n}\r\n\r\n// TODO: This is duplicated in TypeSafeCollection\r\nfunction isString(subject) {\r\n  return typeof subject === 'string';\r\n}\r\n\r\n// Search for some string inside any object or array\r\nfunction search(object, query, property = null, result = []) {\r\n  // Create the search pattern\r\n  const pattern = new RegExp(query.trim(), 'i');\r\n\r\n  Object.keys(object).forEach(key => {\r\n    const item = object[key];\r\n\r\n    // Stop here if item is empty\r\n    if (!item) {\r\n      return;\r\n    }\r\n\r\n    // Get the value to be compared\r\n    const value = isString(property) ? item[property] : item;\r\n\r\n    // Check if the value match the pattern\r\n    if (isString(value) && pattern.test(value)) {\r\n      // Add the current item to the result\r\n      result.push(item);\r\n    }\r\n\r\n    if (isObject(item)) {\r\n      // Search recursively the item if the current item is an object\r\n      search(item, query, property, result);\r\n    }\r\n  });\r\n\r\n  // Return the found items\r\n  return result;\r\n}\r\n\r\n// Encode any string into a safe format for HTML id attribute\r\nfunction encodeId(input) {\r\n  const string = input && input.toString ? input.toString() : input;\r\n\r\n  // Return an underscore if the given string is empty or if it's not a string\r\n  if (string === '' || typeof string !== 'string') {\r\n    return '_';\r\n  }\r\n\r\n  // Create a converter to replace non accepted chars\r\n  const converter = match => '_' + match[0].charCodeAt(0).toString(16) + '_';\r\n\r\n  // Encode the given string and return it\r\n  return string.replace(/[^a-zA-Z0-9-]/g, converter);\r\n}\r\n\r\nconst string = {\r\n  search,\r\n  encodeId,\r\n};\r\n\r\nexport default string;\r\n","import unsavedChanges from './unsavedChanges.js';\r\nimport handleError from './handleError.js';\r\nimport isCharacterKeyPress from './isCharacterKeyPress.js';\r\nimport getOffset from './getOffset.js';\r\nimport getScrollbarSize from './getScrollbarSize.js';\r\n\r\nconst ui = {\r\n  getScrollbarSize,\r\n  getOffset,\r\n  isCharacterKeyPress,\r\n  handleError,\r\n};\r\n\r\nexport default ui;\r\n","/**\r\n * Get the vertical and horizontal scrollbar sizes\r\n * Got from https://stackoverflow.com/questions/986937/how-can-i-get-the-browsers-scrollbar-sizes\r\n *\r\n * @returns {Array} Array containing the scrollbar horizontal and vertical sizes\r\n */\r\nexport default function getScrollbarSize() {\r\n  const inner = document.createElement('p');\r\n  inner.style.width = '100%';\r\n  inner.style.height = '100%';\r\n\r\n  const outer = document.createElement('div');\r\n  outer.style.position = 'absolute';\r\n  outer.style.top = '0px';\r\n  outer.style.left = '0px';\r\n  outer.style.visibility = 'hidden';\r\n  outer.style.width = '100px';\r\n  outer.style.height = '100px';\r\n  outer.style.overflow = 'hidden';\r\n  outer.appendChild(inner);\r\n\r\n  document.body.appendChild(outer);\r\n\r\n  const w1 = inner.offsetWidth;\r\n  const h1 = inner.offsetHeight;\r\n  outer.style.overflow = 'scroll';\r\n  let w2 = inner.offsetWidth;\r\n  let h2 = inner.offsetHeight;\r\n\r\n  if (w1 === w2) {\r\n    w2 = outer.clientWidth;\r\n  }\r\n\r\n  if (h1 === h2) {\r\n    h2 = outer.clientHeight;\r\n  }\r\n\r\n  document.body.removeChild(outer);\r\n\r\n  return [w1 - w2, h1 - h2];\r\n}\r\n","/**\r\n * Get the offset for the given element\r\n *\r\n * @param {Object} element DOM element which will have the offser calculated\r\n * @returns {Object} Object containing the top and left offset\r\n */\r\nexport default function getOffset(element) {\r\n  let top = 0;\r\n  let left = 0;\r\n  if (element.offsetParent) {\r\n    do {\r\n      left += element.offsetLeft;\r\n      top += element.offsetTop;\r\n    } while ((element = element.offsetParent));\r\n  }\r\n\r\n  return {\r\n    left,\r\n    top,\r\n  };\r\n}\r\n","/**\r\n * Check if the pressed key combination will result in a character input\r\n * Got from https://stackoverflow.com/questions/4179708/how-to-detect-if-the-pressed-key-will-produce-a-character-inside-an-input-text\r\n *\r\n * @returns {Boolean} Whether the pressed key combination will input a character or not\r\n */\r\nexport default function isCharacterKeyPress(event) {\r\n  if (typeof event.which === 'undefined') {\r\n    // This is IE, which only fires keypress events for printable keys\r\n    return true;\r\n  } else if (typeof event.which === 'number' && event.which > 0) {\r\n    // In other browsers except old versions of WebKit, event.which is\r\n    // only greater than zero if the keypress is a printable key.\r\n    // We need to filter out backspace and ctrl/alt/meta key combinations\r\n    return (\r\n      !event.ctrlKey && !event.metaKey && !event.altKey && event.which !== 8\r\n    );\r\n  }\r\n\r\n  return false;\r\n}\r\n","import log from '../log.js';\r\n\r\nexport default function handleError(error) {\r\n  let { title, message } = error;\r\n\r\n  if (!title) {\r\n    if (error instanceof Error) {\r\n      title = error.name;\r\n    }\r\n  }\r\n\r\n  if (!message) {\r\n    if (error instanceof Error) {\r\n      message = error.message;\r\n    }\r\n  }\r\n\r\n  const data = Object.assign(\r\n    {\r\n      title,\r\n      message,\r\n      class: 'themed',\r\n      hideConfirm: true,\r\n      cancelLabel: 'Dismiss',\r\n      cancelClass: 'btn-secondary',\r\n    },\r\n    error || {}\r\n  );\r\n\r\n  log.error(error);\r\n  // TODO: Find a better way to handle errors instead of displaying a dialog for all of them.\r\n  // OHIF.ui.showDialog('dialogForm', data);\r\n}\r\n","import './lib';\r\n\r\nimport { ExtensionManager, MODULE_TYPES } from './extensions';\r\nimport { ServicesManager } from './services';\r\nimport classes, { CommandsManager, HotkeysManager } from './classes/';\r\n\r\nimport DICOMWeb from './DICOMWeb';\r\nimport DICOMSR from './DICOMSR';\r\nimport cornerstone from './cornerstone.js';\r\nimport hangingProtocols from './hanging-protocols';\r\nimport header from './header.js';\r\nimport log from './log.js';\r\nimport measurements from './measurements';\r\nimport metadata from './classes/metadata/';\r\nimport object from './object.js';\r\nimport redux from './redux/';\r\nimport string from './string.js';\r\nimport studies from './studies/';\r\nimport ui from './ui';\r\nimport user from './user.js';\r\nimport errorHandler from './errorHandler.js';\r\nimport utils, { hotkeys } from './utils/';\r\nimport str2ab from './utils/str2ab';\r\n\r\nimport {\r\n  UINotificationService,\r\n  UIModalService,\r\n  UIDialogService,\r\n  MeasurementService,\r\n  LoggerService,\r\n} from './services';\r\n\r\nconst OHIF = {\r\n  MODULE_TYPES,\r\n  //\r\n  CommandsManager,\r\n  ExtensionManager,\r\n  HotkeysManager,\r\n  ServicesManager,\r\n  //\r\n  utils,\r\n  hotkeys,\r\n  studies,\r\n  redux,\r\n  classes,\r\n  metadata,\r\n  header,\r\n  cornerstone,\r\n  string,\r\n  ui,\r\n  user,\r\n  errorHandler,\r\n  object,\r\n  log,\r\n  DICOMWeb,\r\n  DICOMSR,\r\n  viewer: {},\r\n  measurements,\r\n  hangingProtocols,\r\n  //\r\n  UINotificationService,\r\n  UIModalService,\r\n  UIDialogService,\r\n  MeasurementService,\r\n  LoggerService,\r\n};\r\n\r\nexport {\r\n  MODULE_TYPES,\r\n  //\r\n  CommandsManager,\r\n  ExtensionManager,\r\n  HotkeysManager,\r\n  ServicesManager,\r\n  //\r\n  utils,\r\n  hotkeys,\r\n  studies,\r\n  redux,\r\n  classes,\r\n  metadata,\r\n  header,\r\n  cornerstone,\r\n  string,\r\n  ui,\r\n  user,\r\n  errorHandler,\r\n  object,\r\n  log,\r\n  DICOMWeb,\r\n  DICOMSR,\r\n  measurements,\r\n  hangingProtocols,\r\n  //\r\n  UINotificationService,\r\n  UIModalService,\r\n  UIDialogService,\r\n  MeasurementService,\r\n  LoggerService,\r\n\r\n  str2ab,\r\n};\r\n\r\nexport { OHIF };\r\n\r\nexport default OHIF;\r\n","import React from 'react';\r\nimport adjust from './icons/adjust.svg';\r\n// Icons\r\nimport angleDoubleDown from './icons/angle-double-down.svg';\r\nimport angleDoubleUp from './icons/angle-double-up.svg';\r\nimport angleLeft from './icons/angle-left.svg';\r\nimport arrows from './icons/arrows.svg';\r\nimport arrowsAltH from './icons/arrows-alt-h.svg';\r\nimport arrowsAltV from './icons/arrows-alt-v.svg';\r\nimport bars from './icons/bars.svg';\r\nimport brain from './icons/brain.svg';\r\nimport brush from './icons/brush.svg';\r\nimport caretDown from './icons/caret-down.svg';\r\nimport caretUp from './icons/caret-up.svg';\r\nimport check from './icons/check.svg';\r\nimport checkCircle from './icons/check-circle.svg';\r\nimport checkCircleO from './icons/check-circle-o.svg';\r\nimport chevronDown from './icons/chevron-down.svg';\r\nimport circle from './icons/circle.svg';\r\nimport circleNotch from './icons/circle-notch.svg';\r\nimport circleO from './icons/circle-o.svg';\r\nimport clipboard from './icons/clipboard.svg';\r\nimport cog from './icons/cog.svg';\r\nimport createComment from './icons/create-comment.svg';\r\nimport createScreenCapture from './icons/create-screen-capture.svg';\r\nimport crosshairs from './icons/crosshairs.svg';\r\nimport cube from './icons/cube.svg';\r\nimport d3Rotate from './icons/3d-rotate.svg';\r\nimport database from './icons/database.svg';\r\nimport dotCircle from './icons/dot-circle.svg';\r\nimport edit from './icons/edit.svg';\r\nimport ellipseCircle from './icons/ellipse-circle.svg';\r\nimport ellipseH from './icons/ellipse-h.svg';\r\nimport ellipseV from './icons/ellipse-v.svg';\r\nimport exclamationCircle from './icons/exclamation-circle.svg';\r\nimport exclamationTriangle from './icons/exclamation-triangle.svg';\r\nimport fastBackward from './icons/fast-backward.svg';\r\nimport fastForward from './icons/fast-forward.svg';\r\nimport stop from './icons/stop.svg';\r\nimport info from './icons/info.svg';\r\nimport inlineEdit from './icons/inline-edit.svg';\r\nimport level from './icons/level.svg';\r\nimport link from './icons/link.svg';\r\nimport linkCircles from './icons/link-circles.svg';\r\nimport list from './icons/list.svg';\r\nimport liver from './icons/liver.svg';\r\nimport lock from './icons/lock.svg';\r\nimport lockAlt from './icons/lock-alt.svg';\r\nimport lung from './icons/lung.svg';\r\nimport measureNonTarget from './icons/measure-non-target.svg';\r\nimport measureTarget from './icons/measure-target.svg';\r\nimport measureTargetCr from './icons/measure-target-cr.svg';\r\nimport measureTargetNe from './icons/measure-target-ne.svg';\r\nimport measureTargetUn from './icons/measure-target-un.svg';\r\nimport measureTemp from './icons/measure-temp.svg';\r\nimport objectGroup from './icons/object-group.svg';\r\nimport ohifLogo from './icons/ohif-logo.svg';\r\nimport ohifTextLogo from './icons/ohif-text-logo.svg';\r\nimport oval from './icons/oval.svg';\r\nimport palette from './icons/palette.svg';\r\nimport play from './icons/play.svg';\r\nimport plus from './icons/plus.svg';\r\nimport powerOff from './icons/power-off.svg';\r\nimport reset from './icons/reset.svg';\r\nimport rotate from './icons/rotate.svg';\r\nimport rotateRight from './icons/rotate-right.svg';\r\nimport saveRegular from './icons/save-regular.svg';\r\nimport scissors from './icons/scissors.svg';\r\nimport search from './icons/search.svg';\r\nimport searchPlus from './icons/search-plus.svg';\r\nimport softTissue from './icons/soft-tissue.svg';\r\nimport sort from './icons/sort.svg';\r\nimport sortDown from './icons/sort-down.svg';\r\nimport sortUp from './icons/sort-up.svg';\r\nimport sphere from './icons/sphere.svg';\r\nimport squareO from './icons/square-o.svg';\r\nimport star from './icons/star.svg';\r\nimport stepBackward from './icons/step-backward.svg';\r\nimport stepForward from './icons/step-forward.svg';\r\nimport sun from './icons/sun.svg';\r\nimport th from './icons/th.svg';\r\nimport thLarge from './icons/th-large.svg';\r\nimport thList from './icons/th-list.svg';\r\nimport times from './icons/times.svg';\r\nimport trash from './icons/trash.svg';\r\nimport unlink from './icons/unlink.svg';\r\nimport user from './icons/user.svg';\r\nimport youtube from './icons/youtube.svg';\r\nimport eye from './icons/eye.svg';\r\nimport eyeClosed from './icons/eye-closed.svg';\r\nimport envelopeSquare from './icons/envelope-square.svg';\r\n\r\nconst ICONS = {\r\n  eye,\r\n  'eye-closed': eyeClosed,\r\n  brush,\r\n  scissors,\r\n  user,\r\n  sort,\r\n  th,\r\n  star,\r\n  'sort-up': sortUp,\r\n  sphere,\r\n  'sort-down': sortDown,\r\n  info,\r\n  cube,\r\n  crosshairs,\r\n  'dot-circle': dotCircle,\r\n  'angle-left': angleLeft,\r\n  '3d-rotate': d3Rotate,\r\n  plus,\r\n  'chevron-down': chevronDown,\r\n  'angle-double-down': angleDoubleDown,\r\n  'angle-double-up': angleDoubleUp,\r\n  'arrows-alt-h': arrowsAltH,\r\n  'arrows-alt-v': arrowsAltV,\r\n  bars,\r\n  'caret-down': caretDown,\r\n  'caret-up': caretUp,\r\n  'check-circle-o': checkCircleO,\r\n  check,\r\n  circle,\r\n  'circle-o': circleO,\r\n  times,\r\n  'create-comment': createComment,\r\n  'create-screen-capture': createScreenCapture,\r\n  edit,\r\n  'fast-backward': fastBackward,\r\n  'fast-forward': fastForward,\r\n  'object-group': objectGroup,\r\n  search,\r\n  'power-off': powerOff,\r\n  'inline-edit': inlineEdit,\r\n  list,\r\n  'ohif-logo': ohifLogo,\r\n  'ohif-text-logo': ohifTextLogo,\r\n  lock,\r\n  play,\r\n  database,\r\n  cog,\r\n  'circle-notch': circleNotch,\r\n  'square-o': squareO,\r\n  'check-circle': checkCircle,\r\n  'lock-alt': lockAlt,\r\n  'step-backward': stepBackward,\r\n  'step-forward': stepForward,\r\n  clipboard: clipboard,\r\n  stop,\r\n  'th-large': thLarge,\r\n  'th-list': thList,\r\n  sun,\r\n  palette,\r\n  youtube,\r\n  oval,\r\n  'ellipse-h': ellipseH,\r\n  'ellipse-v': ellipseV,\r\n  adjust,\r\n  level,\r\n  'link-circles': linkCircles,\r\n  'search-plus': searchPlus,\r\n  'measure-non-target': measureNonTarget,\r\n  'measure-target': measureTarget,\r\n  'measure-target-cr': measureTargetCr,\r\n  'measure-target-un': measureTargetUn,\r\n  'measure-target-ne': measureTargetNe,\r\n  'measure-temp': measureTemp,\r\n  'ellipse-circle': ellipseCircle,\r\n  arrows,\r\n  reset,\r\n  rotate,\r\n  'rotate-right': rotateRight,\r\n  trash,\r\n  unlink,\r\n  'exclamation-circle': exclamationCircle,\r\n  link,\r\n  'exclamation-triangle': exclamationTriangle,\r\n  brain,\r\n  'soft-tissue': softTissue,\r\n  lung,\r\n  liver,\r\n  save: saveRegular,\r\n  'envelope-square': envelopeSquare,\r\n};\r\n\r\n/**\r\n * Return the matching SVG Icon as a React Component.\r\n * Results in an inlined SVG Element. If there's no match,\r\n * return `null`\r\n */\r\nexport default function getIcon(key, props) {\r\n  if (!key || !ICONS[key]) {\r\n    return React.createElement('div', null, 'Missing Icon');\r\n  }\r\n\r\n  return React.createElement(ICONS[key], props);\r\n}\r\n\r\nexport { ICONS };\r\n","import './Icon.styl';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport getIcon from './getIcon.js';\r\n\r\nconst Icon = props => {\r\n  return getIcon(props.name, props);\r\n};\r\n\r\nIcon.propTypes = {\r\n  /** The string name of the icon to display */\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Icon;\r\n","import { ICONS } from './getIcon.js';\r\nimport Icon from './Icon.js';\r\n\r\nexport { Icon, ICONS };\r\n","import React, {\r\n  useState,\r\n  createContext,\r\n  useContext,\r\n  useEffect,\r\n  useCallback,\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nconst ModalContext = createContext(null);\r\nconst { Provider } = ModalContext;\r\n\r\nexport const useModal = () => useContext(ModalContext);\r\n\r\n/**\r\n * UI Modal\r\n *\r\n * @typedef {Object} ModalProps\r\n * @property {ReactElement|HTMLElement} [content=null] Modal content.\r\n * @property {Object} [contentProps=null] Modal content props.\r\n * @property {boolean} [shouldCloseOnEsc=false] Modal is dismissible via the esc key.\r\n * @property {boolean} [isOpen=true] Make the Modal visible or hidden.\r\n * @property {boolean} [closeButton=true] Should the modal body render the close button.\r\n * @property {string} [title=null] Should the modal render the title independently of the body content.\r\n * @property {string} [customClassName=null] The custom class to style the modal.\r\n */\r\n\r\nconst ModalProvider = ({ children, modal: Modal, service }) => {\r\n  const DEFAULT_OPTIONS = {\r\n    content: null,\r\n    contentProps: null,\r\n    shouldCloseOnEsc: false,\r\n    isOpen: true,\r\n    onClose: null,\r\n    closeButton: true,\r\n    showScrollbar: false,\r\n    title: null,\r\n    customClassName: '',\r\n    fullscreen: false,\r\n  };\r\n\r\n  const [options, setOptions] = useState(DEFAULT_OPTIONS);\r\n\r\n  /**\r\n   * Show the modal and override its configuration props.\r\n   *\r\n   * @param {ModalProps} props { content, contentProps, shouldCloseOnEsc, isOpen, closeButton, title, customClassName }\r\n   * @returns void\r\n   */\r\n  const show = useCallback(props => setOptions({ ...options, ...props }), [\r\n    options,\r\n  ]);\r\n\r\n  /**\r\n   * Hide the modal and set its properties to default.\r\n   *\r\n   * @returns void\r\n   */\r\n  const hide = useCallback(() => setOptions(DEFAULT_OPTIONS), [\r\n    DEFAULT_OPTIONS,\r\n  ]);\r\n\r\n  /**\r\n   * Sets the implementation of a modal service that can be used by extensions.\r\n   *\r\n   * @returns void\r\n   */\r\n  useEffect(() => {\r\n    if (service) {\r\n      service.setServiceImplementation({ hide, show });\r\n    }\r\n  }, [hide, service, show]);\r\n\r\n  const {\r\n    content: ModalContent,\r\n    contentProps,\r\n    isOpen,\r\n    onClose,\r\n    title,\r\n    customClassName,\r\n    shouldCloseOnEsc,\r\n    fullscreen,\r\n    closeButton,\r\n    showScrollbar,\r\n    noScroll,\r\n  } = options;\r\n\r\n  return (\r\n    <Provider value={{ show, hide }}>\r\n      {ModalContent && (\r\n        <Modal\r\n          className={classNames(\r\n            customClassName,\r\n            ModalContent.className,\r\n            { visibleScrollbar: showScrollbar },\r\n            { noScroll }\r\n          )}\r\n          shouldCloseOnEsc={shouldCloseOnEsc}\r\n          isOpen={isOpen}\r\n          title={title}\r\n          fullscreen={fullscreen}\r\n          closeButton={closeButton}\r\n          onClose={() => {\r\n            if (onClose) {\r\n              onClose();\r\n            }\r\n\r\n            hide();\r\n          }}\r\n        >\r\n          <ModalContent {...contentProps} show={show} hide={hide} />\r\n        </Modal>\r\n      )}\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\n/**\r\n * Higher Order Component to use the modal methods through a Class Component.\r\n *\r\n * @returns\r\n */\r\nexport const withModal = Component => {\r\n  return function WrappedComponent(props) {\r\n    const { show, hide } = useModal();\r\n    return <Component {...props} modal={{ show, hide }} />;\r\n  };\r\n};\r\n\r\nModalProvider.defaultProps = {\r\n  service: null,\r\n};\r\n\r\nModalProvider.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]).isRequired,\r\n  modal: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n    PropTypes.func,\r\n  ]).isRequired,\r\n  service: PropTypes.shape({\r\n    setServiceImplementation: PropTypes.func,\r\n  }),\r\n};\r\n\r\nexport default ModalProvider;\r\n\r\nexport const ModalConsumer = ModalContext.Consumer;\r\n","import React, { useEffect } from 'react';\r\n\r\nconst SnackbarItem = ({ options, onClose }) => {\r\n  const handleClose = () => {\r\n    onClose(options.id);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    options.action.onClick({ ...options, close: handleClose });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (options.autoClose) {\r\n      setTimeout(() => {\r\n        handleClose();\r\n      }, options.duration);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className={`${options.visible ? '' : 'sb-hidden'} sb-${\r\n        options.type\r\n      } sb-item`}\r\n    >\r\n      <span className=\"sb-closeBtn\" onClick={handleClose}>\r\n        <span className=\"sb-closeIcon\">x</span>\r\n      </span>\r\n      {options.title && <div className=\"sb-title\">{options.title}</div>}\r\n      {options.message && <div className=\"sb-message\">{options.message}</div>}\r\n      {options.action && (\r\n        <button className=\"sb-action\" onClick={handleClick}>\r\n          {options.action.label}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SnackbarItem;\r\n","import React from 'react';\r\nimport SnackbarItem from './SnackbarItem';\r\nimport './Snackbar.css';\r\nimport { useSnackbarContext } from '../../contextProviders';\r\n\r\nconst SnackbarContainer = () => {\r\n  const { snackbarItems, hide } = useSnackbarContext();\r\n\r\n  const renderItem = item => {\r\n    return <SnackbarItem key={item.itemId} options={item} onClose={hide} />;\r\n  };\r\n\r\n  if (!snackbarItems) {\r\n    return null;\r\n  }\r\n\r\n  const renderItems = () => {\r\n    const items = {\r\n      topLeft: [],\r\n      topCenter: [],\r\n      topRight: [],\r\n      bottomLeft: [],\r\n      bottomCenter: [],\r\n      bottomRight: [],\r\n    };\r\n\r\n    snackbarItems.map(item => {\r\n      items[item.position].push(item);\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        {Object.keys(items).map(pos => {\r\n          if (!items[pos].length) {\r\n            return null;\r\n          }\r\n\r\n          return (\r\n            <div key={pos} className={`sb-container sb-${pos}`}>\r\n              {items[pos].map((item, index) => (\r\n                <div key={item.id + index}>{renderItem(item)}</div>\r\n              ))}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return <>{renderItems()}</>;\r\n};\r\n\r\nexport default SnackbarContainer;\r\n","export default {\r\n  INFO: 'info',\r\n  WARNING: 'warning',\r\n  SUCCESS: 'success',\r\n  ERROR: 'error',\r\n};\r\n","import React, {\r\n  useState,\r\n  createContext,\r\n  useContext,\r\n  useCallback,\r\n  useEffect,\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { classes } from '@ohif/core';\r\n\r\nimport SnackbarContainer from '../components/snackbar/SnackbarContainer';\r\nimport SnackbarTypes from '../components/snackbar/SnackbarTypes';\r\n\r\nconst { LogManager } = classes;\r\n\r\nconst SnackbarContext = createContext(null);\r\n\r\nexport const useSnackbarContext = () => useContext(SnackbarContext);\r\n\r\nconst SnackbarProvider = ({ children, service }) => {\r\n  const DEFAULT_OPTIONS = {\r\n    title: '',\r\n    message: '',\r\n    duration: 5000,\r\n    autoClose: true,\r\n    position: 'bottomRight',\r\n    type: SnackbarTypes.INFO,\r\n    action: null,\r\n  };\r\n\r\n  const [count, setCount] = useState(1);\r\n  const [snackbarItems, setSnackbarItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const onLogHandler = ({ type, notify, title, message }) => {\r\n      if (notify) {\r\n        show({ type, title, message });\r\n      }\r\n    };\r\n\r\n    LogManager.subscribe(LogManager.EVENTS.OnLog, onLogHandler);\r\n\r\n    return () => {\r\n      LogManager.unsubscribe(LogManager.EVENTS.OnLog, onLogHandler);\r\n    };\r\n  }, [show]);\r\n\r\n  const show = useCallback(\r\n    options => {\r\n      if (!options || (!options.title && !options.message)) {\r\n        console.warn(\r\n          'Snackbar cannot be rendered without required parameters: title | message'\r\n        );\r\n\r\n        return null;\r\n      }\r\n\r\n      if (options.type === 'error') {\r\n        console.error(options.error);\r\n      }\r\n\r\n      const newItem = {\r\n        ...DEFAULT_OPTIONS,\r\n        ...options,\r\n        id: count,\r\n        visible: true,\r\n      };\r\n\r\n      setSnackbarItems(state => [...state, newItem]);\r\n      setCount(count + 1);\r\n    },\r\n    [count, DEFAULT_OPTIONS]\r\n  );\r\n\r\n  const hide = useCallback(\r\n    id => {\r\n      const hideItem = items => {\r\n        const newItems = items.map(item => {\r\n          if (item.id === id) {\r\n            item.visible = false;\r\n          }\r\n\r\n          return item;\r\n        });\r\n\r\n        return newItems;\r\n      };\r\n\r\n      setSnackbarItems(state => hideItem(state));\r\n\r\n      setTimeout(() => {\r\n        setSnackbarItems(state => [...state.filter(item => item.id !== id)]);\r\n      }, 1000);\r\n    },\r\n    [setSnackbarItems]\r\n  );\r\n\r\n  const hideAll = () => {\r\n    // reset count\r\n    setCount(1);\r\n\r\n    // remove all items from array\r\n    setSnackbarItems(() => []);\r\n  };\r\n\r\n  /**\r\n   * Sets the implementation of a notification service that can be used by extensions.\r\n   *\r\n   * @returns void\r\n   */\r\n  useEffect(() => {\r\n    if (service) {\r\n      service.setServiceImplementation({ hide, show });\r\n    }\r\n  }, [service, hide, show]);\r\n\r\n  /**\r\n   * expose snackbar methods to window for debug purposes\r\n   * TODO: Check if it's really necessary\r\n   */\r\n  window.snackbar = {\r\n    show,\r\n    hide,\r\n    hideAll,\r\n  };\r\n\r\n  return (\r\n    <SnackbarContext.Provider value={{ show, hide, hideAll, snackbarItems }}>\r\n      {!!snackbarItems && <SnackbarContainer />}\r\n      {children}\r\n    </SnackbarContext.Provider>\r\n  );\r\n};\r\n\r\nSnackbarProvider.defaultProps = {\r\n  service: null,\r\n};\r\n\r\nSnackbarProvider.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n    PropTypes.func,\r\n  ]).isRequired,\r\n  service: PropTypes.shape({\r\n    setServiceImplementation: PropTypes.func,\r\n  }),\r\n};\r\n\r\n/**\r\n *\r\n * High Order Component to use the snackbar methods through a Class Component\r\n *\r\n */\r\nexport const withSnackbar = Component => {\r\n  return function WrappedComponent(props) {\r\n    const snackbarContext = {\r\n      ...useSnackbarContext(),\r\n    };\r\n    return <Component {...props} snackbarContext={snackbarContext} />;\r\n  };\r\n};\r\n\r\nexport default SnackbarProvider;\r\n","// Reference > https://reactjs.org/docs/context.html\r\nimport React from 'react';\r\nimport {\r\n  withTranslation as I18NextWithTranslation,\r\n  I18nextProvider,\r\n} from 'react-i18next';\r\nimport i18n from '@ohif/i18n';\r\n\r\nconst WrapperI18n = Component => {\r\n  const WrapperComponent = props => (\r\n    <I18nextProvider i18n={i18n}>\r\n      <Component {...props} />\r\n    </I18nextProvider>\r\n  );\r\n\r\n  return WrapperComponent;\r\n};\r\n\r\nconst withTranslation = namespace => Component => {\r\n  const TranslatedComponent = props => {\r\n    return <Component {...props} />;\r\n  };\r\n\r\n  return WrapperI18n(I18NextWithTranslation(namespace)(TranslatedComponent));\r\n};\r\n\r\nexport { withTranslation };\r\nexport default withTranslation;\r\n","import React, {\r\n  useState,\r\n  createContext,\r\n  useContext,\r\n  useCallback,\r\n  useEffect,\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Draggable from 'react-draggable';\r\nimport classNames from 'classnames';\r\n\r\nimport { utils } from '@ohif/core';\r\n\r\nimport './DialogProvider.styl';\r\n\r\nconst DialogContext = createContext(null);\r\n\r\nexport const useDialog = () => useContext(DialogContext);\r\n\r\nconst DialogProvider = ({ children, service }) => {\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [dialogs, setDialogs] = useState([]);\r\n  const [lastDialogId, setLastDialogId] = useState(null);\r\n  const [lastDialogPosition, setLastDialogPosition] = useState(null);\r\n  const [centerPositions, setCenterPositions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setCenterPositions(\r\n      dialogs.map(dialog => ({\r\n        id: dialog.id,\r\n        ...getCenterPosition(dialog.id),\r\n      }))\r\n    );\r\n  }, [dialogs]);\r\n\r\n  const getCenterPosition = id => {\r\n    const root = document.querySelector('#root');\r\n    const centerX = root.offsetLeft + root.offsetWidth / 2;\r\n    const centerY = root.offsetTop + root.offsetHeight / 2;\r\n    const item = document.querySelector(`#draggableItem-${id}`);\r\n    const itemBounds = item.getBoundingClientRect();\r\n    return {\r\n      x: centerX - itemBounds.width / 2,\r\n      y: centerY - itemBounds.height / 2,\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Creates a new dialog and return its id.\r\n   *\r\n   * @param {DialogProps} props The dialog props.\r\n   * @returns The new dialog id.\r\n   */\r\n  const create = useCallback(props => {\r\n    const { id } = props;\r\n\r\n    let dialogId = id;\r\n    if (!dialogId) {\r\n      dialogId = utils.guid();\r\n    }\r\n\r\n    setDialogs(dialogs => [...dialogs, { ...props, id: dialogId }]);\r\n    setLastDialogId(dialogId);\r\n\r\n    return dialogId;\r\n  }, []);\r\n\r\n  /**\r\n   * Dismisses the dialog with a given id.\r\n   *\r\n   * @param {Object} props -\r\n   * @property {string} props.id The dialog id.\r\n   * @returns void\r\n   */\r\n  const dismiss = useCallback(\r\n    ({ id }) =>\r\n      setDialogs(dialogs => dialogs.filter(dialog => dialog.id !== id)),\r\n    []\r\n  );\r\n\r\n  /**\r\n   * Sets the implementation of a dialog service that can be used by extensions.\r\n   *\r\n   * @returns void\r\n   */\r\n  useEffect(() => {\r\n    if (service) {\r\n      service.setServiceImplementation({ create, dismiss, dismissAll });\r\n    }\r\n  }, [create, dismiss, service]);\r\n\r\n  /**\r\n   * Moves the dialog to the foreground if clicked.\r\n   *\r\n   * @param {string} id The dialog id.\r\n   * @returns void\r\n   */\r\n  const _bringToFront = useCallback(id => {\r\n    setDialogs(dialogs => {\r\n      const topDialog = dialogs.find(dialog => dialog.id === id);\r\n      return topDialog\r\n        ? [...dialogs.filter(dialog => dialog.id !== id), topDialog]\r\n        : dialogs;\r\n    });\r\n  }, []);\r\n\r\n  /**\r\n   * UI Dialog\r\n   *\r\n   * @typedef {Object} DialogProps\r\n   * @property {string} id The dialog id.\r\n   * @property {DialogContent} content The dialog content.\r\n   * @property {Object} contentProps The dialog content props.\r\n   * @property {boolean} isDraggable Controls if dialog content is draggable or not.\r\n   * @property {boolean} showOverlay Controls dialog overlay.\r\n   * @property {boolean} centralize Center the dialog on the screen.\r\n   * @property {boolean} preservePosition Use last position instead of default.\r\n   * @property {ElementPosition} defaultPosition Specifies the `x` and `y` that the dragged item should start at.\r\n   * @property {Function} onStart Called when dragging starts. If `false` is returned any handler, the action will cancel.\r\n   * @property {Function} onStop Called when dragging stops.\r\n   * @property {Function} onDrag Called while dragging.\r\n   */\r\n\r\n  useEffect(() => _bringToFront(lastDialogId), [_bringToFront, lastDialogId]);\r\n\r\n  /**\r\n   * Dismisses all dialogs.\r\n   *\r\n   * @returns void\r\n   */\r\n  const dismissAll = () => {\r\n    setDialogs([]);\r\n  };\r\n\r\n  /**\r\n   * Indicate if there are no dialogs present.\r\n   *\r\n   * @returns True if no dialogs are present.\r\n   */\r\n  const isEmpty = () => dialogs && dialogs.length < 1;\r\n\r\n  const renderDialogs = () =>\r\n    dialogs.map(dialog => {\r\n      const {\r\n        id,\r\n        content: DialogContent,\r\n        contentProps,\r\n        defaultPosition,\r\n        centralize = false,\r\n        preservePosition = true,\r\n        isDraggable = true,\r\n        onStart,\r\n        onStop,\r\n        onDrag,\r\n        showOverlay,\r\n      } = dialog;\r\n\r\n      let position =\r\n        (preservePosition && lastDialogPosition) || defaultPosition;\r\n      if (centralize) {\r\n        position = centerPositions.find(position => position.id === id);\r\n      }\r\n\r\n      const dragableItem = () => (\r\n        <Draggable\r\n          key={id}\r\n          disabled={!isDraggable}\r\n          position={position}\r\n          defaultPosition={position}\r\n          bounds=\"parent\"\r\n          onStart={event => {\r\n            const e = event || window.event;\r\n            const target = e.target || e.srcElement;\r\n            const BLACKLIST = [\r\n              'SVG',\r\n              'BUTTON',\r\n              'PATH',\r\n              'INPUT',\r\n              'SPAN',\r\n              'LABEL',\r\n            ];\r\n            if (BLACKLIST.includes(target.tagName.toUpperCase())) {\r\n              return false;\r\n            }\r\n\r\n            if (validCallback(onStart)) {\r\n              return onStart(event);\r\n            }\r\n          }}\r\n          onStop={event => {\r\n            setIsDragging(false);\r\n\r\n            if (validCallback(onStop)) {\r\n              return onStop(event);\r\n            }\r\n          }}\r\n          onDrag={event => {\r\n            setIsDragging(true);\r\n            _bringToFront(id);\r\n            _updateLastDialogPosition(id);\r\n\r\n            if (validCallback(onDrag)) {\r\n              return onDrag(event);\r\n            }\r\n          }}\r\n        >\r\n          <div\r\n            id={`draggableItem-${id}`}\r\n            className={classNames(\r\n              'DraggableItem',\r\n              isDragging && 'dragging',\r\n              isDraggable && 'draggable'\r\n            )}\r\n            style={{ zIndex: '999', position: 'absolute' }}\r\n            onClick={() => _bringToFront(id)}\r\n          >\r\n            <DialogContent {...dialog} {...contentProps} />\r\n          </div>\r\n        </Draggable>\r\n      );\r\n\r\n      return showOverlay ? (\r\n        <div className=\"Overlay\" key={id}>\r\n          {dragableItem()}\r\n        </div>\r\n      ) : (\r\n        dragableItem()\r\n      );\r\n    });\r\n\r\n  /**\r\n   * Update the last dialog position to be used as the new default position.\r\n   *\r\n   * @returns void\r\n   */\r\n  const _updateLastDialogPosition = dialogId => {\r\n    const draggableItemBounds = document\r\n      .querySelector(`#draggableItem-${dialogId}`)\r\n      .getBoundingClientRect();\r\n    setLastDialogPosition({\r\n      x: draggableItemBounds.x,\r\n      y: draggableItemBounds.y,\r\n    });\r\n  };\r\n\r\n  const validCallback = callback => callback && typeof callback === 'function';\r\n\r\n  return (\r\n    <DialogContext.Provider value={{ create, dismiss, dismissAll, isEmpty }}>\r\n      {!isEmpty() && <div className=\"DraggableArea\">{renderDialogs()}</div>}\r\n      {children}\r\n    </DialogContext.Provider>\r\n  );\r\n};\r\n\r\n/**\r\n *\r\n * High Order Component to use the dialog methods through a Class Component\r\n *\r\n */\r\nexport const withDialog = Component => {\r\n  return function WrappedComponent(props) {\r\n    const { create, dismiss, dismissAll, isEmpty } = useDialog();\r\n    return (\r\n      <Component {...props} dialog={{ create, dismiss, dismissAll, isEmpty }} />\r\n    );\r\n  };\r\n};\r\n\r\nDialogProvider.defaultProps = {\r\n  service: null,\r\n};\r\n\r\nDialogProvider.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n    PropTypes.func,\r\n  ]).isRequired,\r\n  service: PropTypes.shape({\r\n    setServiceImplementation: PropTypes.func,\r\n  }),\r\n};\r\n\r\nexport default DialogProvider;\r\n","import React, { useState, createContext, useContext, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst LoggerContext = createContext(null);\r\nconst { Provider } = LoggerContext;\r\n\r\nexport const useLogger = () => useContext(LoggerContext);\r\n\r\nconst LoggerProvider = ({ children, service }) => {\r\n  const [state, setState] = useState({\r\n    errors: [],\r\n    infos: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const onErrorHandler = ({ error: errorObject, message }) => {\r\n      error({ error: errorObject, message });\r\n    };\r\n    window.addEventListener('error', onErrorHandler);\r\n    return () => {\r\n      window.removeEventListener('error', onErrorHandler);\r\n    };\r\n  }, []);\r\n\r\n  /**\r\n   * Logs an error\r\n   *\r\n   * @param {object} props { error, stack, message, displayOnConsole }\r\n   * @returns void\r\n   */\r\n  const error = ({\r\n    error = {},\r\n    stack = '',\r\n    message = '',\r\n    displayOnConsole = true,\r\n  }) => {\r\n    const errorObject = { error, stack, message, displayOnConsole };\r\n    setState(state => ({ ...state, errors: [...state.errors, errorObject] }));\r\n\r\n    if (displayOnConsole) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Logs an info\r\n   *\r\n   * @param {object} props { message, displayOnConsole }\r\n   * @returns void\r\n   */\r\n  const info = ({ message = '', displayOnConsole = true }) => {\r\n    setState(state => ({\r\n      ...state,\r\n      infos: state.infos.push({ message, displayOnConsole }),\r\n    }));\r\n\r\n    if (displayOnConsole) {\r\n      console.info(message);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Sets the implementation of a log service that can be used by extensions\r\n   *\r\n   * @returns void\r\n   */\r\n  useEffect(() => {\r\n    if (service) {\r\n      service.setServiceImplementation({ error, info });\r\n    }\r\n  }, [error, service, info]);\r\n\r\n  return <Provider value={{ info, error, state }}>{children}</Provider>;\r\n};\r\n\r\n/**\r\n * Higher Order Component to use the log methods through a Class Component\r\n *\r\n * @returns\r\n */\r\nexport const withLogger = Component => {\r\n  return function WrappedComponent(props) {\r\n    const { error, info, state } = useLogger();\r\n    return <Component {...props} logger={{ error, info, state }} />;\r\n  };\r\n};\r\n\r\nLoggerProvider.defaultProps = {\r\n  service: null,\r\n};\r\n\r\nLoggerProvider.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]).isRequired,\r\n  service: PropTypes.shape({\r\n    setServiceImplementation: PropTypes.func,\r\n  }),\r\n};\r\n\r\nexport default LoggerProvider;\r\n\r\nexport const LogConsumer = LoggerContext.Consumer;\r\n","export {\r\n  default as ModalProvider,\r\n  useModal,\r\n  withModal,\r\n  ModalConsumer,\r\n} from './ModalProvider.js';\r\nexport {\r\n  default as SnackbarProvider,\r\n  useSnackbarContext,\r\n  withSnackbar,\r\n} from './SnackbarProvider.js';\r\nexport {\r\n  default as LanguageProvider,\r\n  withTranslation,\r\n} from './LanguageProvider.js';\r\nexport {\r\n  default as DialogProvider,\r\n  withDialog,\r\n  useDialog,\r\n} from './DialogProvider.js';\r\nexport {\r\n  default as LoggerProvider,\r\n  withLogger,\r\n  useLogger,\r\n} from './LoggerProvider.js';\r\n","/**\r\n * Create a random GUID\r\n *\r\n * @return {string}\r\n */\r\nconst guid = () => {\r\n  const getFourRandomValues = () => {\r\n    return Math.floor((1 + Math.random()) * 0x10000)\r\n      .toString(16)\r\n      .substring(1);\r\n  };\r\n  return (\r\n    getFourRandomValues() +\r\n    getFourRandomValues() +\r\n    '-' +\r\n    getFourRandomValues() +\r\n    '-' +\r\n    getFourRandomValues() +\r\n    '-' +\r\n    getFourRandomValues() +\r\n    '-' +\r\n    getFourRandomValues() +\r\n    getFourRandomValues() +\r\n    getFourRandomValues()\r\n  );\r\n};\r\n\r\nexport default guid;\r\n","// @TODO: improve this object\r\n/**\r\n * Objects to be used to throw errors\r\n */\r\nclass OHIFError extends Error {\r\n  constructor(message) {\r\n    super();\r\n    this.message = message;\r\n    this.stack = new Error().stack;\r\n    this.name = this.constructor.name;\r\n  }\r\n}\r\n\r\nexport default OHIFError;\r\n","// These should be overridden by the implementation\r\nconst errorHandler = {\r\n  getHTTPErrorHandler: () => null,\r\n};\r\n\r\nexport default errorHandler;\r\n","import retry from 'retry';\r\n\r\nconst defaultRetryOptions = {\r\n  retries: 5,\r\n  factor: 3,\r\n  minTimeout: 1 * 1000,\r\n  maxTimeout: 60 * 1000,\r\n  randomize: true,\r\n  retryableStatusCodes: [429, 500],\r\n};\r\n\r\nlet retryOptions = { ...defaultRetryOptions };\r\n\r\n/**\r\n * Request hook used to add retry functionality to XHR requests.\r\n *\r\n * @param {XMLHttpRequest} request XHR request instance\r\n * @param {object} metadata Metadata about the request\r\n * @param {object} metadata.url URL\r\n * @param {object} metadata.method HTTP method\r\n * @returns {XMLHttpRequest} request instance optionally modified\r\n */\r\nconst xhrRetryRequestHook = (request, metadata) => {\r\n  const { url, method } = metadata;\r\n\r\n  function faultTolerantRequestSend(...args) {\r\n    const operation = retry.operation(retryOptions);\r\n\r\n    operation.attempt(function operationAttempt(currentAttempt) {\r\n      const originalOnReadyStateChange = request.onreadystatechange;\r\n\r\n      /** Overriding/extending XHR function */\r\n      request.onreadystatechange = function onReadyStateChange(...args) {\r\n        originalOnReadyStateChange.apply(request, args);\r\n\r\n        if (retryOptions.retryableStatusCodes.includes(request.status)) {\r\n          const errorMessage = `Attempt to request ${url} failed.`;\r\n          const attemptFailedError = new Error(errorMessage);\r\n          operation.retry(attemptFailedError);\r\n        }\r\n      };\r\n\r\n      /** Call open only on retry (after headers and other things were set in the xhr instance) */\r\n      if (currentAttempt > 1) {\r\n        console.warn(`Requesting ${url}... (attempt: ${currentAttempt})`);\r\n        request.open(method, url, true);\r\n      }\r\n    });\r\n\r\n    originalRequestSend.apply(request, args);\r\n  }\r\n\r\n  /** Overriding/extending XHR function */\r\n  const originalRequestSend = request.send;\r\n  request.send = faultTolerantRequestSend;\r\n\r\n  return request;\r\n};\r\n\r\n/**\r\n * Returns a configured retry request hook function\r\n * that can be used to add retry functionality to XHR request.\r\n *\r\n * Default options:\r\n *   retries: 5\r\n *   factor: 3\r\n *   minTimeout: 1 * 1000\r\n *   maxTimeout: 60 * 1000\r\n *   randomize: true\r\n *\r\n * @param {object} options\r\n * @param {number} options.retires number of retries\r\n * @param {number} options.factor factor\r\n * @param {number} options.minTimeout the min timeout\r\n * @param {number} options.maxTimeout the max timeout\r\n * @param {boolean} options.randomize randomize\r\n * @param {array} options.retryableStatusCodes status codes that can trigger retry\r\n * @returns {function} the configured retry request function\r\n */\r\nexport const getXHRRetryRequestHook = (options = {}) => {\r\n  retryOptions = { ...defaultRetryOptions };\r\n  if ('retries' in options) {\r\n    retryOptions.retries = options.retries;\r\n  }\r\n  if ('factor' in options) {\r\n    retryOptions.factor = options.factor;\r\n  }\r\n  if ('minTimeout' in options) {\r\n    retryOptions.minTimeout = options.minTimeout;\r\n  }\r\n  if ('maxTimeout' in options) {\r\n    retryOptions.maxTimeout = options.maxTimeout;\r\n  }\r\n  if ('randomize' in options) {\r\n    retryOptions.randomize = options.randomize;\r\n  }\r\n  if ('retryableStatusCodes' in options) {\r\n    retryOptions.retryableStatusCodes = options.retryableStatusCodes;\r\n  }\r\n  return xhrRetryRequestHook;\r\n};\r\n\r\nexport default getXHRRetryRequestHook;\r\n","// These should be overridden by the implementation\r\nlet user = {\r\n  userLoggedIn: () => false,\r\n  getUserId: () => null,\r\n  getName: () => null,\r\n  getAccessToken: () => null,\r\n  login: () => new Promise((resolve, reject) => reject()),\r\n  logout: () => new Promise((resolve, reject) => reject()),\r\n  getData: key => null,\r\n  setData: (key, value) => null,\r\n};\r\n\r\nexport default user;\r\n","/**\r\n * Constants\r\n */\r\n\r\nconst STRING = 'string';\r\nconst NUMBER = 'number';\r\nconst FUNCTION = 'function';\r\nconst OBJECT = 'object';\r\n\r\n/**\r\n * Class Definition\r\n */\r\n\r\nexport class Metadata {\r\n  /**\r\n   * Constructor and Instance Methods\r\n   */\r\n\r\n  constructor(data, uid) {\r\n    // Define the main \"_data\" private property as an immutable property.\r\n    // IMPORTANT: This property can only be set during instance construction.\r\n    Object.defineProperty(this, '_data', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: data,\r\n    });\r\n\r\n    // Define the main \"_uid\" private property as an immutable property.\r\n    // IMPORTANT: This property can only be set during instance construction.\r\n    Object.defineProperty(this, '_uid', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: uid,\r\n    });\r\n\r\n    // Define \"_custom\" properties as an immutable property.\r\n    // IMPORTANT: This property can only be set during instance construction.\r\n    Object.defineProperty(this, '_custom', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: Object.create(null),\r\n    });\r\n  }\r\n\r\n  getData() {\r\n    return this._data;\r\n  }\r\n\r\n  getDataProperty(propertyName) {\r\n    let propertyValue;\r\n    const _data = this._data;\r\n    if (\r\n      _data instanceof Object ||\r\n      (typeof _data === OBJECT && _data !== null)\r\n    ) {\r\n      propertyValue = _data[propertyName];\r\n    }\r\n    return propertyValue;\r\n  }\r\n\r\n  /**\r\n   * Get unique object ID\r\n   */\r\n  getObjectID() {\r\n    return this._uid;\r\n  }\r\n\r\n  /**\r\n   * Set custom attribute value\r\n   * @param {String} attribute Custom attribute name\r\n   * @param {Any} value     Custom attribute value\r\n   */\r\n  setCustomAttribute(attribute, value) {\r\n    this._custom[attribute] = value;\r\n  }\r\n\r\n  /**\r\n   * Get custom attribute value\r\n   * @param  {String} attribute Custom attribute name\r\n   * @return {Any}              Custom attribute value\r\n   */\r\n  getCustomAttribute(attribute) {\r\n    return this._custom[attribute];\r\n  }\r\n\r\n  /**\r\n   * Check if a custom attribute exists\r\n   * @param  {String} attribute Custom attribute name\r\n   * @return {Boolean}          True if custom attribute exists or false if not\r\n   */\r\n  customAttributeExists(attribute) {\r\n    return attribute in this._custom;\r\n  }\r\n\r\n  /**\r\n   * Set custom attributes in batch mode.\r\n   * @param {Object} attributeMap An object whose own properties will be used as custom attributes.\r\n   */\r\n  setCustomAttributes(attributeMap) {\r\n    const _hasOwn = Object.prototype.hasOwnProperty;\r\n    const _custom = this._custom;\r\n    for (let attribute in attributeMap) {\r\n      if (_hasOwn.call(attributeMap, attribute)) {\r\n        _custom[attribute] = attributeMap[attribute];\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Static Methods\r\n   */\r\n\r\n  static isValidUID(uid) {\r\n    return typeof uid === STRING && uid.length > 0;\r\n  }\r\n\r\n  static isValidIndex(index) {\r\n    return typeof index === NUMBER && index >= 0 && (index | 0) === index;\r\n  }\r\n\r\n  static isValidCallback(callback) {\r\n    return typeof callback === FUNCTION;\r\n  }\r\n}\r\n","const state = {\r\n  enabledElements: {},\r\n};\r\n\r\n/**\r\n * Sets the enabled element `dom` reference for an active viewport.\r\n * @param {HTMLElement} dom Active viewport element.\r\n * @return void\r\n */\r\nconst setEnabledElement = (viewportIndex, element) =>\r\n  (state.enabledElements[viewportIndex] = element);\r\n\r\n/**\r\n * Grabs the enabled element `dom` reference of an active viewport.\r\n *\r\n * @return {HTMLElement} Active viewport element.\r\n */\r\nconst getEnabledElement = viewportIndex => state.enabledElements[viewportIndex];\r\n\r\nexport { setEnabledElement, getEnabledElement };\r\n","import { Metadata } from './Metadata';\r\nimport OHIFError from '../OHIFError.js';\r\n\r\n/**\r\n * ATTENTION! This class should never depend on StudyMetadata or SeriesMetadata classes as this could\r\n * possibly cause circular dependency issues.\r\n */\r\n\r\nconst UNDEFINED = 'undefined';\r\nconst STRING = 'string';\r\n\r\nexport class InstanceMetadata extends Metadata {\r\n  constructor(data, uid) {\r\n    super(data, uid);\r\n    // Initialize Private Properties\r\n    Object.defineProperties(this, {\r\n      _imageId: {\r\n        configurable: true, // configurable so that it can be redefined in sub-classes...\r\n        enumerable: false,\r\n        writable: true,\r\n        value: null,\r\n      },\r\n    });\r\n    // Initialize Public Properties\r\n    this._definePublicProperties();\r\n  }\r\n\r\n  /**\r\n   * Private Methods\r\n   */\r\n\r\n  /**\r\n   * Define Public Properties\r\n   * This method should only be called during initialization (inside the class constructor)\r\n   */\r\n  _definePublicProperties() {\r\n    /**\r\n     * Property: this.SOPInstanceUID\r\n     * Same as this.getSOPInstanceUID()\r\n     * It's specially useful in contexts where a method call is not suitable like in search criteria. For example:\r\n     * sopInstanceCollection.findBy({\r\n     *   SOPInstanceUID: '1.2.3.4.5.6.77777.8888888.99999999999.0'\r\n     * });\r\n     */\r\n    Object.defineProperty(this, 'SOPInstanceUID', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      get: function() {\r\n        return this.getSOPInstanceUID();\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Public Methods\r\n   */\r\n\r\n  /**\r\n   * Returns the StudyInstanceUID of the current instance. This method is basically a shorthand the full \"getTagValue\" method call.\r\n   */\r\n  getStudyInstanceUID() {\r\n    return this.getTagValue('StudyInstanceUID', null);\r\n  }\r\n\r\n  /**\r\n   * Returns the SeriesInstanceUID of the current instance. This method is basically a shorthand the full \"getTagValue\" method call.\r\n   */\r\n  getSeriesInstanceUID() {\r\n    return this.getTagValue('SeriesInstanceUID', null);\r\n  }\r\n\r\n  /**\r\n   * Returns the SOPInstanceUID of the current instance.\r\n   */\r\n  getSOPInstanceUID() {\r\n    return this.getTagValue('SOPInstanceUID', null);\r\n  }\r\n\r\n  // @TODO: Improve this... (E.g.: blob data)\r\n  getStringValue(tagOrProperty, index, defaultValue) {\r\n    let value = this.getTagValue(tagOrProperty, defaultValue);\r\n\r\n    if (typeof value !== STRING && typeof value !== UNDEFINED) {\r\n      value = value.toString();\r\n    }\r\n\r\n    return InstanceMetadata.getIndexedValue(value, index, defaultValue);\r\n  }\r\n\r\n  // @TODO: Improve this... (E.g.: blob data)\r\n  getFloatValue(tagOrProperty, index, defaultValue) {\r\n    let value = this.getTagValue(tagOrProperty, defaultValue);\r\n    value = InstanceMetadata.getIndexedValue(value, index, defaultValue);\r\n\r\n    if (value instanceof Array) {\r\n      value.forEach((val, idx) => {\r\n        value[idx] = parseFloat(val);\r\n      });\r\n\r\n      return value;\r\n    }\r\n\r\n    return typeof value === STRING ? parseFloat(value) : value;\r\n  }\r\n\r\n  // @TODO: Improve this... (E.g.: blob data)\r\n  getIntValue(tagOrProperty, index, defaultValue) {\r\n    let value = this.getTagValue(tagOrProperty, defaultValue);\r\n    value = InstanceMetadata.getIndexedValue(value, index, defaultValue);\r\n\r\n    if (value instanceof Array) {\r\n      value.forEach((val, idx) => {\r\n        value[idx] = parseFloat(val);\r\n      });\r\n\r\n      return value;\r\n    }\r\n\r\n    return typeof value === STRING ? parseInt(value) : value;\r\n  }\r\n\r\n  /**\r\n   * This function should be overriden by specialized classes in order to allow client libraries or viewers to take advantage of the Study Metadata API.\r\n   */\r\n  getTagValue(tagOrProperty, defaultValue) {\r\n    /**\r\n     * Please override this method on a specialized class.\r\n     */\r\n    throw new OHIFError(\r\n      'InstanceMetadata::getTagValue is not overriden. Please, override it in a specialized class. See OHIFInstanceMetadata for example'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Compares the current instance with another one.\r\n   * @param {InstanceMetadata} instance An instance of the InstanceMetadata class.\r\n   * @returns {boolean} Returns true if both instances refer to the same instance.\r\n   */\r\n  equals(instance) {\r\n    const self = this;\r\n    return (\r\n      instance === self ||\r\n      (instance instanceof InstanceMetadata &&\r\n        instance.getSOPInstanceUID() === self.getSOPInstanceUID())\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Check if the tagOrProperty exists\r\n   * @param  {String} tagOrProperty tag or property be checked\r\n   * @return {Boolean}   True if the tag or property exists or false if doesn't\r\n   */\r\n  tagExists(tagOrProperty) {\r\n    /**\r\n     * Please override this method\r\n     */\r\n    throw new OHIFError(\r\n      'InstanceMetadata::tagExists is not overriden. Please, override it in a specialized class. See OHIFInstanceMetadata for example'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get custom image id of a sop instance\r\n   * @return {Any}          sop instance image id\r\n   */\r\n  getImageId(frame) {\r\n    /**\r\n     * Please override this method\r\n     */\r\n    throw new OHIFError(\r\n      'InstanceMetadata::getImageId is not overriden. Please, override it in a specialized class. See OHIFInstanceMetadata for example'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Static Methods\r\n   */\r\n\r\n  /**\r\n   * Get an value based that can be index based. This function is called by all getters. See above functions.\r\n   *     - If value is a String and has indexes:\r\n   *         - If undefined index: returns an array of the split values.\r\n   *         - If defined index:\r\n   *             - If invalid: returns defaultValue\r\n   *             - If valid: returns the indexed value\r\n   *      - If value is not a String, returns default value.\r\n   */\r\n  static getIndexedValue(value, index, defaultValue) {\r\n    let result = defaultValue;\r\n\r\n    if (typeof value === STRING) {\r\n      const hasIndexValues = value.indexOf('\\\\') !== -1;\r\n\r\n      result = value;\r\n\r\n      if (hasIndexValues) {\r\n        const splitValues = value.split('\\\\');\r\n        if (Metadata.isValidIndex(index)) {\r\n          const indexedValue = splitValues[index];\r\n\r\n          result = typeof indexedValue !== STRING ? defaultValue : indexedValue;\r\n        } else {\r\n          result = splitValues;\r\n        }\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n","import { Metadata } from './Metadata';\r\nimport { InstanceMetadata } from './InstanceMetadata';\r\n\r\nexport class SeriesMetadata extends Metadata {\r\n  constructor(data, uid) {\r\n    super(data, uid);\r\n    // Initialize Private Properties\r\n    Object.defineProperties(this, {\r\n      _seriesInstanceUID: {\r\n        configurable: true, // configurable so that it can be redefined in sub-classes...\r\n        enumerable: false,\r\n        writable: true,\r\n        value: null,\r\n      },\r\n      _instances: {\r\n        configurable: false,\r\n        enumerable: false,\r\n        writable: false,\r\n        value: [],\r\n      },\r\n      _firstInstance: {\r\n        configurable: false,\r\n        enumerable: false,\r\n        writable: true,\r\n        value: null,\r\n      },\r\n    });\r\n    // Initialize Public Properties\r\n    this._definePublicProperties();\r\n  }\r\n\r\n  /**\r\n   * Private Methods\r\n   */\r\n\r\n  /**\r\n   * Define Public Properties\r\n   * This method should only be called during initialization (inside the class constructor)\r\n   */\r\n  _definePublicProperties() {\r\n    /**\r\n     * Property: this.seriesInstanceUID\r\n     * Same as this.getSeriesInstanceUID()\r\n     * It's specially useful in contexts where a method call is not suitable like in search criteria. For example:\r\n     * seriesCollection.findBy({\r\n     *   seriesInstanceUID: '1.2.3.4.5.6.77777.8888888.99999999999.0'\r\n     * });\r\n     */\r\n    Object.defineProperty(this, 'seriesInstanceUID', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      get: function() {\r\n        return this.getSeriesInstanceUID();\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Public Methods\r\n   */\r\n\r\n  /**\r\n   * Returns the SeriesInstanceUID of the current series.\r\n   */\r\n  getSeriesInstanceUID() {\r\n    return this._seriesInstanceUID;\r\n  }\r\n\r\n  /**\r\n   * Append an instance to the current series.\r\n   * @param {InstanceMetadata} instance The instance to be added to the current series.\r\n   * @returns {boolean} Returns true on success, false otherwise.\r\n   */\r\n  addInstance(instance) {\r\n    let result = false;\r\n    if (\r\n      instance instanceof InstanceMetadata &&\r\n      this.getInstanceByUID(instance.getSOPInstanceUID()) === void 0\r\n    ) {\r\n      this._instances.push(instance);\r\n      result = true;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Get the first instance of the current series retaining a consistent result across multiple calls.\r\n   * @return {InstanceMetadata} An instance of the InstanceMetadata class or null if it does not exist.\r\n   */\r\n  getFirstInstance() {\r\n    let instance = this._firstInstance;\r\n    if (!(instance instanceof InstanceMetadata)) {\r\n      instance = null;\r\n      const found = this.getInstanceByIndex(0);\r\n      if (found instanceof InstanceMetadata) {\r\n        this._firstInstance = found;\r\n        instance = found;\r\n      }\r\n    }\r\n    return instance;\r\n  }\r\n\r\n  /**\r\n   * Find an instance by index.\r\n   * @param {number} index An integer representing a list index.\r\n   * @returns {InstanceMetadata} Returns a InstanceMetadata instance when found or undefined otherwise.\r\n   */\r\n  getInstanceByIndex(index) {\r\n    let found; // undefined by default...\r\n    if (Metadata.isValidIndex(index)) {\r\n      found = this._instances[index];\r\n    }\r\n    return found;\r\n  }\r\n\r\n  /**\r\n   * Find an instance by SOPInstanceUID.\r\n   * @param {string} uid An UID string.\r\n   * @returns {InstanceMetadata} Returns a InstanceMetadata instance when found or undefined otherwise.\r\n   */\r\n  getInstanceByUID(uid) {\r\n    let found; // undefined by default...\r\n    if (Metadata.isValidUID(uid)) {\r\n      found = this._instances.find(instance => {\r\n        return instance.getSOPInstanceUID() === uid;\r\n      });\r\n    }\r\n    return found;\r\n  }\r\n\r\n  /**\r\n   * Retrieve the number of instances within the current series.\r\n   * @returns {number} The number of instances in the current series.\r\n   */\r\n  getInstanceCount() {\r\n    return this._instances.length;\r\n  }\r\n\r\n  /**\r\n   * Invokes the supplied callback for each instance in the current series passing\r\n   * two arguments: instance (an InstanceMetadata instance) and index (the integer\r\n   * index of the instance within the current series)\r\n   * @param {function} callback The callback function which will be invoked for each instance in the series.\r\n   * @returns {undefined} Nothing is returned.\r\n   */\r\n  forEachInstance(callback) {\r\n    if (Metadata.isValidCallback(callback)) {\r\n      this._instances.forEach((instance, index) => {\r\n        callback.call(null, instance, index);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Find the index of an instance inside the series.\r\n   * @param {InstanceMetadata} instance An instance of the SeriesMetadata class.\r\n   * @returns {number} The index of the instance inside the series or -1 if not found.\r\n   */\r\n  indexOfInstance(instance) {\r\n    return this._instances.indexOf(instance);\r\n  }\r\n\r\n  /**\r\n   * Search the associated instances using the supplied callback as criteria. The callback is passed\r\n   * two arguments: instance (a InstanceMetadata instance) and index (the integer\r\n   * index of the instance within its series)\r\n   * @param {function} callback The callback function which will be invoked for each instance.\r\n   * @returns {InstanceMetadata|undefined} If an instance is found based on callback criteria it\r\n   *                                     returns a InstanceMetadata. \"undefined\" is returned otherwise\r\n   */\r\n  findInstance(callback) {\r\n    if (Metadata.isValidCallback(callback)) {\r\n      return this._instances.find((instance, index) => {\r\n        return callback.call(null, instance, index);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Compares the current series with another one.\r\n   * @param {SeriesMetadata} series An instance of the SeriesMetadata class.\r\n   * @returns {boolean} Returns true if both instances refer to the same series.\r\n   */\r\n  equals(series) {\r\n    const self = this;\r\n    return (\r\n      series === self ||\r\n      (series instanceof SeriesMetadata &&\r\n        series.getSeriesInstanceUID() === self.getSeriesInstanceUID())\r\n    );\r\n  }\r\n}\r\n","import classNames from 'classnames';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Transition, {\r\n  ENTERED,\r\n  ENTERING,\r\n} from 'react-transition-group/Transition';\r\n\r\nconst propTypes = {\r\n  /**\r\n   * Show the component; triggers the fade in or fade out animation\r\n   */\r\n  in: PropTypes.bool,\r\n\r\n  /**\r\n   * Wait until the first \"enter\" transition to mount the component (add it to the DOM)\r\n   */\r\n  mountOnEnter: PropTypes.bool,\r\n\r\n  /**\r\n   * Unmount the component (remove it from the DOM) when it is faded out\r\n   */\r\n  unmountOnExit: PropTypes.bool,\r\n\r\n  /**\r\n   * Run the fade in animation when the component mounts, if it is initially\r\n   * shown\r\n   */\r\n  appear: PropTypes.bool,\r\n\r\n  /**\r\n   * Duration of the fade animation in milliseconds, to ensure that finishing\r\n   * callbacks are fired even if the original browser transition end events are\r\n   * canceled\r\n   */\r\n  timeout: PropTypes.number,\r\n\r\n  /**\r\n   * Callback fired before the component fades in\r\n   */\r\n  onEnter: PropTypes.func,\r\n  /**\r\n   * Callback fired after the component starts to fade in\r\n   */\r\n  onEntering: PropTypes.func,\r\n  /**\r\n   * Callback fired after the has component faded in\r\n   */\r\n  onEntered: PropTypes.func,\r\n  /**\r\n   * Callback fired before the component fades out\r\n   */\r\n  onExit: PropTypes.func,\r\n  /**\r\n   * Callback fired after the component starts to fade out\r\n   */\r\n  onExiting: PropTypes.func,\r\n  /**\r\n   * Callback fired after the component has faded out\r\n   */\r\n  onExited: PropTypes.func,\r\n};\r\n\r\nconst defaultProps = {\r\n  in: false,\r\n  timeout: 300,\r\n  mountOnEnter: false,\r\n  unmountOnExit: false,\r\n  appear: false,\r\n};\r\n\r\nconst fadeStyles = {\r\n  [ENTERING]: 'in',\r\n  [ENTERED]: 'in',\r\n};\r\n\r\nclass Fade extends React.Component {\r\n  render() {\r\n    const { className, children, ...props } = this.props;\r\n\r\n    return (\r\n      <Transition {...props}>\r\n        {(status, innerProps) =>\r\n          React.cloneElement(children, {\r\n            ...innerProps,\r\n            className: classNames(\r\n              'fade',\r\n              className,\r\n              children.props.className,\r\n              fadeStyles[status]\r\n            ),\r\n          })\r\n        }\r\n      </Transition>\r\n    );\r\n  }\r\n}\r\n\r\nFade.propTypes = propTypes;\r\nFade.defaultProps = defaultProps;\r\n\r\nexport default Fade;\r\n","import classNames from 'classnames';\r\nimport React, { cloneElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Overlay as BaseOverlay } from 'react-overlays';\r\nimport elementType from 'prop-types-extra/lib/elementType';\r\nimport { withTranslation } from '../../contextProviders';\r\n\r\nimport Fade from './Fade';\r\n\r\nconst propTypes = {\r\n  /**\r\n   * Set the visibility of the Overlay\r\n   */\r\n  show: PropTypes.bool,\r\n  /**\r\n   * Specify whether the overlay should trigger onHide when the user clicks outside the overlay\r\n   */\r\n  rootClose: PropTypes.bool,\r\n  /**\r\n   * A callback invoked by the overlay when it wishes to be hidden. Required if\r\n   * `rootClose` is specified.\r\n   */\r\n  onHide: PropTypes.func,\r\n\r\n  /**\r\n   * Use animation\r\n   */\r\n  animation: PropTypes.oneOfType([PropTypes.bool, elementType]),\r\n\r\n  /**\r\n   * Callback fired before the Overlay transitions in\r\n   */\r\n  onEnter: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired as the Overlay begins to transition in\r\n   */\r\n  onEntering: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired after the Overlay finishes transitioning in\r\n   */\r\n  onEntered: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired right before the Overlay transitions out\r\n   */\r\n  onExit: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired as the Overlay begins to transition out\r\n   */\r\n  onExiting: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired after the Overlay finishes transitioning out\r\n   */\r\n  onExited: PropTypes.func,\r\n\r\n  /**\r\n   * Sets the direction of the Overlay.\r\n   */\r\n  placement: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\r\n};\r\n\r\nconst defaultProps = {\r\n  animation: Fade,\r\n  rootClose: false,\r\n  show: false,\r\n  placement: 'right',\r\n};\r\n\r\nclass Overlay extends React.Component {\r\n  render() {\r\n    const { animation, children, ...props } = this.props;\r\n\r\n    const transition = animation === true ? Fade : animation || null;\r\n\r\n    let child;\r\n\r\n    if (!transition) {\r\n      child = cloneElement(children, {\r\n        className: classNames(children.props.className, 'in'),\r\n      });\r\n    } else {\r\n      child = children;\r\n    }\r\n\r\n    return (\r\n      <BaseOverlay {...props} transition={transition}>\r\n        {child}\r\n      </BaseOverlay>\r\n    );\r\n  }\r\n}\r\n\r\nOverlay.propTypes = propTypes;\r\nOverlay.defaultProps = defaultProps;\r\n\r\nconst connectedComponent = withTranslation()(Overlay);\r\nexport { connectedComponent as Overlay };\r\nexport default connectedComponent;\r\n","/**\r\n * Safe chained function\r\n *\r\n * Will only create a new function if needed,\r\n * otherwise will pass back existing functions or null.\r\n *\r\n * @param {function} functions to chain\r\n * @returns {function|null}\r\n */\r\nfunction createChainedFunction(...funcs) {\r\n  return funcs\r\n    .filter(f => f != null)\r\n    .reduce((acc, f) => {\r\n      if (typeof f !== 'function') {\r\n        throw new Error(\r\n          'Invalid Argument Type, must only provide functions, undefined, or null.'\r\n        );\r\n      }\r\n\r\n      if (acc === null) {\r\n        return f;\r\n      }\r\n\r\n      return function chainedFunction(...args) {\r\n        acc.apply(this, args);\r\n        f.apply(this, args);\r\n      };\r\n    }, null);\r\n}\r\n\r\nexport default createChainedFunction;\r\n","import contains from 'dom-helpers/query/contains';\r\nimport React, { cloneElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactDOM from 'react-dom';\r\nimport warning from 'warning';\r\n\r\nimport { Overlay } from './Overlay';\r\n\r\nimport createChainedFunction from './createChainedFunction';\r\n\r\n/**\r\n * Check if value one is inside or equal to the of value\r\n *\r\n * @param {string} one\r\n * @param {string|array} of\r\n * @returns {boolean}\r\n */\r\nfunction isOneOf(one, of) {\r\n  if (Array.isArray(of)) {\r\n    return of.indexOf(one) >= 0;\r\n  }\r\n  return one === of;\r\n}\r\n\r\nconst triggerType = PropTypes.oneOf(['click', 'hover', 'focus']);\r\n\r\nconst propTypes = {\r\n  /**\r\n   * Specify which action or actions trigger Overlay visibility\r\n   */\r\n  trigger: PropTypes.oneOfType([triggerType, PropTypes.arrayOf(triggerType)]),\r\n\r\n  /**\r\n   * A millisecond delay amount to show and hide the Overlay once triggered\r\n   */\r\n  delay: PropTypes.number,\r\n  /**\r\n   * A millisecond delay amount before showing the Overlay once triggered.\r\n   */\r\n  delayShow: PropTypes.number,\r\n  /**\r\n   * A millisecond delay amount before hiding the Overlay once triggered.\r\n   */\r\n  delayHide: PropTypes.number,\r\n\r\n  // FIXME: This should be `defaultShow`.\r\n  /**\r\n   * The initial visibility state of the Overlay. For more nuanced visibility\r\n   * control, consider using the Overlay component directly.\r\n   */\r\n  defaultOverlayShown: PropTypes.bool,\r\n\r\n  /**\r\n   * An element or text to overlay next to the target.\r\n   */\r\n  overlay: PropTypes.node.isRequired,\r\n\r\n  /**\r\n   * A function to be called once the hide is triggered\r\n   */\r\n  handleHide: PropTypes.func,\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  onBlur: PropTypes.func,\r\n  /**\r\n   * @private\r\n   */\r\n  onClick: PropTypes.func,\r\n  /**\r\n   * @private\r\n   */\r\n  onFocus: PropTypes.func,\r\n  /**\r\n   * @private\r\n   */\r\n  onMouseOut: PropTypes.func,\r\n  /**\r\n   * @private\r\n   */\r\n  onMouseOver: PropTypes.func,\r\n\r\n  // Overridden props from `<Overlay>`.\r\n  /**\r\n   * @private\r\n   */\r\n  target: PropTypes.oneOf([null]),\r\n  /**\r\n   * @private\r\n   */\r\n  onHide: PropTypes.oneOf([null]),\r\n  /**\r\n   * @private\r\n   */\r\n  show: PropTypes.oneOf([null]),\r\n};\r\n\r\nconst defaultProps = {\r\n  defaultOverlayShown: false,\r\n  trigger: ['hover', 'focus'],\r\n};\r\n\r\nclass OverlayTrigger extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleToggle = this.handleToggle.bind(this);\r\n    this.handleDelayedShow = this.handleDelayedShow.bind(this);\r\n    this.handleDelayedHide = this.handleDelayedHide.bind(this);\r\n    this.handleHide = createChainedFunction(\r\n      this.handleHide.bind(this),\r\n      props.handleHide\r\n    );\r\n\r\n    this.handleMouseOver = e =>\r\n      this.handleMouseOverOut(this.handleDelayedShow, e, 'fromElement');\r\n    this.handleMouseOut = e =>\r\n      this.handleMouseOverOut(this.handleDelayedHide, e, 'toElement');\r\n\r\n    this._mountNode = null;\r\n\r\n    this.state = {\r\n      show: props.defaultOverlayShown,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._mountNode = document.createElement('div');\r\n    this.renderOverlay();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.renderOverlay();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    ReactDOM.unmountComponentAtNode(this._mountNode);\r\n    this._mountNode = null;\r\n\r\n    clearTimeout(this._hoverShowDelay);\r\n    clearTimeout(this._hoverHideDelay);\r\n  }\r\n\r\n  handleDelayedHide() {\r\n    if (this._hoverShowDelay != null) {\r\n      clearTimeout(this._hoverShowDelay);\r\n      this._hoverShowDelay = null;\r\n      return;\r\n    }\r\n\r\n    if (!this.state.show || this._hoverHideDelay != null) {\r\n      return;\r\n    }\r\n\r\n    const delay =\r\n      this.props.delayHide != null ? this.props.delayHide : this.props.delay;\r\n\r\n    if (!delay) {\r\n      this.hide();\r\n      return;\r\n    }\r\n\r\n    this._hoverHideDelay = setTimeout(() => {\r\n      this._hoverHideDelay = null;\r\n      this.hide();\r\n    }, delay);\r\n  }\r\n\r\n  handleDelayedShow() {\r\n    if (this._hoverHideDelay != null) {\r\n      clearTimeout(this._hoverHideDelay);\r\n      this._hoverHideDelay = null;\r\n      return;\r\n    }\r\n\r\n    if (this.state.show || this._hoverShowDelay != null) {\r\n      return;\r\n    }\r\n\r\n    const delay =\r\n      this.props.delayShow != null ? this.props.delayShow : this.props.delay;\r\n\r\n    if (!delay) {\r\n      this.show();\r\n      return;\r\n    }\r\n\r\n    this._hoverShowDelay = setTimeout(() => {\r\n      this._hoverShowDelay = null;\r\n      this.show();\r\n    }, delay);\r\n  }\r\n\r\n  handleHide() {\r\n    this.hide();\r\n  }\r\n\r\n  // Simple implementation of mouseEnter and mouseLeave.\r\n  // React's built version is broken: https://github.com/facebook/react/issues/4251\r\n  // for cases when the trigger is disabled and mouseOut/Over can cause flicker\r\n  // moving from one child element to another.\r\n  handleMouseOverOut(handler, e, relatedNative) {\r\n    const target = e.currentTarget;\r\n    const related = e.relatedTarget || e.nativeEvent[relatedNative];\r\n\r\n    if ((!related || related !== target) && !contains(target, related)) {\r\n      handler(e);\r\n    }\r\n  }\r\n\r\n  handleToggle() {\r\n    if (this.state.show) {\r\n      this.hide();\r\n    } else {\r\n      this.show();\r\n    }\r\n  }\r\n\r\n  hide() {\r\n    this.setState({ show: false });\r\n  }\r\n\r\n  makeOverlay(overlay, props) {\r\n    return (\r\n      <Overlay\r\n        {...props}\r\n        show={this.state.show}\r\n        onHide={this.handleHide}\r\n        target={this}\r\n      >\r\n        {overlay}\r\n      </Overlay>\r\n    );\r\n  }\r\n\r\n  show() {\r\n    this.setState({ show: true });\r\n  }\r\n\r\n  renderOverlay() {\r\n    ReactDOM.unstable_renderSubtreeIntoContainer(\r\n      this,\r\n      this._overlay,\r\n      this._mountNode\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      trigger,\r\n      overlay,\r\n      children,\r\n      onBlur,\r\n      onClick,\r\n      onFocus,\r\n      onMouseOut,\r\n      onMouseOver,\r\n      ...props\r\n    } = this.props;\r\n\r\n    delete props.delay;\r\n    delete props.delayShow;\r\n    delete props.delayHide;\r\n    delete props.defaultOverlayShown;\r\n\r\n    const child = React.Children.only(children);\r\n    const childProps = child.props;\r\n    const triggerProps = {};\r\n\r\n    if (this.state.show) {\r\n      triggerProps['aria-describedby'] = overlay.props.id;\r\n    }\r\n\r\n    // FIXME: The logic here for passing through handlers on this component is\r\n    // inconsistent. We shouldn't be passing any of these props through.\r\n\r\n    triggerProps.onClick = createChainedFunction(childProps.onClick, onClick);\r\n\r\n    if (isOneOf('click', trigger)) {\r\n      triggerProps.onClick = createChainedFunction(\r\n        triggerProps.onClick,\r\n        this.handleToggle\r\n      );\r\n    }\r\n\r\n    if (isOneOf('hover', trigger)) {\r\n      warning(\r\n        !(trigger === 'hover'),\r\n        '[react-bootstrap] Specifying only the `\"hover\"` trigger limits the ' +\r\n          'visibility of the overlay to just mouse users. Consider also ' +\r\n          'including the `\"focus\"` trigger so that touch and keyboard only ' +\r\n          'users can see the overlay as well.'\r\n      );\r\n\r\n      triggerProps.onMouseOver = createChainedFunction(\r\n        childProps.onMouseOver,\r\n        onMouseOver,\r\n        this.handleMouseOver\r\n      );\r\n      triggerProps.onMouseOut = createChainedFunction(\r\n        childProps.onMouseOut,\r\n        onMouseOut,\r\n        this.handleMouseOut\r\n      );\r\n    }\r\n\r\n    if (isOneOf('focus', trigger)) {\r\n      triggerProps.onFocus = createChainedFunction(\r\n        childProps.onFocus,\r\n        onFocus,\r\n        this.handleDelayedShow\r\n      );\r\n      triggerProps.onBlur = createChainedFunction(\r\n        childProps.onBlur,\r\n        onBlur,\r\n        this.handleDelayedHide\r\n      );\r\n    }\r\n\r\n    this._overlay = this.makeOverlay(overlay, props);\r\n\r\n    return cloneElement(child, triggerProps);\r\n  }\r\n}\r\n\r\nOverlayTrigger.propTypes = propTypes;\r\nOverlayTrigger.defaultProps = defaultProps;\r\n\r\nexport { OverlayTrigger };\r\n","export { Overlay } from './Overlay.js';\r\nexport { OverlayTrigger } from './OverlayTrigger.js';\r\n","import React, { useContext } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getActiveContexts } from '../store/layout/selectors.js';\r\n\r\nlet AppContext = React.createContext({});\r\n\r\nexport const CONTEXTS = {\r\n  CORNERSTONE: 'ACTIVE_VIEWPORT::CORNERSTONE',\r\n  VTK: 'ACTIVE_VIEWPORT::VTK'\r\n};\r\n\r\nexport const useAppContext = () => useContext(AppContext);\r\n\r\nexport const AppProvider = ({ children, config }) => {\r\n  const activeContexts = useSelector(state => getActiveContexts(state));\r\n\r\n  return (\r\n    <AppContext.Provider value={{ appConfig: config, activeContexts }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const withAppContext = Component => {\r\n  return function WrappedComponent(props) {\r\n    const { appConfig, activeContexts } = useAppContext();\r\n    return (\r\n      <Component {...props} appConfig={appConfig} activeContexts={activeContexts} />\r\n    );\r\n  };\r\n};\r\n\r\nexport default AppContext;\r\n","import './Tooltip.styl';\r\n\r\nimport classNames from 'classnames';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n  /** Sets the direction the Tooltip is positioned towards. */\r\n  placement: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\r\n\r\n  /** The \"top\" position value for the Tooltip. */\r\n  positionTop: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  /** The \"left\" position value for the Tooltip. */\r\n  positionLeft: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n\r\n  /** The \"top\" position value for the Tooltip arrow. */\r\n  arrowOffsetTop: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  /** The \"left\" position value for the Tooltip arrow. */\r\n  arrowOffsetLeft: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n};\r\n\r\nconst defaultProps = {\r\n  placement: 'right',\r\n};\r\n\r\nclass Tooltip extends React.Component {\r\n  render() {\r\n    const {\r\n      placement,\r\n      positionTop,\r\n      positionLeft,\r\n      arrowOffsetTop,\r\n      arrowOffsetLeft,\r\n      className,\r\n      style,\r\n      children,\r\n    } = this.props;\r\n\r\n    const outerStyle = {\r\n      top: positionTop,\r\n      left: positionLeft,\r\n      ...style,\r\n    };\r\n\r\n    const arrowStyle = {\r\n      top: arrowOffsetTop,\r\n      left: arrowOffsetLeft,\r\n    };\r\n\r\n    return (\r\n      <div\r\n        role=\"tooltip\"\r\n        className={classNames(className, 'tooltip', placement)}\r\n        style={outerStyle}\r\n      >\r\n        <div className=\"tooltip-arrow\" style={arrowStyle} />\r\n        <div className=\"tooltip-inner\">{children}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTooltip.propTypes = propTypes;\r\nTooltip.defaultProps = defaultProps;\r\n\r\nexport { Tooltip };\r\n","export { Tooltip } from './Tooltip.js';\r\n","import { api } from 'dicomweb-client';\r\nimport DICOMWeb from '../../DICOMWeb';\r\nimport str2ab from '../str2ab';\r\n\r\nimport errorHandler from '../../errorHandler';\r\nimport getXHRRetryRequestHook from '../xhrRetryRequestHook';\r\n\r\nexport default async function fetchPaletteColorLookupTableData(\r\n  instance,\r\n  server\r\n) {\r\n  const {\r\n    PaletteColorLookupTableUID,\r\n    RedPaletteColorLookupTableDescriptor,\r\n    GreenPaletteColorLookupTableDescriptor,\r\n    BluePaletteColorLookupTableDescriptor,\r\n    RedPaletteColorLookupTableData,\r\n    GreenPaletteColorLookupTableData,\r\n    BluePaletteColorLookupTableData,\r\n  } = instance;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    let entry;\r\n    if (_paletteColorCache.isValidUID(PaletteColorLookupTableUID)) {\r\n      entry = _paletteColorCache.get(PaletteColorLookupTableUID);\r\n\r\n      if (entry) {\r\n        return resolve(entry);\r\n      }\r\n    }\r\n\r\n    // no entry in cache... Fetch remote data.\r\n    const promises = [\r\n      _getPaletteColor(\r\n        server,\r\n        RedPaletteColorLookupTableData,\r\n        RedPaletteColorLookupTableDescriptor\r\n      ),\r\n      _getPaletteColor(\r\n        server,\r\n        GreenPaletteColorLookupTableData,\r\n        GreenPaletteColorLookupTableDescriptor\r\n      ),\r\n      _getPaletteColor(\r\n        server,\r\n        BluePaletteColorLookupTableData,\r\n        BluePaletteColorLookupTableDescriptor\r\n      ),\r\n    ];\r\n\r\n    Promise.all(promises).then(\r\n      ([\r\n        RedPaletteColorLookupTableData,\r\n        GreenPaletteColorLookupTableData,\r\n        BluePaletteColorLookupTableData,\r\n      ]) => {\r\n        // when PaletteColorLookupTableUID is present, the entry can be cached...\r\n        _paletteColorCache.add({\r\n          RedPaletteColorLookupTableData,\r\n          GreenPaletteColorLookupTableData,\r\n          BluePaletteColorLookupTableData,\r\n          PaletteColorLookupTableUID,\r\n        });\r\n\r\n        instance.RedPaletteColorLookupTableData = RedPaletteColorLookupTableData;\r\n        instance.GreenPaletteColorLookupTableData = GreenPaletteColorLookupTableData;\r\n        instance.BluePaletteColorLookupTableData = BluePaletteColorLookupTableData;\r\n\r\n        resolve();\r\n      }\r\n    );\r\n  });\r\n}\r\n\r\n/**\r\n * Simple cache schema for retrieved color palettes.\r\n */\r\nconst _paletteColorCache = {\r\n  count: 0,\r\n  maxAge: 24 * 60 * 60 * 1000, // 24h cache?\r\n  entries: {},\r\n  isValidUID: function(PaletteColorLookupTableUID) {\r\n    return (\r\n      typeof PaletteColorLookupTableUID === 'string' &&\r\n      PaletteColorLookupTableUID.length > 0\r\n    );\r\n  },\r\n  get: function(PaletteColorLookupTableUID) {\r\n    let entry = null;\r\n    if (this.entries.hasOwnProperty(PaletteColorLookupTableUID)) {\r\n      entry = this.entries[PaletteColorLookupTableUID];\r\n      // check how the entry is...\r\n      if (Date.now() - entry.time > this.maxAge) {\r\n        // entry is too old... remove entry.\r\n        delete this.entries[PaletteColorLookupTableUID];\r\n        this.count--;\r\n        entry = null;\r\n      }\r\n    }\r\n    return entry;\r\n  },\r\n  add: function(entry) {\r\n    if (this.isValidUID(entry.uid)) {\r\n      let PaletteColorLookupTableUID = entry.uid;\r\n      if (this.entries.hasOwnProperty(PaletteColorLookupTableUID) !== true) {\r\n        this.count++; // increment cache entry count...\r\n      }\r\n      entry.time = Date.now();\r\n      this.entries[PaletteColorLookupTableUID] = entry;\r\n      // @TODO: Add logic to get rid of old entries and reduce memory usage...\r\n    }\r\n  },\r\n};\r\n\r\nfunction _getPaletteColor(server, paletteColorLookupTableData, lutDescriptor) {\r\n  const numLutEntries = lutDescriptor[0] ? lutDescriptor[0] : 65536;\r\n  const bits = lutDescriptor[2];\r\n\r\n  const arrayBufferToPaletteColorLUT = arraybuffer => {\r\n    const byteArray = bits === 16 ?\r\n      new Uint16Array(arraybuffer) :\r\n      new Uint8Array(arraybuffer);\r\n    const lut = [];\r\n\r\n    for (let i = 0; i < numLutEntries; i++) {\r\n      lut[i] = byteArray[i];\r\n    }\r\n\r\n    return lut;\r\n  };\r\n\r\n  if (paletteColorLookupTableData.BulkDataURI) {\r\n    let uri = paletteColorLookupTableData.BulkDataURI;\r\n\r\n    // TODO: Workaround for dcm4chee behind SSL-terminating proxy returning\r\n    // incorrect bulk data URIs\r\n    if (server.wadoRoot.indexOf('https') === 0 && !uri.includes('https')) {\r\n      uri = uri.replace('http', 'https');\r\n    }\r\n\r\n    const config = {\r\n      url: server.wadoRoot, //BulkDataURI is absolute, so this isn't used\r\n      headers: DICOMWeb.getAuthorizationHeader(server),\r\n      errorInterceptor: errorHandler.getHTTPErrorHandler(),\r\n      requestHooks: [getXHRRetryRequestHook()],\r\n    };\r\n    const dicomWeb = new api.DICOMwebClient(config);\r\n    const options = {\r\n      BulkDataURI: uri,\r\n    };\r\n\r\n    return dicomWeb\r\n      .retrieveBulkData(options)\r\n      .then(result => result[0])\r\n      .then(arrayBufferToPaletteColorLUT);\r\n  } else if (paletteColorLookupTableData.InlineBinary) {\r\n    const inlineBinaryData = atob(paletteColorLookupTableData.InlineBinary);\r\n    const arraybuffer = str2ab(inlineBinaryData);\r\n\r\n    return new Promise(resolve => {\r\n      resolve(arrayBufferToPaletteColorLUT(arraybuffer));\r\n    });\r\n  } else {\r\n    return Promise.resolve(\r\n      arrayBufferToPaletteColorLUT(paletteColorLookupTableData)\r\n    );\r\n  }\r\n}\r\n","export default function unpackOverlay(arrayBuffer) {\r\n  const bitArray = new Uint8Array(arrayBuffer);\r\n  const byteArray = new Uint8Array(8 * bitArray.length);\r\n\r\n  for (let byteIndex = 0; byteIndex < byteArray.length; byteIndex++) {\r\n    const bitIndex = byteIndex % 8;\r\n    const bitByteIndex = Math.floor(byteIndex / 8);\r\n    byteArray[byteIndex] =\r\n      1 * ((bitArray[bitByteIndex] & (1 << bitIndex)) >> bitIndex);\r\n  }\r\n\r\n  return byteArray;\r\n}\r\n","import { api } from 'dicomweb-client';\r\nimport DICOMWeb from '../../DICOMWeb';\r\nimport str2ab from '../str2ab';\r\nimport unpackOverlay from './unpackOverlay';\r\n\r\nimport errorHandler from '../../errorHandler';\r\nimport getXHRRetryRequestHook from '../xhrRetryRequestHook';\r\n\r\nexport default async function fetchOverlayData(instance, server) {\r\n  const OverlayDataPromises = [];\r\n  const OverlayDataTags = [];\r\n\r\n  return new Promise((resolve, reject) => {\r\n    for (let overlayGroup = 0x00; overlayGroup <= 0x1e; overlayGroup += 0x02) {\r\n      let groupStr = `60${overlayGroup.toString(16)}`;\r\n\r\n      if (groupStr.length === 3) {\r\n        groupStr = `600${overlayGroup.toString(16)}`;\r\n      }\r\n\r\n      const OverlayDataTag = `${groupStr}3000`;\r\n\r\n      if (instance[OverlayDataTag] && instance[OverlayDataTag].InlineBinary) {\r\n        const inlineBinaryData = atob(instance[OverlayDataTag].InlineBinary);\r\n        const arraybuffer = str2ab(inlineBinaryData);\r\n\r\n        instance[OverlayDataTag] = unpackOverlay(arraybuffer);\r\n      } else if (\r\n        instance[OverlayDataTag] &&\r\n        instance[OverlayDataTag].BulkDataURI\r\n      ) {\r\n        OverlayDataPromises.push(\r\n          _getOverlayData(instance[OverlayDataTag], server)\r\n        );\r\n        OverlayDataTags.push(OverlayDataTag);\r\n      } else if (\r\n        instance[OverlayDataTag] &&\r\n        instance[OverlayDataTag] instanceof ArrayBuffer\r\n      ) {\r\n        instance[OverlayDataTag] = unpackOverlay(instance[OverlayDataTag]);\r\n      }\r\n    }\r\n\r\n    if (OverlayDataPromises.length) {\r\n      Promise.all(OverlayDataPromises).then(results => {\r\n        for (let i = 0; i < results.length; i++) {\r\n          instance[OverlayDataTags[i]] = results[i];\r\n        }\r\n\r\n        resolve();\r\n      });\r\n    } else {\r\n      resolve();\r\n    }\r\n  });\r\n}\r\n\r\nasync function _getOverlayData(tag, server) {\r\n  const { BulkDataURI } = tag;\r\n\r\n  let uri = BulkDataURI;\r\n\r\n  // TODO: Workaround for dcm4chee behind SSL-terminating proxy returning\r\n  // incorrect bulk data URIs\r\n  if (server.wadoRoot.indexOf('https') === 0 && !uri.includes('https')) {\r\n    uri = uri.replace('http', 'https');\r\n  }\r\n\r\n  const config = {\r\n    url: server.wadoRoot, //BulkDataURI is absolute, so this isn't used\r\n    headers: DICOMWeb.getAuthorizationHeader(server),\r\n    errorInterceptor: errorHandler.getHTTPErrorHandler(),\r\n    requestHooks: [getXHRRetryRequestHook()],\r\n  };\r\n  const dicomWeb = new api.DICOMwebClient(config);\r\n  const options = {\r\n    BulkDataURI: uri,\r\n  };\r\n\r\n  return dicomWeb\r\n    .retrieveBulkData(options)\r\n    .then(result => result[0])\r\n    .then(unpackOverlay);\r\n}\r\n","const validNumber = val => {\r\n  if (Array.isArray(val)) {\r\n    return val.map(v => (v !== undefined ? Number(v) : v));\r\n  } else {\r\n    return val !== undefined ? Number(val) : val;\r\n  }\r\n};\r\n\r\nexport default validNumber;\r\n","import dcmjs from 'dcmjs';\r\nimport queryString from 'query-string';\r\nimport dicomParser from 'dicom-parser';\r\nimport getPixelSpacingInformation from '../utils/metadataProvider/getPixelSpacingInformation';\r\nimport fetchPaletteColorLookupTableData from '../utils/metadataProvider/fetchPaletteColorLookupTableData';\r\nimport fetchOverlayData from '../utils/metadataProvider/fetchOverlayData';\r\nimport validNumber from '../utils/metadataProvider/validNumber';\r\n\r\nclass MetadataProvider {\r\n  constructor() {\r\n    // Define the main \"metadataLookup\" private property as an immutable property.\r\n    Object.defineProperty(this, 'studies', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: new Map(),\r\n    });\r\n    Object.defineProperty(this, 'imageIdToUIDs', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: new Map(),\r\n    });\r\n    this.datasets = {};\r\n  }\r\n\r\n  async addInstance(dicomJSONDatasetOrP10ArrayBuffer, options = {}) {\r\n    let dicomJSONDataset;\r\n\r\n    // If Arraybuffer, parse to DICOMJSON before naturalizing.\r\n    if (dicomJSONDatasetOrP10ArrayBuffer instanceof ArrayBuffer) {\r\n      const dicomData = DicomMessage.readFile(dicomJSONDatasetOrP10ArrayBuffer);\r\n\r\n      dicomJSONDataset = dicomData.dict;\r\n    } else {\r\n      dicomJSONDataset = dicomJSONDatasetOrP10ArrayBuffer;\r\n    }\r\n\r\n    // Check if dataset is already naturalized.\r\n\r\n    let naturalizedDataset;\r\n\r\n    if (dicomJSONDataset['SeriesInstanceUID'] === undefined) {\r\n      naturalizedDataset = dcmjs.data.DicomMetaDictionary.naturalizeDataset(\r\n        dicomJSONDataset\r\n      );\r\n    } else {\r\n      naturalizedDataset = dicomJSONDataset;\r\n    }\r\n\r\n    const {\r\n      StudyInstanceUID,\r\n      SeriesInstanceUID,\r\n      SOPInstanceUID,\r\n    } = naturalizedDataset;\r\n\r\n    this._getAndCacheStudyDataset(StudyInstanceUID, dicomJSONDataset);\r\n    const study = this._getAndCacheStudy(StudyInstanceUID);\r\n    const series = this._getAndCacheSeriesFromStudy(study, SeriesInstanceUID);\r\n    const instance = this._getAndCacheInstanceFromStudy(series, SOPInstanceUID);\r\n\r\n    Object.assign(instance, naturalizedDataset);\r\n\r\n    await this._checkBulkDataAndInlineBinaries(instance, options.server);\r\n\r\n    return instance;\r\n  }\r\n\r\n  addImageIdToUIDs(imageId, uids) {\r\n    // This method is a fallback for when you don't have WADO-URI or WADO-RS.\r\n    // You can add instances fetched by any method by calling addInstance, and hook an imageId to point at it here.\r\n    // An example would be dicom hosted at some random site.\r\n\r\n    this.imageIdToUIDs.set(imageId, uids);\r\n  }\r\n\r\n  _getAndCacheStudyDataset(StudyInstanceUID, dataset) {\r\n    if (!this.datasets[StudyInstanceUID]) {\r\n      this.datasets[StudyInstanceUID] = dataset;\r\n    }\r\n  }\r\n\r\n  getStudyDataset(StudyInstanceUID) {\r\n    return this.datasets[StudyInstanceUID];\r\n  }\r\n\r\n  _getAndCacheStudy(StudyInstanceUID) {\r\n    const studies = this.studies;\r\n\r\n    let study = studies.get(StudyInstanceUID);\r\n\r\n    if (!study) {\r\n      study = { series: new Map() };\r\n      studies.set(StudyInstanceUID, study);\r\n    }\r\n\r\n    return study;\r\n  }\r\n\r\n  _getAndCacheSeriesFromStudy(study, SeriesInstanceUID) {\r\n    let series = study.series.get(SeriesInstanceUID);\r\n\r\n    if (!series) {\r\n      series = { instances: new Map() };\r\n      study.series.set(SeriesInstanceUID, series);\r\n    }\r\n\r\n    return series;\r\n  }\r\n\r\n  _getAndCacheInstanceFromStudy(series, SOPInstanceUID) {\r\n    let instance = series.instances.get(SOPInstanceUID);\r\n\r\n    if (!instance) {\r\n      instance = {};\r\n      series.instances.set(SOPInstanceUID, instance);\r\n    }\r\n\r\n    return instance;\r\n  }\r\n\r\n  async _checkBulkDataAndInlineBinaries(instance, server) {\r\n    await fetchOverlayData(instance, server);\r\n\r\n    if (instance.PhotometricInterpretation === 'PALETTE COLOR') {\r\n      await fetchPaletteColorLookupTableData(instance, server);\r\n    }\r\n  }\r\n\r\n  _getInstance(imageId) {\r\n    const uids = this._getUIDsFromImageID(imageId);\r\n\r\n    if (!uids) {\r\n      return;\r\n    }\r\n\r\n    const { StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID } = uids;\r\n\r\n    return this._getInstanceData(\r\n      StudyInstanceUID,\r\n      SeriesInstanceUID,\r\n      SOPInstanceUID\r\n    );\r\n  }\r\n\r\n  get(query, imageId, options = { fallback: false }) {\r\n    const instance = this._getInstance(imageId);\r\n\r\n    if (query === INSTANCE) {\r\n      return instance;\r\n    }\r\n\r\n    return this.getTagFromInstance(query, instance, options);\r\n  }\r\n\r\n  getTag(query, imageId, options) {\r\n    return this.get(query, imageId, options);\r\n  }\r\n\r\n  getInstance(imageId) {\r\n    return this.get(INSTANCE, imageId);\r\n  }\r\n\r\n  getTagFromInstance(\r\n    naturalizedTagOrWADOImageLoaderTag,\r\n    instance,\r\n    options = { fallback: false }\r\n  ) {\r\n    if (!instance) {\r\n      return;\r\n    }\r\n\r\n    // If its a naturalized dcmjs tag present on the instance, return.\r\n    if (instance[naturalizedTagOrWADOImageLoaderTag]) {\r\n      return instance[naturalizedTagOrWADOImageLoaderTag];\r\n    }\r\n\r\n    // Maybe its a legacy CornerstoneWADOImageLoader tag then:\r\n    return this._getCornerstoneWADOImageLoaderTag(\r\n      naturalizedTagOrWADOImageLoaderTag,\r\n      instance\r\n    );\r\n  }\r\n\r\n  _getCornerstoneWADOImageLoaderTag(wadoImageLoaderTag, instance) {\r\n    let metadata;\r\n\r\n    switch (wadoImageLoaderTag) {\r\n      case WADO_IMAGE_LOADER_TAGS.GENERAL_SERIES_MODULE:\r\n        const { SeriesDate, SeriesTime } = instance;\r\n\r\n        let seriesDate;\r\n        let seriesTime;\r\n\r\n        if (SeriesDate) {\r\n          seriesDate = dicomParser.parseDA(SeriesDate);\r\n        }\r\n\r\n        if (SeriesTime) {\r\n          seriesTime = dicomParser.parseTM(SeriesTime);\r\n        }\r\n\r\n        metadata = {\r\n          modality: instance.Modality,\r\n          seriesInstanceUID: instance.SeriesInstanceUID,\r\n          seriesNumber: instance.SeriesNumber,\r\n          studyInstanceUID: instance.StudyInstanceUID,\r\n          seriesDate,\r\n          seriesTime,\r\n        };\r\n        break;\r\n      case WADO_IMAGE_LOADER_TAGS.PATIENT_STUDY_MODULE:\r\n        metadata = {\r\n          patientAge: instance.PatientAge,\r\n          patientSize: instance.PatientSize,\r\n          patientWeight: instance.PatientWeight,\r\n        };\r\n        break;\r\n      case WADO_IMAGE_LOADER_TAGS.IMAGE_PLANE_MODULE:\r\n        const { ImageOrientationPatient } = instance;\r\n\r\n        // Fallback for DX images.\r\n        // TODO: We should use the rest of the results of this function\r\n        // to update the UI somehow\r\n        const { PixelSpacing } = getPixelSpacingInformation(instance);\r\n\r\n        let rowPixelSpacing;\r\n        let columnPixelSpacing;\r\n\r\n        let rowCosines;\r\n        let columnCosines;\r\n\r\n        if (PixelSpacing) {\r\n          rowPixelSpacing = validNumber(PixelSpacing[0]);\r\n          columnPixelSpacing = validNumber(PixelSpacing[1]);\r\n        }\r\n\r\n        if (ImageOrientationPatient) {\r\n          rowCosines = validNumber(ImageOrientationPatient.slice(0, 3));\r\n          columnCosines = validNumber(ImageOrientationPatient.slice(3, 6));\r\n        }\r\n\r\n        metadata = {\r\n          frameOfReferenceUID: instance.FrameOfReferenceUID,\r\n          rows: instance.Rows,\r\n          columns: instance.Columns,\r\n          imageOrientationPatient: validNumber(ImageOrientationPatient),\r\n          rowCosines,\r\n          columnCosines,\r\n          imagePositionPatient: validNumber(instance.ImagePositionPatient),\r\n          sliceThickness: validNumber(instance.SliceThickness),\r\n          sliceLocation: validNumber(instance.SliceLocation),\r\n          pixelSpacing: validNumber(PixelSpacing),\r\n          rowPixelSpacing,\r\n          columnPixelSpacing,\r\n        };\r\n        break;\r\n      case WADO_IMAGE_LOADER_TAGS.IMAGE_PIXEL_MODULE:\r\n        metadata = {\r\n          samplesPerPixel: instance.SamplesPerPixel,\r\n          photometricInterpretation: instance.PhotometricInterpretation,\r\n          rows: instance.Rows,\r\n          columns: instance.Columns,\r\n          bitsAllocated: instance.BitsAllocated,\r\n          bitsStored: instance.BitsStored,\r\n          highBit: instance.HighBit,\r\n          pixelRepresentation: instance.PixelRepresentation,\r\n          planarConfiguration: instance.PlanarConfiguration,\r\n          pixelAspectRatio: instance.PixelAspectRatio,\r\n          smallestPixelValue: instance.SmallestPixelValue,\r\n          largestPixelValue: instance.LargestPixelValue,\r\n          redPaletteColorLookupTableDescriptor:\r\n            instance.RedPaletteColorLookupTableDescriptor,\r\n          greenPaletteColorLookupTableDescriptor:\r\n            instance.GreenPaletteColorLookupTableDescriptor,\r\n          bluePaletteColorLookupTableDescriptor:\r\n            instance.BluePaletteColorLookupTableDescriptor,\r\n          redPaletteColorLookupTableData:\r\n            instance.RedPaletteColorLookupTableData,\r\n          greenPaletteColorLookupTableData:\r\n            instance.GreenPaletteColorLookupTableData,\r\n          bluePaletteColorLookupTableData:\r\n            instance.BluePaletteColorLookupTableData,\r\n        };\r\n\r\n        break;\r\n      case WADO_IMAGE_LOADER_TAGS.VOI_LUT_MODULE:\r\n        let { WindowCenter, WindowWidth } = instance;\r\n\r\n        const windowCenter = Array.isArray(WindowCenter)\r\n          ? WindowCenter\r\n          : [WindowCenter];\r\n        const windowWidth = Array.isArray(WindowWidth)\r\n          ? WindowWidth\r\n          : [WindowWidth];\r\n\r\n        metadata = {\r\n          windowCenter: validNumber(windowCenter),\r\n          windowWidth: validNumber(windowWidth),\r\n        };\r\n\r\n        break;\r\n      case WADO_IMAGE_LOADER_TAGS.MODALITY_LUT_MODULE:\r\n        const rescaleSlope = validNumber(instance.RescaleSlope);\r\n        const rescaleIntercept = validNumber(instance.RescaleIntercept);\r\n        metadata = {\r\n          rescaleIntercept,\r\n          rescaleSlope,\r\n          rescaleType: instance.RescaleType,\r\n        };\r\n        break;\r\n      case WADO_IMAGE_LOADER_TAGS.SOP_COMMON_MODULE:\r\n        metadata = {\r\n          sopClassUID: instance.SOPClassUID,\r\n          sopInstanceUID: instance.SOPInstanceUID,\r\n        };\r\n        break;\r\n      case WADO_IMAGE_LOADER_TAGS.PET_ISOTOPE_MODULE:\r\n        const { RadiopharmaceuticalInformationSequence } = instance;\r\n\r\n        if (RadiopharmaceuticalInformationSequence) {\r\n          const RadiopharmaceuticalInformation = Array.isArray(\r\n            RadiopharmaceuticalInformationSequence\r\n          )\r\n            ? RadiopharmaceuticalInformationSequence[0]\r\n            : RadiopharmaceuticalInformationSequence;\r\n\r\n          const {\r\n            RadiopharmaceuticalStartTime,\r\n            RadionuclideTotalDose,\r\n            RadionuclideHalfLife,\r\n          } = RadiopharmaceuticalInformation;\r\n\r\n          const radiopharmaceuticalInfo = {\r\n            radiopharmaceuticalStartTime: dicomParser.parseTM(\r\n              RadiopharmaceuticalStartTime\r\n            ),\r\n            radionuclideTotalDose: RadionuclideTotalDose,\r\n            radionuclideHalfLife: RadionuclideHalfLife,\r\n          };\r\n          metadata = {\r\n            radiopharmaceuticalInfo,\r\n          };\r\n        }\r\n\r\n        break;\r\n      case WADO_IMAGE_LOADER_TAGS.OVERLAY_PLANE_MODULE:\r\n        const overlays = [];\r\n\r\n        for (\r\n          let overlayGroup = 0x00;\r\n          overlayGroup <= 0x1e;\r\n          overlayGroup += 0x02\r\n        ) {\r\n          let groupStr = `60${overlayGroup.toString(16)}`;\r\n\r\n          if (groupStr.length === 3) {\r\n            groupStr = `600${overlayGroup.toString(16)}`;\r\n          }\r\n\r\n          const OverlayDataTag = `${groupStr}3000`;\r\n          const OverlayData = instance[OverlayDataTag];\r\n\r\n          if (!OverlayData) {\r\n            continue;\r\n          }\r\n\r\n          const OverlayRowsTag = `${groupStr}0010`;\r\n          const OverlayColumnsTag = `${groupStr}0011`;\r\n          const OverlayType = `${groupStr}0040`;\r\n          const OverlayOriginTag = `${groupStr}0050`;\r\n          const OverlayDescriptionTag = `${groupStr}0022`;\r\n          const OverlayLabelTag = `${groupStr}1500`;\r\n          const ROIAreaTag = `${groupStr}1301`;\r\n          const ROIMeanTag = `${groupStr}1302`;\r\n          const ROIStandardDeviationTag = `${groupStr}1303`;\r\n          const OverlayOrigin = instance[OverlayOriginTag];\r\n\r\n          const overlay = {\r\n            rows: instance[OverlayRowsTag],\r\n            columns: instance[OverlayColumnsTag],\r\n            type: instance[OverlayType],\r\n            x: OverlayOrigin[0],\r\n            y: OverlayOrigin[1],\r\n            pixelData: OverlayData,\r\n            description: instance[OverlayDescriptionTag],\r\n            label: instance[OverlayLabelTag],\r\n            roiArea: instance[ROIAreaTag],\r\n            roiMean: instance[ROIMeanTag],\r\n            roiStandardDeviation: instance[ROIStandardDeviationTag],\r\n          };\r\n\r\n          overlays.push(overlay);\r\n        }\r\n\r\n        metadata = {\r\n          overlays,\r\n        };\r\n\r\n        break;\r\n\r\n      case WADO_IMAGE_LOADER_TAGS.PATIENT_MODULE:\r\n        const { PatientName } = instance;\r\n\r\n        let patientName;\r\n        if (PatientName) {\r\n          patientName = PatientName.Alphabetic;\r\n        }\r\n\r\n        metadata = {\r\n          patientName,\r\n          patientId: instance.PatientID,\r\n        };\r\n\r\n        break;\r\n\r\n      case WADO_IMAGE_LOADER_TAGS.GENERAL_IMAGE_MODULE:\r\n        metadata = {\r\n          sopInstanceUid: instance.SOPInstanceUID,\r\n          instanceNumber: instance.InstanceNumber,\r\n          lossyImageCompression: instance.LossyImageCompression,\r\n          lossyImageCompressionRatio: instance.LossyImageCompressionRatio,\r\n          lossyImageCompressionMethod: instance.LossyImageCompressionMethod,\r\n        };\r\n\r\n        break;\r\n      case WADO_IMAGE_LOADER_TAGS.GENERAL_STUDY_MODULE:\r\n        metadata = {\r\n          studyDescription: instance.StudyDescription,\r\n          studyDate: instance.StudyDate,\r\n          studyTime: instance.StudyTime,\r\n          accessionNumber: instance.AccessionNumber,\r\n        };\r\n\r\n        break;\r\n      case WADO_IMAGE_LOADER_TAGS.CINE_MODULE:\r\n        metadata = {\r\n          frameTime: instance.FrameTime,\r\n        };\r\n\r\n        break;\r\n    }\r\n\r\n    return metadata;\r\n  }\r\n\r\n  _getInstanceData(StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID) {\r\n    const study = this.studies.get(StudyInstanceUID);\r\n\r\n    if (!study) {\r\n      return;\r\n    }\r\n\r\n    const series = study.series.get(SeriesInstanceUID);\r\n\r\n    if (!series) {\r\n      return;\r\n    }\r\n\r\n    const instance = series.instances.get(SOPInstanceUID);\r\n\r\n    return instance;\r\n  }\r\n\r\n  _getUIDsFromImageID(imageId) {\r\n    if (imageId.includes('wadors:')) {\r\n      const strippedImageId = imageId.split('studies/')[1];\r\n      const splitImageId = strippedImageId.split('/');\r\n\r\n      return {\r\n        StudyInstanceUID: splitImageId[0], // Note: splitImageId[1] === 'series'\r\n        SeriesInstanceUID: splitImageId[2], // Note: splitImageId[3] === 'instances'\r\n        SOPInstanceUID: splitImageId[4],\r\n      };\r\n    }\r\n    if (imageId.includes('wado?requestType=WADO')) {\r\n      const qs = queryString.parse(imageId);\r\n\r\n      return {\r\n        StudyInstanceUID: qs.studyUID,\r\n        SeriesInstanceUID: qs.seriesUID,\r\n        SOPInstanceUID: qs.objectUID,\r\n      };\r\n    } else {\r\n      // Maybe its a non-standard imageId\r\n      return this.imageIdToUIDs.get(imageId);\r\n    }\r\n  }\r\n}\r\n\r\nconst metadataProvider = new MetadataProvider();\r\n\r\nexport default metadataProvider;\r\n\r\nconst WADO_IMAGE_LOADER_TAGS = {\r\n  // CornerstoneWADOImageLoader specific\r\n  GENERAL_SERIES_MODULE: 'generalSeriesModule',\r\n  PATIENT_STUDY_MODULE: 'patientStudyModule',\r\n  IMAGE_PLANE_MODULE: 'imagePlaneModule',\r\n  IMAGE_PIXEL_MODULE: 'imagePixelModule',\r\n  VOI_LUT_MODULE: 'voiLutModule',\r\n  MODALITY_LUT_MODULE: 'modalityLutModule',\r\n  SOP_COMMON_MODULE: 'sopCommonModule',\r\n  PET_ISOTOPE_MODULE: 'petIsotopeModule',\r\n  OVERLAY_PLANE_MODULE: 'overlayPlaneModule',\r\n\r\n  // react-cornerstone-viewport specifc\r\n  PATIENT_MODULE: 'patientModule',\r\n  GENERAL_IMAGE_MODULE: 'generalImageModule',\r\n  GENERAL_STUDY_MODULE: 'generalStudyModule',\r\n  CINE_MODULE: 'cineModule',\r\n};\r\n\r\nconst INSTANCE = 'instance';\r\n","import log from '../../log';\r\n\r\nexport default function getPixelSpacingInformation(instance) {\r\n  // See http://gdcm.sourceforge.net/wiki/index.php/Imager_Pixel_Spacing\r\n\r\n  // TODO: Add Ultrasound region spacing\r\n  // TODO: Add manual calibration\r\n\r\n  // TODO: Use ENUMS from dcmjs\r\n  const projectionRadiographSOPClassUIDs = [\r\n    '1.2.840.10008.5.1.4.1.1.1', //\tCR Image Storage\r\n    '1.2.840.10008.5.1.4.1.1.1.1', //\tDigital X-Ray Image Storage – for Presentation\r\n    '1.2.840.10008.5.1.4.1.1.1.1.1', //\tDigital X-Ray Image Storage – for Processing\r\n    '1.2.840.10008.5.1.4.1.1.1.2', //\tDigital Mammography X-Ray Image Storage – for Presentation\r\n    '1.2.840.10008.5.1.4.1.1.1.2.1', //\tDigital Mammography X-Ray Image Storage – for Processing\r\n    '1.2.840.10008.5.1.4.1.1.1.3', //\tDigital Intra – oral X-Ray Image Storage – for Presentation\r\n    '1.2.840.10008.5.1.4.1.1.1.3.1', //\tDigital Intra – oral X-Ray Image Storage – for Processing\r\n    '1.2.840.10008.5.1.4.1.1.12.1', //\tX-Ray Angiographic Image Storage\r\n    '1.2.840.10008.5.1.4.1.1.12.1.1', //\tEnhanced XA Image Storage\r\n    '1.2.840.10008.5.1.4.1.1.12.2', //\tX-Ray Radiofluoroscopic Image Storage\r\n    '1.2.840.10008.5.1.4.1.1.12.2.1', //\tEnhanced XRF Image Storage\r\n    '1.2.840.10008.5.1.4.1.1.12.3', // X-Ray Angiographic Bi-plane Image Storage\tRetired\r\n  ];\r\n\r\n  const {\r\n    PixelSpacing,\r\n    ImagerPixelSpacing,\r\n    SOPClassUID,\r\n    PixelSpacingCalibrationType,\r\n    PixelSpacingCalibrationDescription,\r\n    EstimatedRadiographicMagnificationFactor,\r\n    SequenceOfUltrasoundRegions,\r\n  } = instance;\r\n  const isProjection = projectionRadiographSOPClassUIDs.includes(SOPClassUID);\r\n\r\n  const TYPES = {\r\n    NOT_APPLICABLE: 'NOT_APPLICABLE',\r\n    UNKNOWN: 'UNKNOWN',\r\n    CALIBRATED: 'CALIBRATED',\r\n    DETECTOR: 'DETECTOR',\r\n  };\r\n\r\n  if (isProjection && !ImagerPixelSpacing) {\r\n    // If only Pixel Spacing is present, and this is a projection radiograph,\r\n    // PixelSpacing should be used, but the user should be informed that\r\n    // what it means is unknown\r\n    return {\r\n      PixelSpacing,\r\n      type: TYPES.UNKNOWN,\r\n      isProjection,\r\n    };\r\n  } else if (\r\n    PixelSpacing &&\r\n    ImagerPixelSpacing &&\r\n    PixelSpacing === ImagerPixelSpacing\r\n  ) {\r\n    // If Imager Pixel Spacing and Pixel Spacing are present and they have the same values,\r\n    // then the user should be informed that the measurements are at the detector plane\r\n    return {\r\n      PixelSpacing,\r\n      type: TYPES.DETECTOR,\r\n      isProjection,\r\n    };\r\n  } else if (\r\n    PixelSpacing &&\r\n    ImagerPixelSpacing &&\r\n    PixelSpacing !== ImagerPixelSpacing\r\n  ) {\r\n    // If Imager Pixel Spacing and Pixel Spacing are present and they have different values,\r\n    // then the user should be informed that these are \"calibrated\"\r\n    // (in some unknown manner if Pixel Spacing Calibration Type and/or\r\n    // Pixel Spacing Calibration Description are absent)\r\n    return {\r\n      PixelSpacing,\r\n      type: TYPES.CALIBRATED,\r\n      isProjection,\r\n      PixelSpacingCalibrationType,\r\n      PixelSpacingCalibrationDescription,\r\n    };\r\n  } else if (!PixelSpacing && ImagerPixelSpacing) {\r\n    let CorrectedImagerPixelSpacing = ImagerPixelSpacing;\r\n    if (EstimatedRadiographicMagnificationFactor) {\r\n      // Note that in IHE Mammo profile compliant displays, the value of Imager Pixel Spacing is required to be corrected by\r\n      // Estimated Radiographic Magnification Factor and the user informed of that.\r\n      // TODO: should this correction be done before all of this logic?\r\n      CorrectedImagerPixelSpacing = ImagerPixelSpacing.map(\r\n        pixelSpacing => pixelSpacing / EstimatedRadiographicMagnificationFactor\r\n      );\r\n    } else {\r\n      log.info(\r\n        'EstimatedRadiographicMagnificationFactor was not present. Unable to correct ImagerPixelSpacing.'\r\n      );\r\n    }\r\n\r\n    return {\r\n      PixelSpacing: CorrectedImagerPixelSpacing,\r\n      isProjection,\r\n    };\r\n  } else if (\r\n    SequenceOfUltrasoundRegions &&\r\n    typeof SequenceOfUltrasoundRegions === 'object'\r\n  ) {\r\n    const { PhysicalDeltaX, PhysicalDeltaY } = SequenceOfUltrasoundRegions;\r\n    const USPixelSpacing = [PhysicalDeltaX * 10, PhysicalDeltaY * 10];\r\n\r\n    return {\r\n      PixelSpacing: USPixelSpacing,\r\n    };\r\n  } else if (\r\n    SequenceOfUltrasoundRegions &&\r\n    Array.isArray(SequenceOfUltrasoundRegions) &&\r\n    SequenceOfUltrasoundRegions.length > 1\r\n  ) {\r\n    log.warn(\r\n      'Sequence of Ultrasound Regions > one entry. This is not yet implemented, all measurements will be shown in pixels.'\r\n    );\r\n  } else if (isProjection === false && !ImagerPixelSpacing) {\r\n    // If only Pixel Spacing is present, and this is not a projection radiograph,\r\n    // we can stop here\r\n    return {\r\n      PixelSpacing,\r\n      type: TYPES.NOT_APPLICABLE,\r\n      isProjection,\r\n    };\r\n  }\r\n\r\n    log.info(\r\n    'Unknown combination of PixelSpacing and ImagerPixelSpacing identified. Unable to determine spacing.'\r\n  );\r\n}\r\n","/**\r\n * adds a pause and unpause method to Mousetrap\r\n * this allows you to enable or disable keyboard shortcuts\r\n * without having to reset Mousetrap and rebind everything\r\n *\r\n * https://github.com/ccampbell/mousetrap/blob/master/plugins/pause/mousetrap-pause.js\r\n */\r\nexport default function(Mousetrap) {\r\n  var _originalStopCallback = Mousetrap.prototype.stopCallback;\r\n\r\n  Mousetrap.prototype.stopCallback = function(e, element, combo) {\r\n    var self = this;\r\n\r\n    if (self.paused) {\r\n      return true;\r\n    }\r\n\r\n    return _originalStopCallback.call(self, e, element, combo);\r\n  };\r\n\r\n  Mousetrap.prototype.pause = function() {\r\n    var self = this;\r\n    self.paused = true;\r\n  };\r\n\r\n  Mousetrap.prototype.unpause = function() {\r\n    var self = this;\r\n    self.paused = false;\r\n  };\r\n\r\n  Mousetrap.init();\r\n}\r\n","/**\r\n * This extension allows you to record a sequence using Mousetrap.\r\n * {@link https://craig.is/killing/mice}\r\n *\r\n * @author Dan Tao <daniel.tao@gmail.com>\r\n */\r\nexport default function(Mousetrap) {\r\n  /**\r\n   * the sequence currently being recorded\r\n   *\r\n   * @type {Array}\r\n   */\r\n  var _recordedSequence = [],\r\n    /**\r\n     * a callback to invoke after recording a sequence\r\n     *\r\n     * @type {Function|null}\r\n     */\r\n    _recordedSequenceCallback = null,\r\n    /**\r\n     * a list of all of the keys currently held down\r\n     *\r\n     * @type {Array}\r\n     */\r\n    _currentRecordedKeys = [],\r\n    /**\r\n     * temporary state where we remember if we've already captured a\r\n     * character key in the current combo\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    _recordedCharacterKey = false,\r\n    /**\r\n     * a handle for the timer of the current recording\r\n     *\r\n     * @type {null|number}\r\n     */\r\n    _recordTimer = null,\r\n    /**\r\n     * the original handleKey method to override when Mousetrap.record() is\r\n     * called\r\n     *\r\n     * @type {Function}\r\n     */\r\n    _origHandleKey = Mousetrap.prototype.handleKey;\r\n\r\n  /**\r\n   * handles a character key event\r\n   *\r\n   * @param {string} character\r\n   * @param {Array} modifiers\r\n   * @param {Event} e\r\n   * @returns void\r\n   */\r\n  function _handleKey(character, modifiers, e) {\r\n    var self = this;\r\n\r\n    if (!self.recording) {\r\n      _origHandleKey.apply(self, arguments);\r\n      return;\r\n    }\r\n\r\n    // remember this character if we're currently recording a sequence\r\n    if (e.type == 'keydown') {\r\n      if (character.length === 1 && _recordedCharacterKey) {\r\n        _recordCurrentCombo();\r\n      }\r\n\r\n      for (let i = 0; i < modifiers.length; ++i) {\r\n        _recordKey(modifiers[i]);\r\n      }\r\n      _recordKey(character);\r\n\r\n      // once a key is released, all keys that were held down at the time\r\n      // count as a keypress\r\n    } else if (e.type == 'keyup' && _currentRecordedKeys.length > 0) {\r\n      _recordCurrentCombo();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * marks a character key as held down while recording a sequence\r\n   *\r\n   * @param {string} key\r\n   * @returns void\r\n   */\r\n  function _recordKey(key) {\r\n    // one-off implementation of Array.indexOf, since IE6-9 don't support it\r\n    for (let i = 0; i < _currentRecordedKeys.length; ++i) {\r\n      if (_currentRecordedKeys[i] === key) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    _currentRecordedKeys.push(key);\r\n\r\n    if (key.length === 1) {\r\n      _recordedCharacterKey = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * marks whatever key combination that's been recorded so far as finished\r\n   * and gets ready for the next combo\r\n   *\r\n   * @returns void\r\n   */\r\n  function _recordCurrentCombo() {\r\n    _recordedSequence.push(_currentRecordedKeys);\r\n    _currentRecordedKeys = [];\r\n    _recordedCharacterKey = false;\r\n    _finishRecording();\r\n  }\r\n\r\n  /**\r\n   * ensures each combo in a sequence is in a predictable order and formats\r\n   * key combos to be '+'-delimited\r\n   *\r\n   * modifies the sequence in-place\r\n   *\r\n   * @param {Array} sequence\r\n   * @returns void\r\n   */\r\n  function _normalizeSequence(sequence) {\r\n    for (let i = 0; i < sequence.length; ++i) {\r\n      sequence[i].sort(function(x, y) {\r\n        // modifier keys always come first, in alphabetical order\r\n        if (x.length > 1 && y.length === 1) {\r\n          return -1;\r\n        } else if (x.length === 1 && y.length > 1) {\r\n          return 1;\r\n        }\r\n\r\n        // character keys come next (list should contain no duplicates,\r\n        // so no need for equality check)\r\n        return x > y ? 1 : -1;\r\n      });\r\n\r\n      sequence[i] = sequence[i].join('+');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * finishes the current recording, passes the recorded sequence to the stored\r\n   * callback, and sets Mousetrap.handleKey back to its original function\r\n   *\r\n   * @returns void\r\n   */\r\n  function _finishRecording() {\r\n    if (_recordedSequenceCallback) {\r\n      _normalizeSequence(_recordedSequence);\r\n      _recordedSequenceCallback(_recordedSequence);\r\n    }\r\n\r\n    // reset all recorded state\r\n    _recordedSequence = [];\r\n    _recordedSequenceCallback = null;\r\n    _currentRecordedKeys = [];\r\n  }\r\n\r\n  /**\r\n   * called to set a 1 second timeout on the current recording\r\n   *\r\n   * this is so after each key press in the sequence the recording will wait for\r\n   * 1 more second before executing the callback\r\n   *\r\n   * @returns void\r\n   */\r\n  function _restartRecordTimer() {\r\n    clearTimeout(_recordTimer);\r\n    _recordTimer = setTimeout(_finishRecording, 1000);\r\n  }\r\n\r\n  /**\r\n   * records the next sequence and passes it to a callback once it's\r\n   * completed\r\n   *\r\n   * @param {Function} callback\r\n   * @returns void\r\n   */\r\n  Mousetrap.prototype.record = function(callback) {\r\n    var self = this;\r\n    self.recording = true;\r\n    _recordedSequenceCallback = function() {\r\n      self.recording = false;\r\n      callback.apply(self, arguments);\r\n    };\r\n  };\r\n\r\n  /**\r\n   * stop recording\r\n   *\r\n   * @param {Function} callback\r\n   * @returns void\r\n   */\r\n  Mousetrap.prototype.stopRecord = function() {\r\n    var self = this;\r\n    self.recording = false;\r\n  };\r\n\r\n  /**\r\n   * start recording\r\n   *\r\n   * @param {Function} callback\r\n   * @returns void\r\n   */\r\n  Mousetrap.prototype.startRecording = function() {\r\n    var self = this;\r\n    self.recording = true;\r\n  };\r\n\r\n  Mousetrap.prototype.handleKey = function() {\r\n    var self = this;\r\n    _handleKey.apply(self, arguments);\r\n  };\r\n\r\n  Mousetrap.init();\r\n}\r\n","import Mousetrap from 'mousetrap';\r\nimport pausePlugin from './pausePlugin';\r\nimport recordPlugin from './recordPlugin';\r\n\r\nrecordPlugin(Mousetrap);\r\npausePlugin(Mousetrap);\r\n\r\nexport default Mousetrap;\r\n","const ReconstructionIssues = {\r\n  DATASET_4D: 'datasetis4D',\r\n  VARYING_IMAGESDIMENSIONS: 'imagesdimensionsvarying',\r\n  VARYING_IMAGESCOMPONENTS: 'imagescomponentsvarying',\r\n  VARYING_IMAGESORIENTATION: 'imagesorientationvarying',\r\n  MISSING_FRAMES: 'missingframes',\r\n  IRREGULAR_SPACING: 'irregularspacing',\r\n  MULTIFFRAMES: 'multiframe',\r\n};\r\n\r\nexport {ReconstructionIssues};\r\n","import { TypeSafeCollection } from '../classes/TypeSafeCollection';\r\n\r\nconst studyMetadataList = new TypeSafeCollection();\r\n\r\nfunction add(studyMetadata) {\r\n  studyMetadataList.insert(studyMetadata);\r\n}\r\n\r\nfunction get(studyInstanceUID) {\r\n  return studyMetadataList.findBy({ studyInstanceUID });\r\n}\r\n\r\nfunction all(options) {\r\n  return studyMetadataList.all(options);\r\n}\r\n\r\nfunction remove(studyInstanceUID) {\r\n  studyMetadataList.remove({ studyInstanceUID });\r\n}\r\n\r\nfunction purge() {\r\n  studyMetadataList.removeAll();\r\n}\r\n\r\nexport default {\r\n  add,\r\n  get,\r\n  all,\r\n  remove,\r\n  purge,\r\n};\r\n","import { InstanceMetadata } from './InstanceMetadata';\r\nimport getImageId from '../../utils/getImageId.js';\r\n\r\nexport class OHIFInstanceMetadata extends InstanceMetadata {\r\n  /**\r\n   * @param {Object} Instance object.\r\n   */\r\n  constructor(data, series, study, uid) {\r\n    super(data, uid);\r\n    this.init(series, study);\r\n  }\r\n\r\n  init(series, study) {\r\n    const instance = this.getData();\r\n\r\n    // Initialize Private Properties\r\n    Object.defineProperties(this, {\r\n      _sopInstanceUID: {\r\n        configurable: false,\r\n        enumerable: false,\r\n        writable: false,\r\n        value: instance.SOPInstanceUID,\r\n      },\r\n      _study: {\r\n        configurable: false,\r\n        enumerable: false,\r\n        writable: false,\r\n        value: study,\r\n      },\r\n      _series: {\r\n        configurable: false,\r\n        enumerable: false,\r\n        writable: false,\r\n        value: series,\r\n      },\r\n      _instance: {\r\n        configurable: false,\r\n        enumerable: false,\r\n        writable: false,\r\n        value: instance,\r\n      },\r\n      _cache: {\r\n        configurable: false,\r\n        enumerable: false,\r\n        writable: false,\r\n        value: Object.create(null),\r\n      },\r\n    });\r\n  }\r\n\r\n  // Override\r\n  getTagValue(tagOrProperty, defaultValue, bypassCache) {\r\n    // check if this property has been cached...\r\n    if (tagOrProperty in this._cache && bypassCache !== true) {\r\n      return this._cache[tagOrProperty];\r\n    }\r\n\r\n    const instanceData = this._instance.metadata;\r\n\r\n    // Search property value in the whole study metadata chain...\r\n    let rawValue;\r\n    if (tagOrProperty in instanceData) {\r\n      rawValue = instanceData[tagOrProperty];\r\n    } else if (tagOrProperty in this._series) {\r\n      rawValue = this._series[tagOrProperty];\r\n    } else if (tagOrProperty in this._study) {\r\n      rawValue = this._study[tagOrProperty];\r\n    }\r\n\r\n    if (rawValue !== void 0) {\r\n      // if rawValue value is not undefined, cache result...\r\n      this._cache[tagOrProperty] = rawValue;\r\n      return rawValue;\r\n    }\r\n\r\n    return defaultValue;\r\n  }\r\n\r\n  // Override\r\n  tagExists(tagOrProperty) {\r\n    return (\r\n      tagOrProperty in this._instance.metadata ||\r\n      tagOrProperty in this._series ||\r\n      tagOrProperty in this._study\r\n    );\r\n  }\r\n\r\n  // Override\r\n  getImageId(frame, thumbnail) {\r\n    // If _imageID is not cached, create it\r\n    if (this._imageId === null) {\r\n      this._imageId = getImageId(this.getData(), frame, thumbnail);\r\n    }\r\n\r\n    return this._imageId;\r\n  }\r\n}\r\n","import { SeriesMetadata } from './SeriesMetadata';\r\nimport { OHIFInstanceMetadata } from './OHIFInstanceMetadata';\r\n\r\nexport class OHIFSeriesMetadata extends SeriesMetadata {\r\n  /**\r\n   * @param {Object} Series object.\r\n   */\r\n  constructor(data, study, uid) {\r\n    super(data, uid);\r\n    this.init(study);\r\n  }\r\n\r\n  init(study) {\r\n    const series = this.getData();\r\n\r\n    // define \"_seriesInstanceUID\" protected property...\r\n    Object.defineProperty(this, '_seriesInstanceUID', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: series.SeriesInstanceUID,\r\n    });\r\n\r\n    // populate internal list of instances...\r\n    series.instances.forEach(instance => {\r\n      this.addInstance(new OHIFInstanceMetadata(instance, series, study));\r\n    });\r\n  }\r\n}\r\n","import { StudyMetadata } from './StudyMetadata';\r\nimport { OHIFSeriesMetadata } from './OHIFSeriesMetadata';\r\n\r\nexport class OHIFStudyMetadata extends StudyMetadata {\r\n  /**\r\n   * @param {Object} Study object.\r\n   */\r\n  constructor(data, uid) {\r\n    super(data, uid);\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    const study = this.getData();\r\n\r\n    // define \"_studyInstanceUID\" protected property\r\n    Object.defineProperty(this, '_studyInstanceUID', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: study.StudyInstanceUID,\r\n    });\r\n\r\n    // populate internal list of series\r\n    study.series.forEach(series => {\r\n      this.addSeries(new OHIFSeriesMetadata(series, study));\r\n    });\r\n  }\r\n}\r\n","import { InstanceMetadata } from './InstanceMetadata';\r\nimport { Metadata } from './Metadata';\r\nimport { OHIFInstanceMetadata } from './OHIFInstanceMetadata';\r\nimport { OHIFSeriesMetadata } from './OHIFSeriesMetadata';\r\nimport { OHIFStudyMetadata } from './OHIFStudyMetadata';\r\nimport { SeriesMetadata } from './SeriesMetadata';\r\nimport { StudyMetadata } from './StudyMetadata';\r\n\r\nconst metadata = {\r\n  Metadata,\r\n  StudyMetadata,\r\n  SeriesMetadata,\r\n  InstanceMetadata,\r\n  OHIFStudyMetadata,\r\n  OHIFSeriesMetadata,\r\n  OHIFInstanceMetadata,\r\n};\r\n\r\nexport {\r\n  Metadata,\r\n  StudyMetadata,\r\n  SeriesMetadata,\r\n  InstanceMetadata,\r\n  OHIFStudyMetadata,\r\n  OHIFSeriesMetadata,\r\n  OHIFInstanceMetadata,\r\n};\r\n\r\nexport default metadata;\r\n","import { ReconstructionIssues } from './../enums.js';\r\n\r\n/**\r\n * Checks if a series is reconstructable to a 3D volume.\r\n *\r\n * @param {Object[]} An array of `OHIFInstanceMetadata` objects.\r\n *\r\n * @returns {Object} value, reconstructionIssues.\r\n */\r\nfunction isDisplaySetReconstructable(instances) {\r\n  if (!instances.length) {\r\n    return { value: false };\r\n  }\r\n\r\n  const firstInstance = instances[0].getData().metadata;\r\n\r\n  const Modality = firstInstance.Modality;\r\n  const isMultiframe = firstInstance.NumberOfFrames > 1;\r\n\r\n  if (!constructableModalities.includes(Modality)) {\r\n    return { value: false };\r\n  }\r\n\r\n  // Can't reconstruct if we only have one image.\r\n  if (!isMultiframe && instances.length === 1) {\r\n    return { value: false };\r\n  }\r\n\r\n  if (isMultiframe) {\r\n    return processMultiframe();\r\n  } else {\r\n    return processSingleframe(instances);\r\n  }\r\n}\r\n\r\n/**\r\n * Process reconstructable multiframes checks\r\n * TODO: deal with multriframe checks! return false for now as can't reconstruct.\r\n * *\r\n * @returns {Object} value and reconstructionIssues.\r\n */\r\nfunction processMultiframe() {\r\n  const reconstructionIssues = [ReconstructionIssues.MULTIFRAMES];\r\n  return { value: false, reconstructionIssues };\r\n}\r\n\r\n/**\r\n * Process reconstructable single frame checks\r\n *\r\n * @param {Object[]} An array of `OHIFInstanceMetadata` objects.\r\n *\r\n * @returns {Object} value and reconstructionIssues.\r\n */\r\nfunction processSingleframe(instances) {\r\n  const n = instances.length;\r\n  const firstImage = instances[0].getData().metadata;\r\n  const firstImageRows = firstImage.Rows;\r\n  const firstImageColumns = firstImage.Columns;\r\n  const firstImageSamplesPerPixel = firstImage.SamplesPerPixel;\r\n  const firstImageOrientationPatient = firstImage.ImageOrientationPatient;\r\n\r\n  const reconstructionIssues = [];\r\n  // Can't reconstruct if we:\r\n  // -- Have a different dimensions within a displaySet.\r\n  // -- Have a different number of components within a displaySet.\r\n  // -- Have different orientations within a displaySet.\r\n  for (let ii = 1; ii < n; ++ii) {\r\n    const instance = instances[ii].getData().metadata;\r\n    const {\r\n      Rows,\r\n      Columns,\r\n      SamplesPerPixel,\r\n      ImageOrientationPatient,\r\n    } = instance;\r\n\r\n    if (Rows !== firstImageRows || Columns !== firstImageColumns) {\r\n      reconstructionIssues.push(ReconstructionIssues.VARYING_IMAGESDIMENSIONS);\r\n    } else if (SamplesPerPixel !== firstImageSamplesPerPixel) {\r\n      reconstructionIssues.push(ReconstructionIssues.VARYING_IMAGESCOMPONENTS);\r\n    } else if (\r\n      !_isSameArray(ImageOrientationPatient, firstImageOrientationPatient)\r\n    ) {\r\n      reconstructionIssues.push(ReconstructionIssues.VARYING_IMAGESORIENTATION);\r\n    }\r\n\r\n    if (reconstructionIssues.length !== 0) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  // check if dataset is 4D\r\n  if (_isDataset4D(instances)) {\r\n    reconstructionIssues.push(ReconstructionIssues.DATASET_4D);\r\n  }\r\n\r\n  return {\r\n    value: reconstructionIssues.length === 0 ? true : false,\r\n    reconstructionIssues,\r\n  };\r\n}\r\n\r\n/**\r\n *  Check is the spacing is uniform.\r\n *  The input metadata array has to be ordered by image position.\r\n *\r\n * @param {Object[]} An array of `OHIFInstanceMetadata` objects.\r\n * @param {boolean} is the dataset 4D.\r\n *\r\n * @returns {Object} isUniform, reconstructionIssues and missingFrames\r\n */\r\nfunction isSpacingUniform(instances, datasetIs4D) {\r\n  const n = instances.length;\r\n  const firstImage = instances[0].getData().metadata;\r\n  const firstImagePositionPatient = firstImage.ImagePositionPatient;\r\n\r\n  const reconstructionIssues = [];\r\n  let missingFrames = 0;\r\n\r\n  // Check if frame spacing is approximately equal within a spacingTolerance.\r\n  // If spacing is on a uniform grid but we are missing frames,\r\n  // Allow reconstruction, but pass back the number of missing frames.\r\n  if (n > 2) {\r\n    const lastIpp = instances[n - 1].getData().metadata.ImagePositionPatient;\r\n\r\n    // We can't reconstruct if we are missing ImagePositionPatient values\r\n    if (firstImagePositionPatient && lastIpp) {\r\n      const averageSpacingBetweenFrames =\r\n        _getPerpendicularDistance(firstImagePositionPatient, lastIpp) / (n - 1);\r\n\r\n      let previousImagePositionPatient = firstImagePositionPatient;\r\n\r\n      for (let ii = 1; ii < n; ++ii) {\r\n        const instance = instances[ii].getData().metadata;\r\n        const { ImagePositionPatient } = instance;\r\n\r\n        const spacingBetweenFrames = _getPerpendicularDistance(\r\n          ImagePositionPatient,\r\n          previousImagePositionPatient\r\n        );\r\n\r\n        if (datasetIs4D && spacingBetweenFrames < 1e-3) {\r\n          // the dataset is 4D, if the distance is zero, means that we are\r\n          // checking the 4th dimension. Do not return, since we want still to\r\n          // check the 3rd dimension spacing.\r\n          continue;\r\n        }\r\n\r\n        const spacingIssue = _getSpacingIssue(\r\n          spacingBetweenFrames,\r\n          averageSpacingBetweenFrames\r\n        );\r\n\r\n        if (spacingIssue) {\r\n          const issue = spacingIssue.issue;\r\n\r\n          if (issue === ReconstructionIssues.MISSING_FRAMES) {\r\n            missingFrames += spacingIssue.missingFrames;\r\n          } else if (issue === ReconstructionIssues.IRREGULAR_SPACING) {\r\n            reconstructionIssues.push(issue);\r\n            break;\r\n          }\r\n        }\r\n\r\n        previousImagePositionPatient = ImagePositionPatient;\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    isUniform: reconstructionIssues.length === 0 ? true : false,\r\n    missingFrames,\r\n    reconstructionIssues,\r\n  };\r\n}\r\n\r\n/**\r\n *  Check if 4D dataset.\r\n *\r\n *  Assuming that slices at different time have the same position, here we just check if\r\n *  there are multiple slices for the same ImagePositionPatient and disable MPR.\r\n *\r\n *  A better heuristic would be checking 4D tags, e.g. the presence of multiple TemporalPositionIdentifier values.\r\n *  However, some studies (e.g. https://github.com/OHIF/Viewers/issues/2113) do not have such tags.\r\n *\r\n * @param {Object[]} instances An array of `OHIFInstanceMetadata` objects.\r\n *\r\n * @returns {boolean} dataset4D value.\r\n */\r\nfunction _isDataset4D(instances) {\r\n  const n = instances.length;\r\n  for (let ii = 0; ii < n; ++ii) {\r\n    const instanceMetadataControl = instances[ii].getData().metadata;\r\n    if (\r\n      !instanceMetadataControl ||\r\n      instanceMetadataControl === undefined ||\r\n      !instanceMetadataControl.ImagePositionPatient ||\r\n      instanceMetadataControl.ImagePositionPatient === undefined\r\n    ) {\r\n      continue;\r\n    }\r\n    for (let jj = ii + 1; jj < n; ++jj) {\r\n      const instanceMetadata = instances[jj].getData().metadata;\r\n      if (\r\n        !instanceMetadata ||\r\n        instanceMetadata === undefined ||\r\n        !instanceMetadata.ImagePositionPatient ||\r\n        instanceMetadata.ImagePositionPatient === undefined\r\n      ) {\r\n        continue;\r\n      }\r\n\r\n      if (\r\n        _isSameArray(\r\n          instanceMetadataControl.ImagePositionPatient,\r\n          instanceMetadata.ImagePositionPatient\r\n        )\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction _isSameArray(iop1, iop2) {\r\n  if (iop1 === undefined || !iop2 === undefined) {\r\n    return;\r\n  }\r\n\r\n  return (\r\n    Math.abs(iop1[0] - iop2[0]) < iopTolerance &&\r\n    Math.abs(iop1[1] - iop2[1]) < iopTolerance &&\r\n    Math.abs(iop1[2] - iop2[2]) < iopTolerance\r\n  );\r\n}\r\n\r\n// TODO: Is 10% a reasonable spacingTolerance for spacing?\r\nconst spacingTolerance = 0.1;\r\nconst iopTolerance = 0.01;\r\n\r\n/**\r\n * Checks for spacing issues.\r\n *\r\n * @param {number} spacing The spacing between two frames.\r\n * @param {number} averageSpacing The average spacing between all frames.\r\n *\r\n * @returns {Object} An object containing the issue and extra information if necessary.\r\n */\r\nfunction _getSpacingIssue(spacing, averageSpacing) {\r\n  const equalWithinTolerance =\r\n    Math.abs(spacing - averageSpacing) < averageSpacing * spacingTolerance;\r\n\r\n  if (equalWithinTolerance) {\r\n    return;\r\n  }\r\n\r\n  const multipleOfAverageSpacing = spacing / averageSpacing;\r\n\r\n  const numberOfSpacings = Math.round(multipleOfAverageSpacing);\r\n\r\n  const errorForEachSpacing =\r\n    Math.abs(spacing - numberOfSpacings * averageSpacing) / numberOfSpacings;\r\n\r\n  if (errorForEachSpacing < spacingTolerance * averageSpacing) {\r\n    return {\r\n      issue: ReconstructionIssues.MISSING_FRAMES,\r\n      missingFrames: numberOfSpacings - 1,\r\n    };\r\n  }\r\n\r\n  return { issue: ReconstructionIssues.IRREGULAR_SPACING };\r\n}\r\n\r\nfunction _getPerpendicularDistance(a, b) {\r\n  return Math.sqrt(\r\n    Math.pow(a[0] - b[0], 2) +\r\n      Math.pow(a[1] - b[1], 2) +\r\n      Math.pow(a[2] - b[2], 2)\r\n  );\r\n}\r\n\r\nconst constructableModalities = ['MR', 'CT', 'PT', 'NM'];\r\n\r\nexport { isDisplaySetReconstructable, isSpacingUniform };\r\n","// - createStacks\r\nimport DICOMWeb from './../../DICOMWeb';\r\nimport ImageSet from './../ImageSet';\r\nimport { InstanceMetadata } from './InstanceMetadata';\r\nimport { Metadata } from './Metadata';\r\nimport OHIFError from '../OHIFError';\r\nimport { SeriesMetadata } from './SeriesMetadata';\r\n// - createStacks\r\nimport { api } from 'dicomweb-client';\r\n// - createStacks\r\nimport { isImage } from '../../utils/isImage';\r\nimport {\r\n  isDisplaySetReconstructable,\r\n  isSpacingUniform,\r\n} from '../../utils/isDisplaySetReconstructable';\r\nimport errorHandler from '../../errorHandler';\r\nimport isLowPriorityModality from '../../utils/isLowPriorityModality';\r\nimport getXHRRetryRequestHook from '../../utils/xhrRetryRequestHook';\r\n\r\nclass StudyMetadata extends Metadata {\r\n  constructor(data, uid) {\r\n    super(data, uid);\r\n    // Initialize Private Properties\r\n    Object.defineProperties(this, {\r\n      _studyInstanceUID: {\r\n        configurable: true, // configurable so that it can be redefined in sub-classes...\r\n        enumerable: false,\r\n        writable: true,\r\n        value: null,\r\n      },\r\n      _series: {\r\n        configurable: false,\r\n        enumerable: false,\r\n        writable: false,\r\n        value: [],\r\n      },\r\n      _displaySets: {\r\n        configurable: false,\r\n        enumerable: false,\r\n        writable: false,\r\n        value: [],\r\n      },\r\n      _derivedDisplaySets: {\r\n        configurable: false,\r\n        enumerable: false,\r\n        writable: false,\r\n        value: [],\r\n      },\r\n      _firstSeries: {\r\n        configurable: false,\r\n        enumerable: false,\r\n        writable: true,\r\n        value: null,\r\n      },\r\n      _firstInstance: {\r\n        configurable: false,\r\n        enumerable: false,\r\n        writable: true,\r\n        value: null,\r\n      },\r\n    });\r\n    // Initialize Public Properties\r\n    this._definePublicProperties();\r\n  }\r\n\r\n  /**\r\n   * Private Methods\r\n   */\r\n\r\n  /**\r\n   * Define Public Properties\r\n   * This method should only be called during initialization (inside the class constructor)\r\n   */\r\n  _definePublicProperties() {\r\n    /**\r\n     * Property: this.studyInstanceUID\r\n     * Same as this.getStudyInstanceUID()\r\n     * It's specially useful in contexts where a method call is not suitable like in search criteria. For example:\r\n     * studyCollection.findBy({\r\n     *   studyInstanceUID: '1.2.3.4.5.6.77777.8888888.99999999999.0'\r\n     * });\r\n     */\r\n    Object.defineProperty(this, 'studyInstanceUID', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      get: function() {\r\n        return this.getStudyInstanceUID();\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Public Methods\r\n   */\r\n\r\n  /**\r\n   * Getter for displaySets\r\n   * @return {Array} Array of display set object\r\n   */\r\n  getDisplaySets() {\r\n    return this._displaySets.slice();\r\n  }\r\n\r\n  /**\r\n   * Split a series metadata object into display sets\r\n   * @param {Array} sopClassHandlerModules List of SOP Class Modules\r\n   * @param {SeriesMetadata} series The series metadata object from which the display sets will be created\r\n   * @returns {Array} The list of display sets created for the given series object\r\n   */\r\n  _createDisplaySetsForSeries(sopClassHandlerModules, series) {\r\n    const study = this;\r\n    const displaySets = [];\r\n\r\n    const anyInstances = series.getInstanceCount() > 0;\r\n\r\n    if (!anyInstances) {\r\n      const displaySet = new ImageSet([]);\r\n      const seriesData = series.getData();\r\n\r\n      displaySet.setAttributes({\r\n        displaySetInstanceUID: displaySet.uid,\r\n        SeriesInstanceUID: seriesData.SeriesInstanceUID,\r\n        SeriesDescription: seriesData.SeriesDescription,\r\n        SeriesNumber: seriesData.SeriesNumber,\r\n        Modality: seriesData.Modality,\r\n      });\r\n\r\n      displaySets.push(displaySet);\r\n\r\n      return displaySets;\r\n    }\r\n\r\n    const sopClassUIDs = getSopClassUIDs(series);\r\n\r\n    if (sopClassHandlerModules && sopClassHandlerModules.length > 0) {\r\n      const displaySet = _getDisplaySetFromSopClassModule(\r\n        sopClassHandlerModules,\r\n        series,\r\n        study,\r\n        sopClassUIDs\r\n      );\r\n\r\n      if (displaySet) {\r\n        displaySet.sopClassModule = true;\r\n\r\n        if (displaySet.isDerived) {\r\n          this._addDerivedDisplaySet(displaySet);\r\n        }\r\n\r\n        displaySets.push(displaySet);\r\n\r\n        return displaySets;\r\n      }\r\n    }\r\n\r\n    // WE NEED A BETTER WAY TO NOTE THAT THIS IS THE DEFAULT BEHAVIOR FOR LOADING\r\n    // A DISPLAY SET IF THERE IS NO MATCHING SOP CLASS PLUGIN\r\n\r\n    // Search through the instances (InstanceMetadata object) of this series\r\n    // Split Multi-frame instances and Single-image modalities\r\n    // into their own specific display sets. Place the rest of each\r\n    // series into another display set.\r\n    const stackableInstances = [];\r\n    series.forEachInstance(instance => {\r\n      let displaySet;\r\n\r\n      // All imaging modalities must have a valid value for SOPClassUID (x00080016) or Rows (x00280010)\r\n      if (\r\n        !isImage(instance.getTagValue('SOPClassUID')) &&\r\n        !instance.getTagValue('Rows')\r\n      ) {\r\n        // we set an empty display and we add a isModalitySupported variable to\r\n        // print a warning that the modality is not supported in the thumbnail.\r\n        const displaySet = new ImageSet([]);\r\n        const seriesData = series.getData();\r\n        displaySet.setAttributes({\r\n          displaySetInstanceUID: displaySet.uid,\r\n          SeriesDate: seriesData.SeriesDate,\r\n          SeriesTime: seriesData.SeriesTime,\r\n          SeriesInstanceUID: series.getSeriesInstanceUID(),\r\n          SeriesNumber: instance.getTagValue('SeriesNumber'),\r\n          SeriesDescription: instance.getTagValue('SeriesDescription'),\r\n          numImageFrames: instance.getTagValue('NumberOfFrames'),\r\n          frameRate: instance.getTagValue('FrameTime'),\r\n          Modality: instance.getTagValue('Modality'),\r\n          isMultiFrame: false,\r\n          StudyInstanceUID: study.getStudyInstanceUID(), // Include the study instance UID\r\n          InstanceNumber: instance.getTagValue('InstanceNumber'), // Include the instance number\r\n          AcquisitionDatetime: instance.getTagValue('AcquisitionDateTime'), // Include the acquisition datetime\r\n          isReconstructable: false,\r\n          isModalitySupported: false,\r\n          metadata: instance.getData().metadata,\r\n        });\r\n\r\n        displaySets.push(displaySet);\r\n      } else {\r\n        if (isMultiFrame(instance)) {\r\n          displaySet = makeDisplaySet(series, [instance]);\r\n\r\n          displaySet.setAttributes({\r\n            sopClassUIDs,\r\n            isClip: true,\r\n            SeriesInstanceUID: series.getSeriesInstanceUID(),\r\n            StudyInstanceUID: study.getStudyInstanceUID(), // Include the study instance UID for drag/drop purposes\r\n            numImageFrames: instance.getTagValue('NumberOfFrames'), // Override the default value of instances.length\r\n            InstanceNumber: instance.getTagValue('InstanceNumber'), // Include the instance number\r\n            AcquisitionDatetime: instance.getTagValue('AcquisitionDateTime'), // Include the acquisition datetime\r\n          });\r\n          displaySets.push(displaySet);\r\n        } else if (isSingleImageModality(instance.Modality)) {\r\n          displaySet = makeDisplaySet(series, [instance]);\r\n          displaySet.setAttributes({\r\n            sopClassUIDs,\r\n            StudyInstanceUID: study.getStudyInstanceUID(), // Include the study instance UID\r\n            SeriesInstanceUID: series.getSeriesInstanceUID(),\r\n            InstanceNumber: instance.getTagValue('InstanceNumber'), // Include the instance number\r\n            AcquisitionDatetime: instance.getTagValue('AcquisitionDateTime'), // Include the acquisition datetime\r\n          });\r\n          displaySets.push(displaySet);\r\n        } else {\r\n          stackableInstances.push(instance);\r\n        }\r\n      }\r\n    });\r\n\r\n    if (stackableInstances.length) {\r\n      const displaySet = makeDisplaySet(series, stackableInstances);\r\n      displaySet.setAttribute('StudyInstanceUID', study.getStudyInstanceUID());\r\n      displaySet.setAttributes({\r\n        sopClassUIDs,\r\n      });\r\n      displaySets.push(displaySet);\r\n    }\r\n\r\n    return displaySets;\r\n  }\r\n\r\n  /**\r\n   * Adds the displaySets to the studies list of derived displaySets.\r\n   * @param {object} displaySet The displaySet to append to the derived displaysets list.\r\n   */\r\n  _addDerivedDisplaySet(displaySet) {\r\n    this._derivedDisplaySets.push(displaySet);\r\n    // --> Perhaps that logic should exist in the extension sop class handler and this be a dumb list.\r\n    // TODO -> Get x Modality by referencedSeriesInstanceUid, FoR, etc.\r\n  }\r\n\r\n  /**\r\n   * Adds the displaySets to the studies list of derived displaySets.\r\n   * @param {array} displaySets The displaySets array to append to the derived displaysets list.\r\n   */\r\n  _addDerivedDisplaySets(displaySets) {\r\n    displaySets.map(displaySet => this._derivedDisplaySets.push(displaySet));\r\n  }\r\n\r\n  /**\r\n   * Returns the source display set of the derivated display set.\r\n   * @param {object} derivatedDisplaySet\r\n   * @param {array[StudyMetadata]} studies\r\n   * @return {object} source display set.\r\n   */\r\n  static getReferencedDisplaySet(derivatedDisplaySet, studies) {\r\n    let allDisplaySets = [];\r\n\r\n    studies.forEach(study => {\r\n      allDisplaySets = allDisplaySets.concat(study.displaySets);\r\n    });\r\n\r\n    const otherDisplaySets = allDisplaySets.filter(\r\n      ds =>\r\n        ds.displaySetInstanceUID !== derivatedDisplaySet.displaySetInstanceUID\r\n    );\r\n\r\n    const { metadata } = derivatedDisplaySet;\r\n\r\n    let referencedSeriesInstanceUIDs = _findReferencedSeriesInstanceUIDsFromSourceImageSequence(\r\n      metadata,\r\n      otherDisplaySets\r\n    );\r\n\r\n    let noReferencedSeriesAvailable =\r\n      !referencedSeriesInstanceUIDs ||\r\n      referencedSeriesInstanceUIDs.length === 0;\r\n    if (noReferencedSeriesAvailable) {\r\n      referencedSeriesInstanceUIDs = _findReferencedSeriesInstanceUIDsFromReferencedSeriesSequence(\r\n        metadata\r\n      );\r\n    }\r\n\r\n    noReferencedSeriesAvailable =\r\n      !referencedSeriesInstanceUIDs ||\r\n      referencedSeriesInstanceUIDs.length === 0;\r\n    if (noReferencedSeriesAvailable) {\r\n      referencedSeriesInstanceUIDs = _findReferencedSeriesInstanceUIDsFromReferencedImageSequence(\r\n        metadata,\r\n        otherDisplaySets\r\n      );\r\n    }\r\n\r\n    const referencedSeriesAvailable =\r\n      referencedSeriesInstanceUIDs && referencedSeriesInstanceUIDs.length !== 0;\r\n    if (referencedSeriesAvailable) {\r\n      const referencedDisplaySet = otherDisplaySets.find(ds =>\r\n        referencedSeriesInstanceUIDs.includes(ds.SeriesInstanceUID)\r\n      );\r\n      return referencedDisplaySet;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns a list of derived datasets in the study, filtered by the given filter.\r\n   * @param {object} filter An object containing search filters\r\n   * @param {object} filter.Modality\r\n   * @param {object} filter.referencedSeriesInstanceUID\r\n   * @param {object} filter.referencedFrameOfReferenceUID\r\n   * @return {Array} filtered derived display sets\r\n   */\r\n  getDerivedDatasets(filter) {\r\n    const {\r\n      Modality,\r\n      referencedSeriesInstanceUID,\r\n      referencedFrameOfReferenceUID,\r\n    } = filter;\r\n\r\n    let filteredDerivedDisplaySets = this._derivedDisplaySets;\r\n\r\n    if (Modality) {\r\n      filteredDerivedDisplaySets = filteredDerivedDisplaySets.filter(\r\n        displaySet => displaySet.Modality === Modality\r\n      );\r\n    }\r\n\r\n    if (referencedSeriesInstanceUID) {\r\n      filteredDerivedDisplaySets = filteredDerivedDisplaySets.filter(\r\n        displaySet => {\r\n          return (\r\n            StudyMetadata.getReferencedDisplaySet(displaySet, [this])\r\n              .SeriesInstanceUID === referencedSeriesInstanceUID\r\n          );\r\n        }\r\n      );\r\n    }\r\n\r\n    if (referencedFrameOfReferenceUID) {\r\n      filteredDerivedDisplaySets = filteredDerivedDisplaySets.filter(\r\n        displaySet =>\r\n          displaySet.FrameOfReferenceUID === referencedFrameOfReferenceUID\r\n      );\r\n    }\r\n\r\n    return filteredDerivedDisplaySets;\r\n  }\r\n\r\n  /**\r\n   * Creates a set of displaySets to be placed in the Study Metadata\r\n   * The displaySets that appear in the Study Metadata must represent\r\n   * imaging modalities. A series may be split into one or more displaySets.\r\n   *\r\n   * Furthermore, for drag/drop functionality,\r\n   * it is easiest if the stack objects also contain information about\r\n   * which study they are linked to.\r\n   *\r\n   * @param {StudyMetadata} study The study instance metadata to be used\r\n   * @returns {Array} An array of series to be placed in the Study Metadata\r\n   */\r\n  createDisplaySets(sopClassHandlerModules) {\r\n    const displaySets = [];\r\n    const anyDisplaySets = this.getSeriesCount();\r\n\r\n    if (!anyDisplaySets) {\r\n      return displaySets;\r\n    }\r\n\r\n    // Loop through the series (SeriesMetadata)\r\n    this.forEachSeries(series => {\r\n      const displaySetsForSeries = this._createDisplaySetsForSeries(\r\n        sopClassHandlerModules,\r\n        series\r\n      );\r\n\r\n      displaySetsForSeries.forEach(ds => this._insertDisplaySet(ds));\r\n    });\r\n\r\n    return this._displaySets;\r\n  }\r\n\r\n  /**\r\n   * Method to append display sets from a given series to the internal list of display sets\r\n   * @param {Array} sopClassHandlerModules A list of SOP Class Handler Modules\r\n   * @param {SeriesMetadata} series The series metadata object from which the display sets will be created\r\n   * @returns {boolean} Returns true on success or false on failure (e.g., the series does not belong to this study)\r\n   */\r\n  createAndAddDisplaySetsForSeries(sopClassHandlerModules, series) {\r\n    if (!this.containsSeries(series)) {\r\n      return false;\r\n    }\r\n\r\n    const displaySets = this._createDisplaySetsForSeries(\r\n      sopClassHandlerModules,\r\n      series\r\n    );\r\n\r\n    // Note: filtering in place because this._displaySets has writable: false\r\n    for (let i = this._displaySets.length - 1; i >= 0; i--) {\r\n      const displaySet = this._displaySets[i];\r\n      if (displaySet.SeriesInstanceUID === series.getSeriesInstanceUID()) {\r\n        this._displaySets.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    displaySets.forEach(displaySet => {\r\n      this.addDisplaySet(displaySet);\r\n    });\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Add a single display set to the list\r\n   * @param {Object} displaySet Display set object\r\n   * @returns {boolean} True on success, false on failure.\r\n   */\r\n  addDisplaySet(displaySet) {\r\n    if (displaySet instanceof ImageSet || displaySet.sopClassModule) {\r\n      this._insertDisplaySet(displaySet);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Invokes the supplied callback for each display set in the current study passing\r\n   * two arguments: display set (a ImageSet instance) and index (the integer\r\n   * index of the display set within the current study)\r\n   * @param {function} callback The callback function which will be invoked for each display set instance.\r\n   * @returns {undefined} Nothing is returned.\r\n   */\r\n  forEachDisplaySet(callback) {\r\n    if (Metadata.isValidCallback(callback)) {\r\n      this._displaySets.forEach((displaySet, index) => {\r\n        callback.call(null, displaySet, index);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Insert the displaySet so that the list has an increasing SeriesNumber,\r\n   * with the most recent series first for displaySets with the same SeriesNumber.\r\n   *\r\n   * If the displaySet is low priority, the same logic is applied, but is sorted within a sub list\r\n   * At the end of the list, where all low priority data is found.\r\n   */\r\n  _insertDisplaySet(displaySet) {\r\n    const { SeriesNumber } = displaySet;\r\n    const displaySets = this._displaySets;\r\n    let insertIndex = displaySets.length;\r\n    let firstIndexWithSameSeriesNumber;\r\n\r\n    // If low priority, start search from next low priority.\r\n    if (isLowPriorityModality(displaySet.Modality)) {\r\n      let startingIndex;\r\n\r\n      // Find where the first low priority displaySet is.\r\n      for (let i = 0; i < displaySets.length; i++) {\r\n        if (isLowPriorityModality(displaySets[i].Modality)) {\r\n          startingIndex = i;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (!startingIndex) {\r\n        startingIndex = displaySets.length;\r\n      }\r\n\r\n      // Find the correct SeriesNumber location to insert within the low priority\r\n      // Modality displaySets\r\n      for (let i = startingIndex; i < displaySets.length; i++) {\r\n        if (\r\n          displaySets[i].SeriesNumber === SeriesNumber &&\r\n          !firstIndexWithSameSeriesNumber\r\n        ) {\r\n          firstIndexWithSameSeriesNumber = i;\r\n        }\r\n\r\n        if (displaySets[i].SeriesNumber > SeriesNumber) {\r\n          insertIndex = i;\r\n          break;\r\n        }\r\n      }\r\n    } else {\r\n      // Find correct SeriesNumber to insert or where the low priority modalities start.\r\n      for (let i = 0; i < displaySets.length; i++) {\r\n        if (\r\n          displaySets[i].SeriesNumber === SeriesNumber &&\r\n          !firstIndexWithSameSeriesNumber\r\n        ) {\r\n          firstIndexWithSameSeriesNumber = i;\r\n        }\r\n\r\n        if (\r\n          displaySets[i].SeriesNumber > SeriesNumber ||\r\n          isLowPriorityModality(displaySets[i].Modality)\r\n        ) {\r\n          insertIndex = i;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // If we have multiple displaySets with the same series number, find the insert position based on\r\n    // SeriesDate and SeriesTime.\r\n    if (firstIndexWithSameSeriesNumber !== undefined) {\r\n      // If no SeriesDate, is just a placeholder displaySet, just insert anywhere, it will be re-added later.\r\n      if (displaySet.SeriesDate) {\r\n        const seriesDateTime = `${displaySet.SeriesDate}${displaySet.SeriesTime}`;\r\n\r\n        for (let i = firstIndexWithSameSeriesNumber; i < insertIndex; i++) {\r\n          const displaySetI = displaySets[i];\r\n\r\n          if (\r\n            displaySetI.SeriesDate &&\r\n            `${displaySetI.SeriesDate}${displaySetI.SeriesTime}` <\r\n              seriesDateTime\r\n          ) {\r\n            insertIndex = i;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (\r\n      this._displaySets.some(\r\n        ds => ds.displaySetInstanceUID === displaySet.displaySetInstanceUID\r\n      )\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    this._displaySets.splice(insertIndex, 0, displaySet);\r\n    this.displaySets = this._displaySets;\r\n  }\r\n\r\n  /**\r\n   * Search the associated display sets using the supplied callback as criteria. The callback is passed\r\n   * two arguments: display set (an ImageSet instance) and index (the integer\r\n   * index of the display set within the current study)\r\n   * @param {function} callback The callback function which will be invoked for each display set instance.\r\n   * @returns {undefined} Nothing is returned.\r\n   */\r\n  findDisplaySet(callback) {\r\n    if (Metadata.isValidCallback(callback)) {\r\n      return this._displaySets.find((displaySet, index) => {\r\n        return callback.call(null, displaySet, index);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Retrieve the number of display sets within the current study.\r\n   * @returns {number} The number of display sets in the current study.\r\n   */\r\n  getDisplaySetCount() {\r\n    return this._displaySets.length;\r\n  }\r\n\r\n  /**\r\n   * Returns the StudyInstanceUID of the current study.\r\n   */\r\n  getStudyInstanceUID() {\r\n    return this._studyInstanceUID;\r\n  }\r\n\r\n  /**\r\n   * Getter for series\r\n   * @return {Array} Array of SeriesMetadata object\r\n   */\r\n  getSeries() {\r\n    return this._series.slice();\r\n  }\r\n\r\n  /**\r\n   * Append a series to the current study.\r\n   * @param {SeriesMetadata} series The series to be added to the current study.\r\n   * @returns {boolean} Returns true on success, false otherwise.\r\n   */\r\n  addSeries(series) {\r\n    let result = false;\r\n    if (\r\n      series instanceof SeriesMetadata &&\r\n      this.getSeriesByUID(series.getSeriesInstanceUID()) === void 0\r\n    ) {\r\n      this._series.push(series);\r\n      result = true;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Update a series in the current study by SeriesInstanceUID.\r\n   * @param {String} SeriesInstanceUID The SeriesInstanceUID to be updated\r\n   * @param {SeriesMetadata} series The series to be added to the current study.\r\n   * @returns {boolean} Returns true on success, false otherwise.\r\n   */\r\n  updateSeries(SeriesInstanceUID, series) {\r\n    const index = this._series.findIndex(series => {\r\n      return series.getSeriesInstanceUID() === SeriesInstanceUID;\r\n    });\r\n\r\n    if (index < 0) {\r\n      return false;\r\n    }\r\n\r\n    if (!(series instanceof SeriesMetadata)) {\r\n      throw new Error('Series must be an instance of SeriesMetadata');\r\n    }\r\n\r\n    this._series[index] = series;\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Find a series by index.\r\n   * @param {number} index An integer representing a list index.\r\n   * @returns {SeriesMetadata} Returns a SeriesMetadata instance when found or undefined otherwise.\r\n   */\r\n  getSeriesByIndex(index) {\r\n    let found; // undefined by default...\r\n    if (Metadata.isValidIndex(index)) {\r\n      found = this._series[index];\r\n    }\r\n    return found;\r\n  }\r\n\r\n  /**\r\n   * Find a series by SeriesInstanceUID.\r\n   * @param {string} uid An UID string.\r\n   * @returns {SeriesMetadata} Returns a SeriesMetadata instance when found or undefined otherwise.\r\n   */\r\n  getSeriesByUID(uid) {\r\n    let found; // undefined by default...\r\n    if (Metadata.isValidUID(uid)) {\r\n      found = this._series.find(series => {\r\n        return series.getSeriesInstanceUID() === uid;\r\n      });\r\n    }\r\n    return found;\r\n  }\r\n\r\n  containsSeries(series) {\r\n    return (\r\n      series instanceof SeriesMetadata && this._series.indexOf(series) >= 0\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Retrieve the number of series within the current study.\r\n   * @returns {number} The number of series in the current study.\r\n   */\r\n  getSeriesCount() {\r\n    return this._series.length;\r\n  }\r\n\r\n  /**\r\n   * Retrieve the number of instances within the current study.\r\n   * @returns {number} The number of instances in the current study.\r\n   */\r\n  getInstanceCount() {\r\n    return this._series.reduce((sum, series) => {\r\n      return sum + series.getInstanceCount();\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * Invokes the supplied callback for each series in the current study passing\r\n   * two arguments: series (a SeriesMetadata instance) and index (the integer\r\n   * index of the series within the current study)\r\n   * @param {function} callback The callback function which will be invoked for each series instance.\r\n   * @returns {undefined} Nothing is returned.\r\n   */\r\n  forEachSeries(callback) {\r\n    if (Metadata.isValidCallback(callback)) {\r\n      this._series.forEach((series, index) => {\r\n        callback.call(null, series, index);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Find the index of a series inside the study.\r\n   * @param {SeriesMetadata} series An instance of the SeriesMetadata class.\r\n   * @returns {number} The index of the series inside the study or -1 if not found.\r\n   */\r\n  indexOfSeries(series) {\r\n    return this._series.indexOf(series);\r\n  }\r\n\r\n  /**\r\n   * Compares the current study instance with another one.\r\n   * @param {StudyMetadata} study An instance of the StudyMetadata class.\r\n   * @returns {boolean} Returns true if both instances refer to the same study.\r\n   */\r\n  equals(study) {\r\n    const self = this;\r\n    return (\r\n      study === self ||\r\n      (study instanceof StudyMetadata &&\r\n        study.getStudyInstanceUID() === self.getStudyInstanceUID())\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the first series of the current study retaining a consistent result across multiple calls.\r\n   * @return {SeriesMetadata} An instance of the SeriesMetadata class or null if it does not exist.\r\n   */\r\n  getFirstSeries() {\r\n    let series = this._firstSeries;\r\n    if (!(series instanceof SeriesMetadata)) {\r\n      series = null;\r\n      const found = this.getSeriesByIndex(0);\r\n      if (found instanceof SeriesMetadata) {\r\n        this._firstSeries = found;\r\n        series = found;\r\n      }\r\n    }\r\n    return series;\r\n  }\r\n\r\n  /**\r\n   * Get the first image id given display instance uid.\r\n   * @return {string} The image id.\r\n   */\r\n  getFirstImageId(displaySetInstanceUID) {\r\n    try {\r\n      const displaySet = this.findDisplaySet(\r\n        displaySet => displaySet.displaySetInstanceUID === displaySetInstanceUID\r\n      );\r\n      return displaySet.images[0].getImageId();\r\n    } catch (error) {\r\n      console.error('Failed to retrieve image metadata');\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the first instance of the current study retaining a consistent result across multiple calls.\r\n   * @return {InstanceMetadata} An instance of the InstanceMetadata class or null if it does not exist.\r\n   */\r\n  getFirstInstance() {\r\n    let instance = this._firstInstance;\r\n    if (!(instance instanceof InstanceMetadata)) {\r\n      instance = null;\r\n      const firstSeries = this.getFirstSeries();\r\n      if (firstSeries instanceof SeriesMetadata) {\r\n        const found = firstSeries.getFirstInstance();\r\n        if (found instanceof InstanceMetadata) {\r\n          this._firstInstance = found;\r\n          instance = found;\r\n        }\r\n      }\r\n    }\r\n    return instance;\r\n  }\r\n\r\n  /**\r\n   * Search the associated series to find an specific instance using the supplied callback as criteria.\r\n   * The callback is passed two arguments: instance (a InstanceMetadata instance) and index (the integer\r\n   * index of the instance within the current series)\r\n   * @param {function} callback The callback function which will be invoked for each instance instance.\r\n   * @returns {Object} Result object containing series (SeriesMetadata) and instance (InstanceMetadata)\r\n   *                   objects or an empty object if not found.\r\n   */\r\n  findSeriesAndInstanceByInstance(callback) {\r\n    let result;\r\n\r\n    if (Metadata.isValidCallback(callback)) {\r\n      let instance;\r\n\r\n      const series = this._series.find(series => {\r\n        instance = series.findInstance(callback);\r\n        return instance instanceof InstanceMetadata;\r\n      });\r\n\r\n      // No series found\r\n      if (series instanceof SeriesMetadata) {\r\n        result = {\r\n          series,\r\n          instance,\r\n        };\r\n      }\r\n    }\r\n\r\n    return result || {};\r\n  }\r\n\r\n  /**\r\n   * Find series by instance using the supplied callback as criteria. The callback is passed\r\n   * two arguments: instance (a InstanceMetadata instance) and index (the integer index of\r\n   * the instance within its series)\r\n   * @param {function} callback The callback function which will be invoked for each instance.\r\n   * @returns {SeriesMetadata|undefined} If a series is found based on callback criteria it\r\n   *                                     returns a SeriesMetadata. \"undefined\" is returned otherwise\r\n   */\r\n  findSeriesByInstance(callback) {\r\n    const result = this.findSeriesAndInstanceByInstance(callback);\r\n\r\n    return result.series;\r\n  }\r\n\r\n  /**\r\n   * Find an instance using the supplied callback as criteria. The callback is passed\r\n   * two arguments: instance (a InstanceMetadata instance) and index (the integer index of\r\n   * the instance within its series)\r\n   * @param {function} callback The callback function which will be invoked for each instance.\r\n   * @returns {InstanceMetadata|undefined} If an instance is found based on callback criteria it\r\n   *                                     returns a InstanceMetadata. \"undefined\" is returned otherwise\r\n   */\r\n  findInstance(callback) {\r\n    const result = this.findSeriesAndInstanceByInstance(callback);\r\n\r\n    return result.instance;\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @typedef StudyMetadata\r\n * @property {function} getSeriesCount - returns the number of series in the study\r\n * @property {function} forEachSeries - function that invokes callback with each series and index\r\n * @property {function} getStudyInstanceUID - returns the study's instance UID\r\n *\r\n */\r\n\r\n/**\r\n * @typedef SeriesMetadata\r\n * @property {function} getSeriesInstanceUID - returns the series's instance UID\r\n * @property {function} getData - ???\r\n * @property {function} forEachInstance - ???\r\n */\r\n\r\nconst dwc = api.DICOMwebClient;\r\n\r\nconst isMultiFrame = instance => {\r\n  return instance.getTagValue('NumberOfFrames') > 1;\r\n};\r\n\r\n/**\r\n * Creates a display set for a series.\r\n * Checks if a series is reconstructable to a 3D volume.\r\n * If reconstructable, the frames are sorted.\r\n *\r\n * @param {SeriesMetadata} series The series metadata object from which the display sets will be created\r\n * @param {Object[]} instances An array of `OHIFInstanceMetadata` objects.\r\n *\r\n * @returns {Object} imageSet.\r\n */\r\nconst makeDisplaySet = (series, instances) => {\r\n  const instance = instances[0];\r\n  const imageSet = new ImageSet(instances);\r\n  const seriesData = series.getData();\r\n\r\n  // set appropriate attributes to image set...\r\n  imageSet.setAttributes({\r\n    displaySetInstanceUID: imageSet.uid, // create a local alias for the imageSet UID\r\n    SeriesDate: seriesData.SeriesDate,\r\n    SeriesTime: seriesData.SeriesTime,\r\n    SeriesInstanceUID: series.getSeriesInstanceUID(),\r\n    SeriesNumber: instance.getTagValue('SeriesNumber'),\r\n    SeriesDescription: instance.getTagValue('SeriesDescription'),\r\n    numImageFrames: instances.length,\r\n    frameRate: instance.getTagValue('FrameTime'),\r\n    Modality: instance.getTagValue('Modality'),\r\n    isMultiFrame: isMultiFrame(instance),\r\n  });\r\n\r\n  // Sort the images in this series by instanceNumber\r\n  const shallSort = true; //!OHIF.utils.ObjectPath.get(Meteor, 'settings.public.ui.sortSeriesByIncomingOrder');\r\n  if (shallSort) {\r\n    imageSet.sortBy((a, b) => {\r\n      // Sort by InstanceNumber (0020,0013)\r\n      return (\r\n        (parseInt(a.getTagValue('InstanceNumber', 0)) || 0) -\r\n        (parseInt(b.getTagValue('InstanceNumber', 0)) || 0)\r\n      );\r\n    });\r\n  }\r\n\r\n  // Include the first image instance number (after sorted)\r\n  imageSet.setAttribute(\r\n    'InstanceNumber',\r\n    imageSet.getImage(0).getTagValue('InstanceNumber')\r\n  );\r\n\r\n  const displayReconstructableInfo = isDisplaySetReconstructable(instances);\r\n  imageSet.isReconstructable = displayReconstructableInfo.value;\r\n\r\n  let displaySpacingInfo = undefined;\r\n  if (shallSort && imageSet.isReconstructable) {\r\n    // sort images by image position\r\n    imageSet.sortByImagePositionPatient();\r\n\r\n    // check if the spacing is uniform and update isReconstructable\r\n    const datasetIs4D = displayReconstructableInfo.reconstructionIssues.find(\r\n      issue => issue === ReconstructionIssues.DATASET_4D\r\n    );\r\n    displaySpacingInfo = isSpacingUniform(imageSet.images, datasetIs4D);\r\n    imageSet.isReconstructable = displaySpacingInfo.isUniform;\r\n\r\n    if (displaySpacingInfo.missingFrames) {\r\n      // TODO -> This is currently unused, but may be used for reconstructing\r\n      // Volumes with gaps later on.\r\n      imageSet.missingFrames = displaySpacingInfo.missingFrames;\r\n    }\r\n  }\r\n\r\n  if (!imageSet.displayReconstructableInfo) {\r\n    // It is not reconstrabale Save type of warning\r\n    imageSet.reconstructionIssues = displaySpacingInfo\r\n      ? displayReconstructableInfo.reconstructionIssues.concat(\r\n          displaySpacingInfo.reconstructionIssues\r\n        )\r\n      : displayReconstructableInfo.reconstructionIssues;\r\n  }\r\n\r\n  imageSet.isModalitySupported = true;\r\n\r\n  return imageSet;\r\n};\r\n\r\nconst isSingleImageModality = Modality => {\r\n  return Modality === 'CR' || Modality === 'MG' || Modality === 'DX';\r\n};\r\n\r\nfunction getSopClassUIDs(series) {\r\n  const uniqueSopClassUIDsInSeries = new Set();\r\n  series.forEachInstance(instance => {\r\n    const instanceSopClassUID = instance.getTagValue('SOPClassUID');\r\n\r\n    uniqueSopClassUIDsInSeries.add(instanceSopClassUID);\r\n  });\r\n  const sopClassUIDs = Array.from(uniqueSopClassUIDsInSeries);\r\n\r\n  return sopClassUIDs;\r\n}\r\n\r\n/**\r\n * @private\r\n * @param {SeriesMetadata} series\r\n * @param {StudyMetadata} study\r\n * @param {string[]} sopClassUIDs\r\n */\r\nfunction _getDisplaySetFromSopClassModule(\r\n  sopClassHandlerExtensions, // TODO: Update Usage\r\n  series,\r\n  study,\r\n  sopClassUIDs\r\n) {\r\n  // TODO: For now only use the plugins if all instances have the same SOPClassUID\r\n  if (sopClassUIDs.length !== 1) {\r\n    console.warn(\r\n      'getDisplaySetFromSopClassPlugin: More than one SOPClassUID in the same series is not yet supported.'\r\n    );\r\n    return;\r\n  }\r\n\r\n  const SOPClassUID = sopClassUIDs[0];\r\n  const sopClassHandlerModules = sopClassHandlerExtensions.map(extension => {\r\n    return extension.module;\r\n  });\r\n\r\n  const handlersForSopClassUID = sopClassHandlerModules.filter(module => {\r\n    return module.sopClassUIDs.includes(SOPClassUID);\r\n  });\r\n\r\n  // TODO: Sort by something, so we can determine which plugin to use\r\n  if (!handlersForSopClassUID || !handlersForSopClassUID.length) {\r\n    return;\r\n  }\r\n\r\n  const plugin = handlersForSopClassUID[0];\r\n  const headers = DICOMWeb.getAuthorizationHeader();\r\n  const errorInterceptor = errorHandler.getHTTPErrorHandler();\r\n  const dicomWebClient = new dwc({\r\n    url: study.getData().wadoRoot,\r\n    headers,\r\n    errorInterceptor,\r\n    requestHooks: [getXHRRetryRequestHook()],\r\n  });\r\n\r\n  let displaySet = plugin.getDisplaySetFromSeries(\r\n    series,\r\n    study,\r\n    dicomWebClient,\r\n    headers\r\n  );\r\n  if (displaySet && !displaySet.Modality) {\r\n    const instance = series.getFirstInstance();\r\n    displaySet.Modality = instance.getTagValue('Modality');\r\n  }\r\n  return displaySet;\r\n}\r\n\r\n/**\r\n * Returns the referenced series instance UIDs by searching the information in the\r\n * ReferencedSeriesSequence.\r\n * @param {object} derivatedDisplaySet.metadata\r\n * @return {array[string]} referenced series instance UIDs.\r\n */\r\nfunction _findReferencedSeriesInstanceUIDsFromReferencedSeriesSequence(\r\n  metadata\r\n) {\r\n  if (!metadata.ReferencedSeriesSequence) {\r\n    return;\r\n  }\r\n\r\n  let referencedSeriesInstanceUIDs;\r\n  const ReferencedSeriesSequence = _toArray(metadata.ReferencedSeriesSequence);\r\n\r\n  referencedSeriesInstanceUIDs = ReferencedSeriesSequence.map(\r\n    ReferencedSeries => ReferencedSeries.SeriesInstanceUID\r\n  );\r\n\r\n  return referencedSeriesInstanceUIDs;\r\n}\r\n\r\n/**\r\n * Returns the referenced series instance UIDs by searching the information in the\r\n * ReferencedImageSequence.\r\n * @param {object} derivatedDisplaySet.metadata\r\n * @param {array[object]} displaysets\r\n * @return {array[string]} referenced series instance UIDs.\r\n */\r\nfunction _findReferencedSeriesInstanceUIDsFromReferencedImageSequence(\r\n  metadata,\r\n  displaySets\r\n) {\r\n  if (!metadata.ReferencedImageSequence) {\r\n    return;\r\n  }\r\n\r\n  let referencedSeriesInstanceUIDs;\r\n  const referencedImageArray = _toArray(metadata.ReferencedImageSequence);\r\n  for (let i = 0; i < referencedImageArray.length; i++) {\r\n    const { ReferencedSOPInstanceUID } = referencedImageArray[i];\r\n    if (!ReferencedSOPInstanceUID) {\r\n      continue;\r\n    }\r\n\r\n    referencedSeriesInstanceUIDs = _findReferencedSeriesInstanceUIDsFromSOPInstanceUID(\r\n      displaySets,\r\n      ReferencedSOPInstanceUID\r\n    );\r\n\r\n    if (\r\n      referencedSeriesInstanceUIDs &&\r\n      referencedSeriesInstanceUIDs.length !== 0\r\n    ) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  return referencedSeriesInstanceUIDs;\r\n}\r\n\r\n/**\r\n * Returns the referenced series instance UIDs by searching the information in the\r\n * SourceImageSequence.\r\n * @param {object} derivatedDisplaySet.metadata\r\n * @param {array[object]} displaysets\r\n * @return {array[string]} referenced series instance UIDs.\r\n */\r\nfunction _findReferencedSeriesInstanceUIDsFromSourceImageSequence(\r\n  metadata,\r\n  displaySets\r\n) {\r\n  let SourceImageSequence;\r\n\r\n  if (metadata.SourceImageSequence) {\r\n    SourceImageSequence = metadata.SourceImageSequence;\r\n  } else {\r\n    const { PerFrameFunctionalGroupsSequence } = metadata;\r\n    const firstFunctionalGroups = _toArray(PerFrameFunctionalGroupsSequence)[0];\r\n    if (firstFunctionalGroups) {\r\n      const { DerivationImageSequence } = firstFunctionalGroups;\r\n      SourceImageSequence = DerivationImageSequence;\r\n    }\r\n  }\r\n\r\n  if (!SourceImageSequence) {\r\n    return;\r\n  }\r\n\r\n  const sourceImageArray = _toArray(SourceImageSequence);\r\n\r\n  let referencedSeriesInstanceUIDs;\r\n  for (let i = 0; i < sourceImageArray.length; i++) {\r\n    const { ReferencedSOPInstanceUID } = sourceImageArray[i];\r\n    referencedSeriesInstanceUIDs = _findReferencedSeriesInstanceUIDsFromSOPInstanceUID(\r\n      displaySets,\r\n      ReferencedSOPInstanceUID\r\n    );\r\n    if (\r\n      referencedSeriesInstanceUIDs &&\r\n      referencedSeriesInstanceUIDs.length !== 0\r\n    ) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  return referencedSeriesInstanceUIDs;\r\n}\r\n\r\n/**\r\n * Returns the referenced series instance UIDs by searching the information in the\r\n * SOPInstanceUID of the displaySets.\r\n * @param {array[object]} displaysets\r\n * @param {string} SOPInstanceUID\r\n * @return {array[string]} referenced series instance UIDs.\r\n */\r\nfunction _findReferencedSeriesInstanceUIDsFromSOPInstanceUID(\r\n  displaySets,\r\n  SOPInstanceUID\r\n) {\r\n  const imageSets = displaySets.filter(ds => ds instanceof ImageSet);\r\n\r\n  for (let i = 0; i < imageSets.length; i++) {\r\n    const { images } = imageSets[i];\r\n    if (!images) {\r\n      continue;\r\n    }\r\n    for (let j = 0; j < images.length; j++) {\r\n      const image = images[j];\r\n      if (!image) {\r\n        continue;\r\n      }\r\n      if (image.SOPInstanceUID === SOPInstanceUID) {\r\n        return [image.getData().metadata.SeriesInstanceUID];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction _toArray(arrayOrObject) {\r\n  return Array.isArray(arrayOrObject) ? arrayOrObject : [arrayOrObject];\r\n}\r\n\r\nexport { StudyMetadata };\r\n","import guid from '../utils/guid.js';\r\nimport OHIFError from './OHIFError';\r\nimport { Vector3 } from 'cornerstone-math';\r\n\r\nconst OBJECT = 'object';\r\n\r\n/**\r\n * This class defines an ImageSet object which will be used across the viewer. This object represents\r\n * a list of images that are associated by any arbitrary criteria being thus content agnostic. Besides the\r\n * main attributes (images and uid) it allows additional attributes to be appended to it (currently\r\n * indiscriminately, but this should be changed).\r\n */\r\nclass ImageSet {\r\n  constructor(images) {\r\n    if (Array.isArray(images) !== true) {\r\n      throw new OHIFError('ImageSet expects an array of images');\r\n    }\r\n\r\n    // @property \"images\"\r\n    Object.defineProperty(this, 'images', {\r\n      enumerable: false,\r\n      configurable: false,\r\n      writable: false,\r\n      value: images,\r\n    });\r\n\r\n    // @property \"uid\"\r\n    Object.defineProperty(this, 'uid', {\r\n      enumerable: false,\r\n      configurable: false,\r\n      writable: false,\r\n      value: guid(), // Unique ID of the instance\r\n    });\r\n  }\r\n\r\n  getUID() {\r\n    return this.uid;\r\n  }\r\n\r\n  setAttribute(attribute, value) {\r\n    this[attribute] = value;\r\n  }\r\n\r\n  getAttribute(attribute) {\r\n    return this[attribute];\r\n  }\r\n\r\n  setAttributes(attributes) {\r\n    if (typeof attributes === OBJECT && attributes !== null) {\r\n      const imageSet = this,\r\n        hasOwn = Object.prototype.hasOwnProperty;\r\n      for (let attribute in attributes) {\r\n        if (hasOwn.call(attributes, attribute)) {\r\n          imageSet[attribute] = attributes[attribute];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getImage(index) {\r\n    return this.images[index];\r\n  }\r\n\r\n  sortBy(sortingCallback) {\r\n    return this.images.sort(sortingCallback);\r\n  }\r\n\r\n  sortByImagePositionPatient() {\r\n    const images = this.images;\r\n    const referenceImagePositionPatient = _getImagePositionPatient(images[0]);\r\n\r\n    const refIppVec = new Vector3(\r\n      referenceImagePositionPatient[0],\r\n      referenceImagePositionPatient[1],\r\n      referenceImagePositionPatient[2]\r\n    );\r\n\r\n    const ImageOrientationPatient = _getImageOrientationPatient(images[0]);\r\n\r\n    const scanAxisNormal = new Vector3(\r\n      ImageOrientationPatient[0],\r\n      ImageOrientationPatient[1],\r\n      ImageOrientationPatient[2]\r\n    ).cross(\r\n      new Vector3(\r\n        ImageOrientationPatient[3],\r\n        ImageOrientationPatient[4],\r\n        ImageOrientationPatient[5]\r\n      )\r\n    );\r\n\r\n    const distanceImagePairs = images.map(function(image) {\r\n      const ippVec = new Vector3(..._getImagePositionPatient(image));\r\n      const positionVector = refIppVec.clone().sub(ippVec);\r\n      const distance = positionVector.dot(scanAxisNormal);\r\n\r\n      return {\r\n        distance,\r\n        image,\r\n      };\r\n    });\r\n\r\n    distanceImagePairs.sort(function(a, b) {\r\n      return b.distance - a.distance;\r\n    });\r\n\r\n    const sortedImages = distanceImagePairs.map(a => a.image);\r\n\r\n    images.sort(function(a, b) {\r\n      return sortedImages.indexOf(a) - sortedImages.indexOf(b);\r\n    });\r\n  }\r\n}\r\n\r\nfunction _getImagePositionPatient(image) {\r\n  return image.getData().metadata.ImagePositionPatient;\r\n}\r\n\r\nfunction _getImageOrientationPatient(image) {\r\n  return image.getData().metadata.ImageOrientationPatient;\r\n}\r\n\r\nexport default ImageSet;\r\n","import getWADORSImageId from './getWADORSImageId';\r\n\r\n// https://stackoverflow.com/a/6021027/3895126\r\nfunction updateQueryStringParameter(uri, key, value) {\r\n  const regex = new RegExp('([?&])' + key + '=.*?(&|$)', 'i');\r\n  const separator = uri.indexOf('?') !== -1 ? '&' : '?';\r\n  if (uri.match(regex)) {\r\n    return uri.replace(regex, '$1' + key + '=' + value + '$2');\r\n  } else {\r\n    return uri + separator + key + '=' + value;\r\n  }\r\n}\r\n\r\n/**\r\n * Obtain an imageId for Cornerstone from an image instance\r\n *\r\n * @param instance\r\n * @param frame\r\n * @param thumbnail\r\n * @returns {string} The imageId to be used by Cornerstone\r\n */\r\nexport default function getImageId(instance, frame, thumbnail = false) {\r\n  if (!instance) {\r\n    return;\r\n  }\r\n\r\n  if (typeof instance.getImageId === 'function') {\r\n    return instance.getImageId();\r\n  }\r\n\r\n  if (instance.url) {\r\n    if (frame !== undefined) {\r\n      instance.url = updateQueryStringParameter(instance.url, 'frame', frame);\r\n    }\r\n\r\n    return instance.url;\r\n  }\r\n\r\n  const renderingAttr = thumbnail ? 'thumbnailRendering' : 'imageRendering';\r\n\r\n  if (\r\n    !instance[renderingAttr] ||\r\n    instance[renderingAttr] === 'wadouri' ||\r\n    !instance.wadorsuri\r\n  ) {\r\n    let imageId = 'dicomweb:' + instance.wadouri;\r\n    if (frame !== undefined) {\r\n      imageId += '&frame=' + frame;\r\n    }\r\n\r\n    return imageId;\r\n  } else {\r\n    return getWADORSImageId(instance, frame, thumbnail); // WADO-RS Retrieve Frame\r\n  }\r\n}\r\n","import OHIFError from './OHIFError';\r\n\r\n/**\r\n * Abstract class to fetch study metadata.\r\n */\r\nexport class StudyMetadataSource {\r\n  /**\r\n   * Get study metadata for a study with given study InstanceUID.\r\n   * @param {String} studyInstanceUID Study InstanceUID.\r\n   */\r\n  getByInstanceUID(studyInstanceUID) {\r\n    /**\r\n     * Please override this method on a specialized class.\r\n     */\r\n    throw new OHIFError(\r\n      'StudyMetadataSource::getByInstanceUID is not overriden. Please, override it in a specialized class. See OHIFStudyMetadataSource for example'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Load study info and study metadata for a given study into the viewer.\r\n   * @param {StudyMetadata} study StudyMetadata object.\r\n   */\r\n  loadStudy(study) {\r\n    /**\r\n     * Please override this method on a specialized class.\r\n     */\r\n    throw new OHIFError(\r\n      'StudyMetadataSource::loadStudy is not overriden. Please, override it in a specialized class. See OHIFStudyMetadataSource for example'\r\n    );\r\n  }\r\n}\r\n","const debugMode = !!(\r\n  process.env.NODE_ENV !== 'production' && process.env.REACT_APP_I18N_DEBUG\r\n);\r\n\r\nconst detectionOptions = {\r\n  // order and from where user language should be detected\r\n  order: ['querystring', 'cookie', 'localStorage', 'navigator', 'htmlTag', 'path', 'subdomain'],\r\n\r\n  // keys or params to lookup language from\r\n  lookupQuerystring: 'lng',\r\n  lookupCookie: 'i18next',\r\n  lookupLocalStorage: 'i18nextLng',\r\n  lookupFromPathIndex: 0,\r\n  lookupFromSubdomainIndex: 0,\r\n\r\n  // cache user language on\r\n  caches: ['localStorage', 'cookie'],\r\n  excludeCacheFor: ['cimode'], // languages to not persist (cookie, localStorage)\r\n\r\n  // optional htmlTag with lang attribute, the default is:\r\n  htmlTag: document.documentElement\r\n};\r\n\r\nexport { debugMode, detectionOptions };\r\n","import { debugMode } from './config';\r\n\r\nexport default (message, level = 'log') => {\r\n  if (debugMode) {\r\n    // eslint-disable-next-line\r\n    console[level]('@ohif/i18n: ', message);\r\n  }\r\n};\r\n","import de from './de/';\r\nimport en_US from './en-US/';\r\nimport es from './es/';\r\nimport fr from './fr/';\r\nimport ja_JP from './ja-JP/';\r\nimport nl from './nl/';\r\nimport pt_BR from './pt-BR/';\r\nimport ru from './ru/';\r\nimport vi from './vi/';\r\nimport zh from './zh/';\r\n\r\nexport default {\r\n  ...de,\r\n  ...en_US,\r\n  ...es,\r\n  ...fr,\r\n  ...ja_JP,\r\n  ...nl,\r\n  ...pt_BR,\r\n  ...ru,\r\n  ...vi,\r\n  ...zh,\r\n};\r\n","import AboutModal from './AboutModal.json';\r\nimport Buttons from './Buttons.json';\r\nimport CineDialog from './CineDialog.json';\r\nimport Common from './Common.json';\r\nimport DatePicker from './DatePicker.json';\r\nimport Header from './Header.json';\r\nimport MeasurementTable from './MeasurementTable.json';\r\nimport StudyList from './StudyList.json';\r\nimport UserPreferencesModal from './UserPreferencesModal.json';\r\nimport ViewportDownloadForm from './ViewportDownloadForm.json';\r\n\r\nexport default { \r\n  'de': {\r\n    AboutModal,\r\n    Buttons,\r\n    CineDialog,\r\n    Common,\r\n    DatePicker,\r\n    Header,\r\n    MeasurementTable,\r\n    StudyList,\r\n    UserPreferencesModal,\r\n    ViewportDownloadForm,\r\n  }\r\n};\r\n","import AboutModal from './AboutModal.json';\r\nimport Buttons from './Buttons.json';\r\nimport CineDialog from './CineDialog.json';\r\nimport Common from './Common.json';\r\nimport DatePicker from './DatePicker.json';\r\nimport Header from './Header.json';\r\nimport MeasurementTable from './MeasurementTable.json';\r\nimport StudyList from './StudyList.json';\r\nimport UserPreferencesModal from './UserPreferencesModal.json';\r\nimport ViewportDownloadForm from './ViewportDownloadForm.json';\r\n\r\nexport default { \r\n  'en-US': {\r\n    AboutModal,\r\n    Buttons,\r\n    CineDialog,\r\n    Common,\r\n    DatePicker,\r\n    Header,\r\n    MeasurementTable,\r\n    StudyList,\r\n    UserPreferencesModal,\r\n    ViewportDownloadForm,\r\n  }\r\n};\r\n","import AboutModal from './AboutModal.json';\r\nimport Buttons from './Buttons.json';\r\nimport CineDialog from './CineDialog.json';\r\nimport Common from './Common.json';\r\nimport DatePicker from './DatePicker.json';\r\nimport Header from './Header.json';\r\nimport MeasurementTable from './MeasurementTable.json';\r\nimport StudyList from './StudyList.json';\r\nimport UserPreferencesModal from './UserPreferencesModal.json';\r\nimport ViewportDownloadForm from './ViewportDownloadForm.json';\r\n\r\nexport default { \r\n  'es': {\r\n    AboutModal,\r\n    Buttons,\r\n    CineDialog,\r\n    Common,\r\n    DatePicker,\r\n    Header,\r\n    MeasurementTable,\r\n    StudyList,\r\n    UserPreferencesModal,\r\n    ViewportDownloadForm,\r\n  }\r\n};\r\n","import AboutModal from './AboutModal.json';\r\nimport Buttons from './Buttons.json';\r\nimport CineDialog from './CineDialog.json';\r\nimport Common from './Common.json';\r\nimport DatePicker from './DatePicker.json';\r\nimport Header from './Header.json';\r\nimport MeasurementTable from './MeasurementTable.json';\r\nimport StudyList from './StudyList.json';\r\nimport UserPreferencesModal from './UserPreferencesModal.json';\r\nimport ViewportDownloadForm from './ViewportDownloadForm.json';\r\n\r\nexport default { \r\n  'fr': {\r\n    AboutModal,\r\n    Buttons,\r\n    CineDialog,\r\n    Common,\r\n    DatePicker,\r\n    Header,\r\n    MeasurementTable,\r\n    StudyList,\r\n    UserPreferencesModal,\r\n    ViewportDownloadForm,\r\n  }\r\n};\r\n","import AboutModal from './AboutModal.json';\r\nimport Buttons from './Buttons.json';\r\nimport CineDialog from './CineDialog.json';\r\nimport Common from './Common.json';\r\nimport DatePicker from './DatePicker.json';\r\nimport Header from './Header.json';\r\nimport MeasurementTable from './MeasurementTable.json';\r\nimport StudyList from './StudyList.json';\r\nimport UserPreferencesModal from './UserPreferencesModal.json';\r\nimport ViewportDownloadForm from './ViewportDownloadForm.json';\r\n\r\nexport default { \r\n  'ja-JP': {\r\n    AboutModal,\r\n    Buttons,\r\n    CineDialog,\r\n    Common,\r\n    DatePicker,\r\n    Header,\r\n    MeasurementTable,\r\n    StudyList,\r\n    UserPreferencesModal,\r\n    ViewportDownloadForm,\r\n  }\r\n};\r\n","import AboutModal from './AboutModal.json';\r\nimport Buttons from './Buttons.json';\r\nimport CineDialog from './CineDialog.json';\r\nimport Common from './Common.json';\r\nimport DatePicker from './DatePicker.json';\r\nimport Header from './Header.json';\r\nimport MeasurementTable from './MeasurementTable.json';\r\nimport StudyList from './StudyList.json';\r\nimport UserPreferencesModal from './UserPreferencesModal.json';\r\nimport ViewportDownloadForm from './ViewportDownloadForm.json';\r\n\r\nexport default { \r\n  'nl': {\r\n    AboutModal,\r\n    Buttons,\r\n    CineDialog,\r\n    Common,\r\n    DatePicker,\r\n    Header,\r\n    MeasurementTable,\r\n    StudyList,\r\n    UserPreferencesModal,\r\n    ViewportDownloadForm,\r\n  }\r\n};\r\n","import AboutModal from './AboutModal.json';\r\nimport Buttons from './Buttons.json';\r\nimport CineDialog from './CineDialog.json';\r\nimport Common from './Common.json';\r\nimport DatePicker from './DatePicker.json';\r\nimport Header from './Header.json';\r\nimport MeasurementTable from './MeasurementTable.json';\r\nimport StudyList from './StudyList.json';\r\nimport UserPreferencesModal from './UserPreferencesModal.json';\r\nimport ViewportDownloadForm from './ViewportDownloadForm.json';\r\n\r\nexport default { \r\n  'pt-BR': {\r\n    AboutModal,\r\n    Buttons,\r\n    CineDialog,\r\n    Common,\r\n    DatePicker,\r\n    Header,\r\n    MeasurementTable,\r\n    StudyList,\r\n    UserPreferencesModal,\r\n    ViewportDownloadForm,\r\n  }\r\n};\r\n","import AboutModal from './AboutModal.json';\r\nimport Buttons from './Buttons.json';\r\nimport CineDialog from './CineDialog.json';\r\nimport Common from './Common.json';\r\nimport DatePicker from './DatePicker.json';\r\nimport Header from './Header.json';\r\nimport MeasurementTable from './MeasurementTable.json';\r\nimport StudyList from './StudyList.json';\r\nimport UserPreferencesModal from './UserPreferencesModal.json';\r\nimport ViewportDownloadForm from './ViewportDownloadForm.json';\r\n\r\nexport default { \r\n  'ru': {\r\n    AboutModal,\r\n    Buttons,\r\n    CineDialog,\r\n    Common,\r\n    DatePicker,\r\n    Header,\r\n    MeasurementTable,\r\n    StudyList,\r\n    UserPreferencesModal,\r\n    ViewportDownloadForm,\r\n  }\r\n};\r\n","import AboutModal from './AboutModal.json';\r\nimport Buttons from './Buttons.json';\r\nimport CineDialog from './CineDialog.json';\r\nimport Common from './Common.json';\r\nimport DatePicker from './DatePicker.json';\r\nimport Header from './Header.json';\r\nimport MeasurementTable from './MeasurementTable.json';\r\nimport StudyList from './StudyList.json';\r\nimport UserPreferencesModal from './UserPreferencesModal.json';\r\nimport ViewportDownloadForm from './ViewportDownloadForm.json';\r\n\r\nexport default { \r\n  'vi': {\r\n    AboutModal,\r\n    Buttons,\r\n    CineDialog,\r\n    Common,\r\n    DatePicker,\r\n    Header,\r\n    MeasurementTable,\r\n    StudyList,\r\n    UserPreferencesModal,\r\n    ViewportDownloadForm,\r\n  }\r\n};\r\n","import AboutModal from './AboutModal.json';\r\nimport Buttons from './Buttons.json';\r\nimport CineDialog from './CineDialog.json';\r\nimport Common from './Common.json';\r\nimport DatePicker from './DatePicker.json';\r\nimport Header from './Header.json';\r\nimport MeasurementTable from './MeasurementTable.json';\r\nimport StudyList from './StudyList.json';\r\nimport UserPreferencesModal from './UserPreferencesModal.json';\r\nimport ViewportDownloadForm from './ViewportDownloadForm.json';\r\n\r\nexport default { \r\n  'zh': {\r\n    AboutModal,\r\n    Buttons,\r\n    CineDialog,\r\n    Common,\r\n    DatePicker,\r\n    Header,\r\n    MeasurementTable,\r\n    StudyList,\r\n    UserPreferencesModal,\r\n    ViewportDownloadForm,\r\n  }\r\n};\r\n","const languagesMap = {\r\n  ar: 'Arabic',\r\n  am: 'Amharic',\r\n  bg: 'Bulgarian',\r\n  bn: 'Bengali',\r\n  ca: 'Catalan',\r\n  cs: 'Czech',\r\n  da: 'Danish',\r\n  de: 'German',\r\n  el: 'Greek',\r\n  en: 'English',\r\n  'en-GB': 'English (Great Britain)',\r\n  'en-US': 'English (USA)',\r\n  es: 'Spanish',\r\n  et: 'Estonian',\r\n  fa: 'Persian',\r\n  fi: 'Finnish',\r\n  fil: 'Filipino',\r\n  fr: 'French',\r\n  gu: 'Gujarati',\r\n  he: 'Hebrew',\r\n  hi: 'Hindi',\r\n  hr: 'Croatian',\r\n  hu: 'Hungarian',\r\n  id: 'Indonesian',\r\n  it: 'Italian',\r\n  ja: 'Japanese',\r\n  'ja-JP': 'Japanese (Japan)',\r\n  kn: 'Kannada',\r\n  ko: 'Korean',\r\n  lt: 'Lithuanian',\r\n  lv: 'Latvian',\r\n  ml: 'Malayalam',\r\n  mr: 'Marathi',\r\n  ms: 'Malay',\r\n  nl: 'Dutch',\r\n  no: 'Norwegian',\r\n  pl: 'Polish',\r\n  'pt-BR': 'Portuguese (Brazil)',\r\n  'pt-PT': 'Portuguese (Portugal)',\r\n  ro: 'Romanian',\r\n  ru: 'Russian',\r\n  sk: 'Slovak',\r\n  sl: 'Slovenian',\r\n  sr: 'Serbian',\r\n  sv: 'Swedish',\r\n  sw: 'Swahili',\r\n  ta: 'Tamil',\r\n  te: 'Telugu',\r\n  th: 'Thai',\r\n  tr: 'Turkish',\r\n  uk: 'Ukrainian',\r\n  vi: 'Vietnamese',\r\n  zh: 'Chinese',\r\n  'zh-CN': 'Chinese (China)',\r\n  'zh-TW': 'Chinese (Taiwan)',\r\n};\r\n\r\nexport default function getAvailableLanguagesInfo(locales) {\r\n  const availableLanguagesInfo = [];\r\n\r\n  Object.keys(locales).forEach(key => {\r\n    availableLanguagesInfo.push({\r\n      value: key,\r\n      label: languagesMap[key] || key,\r\n    });\r\n  });\r\n\r\n  return availableLanguagesInfo;\r\n}\r\n","import i18n from 'i18next';\r\nimport Backend from 'i18next-locize-backend';\r\nimport LastUsed from 'locize-lastused';\r\nimport Editor from 'locize-editor';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport customDebug from './debugger';\r\nimport pkg from '../package.json';\r\nimport { debugMode, detectionOptions } from './config';\r\n\r\n// Note: The index.js files inside src/locales are dynamically generated\r\n// by the pullTranslations.sh script\r\nimport locales from './locales';\r\n\r\nfunction addLocales(newLocales) {\r\n  customDebug(`Adding locales ${newLocales}`, 'info');\r\n\r\n  let resourceBundle = [];\r\n\r\n  Object.keys(newLocales).map(key => {\r\n    Object.keys(newLocales[key]).map(namespace => {\r\n      const locale = newLocales[key][namespace];\r\n      resourceBundle.push({ key, namespace, locale });\r\n      i18n.addResourceBundle(key, namespace, locale, true, true);\r\n    });\r\n  });\r\n\r\n  customDebug(`Locales added successfully`, 'info');\r\n  customDebug(resourceBundle, 'info');\r\n}\r\n\r\n/*\r\n * Note: Developers can add the API key to use the\r\n * in-context editor using environment variables.\r\n * (DO NOT commit the API key)\r\n */\r\nconst locizeOptions = {\r\n  projectId: process.env.LOCIZE_PROJECTID,\r\n  apiKey: process.env.LOCIZE_API_KEY,\r\n  referenceLng: 'en-US',\r\n  fallbacklng: 'en-US',\r\n};\r\n\r\nconst envUseLocize = !!process.env.USE_LOCIZE;\r\nconst envApiKeyAvailable = !!process.env.LOCIZE_API_KEY;\r\nconst DEFAULT_LANGUAGE = 'en-US';\r\n\r\nfunction initI18n(\r\n  detection = detectionOptions,\r\n  useLocize = envUseLocize,\r\n  apiKeyAvailable = envApiKeyAvailable\r\n) {\r\n  let initialized;\r\n\r\n  if (useLocize) {\r\n    customDebug(`Using Locize for translation files`, 'info');\r\n    initialized = i18n\r\n      // i18next-locize-backend\r\n      // loads translations from your project, saves new keys to it (saveMissing: true)\r\n      // https://github.com/locize/i18next-locize-backend\r\n      .use(Backend)\r\n      // locize-lastused\r\n      // sets a timestamp of last access on every translation segment on locize\r\n      // -> safely remove the ones not being touched for weeks/months\r\n      // https://github.com/locize/locize-lastused\r\n      .use(LastUsed)\r\n      // locize-editor\r\n      // InContext Editor of locize ?locize=true to show it\r\n      // https://github.com/locize/locize-editor\r\n      .use(Editor)\r\n      // detect user language\r\n      // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n      .use(LanguageDetector)\r\n      // pass the i18n instance to react-i18next.\r\n      .use(initReactI18next)\r\n      // init i18next\r\n      // for all options read: https://www.i18next.com/overview/configuration-options\r\n      .init({\r\n        fallbackLng: DEFAULT_LANGUAGE,\r\n        saveMissing: apiKeyAvailable,\r\n        debug: debugMode,\r\n        keySeparator: false,\r\n        interpolation: {\r\n          escapeValue: false, // not needed for react as it escapes by default\r\n        },\r\n        detection,\r\n        backend: locizeOptions,\r\n        locizeLastUsed: locizeOptions,\r\n        editor: {\r\n          ...locizeOptions,\r\n          onEditorSaved: async (lng, ns) => {\r\n            // reload that namespace in given language\r\n            await i18n.reloadResources(lng, ns);\r\n            // trigger an event on i18n which triggers a rerender\r\n            // based on bindI18n below in react options\r\n            i18n.emit('editorSaved');\r\n          },\r\n        },\r\n        react: {\r\n          useSuspense: false, // TODO: Was seeing weird errors without this\r\n          wait: true,\r\n          bindI18n: 'languageChanged editorSaved',\r\n        },\r\n      });\r\n  } else {\r\n    customDebug(`Using local translation files`, 'info');\r\n    initialized = i18n\r\n      // detect user language\r\n      // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n      .use(LanguageDetector)\r\n      // pass the i18n instance to react-i18next.\r\n      .use(initReactI18next)\r\n      // init i18next\r\n      // for all options read: https://www.i18next.com/overview/configuration-options\r\n      .init({\r\n        fallbackLng: DEFAULT_LANGUAGE,\r\n        resources: locales,\r\n        debug: debugMode,\r\n        keySeparator: false,\r\n        interpolation: {\r\n          escapeValue: false, // not needed for react as it escapes by default\r\n        },\r\n        detection,\r\n        react: {\r\n          wait: true,\r\n        },\r\n      });\r\n  }\r\n\r\n  return initialized.then(function(t) {\r\n    i18n.T = t;\r\n    customDebug(`T function available.`, 'info');\r\n  });\r\n}\r\n\r\ncustomDebug(`version ${pkg.version} loaded.`, 'info');\r\n\r\ni18n.initializing = initI18n();\r\ni18n.initI18n = initI18n;\r\ni18n.addLocales = addLocales;\r\ni18n.defaultLanguage = DEFAULT_LANGUAGE;\r\n\r\nimport getAvailableLanguagesInfo from './getAvailableLanguagesInfo.js';\r\ni18n.availableLanguages = getAvailableLanguagesInfo(locales);\r\n\r\nexport default i18n;\r\n","import RetrieveMetadata from './services/wado/retrieveMetadata.js';\r\n\r\nconst moduleName = 'RetrieveStudyMetadata';\r\n// Cache for promises. Prevents unnecessary subsequent calls to the server\r\nconst StudyMetaDataPromises = new Map();\r\n\r\n/**\r\n * Retrieves study metadata\r\n *\r\n * @param {Object} server Object with server configuration parameters\r\n * @param {string} StudyInstanceUID The UID of the Study to be retrieved\r\n * @param {Object} [filters] - Object containing filters to be applied on retrieve metadata process\r\n * @param {string} [filter.seriesInstanceUID] - series instance uid to filter results against\r\n * @param {boolean} [separateSeriesInstanceUIDFilters = false] - If true, split filtered metadata calls into multiple calls,\r\n * as some DICOMWeb implementations only support single filters.\r\n * @returns {Promise} that will be resolved with the metadata or rejected with the error\r\n */\r\nexport function retrieveStudyMetadata(\r\n  server,\r\n  StudyInstanceUID,\r\n  filters,\r\n  separateSeriesInstanceUIDFilters = false\r\n) {\r\n  // @TODO: Whenever a study metadata request has failed, its related promise will be rejected once and for all\r\n  // and further requests for that metadata will always fail. On failure, we probably need to remove the\r\n  // corresponding promise from the \"StudyMetaDataPromises\" map...\r\n\r\n  if (!server) {\r\n    throw new Error(`${moduleName}: Required 'server' parameter not provided.`);\r\n  }\r\n  if (!StudyInstanceUID) {\r\n    throw new Error(\r\n      `${moduleName}: Required 'StudyInstanceUID' parameter not provided.`\r\n    );\r\n  }\r\n\r\n  // Already waiting on result? Return cached promise\r\n  if (StudyMetaDataPromises.has(StudyInstanceUID)) {\r\n    return StudyMetaDataPromises.get(StudyInstanceUID);\r\n  }\r\n\r\n  // Create a promise to handle the data retrieval\r\n  let promise;\r\n\r\n  if (\r\n    filters &&\r\n    filters.seriesInstanceUID &&\r\n    separateSeriesInstanceUIDFilters\r\n  ) {\r\n    promise = __separateSeriesRequestToAggregatePromiseateSeriesRequestToAggregatePromise(\r\n      server,\r\n      StudyInstanceUID,\r\n      filters\r\n    );\r\n  } else {\r\n    promise = RetrieveMetadata(server, StudyInstanceUID, filters);\r\n\r\n    /*\r\n    promise = new Promise((resolve, reject) => {\r\n      RetrieveMetadata(server, StudyInstanceUID, filters).then(function(data) {\r\n        resolve(data);\r\n      }, reject);\r\n    });\r\n    */\r\n  }\r\n\r\n  // Store the promise in cache\r\n  StudyMetaDataPromises.set(StudyInstanceUID, promise);\r\n\r\n  return promise;\r\n}\r\n\r\n/**\r\n * Splits up seriesInstanceUID filters to multiple calls for platforms\r\n * @param {Object} server Object with server configuration parameters\r\n * @param {string} StudyInstanceUID The UID of the Study to be retrieved\r\n * @param {Object} filters - Object containing filters to be applied on retrieve metadata process\r\n */\r\nfunction __separateSeriesRequestToAggregatePromiseateSeriesRequestToAggregatePromise(\r\n  server,\r\n  StudyInstanceUID,\r\n  filters\r\n) {\r\n  const { seriesInstanceUID } = filters;\r\n  const seriesInstanceUIDs = seriesInstanceUID.split(',');\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const promises = [];\r\n\r\n    seriesInstanceUIDs.forEach(uid => {\r\n      const seriesSpecificFilters = Object.assign({}, filters, {\r\n        seriesInstanceUID: uid,\r\n      });\r\n\r\n      promises.push(\r\n        RetrieveMetadata(server, StudyInstanceUID, seriesSpecificFilters)\r\n      );\r\n    });\r\n\r\n    Promise.all(promises).then(results => {\r\n      const data = results[0];\r\n\r\n      let series = [];\r\n\r\n      results.forEach(result => {\r\n        series = [...series, ...result.series];\r\n      });\r\n\r\n      data.series = series;\r\n\r\n      resolve(data);\r\n    }, reject);\r\n  });\r\n}\r\n\r\n/**\r\n * Delete the cached study metadata retrieval promise to ensure that the browser will\r\n * re-retrieve the study metadata when it is next requested\r\n *\r\n * @param {String} StudyInstanceUID The UID of the Study to be removed from cache\r\n *\r\n */\r\nexport function deleteStudyMetadataPromise(StudyInstanceUID) {\r\n  if (StudyMetaDataPromises.has(StudyInstanceUID)) {\r\n    StudyMetaDataPromises.delete(StudyInstanceUID);\r\n  }\r\n}\r\n","/**\r\n * Convert String to ArrayBuffer\r\n *\r\n * @param {String} str Input String\r\n * @return {ArrayBuffer} Output converted ArrayBuffer\r\n */\r\nexport default function str2ab(str) {\r\n  const strLen = str.length;\r\n  const bytes = new Uint8Array(strLen);\r\n\r\n  for (let i = 0; i < strLen; i++) {\r\n    bytes[i] = str.charCodeAt(i);\r\n  }\r\n\r\n  return bytes.buffer;\r\n}\r\n","export class ObjectPath {\r\n  /**\r\n   * Set an object property based on \"path\" (namespace) supplied creating\r\n   * ... intermediary objects if they do not exist.\r\n   * @param object {Object} An object where the properties specified on path should be set.\r\n   * @param path {String} A string representing the property to be set, e.g. \"user.study.series.timepoint\".\r\n   * @param value {Any} The value of the property that will be set.\r\n   * @return {Boolean} Returns \"true\" on success, \"false\" if any intermediate component of the supplied path\r\n   * ... is not a valid Object, in which case the property cannot be set. No excpetions are thrown.\r\n   */\r\n  static set(object, path, value) {\r\n    let components = ObjectPath.getPathComponents(path),\r\n      length = components !== null ? components.length : 0,\r\n      result = false;\r\n\r\n    if (length > 0 && ObjectPath.isValidObject(object)) {\r\n      let i = 0,\r\n        last = length - 1,\r\n        currentObject = object;\r\n\r\n      while (i < last) {\r\n        let field = components[i];\r\n\r\n        if (field in currentObject) {\r\n          if (!ObjectPath.isValidObject(currentObject[field])) {\r\n            break;\r\n          }\r\n        } else {\r\n          currentObject[field] = {};\r\n        }\r\n\r\n        currentObject = currentObject[field];\r\n        i++;\r\n      }\r\n\r\n      if (i === last) {\r\n        currentObject[components[last]] = value;\r\n        result = true;\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Get an object property based on \"path\" (namespace) supplied traversing the object\r\n   * ... tree as necessary.\r\n   * @param object {Object} An object where the properties specified might exist.\r\n   * @param path {String} A string representing the property to be searched for, e.g. \"user.study.series.timepoint\".\r\n   * @return {Any} The value of the property if found. By default, returns the special type \"undefined\".\r\n   */\r\n  static get(object, path) {\r\n    let found, // undefined by default\r\n      components = ObjectPath.getPathComponents(path),\r\n      length = components !== null ? components.length : 0;\r\n\r\n    if (length > 0 && ObjectPath.isValidObject(object)) {\r\n      let i = 0,\r\n        last = length - 1,\r\n        currentObject = object;\r\n\r\n      while (i < last) {\r\n        let field = components[i];\r\n\r\n        const isValid = ObjectPath.isValidObject(currentObject[field]);\r\n        if (field in currentObject && isValid) {\r\n          currentObject = currentObject[field];\r\n          i++;\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (i === last && components[last] in currentObject) {\r\n        found = currentObject[components[last]];\r\n      }\r\n    }\r\n\r\n    return found;\r\n  }\r\n\r\n  /**\r\n   * Check if the supplied argument is a real JavaScript Object instance.\r\n   * @param object {Any} The subject to be tested.\r\n   * @return {Boolean} Returns \"true\" if the object is a real Object instance and \"false\" otherwise.\r\n   */\r\n  static isValidObject(object) {\r\n    return (\r\n      typeof object === 'object' && object !== null && object instanceof Object\r\n    );\r\n  }\r\n\r\n  static getPathComponents(path) {\r\n    return typeof path === 'string' ? path.split('.') : null;\r\n  }\r\n}\r\n\r\nexport default ObjectPath;\r\n","const absoluteUrl = path => {\r\n  let absolutePath = '/';\r\n\r\n  if (!path) return absolutePath;\r\n\r\n  // TODO: Find another way to get root url\r\n  const absoluteUrl = window.location.origin;\r\n  const absoluteUrlParts = absoluteUrl.split('/');\r\n\r\n  if (absoluteUrlParts.length > 4) {\r\n    const rootUrlPrefixIndex = absoluteUrl.indexOf(absoluteUrlParts[3]);\r\n    absolutePath += absoluteUrl.substring(rootUrlPrefixIndex) + path;\r\n  } else {\r\n    absolutePath += path;\r\n  }\r\n\r\n  return absolutePath.replace(/\\/\\/+/g, '/');\r\n};\r\n\r\nexport default absoluteUrl;\r\n","// TODO: figure out where else to put this function\r\nconst addServers = (servers, store) => {\r\n  if (!servers || !store) {\r\n    throw new Error('The servers and store must be defined');\r\n  }\r\n\r\n  Object.keys(servers).forEach(serverType => {\r\n    const endpoints = servers[serverType];\r\n    endpoints.forEach(endpoint => {\r\n      const server = Object.assign({}, endpoint);\r\n      server.type = serverType;\r\n\r\n      store.dispatch({\r\n        type: 'ADD_SERVER',\r\n        server,\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\nexport default addServers;\r\n","import cornerstone from 'cornerstone-core';\r\nimport cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\r\nimport { api } from 'dicomweb-client';\r\nimport DICOMWeb from '../DICOMWeb';\r\n\r\nimport errorHandler from '../errorHandler';\r\nimport getXHRRetryRequestHook from './xhrRetryRequestHook';\r\n\r\nconst getImageId = imageObj => {\r\n  if (!imageObj) {\r\n    return;\r\n  }\r\n\r\n  return typeof imageObj.getImageId === 'function'\r\n    ? imageObj.getImageId()\r\n    : imageObj.url;\r\n};\r\n\r\nconst findImageIdOnStudies = (studies, displaySetInstanceUID) => {\r\n  const study = studies.find(study => {\r\n    const displaySet = study.displaySets.some(\r\n      displaySet => displaySet.displaySetInstanceUID === displaySetInstanceUID\r\n    );\r\n    return displaySet;\r\n  });\r\n  const { series = [] } = study;\r\n  const { instances = [] } = series[0] || {};\r\n  const instance = instances[0];\r\n\r\n  return getImageId(instance);\r\n};\r\n\r\nconst someInvalidStrings = strings => {\r\n  const stringsArray = Array.isArray(strings) ? strings : [strings];\r\n  const emptyString = string => !string;\r\n  let invalid = stringsArray.some(emptyString);\r\n  return invalid;\r\n};\r\n\r\nconst getImageInstance = dataset => {\r\n  return dataset && dataset.images && dataset.images[0];\r\n};\r\n\r\nconst getImageInstanceId = imageInstance => {\r\n  return getImageId(imageInstance);\r\n};\r\n\r\nconst fetchIt = (url, headers = DICOMWeb.getAuthorizationHeader()) => {\r\n  return fetch(url, headers).then(response => response.arrayBuffer());\r\n};\r\n\r\nconst cornerstoneRetriever = imageId => {\r\n  return cornerstone.loadAndCacheImage(imageId).then(image => {\r\n    return image && image.data && image.data.byteArray.buffer;\r\n  });\r\n};\r\n\r\nconst wadorsRetriever = (\r\n  url,\r\n  studyInstanceUID,\r\n  seriesInstanceUID,\r\n  sopInstanceUID,\r\n  headers = DICOMWeb.getAuthorizationHeader(),\r\n  errorInterceptor = errorHandler.getHTTPErrorHandler()\r\n) => {\r\n  const config = {\r\n    url,\r\n    headers,\r\n    errorInterceptor,\r\n    requestHooks: [getXHRRetryRequestHook()],\r\n  };\r\n  const dicomWeb = new api.DICOMwebClient(config);\r\n\r\n  return dicomWeb.retrieveInstance({\r\n    studyInstanceUID,\r\n    seriesInstanceUID,\r\n    sopInstanceUID,\r\n  });\r\n};\r\n\r\nconst getImageLoaderType = imageId => {\r\n  const loaderRegExp = /^\\w+\\:/;\r\n  const loaderType = loaderRegExp.exec(imageId);\r\n\r\n  return (\r\n    (loaderRegExp.lastIndex === 0 &&\r\n      loaderType &&\r\n      loaderType[0] &&\r\n      loaderType[0].replace(':', '')) ||\r\n    ''\r\n  );\r\n};\r\n\r\nclass DicomLoaderService {\r\n  getLocalData(dataset, studies) {\r\n    if (dataset && dataset.localFile) {\r\n      // Use referenced imageInstance\r\n      const imageInstance = getImageInstance(dataset);\r\n      let imageId = getImageInstanceId(imageInstance);\r\n\r\n      // or Try to get it from studies\r\n      if (someInvalidStrings(imageId)) {\r\n        imageId = findImageIdOnStudies(studies, dataset.displaySetInstanceUID);\r\n      }\r\n\r\n      if (!someInvalidStrings(imageId)) {\r\n        return cornerstoneWADOImageLoader.wadouri.loadFileRequest(imageId);\r\n      }\r\n    }\r\n  }\r\n\r\n  getDataByImageType(dataset) {\r\n    const imageInstance = getImageInstance(dataset);\r\n\r\n    if (imageInstance) {\r\n      const imageId = getImageInstanceId(imageInstance);\r\n      let getDicomDataMethod = fetchIt;\r\n      const loaderType = getImageLoaderType(imageId);\r\n\r\n      switch (loaderType) {\r\n        case 'dicomfile':\r\n          getDicomDataMethod = cornerstoneRetriever.bind(this, imageId);\r\n          break;\r\n        case 'wadors':\r\n          const url = imageInstance.getData().wadoRoot;\r\n          const studyInstanceUID = imageInstance.getStudyInstanceUID();\r\n          const seriesInstanceUID = imageInstance.getSeriesInstanceUID();\r\n          const sopInstanceUID = imageInstance.getSOPInstanceUID();\r\n          const invalidParams = someInvalidStrings([\r\n            url,\r\n            studyInstanceUID,\r\n            seriesInstanceUID,\r\n            sopInstanceUID,\r\n          ]);\r\n          if (invalidParams) {\r\n            return;\r\n          }\r\n\r\n          getDicomDataMethod = wadorsRetriever.bind(\r\n            this,\r\n            url,\r\n            studyInstanceUID,\r\n            seriesInstanceUID,\r\n            sopInstanceUID\r\n          );\r\n          break;\r\n        case 'wadouri':\r\n          // Strip out the image loader specifier\r\n          imageId = imageId.substring(imageId.indexOf(':') + 1);\r\n\r\n          if (someInvalidStrings(imageId)) {\r\n            return;\r\n          }\r\n          getDicomDataMethod = fetchIt.bind(this, imageId);\r\n          break;\r\n      }\r\n\r\n      return getDicomDataMethod();\r\n    }\r\n  }\r\n\r\n  getDataByDatasetType(dataset) {\r\n    const {\r\n      StudyInstanceUID,\r\n      SeriesInstanceUID,\r\n      SOPInstanceUID,\r\n      authorizationHeaders,\r\n      wadoRoot,\r\n      wadoUri,\r\n    } = dataset;\r\n    // Retrieve wadors or just try to fetch wadouri\r\n    if (!someInvalidStrings(wadoRoot)) {\r\n      return wadorsRetriever(\r\n        wadoRoot,\r\n        StudyInstanceUID,\r\n        SeriesInstanceUID,\r\n        SOPInstanceUID,\r\n        authorizationHeaders\r\n      );\r\n    } else if (!someInvalidStrings(wadoUri)) {\r\n      return fetchIt(wadoUri, { headers: authorizationHeaders });\r\n    }\r\n  }\r\n\r\n  *getLoaderIterator(dataset, studies) {\r\n    yield this.getLocalData(dataset, studies);\r\n    yield this.getDataByImageType(dataset);\r\n    yield this.getDataByDatasetType(dataset);\r\n  }\r\n\r\n  findDicomDataPromise(dataset, studies) {\r\n    const loaderIterator = this.getLoaderIterator(dataset, studies);\r\n    // it returns first valid retriever method.\r\n    for (const loader of loaderIterator) {\r\n      if (loader) {\r\n        return loader;\r\n      }\r\n    }\r\n\r\n    // in case of no valid loader\r\n    throw new Error('Invalid dicom data loader');\r\n  }\r\n}\r\n\r\nconst dicomLoaderService = new DicomLoaderService();\r\n\r\nexport default dicomLoaderService;\r\n","/* Enabled JPEG images downloading on IE11. */\r\nconst b64toBlob = (b64Data, contentType = '', sliceSize = 512) => {\r\n  const byteCharacters = atob(b64Data);\r\n  const byteArrays = [];\r\n\r\n  for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\r\n    const slice = byteCharacters.slice(offset, offset + sliceSize);\r\n\r\n    const byteNumbers = new Array(slice.length);\r\n    for (let i = 0; i < slice.length; i++) {\r\n      byteNumbers[i] = slice.charCodeAt(i);\r\n    }\r\n\r\n    const byteArray = new Uint8Array(byteNumbers);\r\n    byteArrays.push(byteArray);\r\n  }\r\n\r\n  const blob = new Blob(byteArrays, { type: contentType });\r\n  return blob;\r\n};\r\n\r\nexport default b64toBlob;\r\n","import studyMetadataManager from './studyMetadataManager';\r\n\r\n/**\r\n * Study schema\r\n *\r\n * @typedef {Object} Study\r\n * @property {Array} seriesList -\r\n * @property {Object} seriesMap -\r\n * @property {Object} seriesLoader -\r\n * @property {string} wadoUriRoot -\r\n * @property {string} wadoRoot -\r\n * @property {string} qidoRoot -\r\n * @property {string} patientName -\r\n * @property {string} patientId -\r\n * @property {number} patientAge -\r\n * @property {number} patientSize -\r\n * @property {number} patientWeight -\r\n * @property {string} accessionNumber -\r\n * @property {string} studyDate -\r\n * @property {string} studyTime -\r\n * @property {string} modalities -\r\n * @property {string} studyDescription -\r\n * @property {string} imageCount -\r\n * @property {string} studyInstanceUid -\r\n * @property {string} institutionName -\r\n * @property {Array} displaySets -\r\n */\r\n\r\n/**\r\n * Factory function to load and cache derived display sets.\r\n *\r\n * @param {object} referencedDisplaySet Display set\r\n * @param {string} referencedDisplaySet.displaySetInstanceUid Display set instance uid\r\n * @param {string} referencedDisplaySet.seriesDate\r\n * @param {string} referencedDisplaySet.seriesTime\r\n * @param {string} referencedDisplaySet.seriesInstanceUid\r\n * @param {string} referencedDisplaySet.seriesNumber\r\n * @param {string} referencedDisplaySet.seriesDescription\r\n * @param {number} referencedDisplaySet.numImageFrames\r\n * @param {string} referencedDisplaySet.frameRate\r\n * @param {string} referencedDisplaySet.modality\r\n * @param {boolean} referencedDisplaySet.isMultiFrame\r\n * @param {number} referencedDisplaySet.instanceNumber\r\n * @param {boolean} referencedDisplaySet.isReconstructable\r\n * @param {string} referencedDisplaySet.studyInstanceUid\r\n * @param {Array} referencedDisplaySet.sopClassUids\r\n * @param {Study[]} studies Collection of studies\r\n * @param {object} logger\r\n * @param {object} snackbar\r\n * @returns void\r\n */\r\nasync function loadAndCacheDerivedDisplaySets(referencedDisplaySet, studies, logger, snackbar) {\r\n  const { StudyInstanceUID, SeriesInstanceUID } = referencedDisplaySet;\r\n  const promises = [];\r\n  const studyMetadata = studyMetadataManager.get(StudyInstanceUID);\r\n\r\n  if (!studyMetadata) {\r\n    return promises;\r\n  }\r\n\r\n  const derivedDisplaySets = studyMetadata.getDerivedDatasets({\r\n    referencedSeriesInstanceUID: SeriesInstanceUID,\r\n  });\r\n\r\n  if (!derivedDisplaySets.length) {\r\n    return promises;\r\n  }\r\n\r\n  // Filter by type\r\n  const displaySetsPerModality = {};\r\n\r\n  derivedDisplaySets.forEach(displaySet => {\r\n    const Modality = displaySet.Modality;\r\n\r\n    if (displaySetsPerModality[Modality] === undefined) {\r\n      displaySetsPerModality[Modality] = [];\r\n    }\r\n\r\n    displaySetsPerModality[Modality].push(displaySet);\r\n  });\r\n\r\n  // For each type, see if any are loaded, if not load the most recent.\r\n  await Promise.all(Object.keys(displaySetsPerModality).map(async (key) => {\r\n    const displaySets = displaySetsPerModality[key];\r\n\r\n    const isLoaded = displaySets.some(displaySet => displaySet.isLoaded);\r\n    if (isLoaded) {\r\n      return;\r\n    }\r\n\r\n    if (displaySets.some(displaySet => displaySet.loadError)) {\r\n      return;\r\n    }\r\n\r\n    // find most recent and load it.\r\n    let recentDateTime = 0;\r\n    let recentDisplaySet = displaySets[0];\r\n\r\n    displaySets.forEach(displaySet => {\r\n      const dateTime = Number(\r\n        `${displaySet.SeriesDate}${displaySet.SeriesTime}`\r\n      );\r\n      if (dateTime > recentDateTime) {\r\n        recentDateTime = dateTime;\r\n        recentDisplaySet = displaySet;\r\n      }\r\n    });\r\n\r\n    try {\r\n      if (recentDisplaySet.hasOwnProperty('getSourceDisplaySet') &&\r\n        typeof recentDisplaySet.getSourceDisplaySet === 'function') {\r\n        await recentDisplaySet.getSourceDisplaySet(studies);\r\n      } else {\r\n        await recentDisplaySet.load(referencedDisplaySet, studies);\r\n      }\r\n    } catch (error) {\r\n      recentDisplaySet.isLoaded = false;\r\n      recentDisplaySet.loadError = true;\r\n      logger.error({ error, message: error.message });\r\n      snackbar.show({\r\n        title: 'Error loading derived display set:',\r\n        message: error.message,\r\n        type: 'error',\r\n        error,\r\n        autoClose: false,\r\n      });\r\n    }\r\n  }));\r\n\r\n  /*\r\n  * TODO: Improve the way we notify parts of the app\r\n  * that depends on derived display sets to be loaded.\r\n  * (Implement pubsub for better tracking of derived display sets)\r\n  */\r\n  const event = new CustomEvent('deriveddisplaysetsloadedandcached');\r\n  document.dispatchEvent(event);\r\n};\r\n\r\nexport default loadAndCacheDerivedDisplaySets;\r\n","import lib from 'query-string';\r\n\r\nconst PARAM_SEPARATOR = ';';\r\nconst PARAM_PATTERN_IDENTIFIER = ':';\r\n\r\nfunction toLowerCaseFirstLetter(word) {\r\n  return word[0].toLowerCase() + word.slice(1);\r\n}\r\nconst getQueryFilters = (location = {}) => {\r\n  const { search } = location;\r\n\r\n  if (!search) {\r\n    return;\r\n  }\r\n\r\n  const searchParameters = parse(search);\r\n  const filters = {};\r\n\r\n  Object.entries(searchParameters).forEach(([key, value]) => {\r\n    filters[toLowerCaseFirstLetter(key)] = value;\r\n  });\r\n\r\n  return filters;\r\n};\r\n\r\nconst decode = (strToDecode = '') => {\r\n  try {\r\n    const decoded = window.atob(strToDecode);\r\n    return decoded;\r\n  } catch (e) {\r\n    return strToDecode;\r\n  }\r\n};\r\n\r\nconst parse = toParse => {\r\n  if (toParse) {\r\n    return lib.parse(toParse);\r\n  }\r\n\r\n  return {};\r\n};\r\nconst parseParam = paramStr => {\r\n  const _paramDecoded = decode(paramStr);\r\n  if (_paramDecoded && typeof _paramDecoded === 'string') {\r\n    return _paramDecoded.split(PARAM_SEPARATOR);\r\n  }\r\n};\r\n\r\nconst replaceParam = (path = '', paramKey, paramValue) => {\r\n  const paramPattern = `${PARAM_PATTERN_IDENTIFIER}${paramKey}`;\r\n  if (paramValue) {\r\n    return path.replace(paramPattern, paramValue);\r\n  }\r\n\r\n  return path;\r\n};\r\n\r\nconst isValidPath = path => {\r\n  const paramPatternPiece = `/${PARAM_PATTERN_IDENTIFIER}`;\r\n  return path.indexOf(paramPatternPiece) < 0;\r\n};\r\n\r\nconst queryString = {\r\n  getQueryFilters,\r\n};\r\n\r\nconst paramString = {\r\n  isValidPath,\r\n  parseParam,\r\n  replaceParam,\r\n};\r\n\r\nexport { parse, queryString, paramString };\r\n","export default function makeDeferred() {\r\n  let reject, resolve, promise = new Promise(function (res, rej) {\r\n    resolve = res;\r\n    reject = rej;\r\n  });\r\n  return Object.freeze({ promise, resolve, reject });\r\n}\r\n","\r\nexport default class Queue {\r\n\r\n  constructor(limit) {\r\n    this.limit = limit;\r\n    this.size = 0;\r\n    this.awaiting = null;\r\n  }\r\n\r\n  /**\r\n   * Creates a new \"proxy\" function associated with the current execution queue\r\n   * instance. When the returned function is invoked, the queue limit is checked\r\n   * to make sure the limit of scheduled tasks is repected (throwing an\r\n   * exception when the limit has been reached and before calling the original\r\n   * function). The original function is only invoked after all the previously\r\n   * scheduled tasks have finished executing (their returned promises have\r\n   * resolved/rejected);\r\n   *\r\n   * @param {function} task The function whose execution will be associated\r\n   * with the current Queue instance;\r\n   * @returns {function} The \"proxy\" function bound to the current Queue\r\n   * instance;\r\n   */\r\n  bind(task) {\r\n    return bind(this, task);\r\n  }\r\n\r\n  bindSafe(task, onError) {\r\n    const boundTask = bind(this, task);\r\n    return async function safeTask(...args) {\r\n      try {\r\n        return await boundTask(...args);\r\n      } catch (e) {\r\n        onError(e);\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Utils\r\n */\r\n\r\nfunction bind(queue, task) {\r\n  const cleaner = clean.bind(null, queue);\r\n  return async function boundTask(...args) {\r\n    if (queue.size >= queue.limit) {\r\n      throw new Error('Queue limit reached');\r\n    }\r\n    const promise = chain(queue.awaiting, task, args);\r\n    queue.awaiting = promise.then(cleaner, cleaner);\r\n    queue.size++;\r\n    return promise;\r\n  };\r\n}\r\n\r\nfunction clean(queue) {\r\n  if (queue.size > 0 && --queue.size === 0) {\r\n    queue.awaiting = null;\r\n  }\r\n}\r\n\r\nasync function chain(prev, task, args) {\r\n  await prev;\r\n  return task(...args);\r\n}\r\n","/**\r\n * Constants\r\n */\r\n\r\nconst SEPARATOR = '/';\r\n\r\n/**\r\n * API\r\n */\r\n\r\n/**\r\n * Add values to a list hierarchically.\r\n *  @ For example:\r\n *    addToList([], 'a', 'b', 'c');\r\n *  will add the following hierarchy to the list:\r\n *    a > b > c\r\n *  resulting in the following array:\r\n *    [['a', [['b', ['c']]]]]\r\n * @param {Array} list The target list;\r\n * @param  {...string} values The values to be hierarchically added to the list;\r\n * @returns {Array} Returns the provided list possibly updated with the given\r\n *  values or null when a bad list (not an actual array) is provided\r\n */\r\nfunction addToList(list, ...values) {\r\n  if (Array.isArray(list)) {\r\n    if (values.length > 0) {\r\n      addValuesToList(list, values);\r\n    }\r\n    return list;\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * Iterates through the provided hierarchical list executing the callback\r\n * once for each leaf-node of the tree. The ancestors of the leaf-node being\r\n * visited are passed to the callback function along with the leaf-node in\r\n * the exact same order they appear on the tree (from root to leaf);\r\n *  @ For example, if the hierachy `a > b > c` appears on the tree (\"a\" being\r\n *    the root and \"c\" being the leaf) the callback function will be called as:\r\n *  callback('a', 'b', 'c');\r\n * @param {Array} list The hierarchical list to be iterated\r\n * @param {function} callback The callback which will be exected once for\r\n *  each leaf-node of the hierarchical list;\r\n * @returns {Array} Returns the provided list or null for bad arguments;\r\n */\r\nfunction forEach(list, callback) {\r\n  if (Array.isArray(list)) {\r\n    if (typeof callback === 'function') {\r\n      forEachValue(list, callback);\r\n    }\r\n    return list;\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * Retrieves an item from the given hierarchical list based on an index (number)\r\n * or a path (string).\r\n *  @ For example:\r\n *    getItem(list, '1/0/4')\r\n *  will retrieve the fourth grandchild, from the first child of the second\r\n *  element of the list;\r\n * @param {Array} list The source list;\r\n * @param {string|number} indexOrPath The index of the element inside list\r\n *  (number) or the path to reach the desired element (string). The slash \"/\"\r\n *  character is cosidered the path separator;\r\n */\r\nfunction getItem(list, indexOrPath) {\r\n  if (Array.isArray(list)) {\r\n    let subpath = null;\r\n    let index = typeof indexOrPath === 'number' ? indexOrPath : -1;\r\n    if (typeof indexOrPath === 'string') {\r\n      const separator = indexOrPath.indexOf(SEPARATOR);\r\n      if (separator > 0) {\r\n        index = parseInt(indexOrPath.slice(0, separator), 10);\r\n        if (separator + 1 < indexOrPath.length) {\r\n          subpath = indexOrPath.slice(separator + 1, indexOrPath.length);\r\n        }\r\n      } else {\r\n        index = parseInt(indexOrPath, 10);\r\n      }\r\n    }\r\n    if (index >= 0 && index < list.length) {\r\n      const item = list[index];\r\n      if (isSublist(item)) {\r\n        if (subpath !== null) {\r\n          return getItem(item[1], subpath);\r\n        }\r\n        return item[0];\r\n      }\r\n      return item;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Pretty-print the provided hierarchical list;\r\n * @param {Array} list The source list;\r\n * @returns {string} The textual representation of the hierarchical list;\r\n */\r\nfunction print(list) {\r\n  let text = '';\r\n  if (Array.isArray(list)) {\r\n    let prev = [];\r\n    forEachValue(list, function(...args) {\r\n      let prevLen = prev.length;\r\n      for (let i = 0, l = args.length; i < l; ++i) {\r\n        if (i < prevLen && args[i] === prev[i]) {\r\n          continue;\r\n        }\r\n        text += '  '.repeat(i) + args[i] + '\\n';\r\n      }\r\n      prev = args;\r\n    });\r\n  }\r\n  return text;\r\n}\r\n\r\n/**\r\n * Utils\r\n */\r\n\r\nfunction forEachValue(list, callback) {\r\n  for (let i = 0, l = list.length; i < l; ++i) {\r\n    let item = list[i];\r\n    if (isSublist(item)) {\r\n      if (item[1].length > 0) {\r\n        forEachValue(item[1], callback.bind(null, item[0]));\r\n        continue;\r\n      }\r\n      item = item[0];\r\n    }\r\n    callback(item);\r\n  }\r\n}\r\n\r\nfunction addValuesToList(list, values) {\r\n  let value = values.shift();\r\n  let index = add(list, value);\r\n  if (index >= 0) {\r\n    if (values.length > 0) {\r\n      let sublist = list[index];\r\n      if (!isSublist(sublist)) {\r\n        sublist = toSublist(value);\r\n        list[index] = sublist;\r\n      }\r\n      return addValuesToList(sublist[1], values);\r\n    }\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction add(list, value) {\r\n  let index = find(list, value);\r\n  if (index === -2) {\r\n    index = list.push(value) - 1;\r\n  }\r\n  return index;\r\n}\r\n\r\nfunction find(list, value) {\r\n  if (typeof value === 'string') {\r\n    for (let i = 0, l = list.length; i < l; ++i) {\r\n      let item = list[i];\r\n      if (item === value || (isSublist(item) && item[0] === value)) {\r\n        return i;\r\n      }\r\n    }\r\n    return -2;\r\n  }\r\n  return -1;\r\n}\r\n\r\nfunction isSublist(subject) {\r\n  return (\r\n    Array.isArray(subject) &&\r\n    subject.length === 2 &&\r\n    typeof subject[0] === 'string' &&\r\n    Array.isArray(subject[1])\r\n  );\r\n}\r\n\r\nfunction toSublist(value) {\r\n  return [value + '', []];\r\n}\r\n\r\n/**\r\n * Exports\r\n */\r\n\r\nexport { addToList, getItem, forEach, print };\r\n","import makeDeferred from './makeDeferred';\r\n\r\n/**\r\n * Constants\r\n */\r\n\r\nconst TYPE = Symbol('Type');\r\nconst TASK = Symbol('Task');\r\nconst LIST = Symbol('List');\r\n\r\n/**\r\n * Public Methods\r\n */\r\n\r\n/**\r\n * Creates an instance of a task list\r\n * @returns {Object} A task list object\r\n */\r\nfunction createList() {\r\n  return objectWithType(LIST, {\r\n    head: null,\r\n    named: Object.create(null),\r\n    observers: [],\r\n  });\r\n}\r\n\r\n/**\r\n * Checks if the given argument is a List instance\r\n * @param {any} subject The value to be tested\r\n * @returns {boolean} true if a valid List instance is given, false otherwise\r\n */\r\nfunction isList(subject) {\r\n  return isOfType(LIST, subject);\r\n}\r\n\r\n/**\r\n * Creates an instance of a task\r\n * @param {Object} list The List instance related to this task\r\n * @param {Object} next The next Task instance to link to\r\n * @returns {Object} A task object\r\n */\r\nfunction createTask(list, next) {\r\n  return objectWithType(TASK, {\r\n    list: isList(list) ? list : null,\r\n    next: isTask(next) ? next : null,\r\n    failed: false,\r\n    awaiting: null,\r\n    progress: 0.0,\r\n  });\r\n}\r\n\r\n/**\r\n * Checks if the given argument is a Task instance\r\n * @param {any} subject The value to be tested\r\n * @returns {boolean} true if a valid Task instance is given, false otherwise\r\n */\r\nfunction isTask(subject) {\r\n  return isOfType(TASK, subject);\r\n}\r\n\r\n/**\r\n * Appends a new Task to the given List instance and notifies the list observers\r\n * @param {Object} list A List instance\r\n * @returns {Object} The new Task instance appended to the List or null if the\r\n *  given List instanc is not valid\r\n */\r\nfunction increaseList(list) {\r\n  if (isList(list)) {\r\n    const task = createTask(list, list.head);\r\n    list.head = task;\r\n    notify(list, getOverallProgress(list));\r\n    return task;\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * Updates the internal progress value of the given Task instance and notifies\r\n * the observers of the associated list.\r\n * @param {Object} task The Task instance to be updated\r\n * @param {number} value A number between 0 (inclusive) and 1 (exclusive)\r\n *  indicating the progress of the task;\r\n * @returns {void} Nothing is returned\r\n */\r\nfunction update(task, value) {\r\n  if (isTask(task) && isValidProgress(value) && value < 1.0) {\r\n    if (task.progress !== value) {\r\n      task.progress = value;\r\n      if (isList(task.list)) {\r\n        notify(task.list, getOverallProgress(task.list));\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Sets a Task instance as finished (progress = 1.0), freezes it in order to\r\n * prevent further modifications and notifies the observers of the associated\r\n * list.\r\n * @param {Object} task The Task instance to be finalized\r\n * @returns {void} Nothing is returned\r\n */\r\nfunction finish(task) {\r\n  if (isTask(task)) {\r\n    task.progress = 1.0;\r\n    task.awaiting = null;\r\n    Object.freeze(task);\r\n    if (isList(task.list)) {\r\n      notify(task.list, getOverallProgress(task.list));\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Generate a summarized snapshot of the current status of the given task List\r\n * @param {Object} list The List instance to be scanned\r\n * @returns {Object} An obeject representing the summarized status of the list\r\n */\r\nfunction getOverallProgress(list) {\r\n  const status = createStatus();\r\n  if (isList(list)) {\r\n    let task = list.head;\r\n    while (isTask(task)) {\r\n      status.total++;\r\n      if (isValidProgress(task.progress)) {\r\n        status.partial += task.progress;\r\n        if (task.progress === 1.0 && task.failed) status.failures++;\r\n      }\r\n      task = task.next;\r\n    }\r\n  }\r\n  if (status.total > 0) {\r\n    status.progress = status.partial / status.total;\r\n  }\r\n  return Object.freeze(status);\r\n}\r\n\r\n/**\r\n * Adds a Task instance to the given list that waits on a given \"thenable\". When\r\n * the thenable resolves the \"finish\" method is called on the newly created\r\n * instance thus notifying the observers of the list.\r\n * @param {Object} list The List instance to which the new task will be added\r\n * @param {Object|Promise} thenable The thenable to be waited on\r\n * @returns {Object} A reference to the newly created Task;\r\n */\r\nfunction waitOn(list, thenable) {\r\n  const task = increaseList(list);\r\n  if (isTask(task)) {\r\n    task.awaiting = Promise.resolve(thenable).then(\r\n      function() {\r\n        finish(task);\r\n      },\r\n      function() {\r\n        task.failed = true;\r\n        finish(task);\r\n      }\r\n    );\r\n    return task;\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * Adds a Task instance to the given list using a deferred (a Promise that can\r\n * be externally resolved) notifying the observers of the list.\r\n * @param {Object} list The List instance to which the new task will be added\r\n * @returns {Object} An object with references to the created deferred and task\r\n */\r\nfunction addDeferred(list) {\r\n  const deferred = makeDeferred();\r\n  const task = waitOn(list, deferred.promise);\r\n  return Object.freeze({\r\n    deferred,\r\n    task,\r\n  });\r\n}\r\n\r\n/**\r\n * Assigns a name to a specific task of the list\r\n * @param {Object} list The List instance whose task will be named\r\n * @param {Object} task The specified Task instance\r\n * @param {string} name The name of the task\r\n * @returns {boolean} Returns true on success, false otherwise\r\n */\r\nfunction setTaskName(list, task, name) {\r\n  if (\r\n    contains(list, task) &&\r\n    list.named !== null &&\r\n    typeof list.named === 'object' &&\r\n    typeof name === 'string'\r\n  ) {\r\n    list.named[name] = task;\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Retrieves a task by name\r\n * @param {Object} list The List instance whose task will be retrieved\r\n * @param {string} name The name of the task to be retrieved\r\n * @returns {Object} The Task instance or null if not found\r\n */\r\nfunction getTaskByName(list, name) {\r\n  if (\r\n    isList(list) &&\r\n    list.named !== null &&\r\n    typeof list.named === 'object' &&\r\n    typeof name === 'string'\r\n  ) {\r\n    const task = list.named[name];\r\n    if (isTask(task)) {\r\n      return task;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * Adds an observer (callback function) to a given List instance\r\n * @param {Object} list The List instance to which the observer will be appended\r\n * @param {Function} observer The observer (function) that will be executed\r\n *  every time a change happens within the list\r\n * @returns {boolean} Returns true on success and false otherewise\r\n */\r\nfunction addObserver(list, observer) {\r\n  if (\r\n    isList(list) &&\r\n    Array.isArray(list.observers) &&\r\n    typeof observer === 'function'\r\n  ) {\r\n    list.observers.push(observer);\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Removes an observer (callback function) from a given List instance\r\n * @param {Object} list The instance List from which the observer will removed\r\n * @param {Function} observer The observer function to be removed\r\n * @returns {boolean} Returns true on success and false otherewise\r\n */\r\nfunction removeObserver(list, observer) {\r\n  if (\r\n    isList(list) &&\r\n    Array.isArray(list.observers) &&\r\n    list.observers.length > 0\r\n  ) {\r\n    const index = list.observers.indexOf(observer);\r\n    if (index >= 0) {\r\n      list.observers.splice(index, 1);\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Utils\r\n */\r\n\r\nfunction createStatus() {\r\n  return Object.seal({\r\n    total: 0,\r\n    partial: 0.0,\r\n    progress: 0.0,\r\n    failures: 0,\r\n  });\r\n}\r\n\r\nfunction objectWithType(type, object) {\r\n  return Object.seal(Object.defineProperty(object, TYPE, { value: type }));\r\n}\r\n\r\nfunction isOfType(type, subject) {\r\n  return (\r\n    subject !== null && typeof subject === 'object' && subject[TYPE] === type\r\n  );\r\n}\r\n\r\nfunction isValidProgress(value) {\r\n  return typeof value === 'number' && value >= 0.0 && value <= 1.0;\r\n}\r\n\r\nfunction contains(list, task) {\r\n  if (isList(list) && isTask(task)) {\r\n    let item = list.head;\r\n    while (isTask(item)) {\r\n      if (item === task) {\r\n        return true;\r\n      }\r\n      item = item.next;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction notify(list, data) {\r\n  if (\r\n    isList(list) &&\r\n    Array.isArray(list.observers) &&\r\n    list.observers.length > 0\r\n  ) {\r\n    list.observers.slice().forEach(function(observer) {\r\n      if (typeof observer === 'function') {\r\n        try {\r\n          observer(data, list);\r\n        } catch (e) {\r\n          /* Oops! */\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Exports\r\n */\r\n\r\nexport {\r\n  createList,\r\n  isList,\r\n  createTask,\r\n  isTask,\r\n  increaseList,\r\n  update,\r\n  finish,\r\n  getOverallProgress,\r\n  waitOn,\r\n  addDeferred,\r\n  setTaskName,\r\n  getTaskByName,\r\n  addObserver,\r\n  removeObserver,\r\n};\r\n","import ObjectPath from './objectPath';\r\nimport StackManager from './StackManager.js';\r\nimport absoluteUrl from './absoluteUrl';\r\nimport addServers from './addServers';\r\nimport guid from './guid';\r\nimport sortBy from './sortBy.js';\r\nimport studyMetadataManager from './studyMetadataManager';\r\nimport writeScript from './writeScript.js';\r\nimport DicomLoaderService from './dicomLoaderService.js';\r\nimport b64toBlob from './b64toBlob.js';\r\nimport loadAndCacheDerivedDisplaySets from './loadAndCacheDerivedDisplaySets.js';\r\nimport * as urlUtil from './urlUtil';\r\nimport makeDeferred from './makeDeferred';\r\nimport makeCancelable from './makeCancelable';\r\nimport hotkeys from './hotkeys';\r\nimport Queue from './Queue';\r\nimport isDicomUid from './isDicomUid';\r\nimport resolveObjectPath from './resolveObjectPath';\r\nimport * as hierarchicalListUtils from './hierarchicalListUtils';\r\nimport * as progressTrackingUtils from './progressTrackingUtils';\r\nimport xhrRetryRequestHook from './xhrRetryRequestHook';\r\n\r\nconst utils = {\r\n  guid,\r\n  ObjectPath,\r\n  absoluteUrl,\r\n  addServers,\r\n  sortBy,\r\n  writeScript,\r\n  b64toBlob,\r\n  StackManager,\r\n  studyMetadataManager,\r\n  DicomLoaderService,\r\n  urlUtil,\r\n  loadAndCacheDerivedDisplaySets,\r\n  makeDeferred,\r\n  makeCancelable,\r\n  hotkeys,\r\n  Queue,\r\n  isDicomUid,\r\n  resolveObjectPath,\r\n  hierarchicalListUtils,\r\n  progressTrackingUtils,\r\n  xhrRetryRequestHook,\r\n};\r\n\r\nexport {\r\n  guid,\r\n  ObjectPath,\r\n  absoluteUrl,\r\n  addServers,\r\n  sortBy,\r\n  writeScript,\r\n  b64toBlob,\r\n  StackManager,\r\n  studyMetadataManager,\r\n  DicomLoaderService,\r\n  urlUtil,\r\n  loadAndCacheDerivedDisplaySets,\r\n  makeDeferred,\r\n  makeCancelable,\r\n  hotkeys,\r\n  Queue,\r\n  isDicomUid,\r\n  resolveObjectPath,\r\n  hierarchicalListUtils,\r\n  progressTrackingUtils,\r\n  xhrRetryRequestHook,\r\n};\r\n\r\nexport default utils;\r\n","/* jshint -W060 */\r\nimport absoluteUrl from './absoluteUrl';\r\n\r\nexport default function writeScript(fileName, callback) {\r\n  const script = document.createElement('script');\r\n  script.src = absoluteUrl(fileName);\r\n  script.onload = () => {\r\n    if (typeof callback === 'function') {\r\n      callback(script);\r\n    }\r\n  };\r\n\r\n  document.body.appendChild(script);\r\n}\r\n","export default function makeCancelable(thenable) {\r\n  let isCanceled = false;\r\n  const promise = Promise.resolve(thenable).then(\r\n    function(result) {\r\n      if (isCanceled) throw Object.freeze({ isCanceled });\r\n      return result;\r\n    },\r\n    function(error) {\r\n      if (isCanceled) throw Object.freeze({ isCanceled, error });\r\n      throw error;\r\n    }\r\n  );\r\n  return Object.assign(Object.create(promise), {\r\n    then: promise.then.bind(promise),\r\n    cancel() {\r\n      isCanceled = true;\r\n    },\r\n  });\r\n}\r\n","export default function isDicomUid(subject) {\r\n  const regex = /^\\d+(?:\\.\\d+)*$/;\r\n  return typeof subject === 'string' && regex.test(subject.trim());\r\n}\r\n","export default function resolveObjectPath(root, path, defaultValue) {\r\n  if (root !== null && typeof root === 'object' && typeof path === 'string') {\r\n    let value,\r\n      separator = path.indexOf('.');\r\n    if (separator >= 0) {\r\n      return resolveObjectPath(\r\n        root[path.slice(0, separator)],\r\n        path.slice(separator + 1, path.length),\r\n        defaultValue\r\n      );\r\n    }\r\n    value = root[path];\r\n    return value === undefined && defaultValue !== undefined\r\n      ? defaultValue\r\n      : value;\r\n  }\r\n}\r\n","import cornerstone from 'cornerstone-core';\r\nimport getImageId from '../utils/getImageId.js';\r\n\r\nconst noop = () => {};\r\n\r\nexport class StudyPrefetcher {\r\n  options = {\r\n    order: 'closest',\r\n    displaySetCount: 1,\r\n    onImageCached: noop,\r\n    requestType: 'prefetch',\r\n    preventCache: false,\r\n    prefetchDisplaySetsTimeout: 300,\r\n    maxNumPrefetchRequests: 100,\r\n    includeActiveDisplaySet: false,\r\n  };\r\n\r\n  constructor(studies, options) {\r\n    this.studies = studies || [];\r\n\r\n    if (options) {\r\n      this.options = { ...this.options, ...options };\r\n      this.options.requestType = 'prefetch';\r\n    }\r\n\r\n    cornerstone.events.addEventListener(\r\n      'cornerstoneimagecachefull.StudyPrefetcher',\r\n      this.cacheFullHandler\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Remove previously set event listeners and stop prefetching.\r\n   */\r\n  destroy() {\r\n    this.stopPrefetching();\r\n    cornerstone.events.removeEventListener(\r\n      'cornerstoneimagecachefull.StudyPrefetcher',\r\n      this.cacheFullHandler\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get StudyPrefetcher singleton instance.\r\n   *\r\n   * @param {array} studies\r\n   * @param {object} options\r\n   * @returns\r\n   */\r\n  static getInstance(studies = [], options) {\r\n    if (!StudyPrefetcher.instance) {\r\n      StudyPrefetcher.instance = new StudyPrefetcher(studies, options);\r\n    }\r\n\r\n    if (options) {\r\n      this.options = { ...this.options, ...options };\r\n      this.options.requestType = 'prefetch';\r\n    }\r\n\r\n    return StudyPrefetcher.instance;\r\n  }\r\n\r\n  /**\r\n   * OHIF study metadata instances.\r\n   *\r\n   * @param {array} studies\r\n   */\r\n  setStudies(studies) {\r\n    this.stopPrefetching();\r\n    this.studies = studies;\r\n  }\r\n\r\n  /**\r\n   * Get previously prefetched element.\r\n   *\r\n   * @returns {HTMLElement} Previously prefetched element.\r\n   */\r\n  getElement() {\r\n    return this.element;\r\n  }\r\n\r\n  /**\r\n   * Prefetch related display sets based on cornerstone viewport element\r\n   * with previously set options.\r\n   *\r\n   * @param {*} element\r\n   * @param {string} displaySetInstanceUID the display set instance uid\r\n   * @returns\r\n   */\r\n  prefetch(element, displaySetInstanceUID) {\r\n    if (!this.studies || !this.studies.length) {\r\n      return;\r\n    }\r\n\r\n    this.element = element;\r\n    try {\r\n      this.enabledElement = cornerstone.getEnabledElement(element);\r\n    } catch {\r\n      throw new Error('Failed to find the enabled element');\r\n    }\r\n\r\n    this.stopPrefetching();\r\n    this.prefetchDisplaySets(displaySetInstanceUID);\r\n  }\r\n\r\n  /**\r\n   * Stop prefetching images.\r\n   */\r\n  stopPrefetching() {\r\n    cornerstone.imageLoadPoolManager.clearRequestStack('prefetch');\r\n  }\r\n\r\n  /**\r\n   * Prefetch display sets async.\r\n   *\r\n   * @param {HTMLElement} element cornerstone viewport element\r\n   * @param {number} timeout\r\n   */\r\n  prefetchDisplaySetsAsync(element, timeout) {\r\n    try {\r\n      this.enabledElement = cornerstone.getEnabledElement(element);\r\n    } catch {\r\n      throw new Error('Failed to find the enabled element');\r\n    }\r\n    timeout = timeout || this.options.prefetchDisplaySetsTimeout;\r\n    clearTimeout(this.prefetchDisplaySetsHandler);\r\n    this.prefetchDisplaySetsHandler = setTimeout(() => {\r\n      this.prefetchDisplaySets(element);\r\n    }, timeout);\r\n  }\r\n\r\n  /**\r\n   * Extract all image ids from all display sets to be fetched and\r\n   * call method to add images to request pool manager.\r\n   *\r\n   * @param {string} displaySetInstanceUID the display set instance uid\r\n   */\r\n  prefetchDisplaySets(displaySetInstanceUID) {\r\n    const displaySetsToPrefetch = this.getDisplaySetsToPrefetch(\r\n      displaySetInstanceUID\r\n    );\r\n    const imageIds = this.getImageIdsFromDisplaySets(displaySetsToPrefetch);\r\n    this.prefetchImageIds(imageIds);\r\n  }\r\n\r\n  /**\r\n   * Add image ids to request pool manager.\r\n   *\r\n   * @param {array} imageIds\r\n   */\r\n  prefetchImageIds(imageIds) {\r\n    const nonCachedImageIds = this.filterCachedImageIds(imageIds);\r\n    const imageLoadPoolManager = cornerstone.imageLoadPoolManager;\r\n\r\n    imageLoadPoolManager.maxNumRequests = {\r\n      ...imageLoadPoolManager.maxNumRequests,\r\n      prefetch: this.options.maxNumPrefetchRequests,\r\n    };\r\n\r\n    let requestFn;\r\n    if (this.options.preventCache) {\r\n      requestFn = id => cornerstone.loadImage(id);\r\n    } else {\r\n      requestFn = id => cornerstone.loadAndCacheImage(id);\r\n    }\r\n\r\n    nonCachedImageIds.forEach(imageId => {\r\n      imageLoadPoolManager.addRequest(\r\n        requestFn.bind(this, imageId),\r\n        this.options.requestType,\r\n        {\r\n          imageId,\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get study by cornerstone image instance.\r\n   *\r\n   * @param {object} image\r\n   * @returns\r\n   */\r\n  getStudy(image) {\r\n    const StudyInstanceUID = cornerstone.metaData.get(\r\n      'StudyInstanceUID',\r\n      image.imageId\r\n    );\r\n    const studies = this.studies;\r\n    return studies.find(\r\n      study => study.getData().StudyInstanceUID === StudyInstanceUID\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get study series by cornerstone image instance.\r\n   *\r\n   * @param {object} study OHIF study instance\r\n   * @param {object} image cornerstone image instance object\r\n   * @returns\r\n   */\r\n  getSeries(study, image) {\r\n    const SeriesInstanceUID = cornerstone.metaData.get(\r\n      'SeriesInstanceUID',\r\n      image.imageId\r\n    );\r\n    return study.getSeriesByUID(SeriesInstanceUID);\r\n  }\r\n\r\n  /**\r\n   * Get sop instance by cornerstone image instance.\r\n   *\r\n   * @param {array} series\r\n   * @param {object} image\r\n   * @returns\r\n   */\r\n  getInstance(series, image) {\r\n    const instanceMetadata = cornerstone.metaData.get(\r\n      'instance',\r\n      image.imageId\r\n    );\r\n    return series.getInstanceByUID(instanceMetadata.SOPInstanceUID);\r\n  }\r\n\r\n  /**\r\n   * Returns the display set with given uid.\r\n   *\r\n   * @param {string} displaySetInstanceUID the display set instance uid\r\n   * @returns {object} displaySet\r\n   */\r\n  getDisplaySetByUID(displaySetInstanceUID) {\r\n    let displaySet;\r\n    this.studies.forEach(study => {\r\n      const ds = study.displaySets.find(\r\n        ds => ds.displaySetInstanceUID === displaySetInstanceUID\r\n      );\r\n      if (ds) {\r\n        displaySet = ds;\r\n      }\r\n    });\r\n    return displaySet;\r\n  }\r\n\r\n  /**\r\n   * Get display set by SOPInstanceUID.\r\n   *\r\n   * @param {array} displaySets\r\n   * @param {object} instance\r\n   * @returns\r\n   */\r\n  getDisplaySetBySOPInstanceUID(displaySets, instance) {\r\n    return displaySets.find(displaySet => {\r\n      return displaySet.images.some(displaySetImage => {\r\n        return displaySetImage.SOPInstanceUID === instance.SOPInstanceUID;\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get active viewport image based on cornerstone viewport element.\r\n   * @returns\r\n   */\r\n  getActiveViewportImage() {\r\n    if (!this.enabledElement) {\r\n      return;\r\n    }\r\n\r\n    return this.enabledElement.image;\r\n  }\r\n\r\n  /**\r\n   * Prefetch display sets based on cornerstone viewport element image.\r\n   *\r\n   * @param {string} displaySetInstanceUID the display set instance uid\r\n   * @returns {array} displaySets\r\n   */\r\n  getDisplaySetsToPrefetch(displaySetInstanceUID) {\r\n    const image = this.getActiveViewportImage();\r\n\r\n    if (!image) {\r\n      return [];\r\n    }\r\n\r\n    const study = this.getStudy(image);\r\n    const series = this.getSeries(study, image);\r\n    const instance = this.getInstance(series, image);\r\n    const displaySets = study.displaySets;\r\n    const activeDisplaySet = displaySetInstanceUID\r\n      ? this.getDisplaySetByUID(displaySetInstanceUID)\r\n      : this.getDisplaySetBySOPInstanceUID(displaySets, instance);\r\n\r\n    const prefetchMethodMap = {\r\n      topdown: 'getFirstDisplaySets',\r\n      downward: 'getNextDisplaySets',\r\n      upward: 'getPreviousDisplaySets',\r\n      closest: 'getClosestDisplaySets',\r\n      all: 'getAllDisplaySets',\r\n    };\r\n\r\n    const prefetchOrder = this.options.order;\r\n    const methodName = prefetchMethodMap[prefetchOrder];\r\n    const getDisplaySets = this[methodName];\r\n\r\n    if (!getDisplaySets) {\r\n      if (prefetchOrder) {\r\n        log.warn(`Invalid prefetch order configuration (${prefetchOrder})`);\r\n      }\r\n\r\n      return [];\r\n    }\r\n\r\n    return getDisplaySets.call(\r\n      this,\r\n      displaySets,\r\n      activeDisplaySet,\r\n      this.options.displaySetCount,\r\n      this.options.includeActiveDisplaySet\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get all display sets.\r\n   *\r\n   * @param {array} displaySets\r\n   * @param {object} activeDisplaySet\r\n   * @param {number} displaySetCount\r\n   * @param {boolean} includeActiveDisplaySet\r\n   * @returns\r\n   */\r\n  getAllDisplaySets(\r\n    displaySets,\r\n    activeDisplaySet,\r\n    displaySetCount,\r\n    includeActiveDisplaySet\r\n  ) {\r\n    const length = displaySets.length;\r\n    const selectedDisplaySets = [];\r\n\r\n    for (let i = 0; i < length; i++) {\r\n      const displaySet = displaySets[i];\r\n      selectedDisplaySets.push(displaySet);\r\n    }\r\n\r\n    return selectedDisplaySets;\r\n  }\r\n\r\n  /**\r\n   * Get all display sets in order after the active display set.\r\n   *\r\n   * @param {array} displaySets\r\n   * @param {object} activeDisplaySet\r\n   * @param {number} displaySetCount\r\n   * @param {boolean} includeActiveDisplaySet\r\n   * @returns\r\n   */\r\n  getFirstDisplaySets(\r\n    displaySets,\r\n    activeDisplaySet,\r\n    displaySetCount,\r\n    includeActiveDisplaySet\r\n  ) {\r\n    const length = displaySets.length;\r\n    const selectedDisplaySets = [];\r\n\r\n    for (let i = 0; i < length && displaySetCount; i++) {\r\n      const displaySet = displaySets[i];\r\n\r\n      if (includeActiveDisplaySet || displaySet !== activeDisplaySet) {\r\n        selectedDisplaySets.push(displaySet);\r\n        displaySetCount--;\r\n      }\r\n    }\r\n\r\n    return selectedDisplaySets;\r\n  }\r\n\r\n  /**\r\n   * Get all display sets before the active display set.\r\n   *\r\n   * @param {array} displaySets\r\n   * @param {object} activeDisplaySet\r\n   * @param {number} displaySetCount\r\n   * @param {boolean} includeActiveDisplaySet\r\n   * @returns\r\n   */\r\n  getPreviousDisplaySets(\r\n    displaySets,\r\n    activeDisplaySet,\r\n    displaySetCount,\r\n    includeActiveDisplaySet\r\n  ) {\r\n    const activeDisplaySetIndex = displaySets.indexOf(activeDisplaySet);\r\n    const end = includeActiveDisplaySet\r\n      ? activeDisplaySetIndex + 1\r\n      : activeDisplaySetIndex;\r\n    const previousDisplaySets = displaySets.slice(0, end);\r\n    return previousDisplaySets.reverse().slice(0, displaySetCount);\r\n  }\r\n\r\n  /**\r\n   * Get all display sets after the active display set.\r\n   *\r\n   * @param {array} displaySets\r\n   * @param {object} activeDisplaySet\r\n   * @param {number} displaySetCount\r\n   * @param {boolean} includeActiveDisplaySet\r\n   * @returns\r\n   */\r\n  getNextDisplaySets(\r\n    displaySets,\r\n    activeDisplaySet,\r\n    displaySetCount,\r\n    includeActiveDisplaySet\r\n  ) {\r\n    const activeDisplaySetIndex = displaySets.indexOf(activeDisplaySet);\r\n    const begin = includeActiveDisplaySet\r\n      ? activeDisplaySetIndex\r\n      : activeDisplaySetIndex + 1;\r\n    const end = Math.min(begin + displaySetCount, displaySets.length);\r\n    return displaySets.slice(begin, end);\r\n  }\r\n\r\n  /**\r\n   * Get all display set closest to the active display set.\r\n   *\r\n   * @param {array} displaySets\r\n   * @param {object} activeDisplaySet\r\n   * @param {number} displaySetCount\r\n   * @param {boolean} includeActiveDisplaySet\r\n   * @returns\r\n   */\r\n  getClosestDisplaySets(\r\n    displaySets,\r\n    activeDisplaySet,\r\n    displaySetCount,\r\n    includeActiveDisplaySet\r\n  ) {\r\n    const activeDisplaySetIndex = displaySets.indexOf(activeDisplaySet);\r\n    const length = displaySets.length;\r\n    const selectedDisplaySets = [];\r\n    let left = activeDisplaySetIndex - 1;\r\n    let right = activeDisplaySetIndex + 1;\r\n\r\n    if (includeActiveDisplaySet) {\r\n      selectedDisplaySets.push(displaySets[activeDisplaySetIndex]);\r\n      displaySetCount--;\r\n    }\r\n\r\n    while ((left >= 0 || right < length) && displaySetCount) {\r\n      if (left >= 0) {\r\n        selectedDisplaySets.push(displaySets[left]);\r\n        displaySetCount--;\r\n        left--;\r\n      }\r\n\r\n      if (right < length && displaySetCount) {\r\n        selectedDisplaySets.push(displaySets[right]);\r\n        displaySetCount--;\r\n        right++;\r\n      }\r\n    }\r\n\r\n    return selectedDisplaySets;\r\n  }\r\n\r\n  /**\r\n   * Get all image ids from display sets.\r\n   *\r\n   * @param {array} displaySets\r\n   * @returns {array} image ids\r\n   */\r\n  getImageIdsFromDisplaySets(displaySets) {\r\n    let imageIds = [];\r\n\r\n    displaySets.forEach(displaySet => {\r\n      imageIds = imageIds.concat(this.getImageIdsFromDisplaySet(displaySet));\r\n    });\r\n\r\n    return imageIds;\r\n  }\r\n\r\n  /**\r\n   * Get all image ids from a given display set.\r\n   *\r\n   * @param {array} displaySet\r\n   * @returns\r\n   */\r\n  getImageIdsFromDisplaySet(displaySet) {\r\n    const imageIds = [];\r\n\r\n    if (!displaySet.images || displaySet.images.length < 1) {\r\n      return [];\r\n    }\r\n\r\n    // TODO: This duplicates work done by the stack manager\r\n    displaySet.images.forEach(image => {\r\n      const numFrames = image.numFrames;\r\n      if (numFrames > 1) {\r\n        for (let i = 0; i < numFrames; i++) {\r\n          let imageId = getImageId(image, i);\r\n          imageIds.push(imageId);\r\n        }\r\n      } else {\r\n        let imageId = getImageId(image);\r\n        imageIds.push(imageId);\r\n      }\r\n    });\r\n\r\n    return imageIds;\r\n  }\r\n\r\n  /**\r\n   * Filter cached image ids from a set of image ids.\r\n   *\r\n   * @param {array} imageIds\r\n   * @returns {array} images not cached\r\n   */\r\n  filterCachedImageIds(imageIds) {\r\n    return imageIds.filter(imageId => !this.isImageCached(imageId));\r\n  }\r\n\r\n  /**\r\n   * Check if image id is cached in cornerstone.\r\n   *\r\n   * @param {string} imageId\r\n   * @returns\r\n   */\r\n  isImageCached(imageId) {\r\n    const image = cornerstone.imageCache.imageCache[imageId];\r\n    return image && image.sizeInBytes;\r\n  }\r\n\r\n  /**\r\n   * Warns that cache is full and stops prefetching.\r\n   */\r\n  cacheFullHandler = () => {\r\n    log.warn('Cache full');\r\n    this.stopPrefetching();\r\n  };\r\n}\r\n","import cornerstone from 'cornerstone-core';\r\nimport cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\r\nimport debounce from 'lodash.debounce';\r\n\r\nimport StackManager from '../utils/StackManager';\r\nimport { StudyPrefetcher } from './StudyPrefetcher';\r\n\r\nclass BaseLoadingListener {\r\n  constructor(stack, options = {}) {\r\n    this.id = BaseLoadingListener.getNewId();\r\n    this.stack = stack;\r\n    this.statsItemsLimit = options.statsItemsLimit || 2;\r\n    this.stats = {\r\n      items: [],\r\n      total: 0,\r\n      elapsedTime: 0,\r\n      speed: 0,\r\n    };\r\n\r\n    this._setProgressData = options._setProgressData;\r\n    this._clearProgressById = options._clearProgressById;\r\n\r\n    // Register the start point to make it possible to calculate\r\n    // bytes/s or frames/s when the first byte or frame is received\r\n    this._addStatsData(0);\r\n\r\n    // Update the progress before starting the download\r\n    // to make it possible to update the UI\r\n    this._updateProgress();\r\n  }\r\n\r\n  _addStatsData(value) {\r\n    const date = new Date();\r\n    const stats = this.stats;\r\n    const items = stats.items;\r\n    const newItem = {\r\n      value,\r\n      date,\r\n    };\r\n\r\n    items.push(newItem);\r\n    stats.total += newItem.value;\r\n\r\n    // Remove items until it gets below the limit\r\n    while (items.length > this.statsItemsLimit) {\r\n      const item = items.shift();\r\n      stats.total -= item.value;\r\n    }\r\n\r\n    // Update the elapsedTime (seconds) based on first and last\r\n    // elements and recalculate the speed (bytes/s or frames/s)\r\n    if (items.length > 1) {\r\n      const oldestItem = items[0];\r\n      stats.elapsedTime =\r\n        (newItem.date.getTime() - oldestItem.date.getTime()) / 1000;\r\n      stats.speed = (stats.total - oldestItem.value) / stats.elapsedTime;\r\n    }\r\n  }\r\n\r\n  _getProgressId() {\r\n    /**\r\n     * TODO: The id key should be configurable.\r\n     */\r\n    const displaySetInstanceUID = this.stack.displaySetInstanceUID;\r\n    return 'StackProgress:' + displaySetInstanceUID;\r\n  }\r\n\r\n  _clearProgress() {\r\n    const progressId = this._getProgressId();\r\n    this._clearProgressById(progressId);\r\n  }\r\n\r\n  startListening() {\r\n    throw new Error('`startListening` must be implemented by child classes');\r\n  }\r\n\r\n  stopListening() {\r\n    throw new Error('`stopListening` must be implemented by child classes');\r\n  }\r\n\r\n  destroy() {\r\n    this.stopListening();\r\n    this._clearProgress();\r\n  }\r\n\r\n  static getNewId() {\r\n    const timeSlice = new Date()\r\n      .getTime()\r\n      .toString()\r\n      .slice(-8);\r\n    const randomNumber = parseInt(Math.random() * 1000000000);\r\n\r\n    return timeSlice.toString() + randomNumber.toString();\r\n  }\r\n}\r\n\r\nclass DICOMFileLoadingListener extends BaseLoadingListener {\r\n  constructor(stack, options) {\r\n    super(stack, options);\r\n\r\n    this.imageLoadProgressEventHandler = this._imageLoadProgressEventHandler.bind(\r\n      this\r\n    );\r\n\r\n    this._dataSetUrl = this._getDataSetUrl(stack);\r\n    this._lastLoaded = 0;\r\n\r\n    // Check how many instances has already been download (cached)\r\n    this._checkCachedData();\r\n\r\n    this.startListening();\r\n  }\r\n\r\n  _checkCachedData() {\r\n    const dataSet = cornerstoneWADOImageLoader.wadouri.dataSetCacheManager.get(\r\n      this._dataSetUrl\r\n    );\r\n\r\n    if (dataSet) {\r\n      const dataSetLength = dataSet.byteArray.length;\r\n\r\n      this._updateProgress({\r\n        percentComplete: 100,\r\n        loaded: dataSetLength,\r\n        total: dataSetLength,\r\n      });\r\n    }\r\n  }\r\n\r\n  _getImageLoadProgressEventName() {\r\n    // TODO: Add this event as a constant in Cornerstone\r\n    return 'cornerstoneimageloadprogress.' + this.id;\r\n  }\r\n\r\n  startListening() {\r\n    const imageLoadProgressEventName = this._getImageLoadProgressEventName();\r\n\r\n    this.stopListening();\r\n\r\n    cornerstone.events.addEventListener(\r\n      imageLoadProgressEventName,\r\n      this.imageLoadProgressEventHandle\r\n    );\r\n  }\r\n\r\n  stopListening() {\r\n    const imageLoadProgressEventName = this._getImageLoadProgressEventName();\r\n    cornerstone.events.removeEventListener(\r\n      imageLoadProgressEventName,\r\n      this.imageLoadProgressEventHandle\r\n    );\r\n  }\r\n\r\n  _imageLoadProgressEventHandler = e => {\r\n    const eventData = e.detail;\r\n    const dataSetUrl = this._convertImageIdToDataSetUrl(eventData.imageId);\r\n    const bytesDiff = eventData.loaded - this._lastLoaded;\r\n\r\n    if (!this._dataSetUrl === dataSetUrl) {\r\n      return;\r\n    }\r\n\r\n    // Add the bytes downloaded to the stats\r\n    this._addStatsData(bytesDiff);\r\n\r\n    // Update the download progress\r\n    this._updateProgress(eventData);\r\n\r\n    // Cache the last eventData.loaded value\r\n    this._lastLoaded = eventData.loaded;\r\n  };\r\n\r\n  _updateProgress(eventData) {\r\n    const progressId = this._getProgressId();\r\n    eventData = eventData || {};\r\n\r\n    const progressData = {\r\n      multiFrame: false,\r\n      percentComplete: eventData.percentComplete,\r\n      bytesLoaded: eventData.loaded,\r\n      bytesTotal: eventData.total,\r\n      bytesPerSecond: this.stats.speed,\r\n    };\r\n\r\n    this._setProgressData(progressId, progressData);\r\n  }\r\n\r\n  _convertImageIdToDataSetUrl(imageId) {\r\n    // Remove the prefix (\"dicomweb:\" or \"wadouri:\"\")\r\n    imageId = imageId.replace(/^(dicomweb:|wadouri:)/i, '');\r\n\r\n    // Remove \"frame=999&\" from the imageId\r\n    imageId = imageId.replace(/frame=\\d+&?/i, '');\r\n\r\n    // Remove the last \"&\" like in \"http://...?foo=1&bar=2&\"\r\n    imageId = imageId.replace(/&$/, '');\r\n\r\n    return imageId;\r\n  }\r\n\r\n  _getDataSetUrl(stack) {\r\n    const imageId = stack.imageIds[0];\r\n    return this._convertImageIdToDataSetUrl(imageId);\r\n  }\r\n}\r\n\r\nconst StudyLoadingListenerEvents = {\r\n  OnProgress: 'StudyLoadingListenerEvents.OnProgress',\r\n};\r\n\r\nfunction promiseState(promise, callback) {\r\n  // Symbols and RegExps are never content-equal\r\n  var uniqueValue = window['Symbol'] ? Symbol('unique') : /unique/;\r\n\r\n  function notifyPendingOrResolved(value) {\r\n    if (value === uniqueValue) {\r\n      return callback('pending');\r\n    } else {\r\n      return callback('fulfilled');\r\n    }\r\n  }\r\n\r\n  function notifyRejected(reason) {\r\n    return callback('rejected');\r\n  }\r\n\r\n  var race = [promise, Promise.resolve(uniqueValue)];\r\n  Promise.race(race).then(notifyPendingOrResolved, notifyRejected);\r\n}\r\n\r\nclass StackLoadingListener extends BaseLoadingListener {\r\n  constructor(stack, options = {}) {\r\n    options.statsItemsLimit = 20;\r\n\r\n    super(stack, options);\r\n\r\n    this.imageLoadedEventHandler = this._imageLoadedEventHandler.bind(this);\r\n    this.imageCachePromiseRemovedEventHandler = this._imageCachePromiseRemovedEventHandler.bind(\r\n      this\r\n    );\r\n\r\n    this.imageDataMap = this._convertImageIdsArrayToMap(stack.imageIds);\r\n    this.framesStatus = this._createArray(stack.imageIds.length, false);\r\n    this.loadedCount = 0;\r\n\r\n    // Check how many instances has already been download (cached)\r\n    this._debouncedSetProgressData = debounce((...args) => {\r\n      this._setProgressData(...args);\r\n\r\n      /** After checking cache, continue prefetch */\r\n      const studyPrefetcher = StudyPrefetcher.getInstance();\r\n      studyPrefetcher.prefetch(studyPrefetcher.getElement());\r\n    }, 300);\r\n    const debounced = true;\r\n    this._checkCachedData(debounced);\r\n\r\n    this.startListening();\r\n  }\r\n\r\n  _convertImageIdsArrayToMap(imageIds) {\r\n    const imageIdsMap = new Map();\r\n\r\n    for (let i = 0; i < imageIds.length; i++) {\r\n      imageIdsMap.set(imageIds[i], {\r\n        index: i,\r\n        loaded: false,\r\n      });\r\n    }\r\n\r\n    return imageIdsMap;\r\n  }\r\n\r\n  _createArray(length, defaultValue) {\r\n    // `new Array(length)` is an anti-pattern in javascript because its\r\n    // funny API. Otherwise I would go for `new Array(length).fill(false)`\r\n    const array = [];\r\n\r\n    for (let i = 0; i < length; i++) {\r\n      array[i] = defaultValue;\r\n    }\r\n\r\n    return array;\r\n  }\r\n\r\n  /**\r\n   * Check if image id is cached in cornerstone.\r\n   *\r\n   * @param {string} imageId\r\n   * @returns\r\n   */\r\n  isImageCached(imageId) {\r\n    const image = cornerstone.imageCache.imageCache[imageId];\r\n    return image && image.sizeInBytes;\r\n  }\r\n\r\n  _checkCachedData(debounced = false) {\r\n    const imageIds = this.stack.imageIds;\r\n\r\n    for (let i = 0; i < imageIds.length; i++) {\r\n      const imageId = imageIds[i];\r\n\r\n      const imageObject = cornerstone.imageCache.getImageLoadObject(imageId);\r\n\r\n      if (this.isImageCached(imageId)) {\r\n        this._updateFrameStatus(imageId, true, debounced);\r\n      }\r\n\r\n      if (imageObject && imageObject.promise) {\r\n        promiseState(imageObject.promise, state => {\r\n          if (state === 'fulfilled') {\r\n            this._updateFrameStatus(imageId, true, debounced);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  _getImageLoadedEventName() {\r\n    return `${cornerstone.EVENTS.IMAGE_LOADED}.${this.id}`;\r\n  }\r\n\r\n  _getImageCachePromiseRemoveEventName() {\r\n    return `${cornerstone.EVENTS.IMAGE_CACHE_PROMISE_REMOVED}.${this.id}`;\r\n  }\r\n\r\n  _imageLoadedEventHandler(e) {\r\n    this._updateFrameStatus(e.detail.image.imageId, true);\r\n  }\r\n\r\n  _imageCachePromiseRemovedEventHandler(e) {\r\n    this._updateFrameStatus(e.detail.imageId, false);\r\n  }\r\n\r\n  startListening() {\r\n    const imageLoadedEventName = this._getImageLoadedEventName();\r\n    const imageCachePromiseRemovedEventName = this._getImageCachePromiseRemoveEventName();\r\n\r\n    this.stopListening();\r\n\r\n    cornerstone.events.addEventListener(\r\n      imageLoadedEventName,\r\n      this.imageLoadedEventHandler\r\n    );\r\n    cornerstone.events.addEventListener(\r\n      imageCachePromiseRemovedEventName,\r\n      this.imageCachePromiseRemovedEventHandler\r\n    );\r\n  }\r\n\r\n  stopListening() {\r\n    const imageLoadedEventName = this._getImageLoadedEventName();\r\n    const imageCachePromiseRemovedEventName = this._getImageCachePromiseRemoveEventName();\r\n\r\n    cornerstone.events.removeEventListener(\r\n      imageLoadedEventName,\r\n      this.imageLoadedEventHandler\r\n    );\r\n    cornerstone.events.removeEventListener(\r\n      imageCachePromiseRemovedEventName,\r\n      this.imageCachePromiseRemovedEventHandler\r\n    );\r\n  }\r\n\r\n  _updateFrameStatus(imageId, loaded, debounced) {\r\n    const imageData = this.imageDataMap.get(imageId);\r\n\r\n    if (!imageData || imageData.loaded === loaded) {\r\n      return;\r\n    }\r\n\r\n    // Add one more frame to the stats\r\n    if (loaded) {\r\n      this._addStatsData(1);\r\n    }\r\n\r\n    imageData.loaded = loaded;\r\n    this.framesStatus[imageData.index] = loaded;\r\n    this.loadedCount += loaded ? 1 : -1;\r\n    this._updateProgress(debounced);\r\n  }\r\n\r\n  _setProgressData(progressId, progressData) {\r\n    // TODO: This method (and _clearProgressById) need to access\r\n    // the Redux store and should therefore be provided from the\r\n    // application. I've added a workaround to pass this in through\r\n    // the 'options' variable on instantiation, but this is really ugly.\r\n    // We could consider making the StudyLoadingListener a higher-order\r\n    // component which would set this stuff itself.\r\n    throw new Error(\r\n      \"The _setProgressData function must be provided in StudyLoadingListener's options\"\r\n    );\r\n  }\r\n\r\n  _clearProgressById(progressId) {\r\n    throw new Error(\r\n      \"The _clearProgressById function must be provided in StudyLoadingListener's options\"\r\n    );\r\n  }\r\n\r\n  _updateProgress(debounced) {\r\n    const totalFramesCount = this.stack.imageIds.length;\r\n    const loadedFramesCount = this.loadedCount;\r\n    const loadingFramesCount = totalFramesCount - loadedFramesCount;\r\n    const percentComplete = Math.round(\r\n      (loadedFramesCount / totalFramesCount) * 100\r\n    );\r\n    const progressId = this._getProgressId();\r\n    const progressData = {\r\n      multiFrame: true,\r\n      totalFramesCount,\r\n      loadedFramesCount,\r\n      loadingFramesCount,\r\n      percentComplete,\r\n      framesPerSecond: this.stats.speed,\r\n      framesStatus: this.framesStatus,\r\n    };\r\n\r\n    if (debounced) {\r\n      this._debouncedSetProgressData(progressId, progressData);\r\n      return;\r\n    }\r\n\r\n    this._setProgressData(progressId, progressData);\r\n  }\r\n\r\n  _logProgress() {\r\n    const totalFramesCount = this.stack.imageIds.length;\r\n    const displaySetInstanceUID = this.stack.displaySetInstanceUID;\r\n    let progressBar = '[';\r\n\r\n    for (let i = 0; i < totalFramesCount; i++) {\r\n      const ch = this.framesStatus[i] ? '|' : '.';\r\n      progressBar += `${ch}`;\r\n    }\r\n\r\n    progressBar += ']';\r\n    console.info(`${displaySetInstanceUID}: ${progressBar}`);\r\n  }\r\n}\r\n\r\nclass StudyLoadingListener {\r\n  static events = StudyLoadingListenerEvents;\r\n\r\n  constructor(options) {\r\n    this.listeners = {};\r\n    this.options = options;\r\n  }\r\n\r\n  addStack(stack, stackMetaData) {\r\n    // TODO: Make this work for plugins\r\n    if (!stack) {\r\n      //console.log('Skipping adding stack to StudyLoadingListener');\r\n      return;\r\n    }\r\n\r\n    const displaySetInstanceUID = stack.displaySetInstanceUID;\r\n\r\n    if (!this.listeners[displaySetInstanceUID]) {\r\n      const listener = this._createListener(stack, stackMetaData);\r\n      if (listener) {\r\n        this.listeners[displaySetInstanceUID] = listener;\r\n      }\r\n    }\r\n  }\r\n\r\n  addStudy(study) {\r\n    study.displaySets.forEach(displaySet => {\r\n      const stack = StackManager.findOrCreateStack(study, displaySet);\r\n\r\n      // TODO: Make this work for plugins\r\n      if (!stack) {\r\n        console.warn('Skipping adding displaySet to StudyLoadingListener');\r\n        console.warn(displaySet);\r\n        return;\r\n      }\r\n\r\n      this.addStack(stack, {\r\n        isMultiFrame: displaySet.isMultiFrame,\r\n      });\r\n    });\r\n  }\r\n\r\n  addStudies(studies) {\r\n    if (!studies || !studies.length) {\r\n      return;\r\n    }\r\n\r\n    studies.forEach(study => this.addStudy(study));\r\n  }\r\n\r\n  clear() {\r\n    const displaySetInstanceUIDs = Object.keys(this.listeners);\r\n    const length = displaySetInstanceUIDs.length;\r\n\r\n    for (let i = 0; i < length; i++) {\r\n      const displaySetInstanceUID = displaySetInstanceUIDs[i];\r\n      const displaySet = this.listeners[displaySetInstanceUID];\r\n\r\n      displaySet.destroy();\r\n    }\r\n\r\n    this.listeners = {};\r\n  }\r\n\r\n  _createListener(stack, stackMetaData) {\r\n    const schema = this._getSchema(stack);\r\n\r\n    // A StackLoadingListener can be created if it's wadors or not a multiframe\r\n    // wadouri instance (single file) that means \"N\" files will have to be\r\n    // downloaded where \"N\" is the number of frames. DICOMFileLoadingListener\r\n    // is created only if it's a single DICOM file and there's no way to know\r\n    // how many frames has already been loaded (bytes/s instead of frames/s).\r\n    if (schema === 'wadors' || !stackMetaData.isMultiFrame) {\r\n      return new StackLoadingListener(stack, this.options);\r\n    } else {\r\n      return new DICOMFileLoadingListener(stack, this.options);\r\n    }\r\n  }\r\n\r\n  _getSchema(stack) {\r\n    const imageId = stack.imageIds[0];\r\n    if (!imageId) {\r\n      return;\r\n    }\r\n    const colonIndex = imageId.indexOf(':');\r\n    return imageId.substring(0, colonIndex);\r\n  }\r\n\r\n  static getInstance(options) {\r\n    /**\r\n     * TODO: Use a different alternative without the use of events.\r\n     */\r\n    const DEFAULT_OPTIONS = {\r\n      _setProgressData: (progressId, progressData) => {\r\n        const event = new CustomEvent(StudyLoadingListenerEvents.OnProgress, {\r\n          detail: { progressId, progressData },\r\n        });\r\n        document.dispatchEvent(event);\r\n      },\r\n      _clearProgressById: progressId => {\r\n        const event = new CustomEvent(StudyLoadingListenerEvents.OnProgress, {\r\n          detail: { progressId, percentComplete: 0 },\r\n        });\r\n        document.dispatchEvent(event);\r\n      },\r\n    };\r\n\r\n    if (!StudyLoadingListener._instance) {\r\n      StudyLoadingListener._instance = new StudyLoadingListener(\r\n        options || DEFAULT_OPTIONS\r\n      );\r\n    }\r\n\r\n    return StudyLoadingListener._instance;\r\n  }\r\n}\r\n\r\nexport { StudyLoadingListener, StackLoadingListener, DICOMFileLoadingListener };\r\n","const _subscriptions = Symbol('subscriptions');\r\nconst _lastSubscriptionId = Symbol('lastSubscriptionId');\r\n\r\n/**\r\n * Class to implement publish/subscribe pattern\r\n *\r\n * @class\r\n * @classdesc Pub/sub mechanism\r\n */\r\nexport default class PubSub {\r\n  constructor() {\r\n    this[_subscriptions] = {};\r\n    this[_lastSubscriptionId] = 0;\r\n  }\r\n\r\n  /**\r\n   * Subscribe to event\r\n   *\r\n   * @param {string} eventName Event name\r\n   * @param {Function} callback Callback function\r\n   * @returns {void}\r\n   */\r\n  subscribe(eventName, callback) {\r\n    if (eventName === undefined) {\r\n      throw new Error('Event name is required');\r\n    }\r\n\r\n    if (typeof callback !== 'function') {\r\n      throw new Error('Callback must be a function');\r\n    }\r\n\r\n    if (!this[_subscriptions].hasOwnProperty(eventName)) {\r\n      this[_subscriptions][eventName] = {};\r\n    }\r\n\r\n    const subscriptionId = `sub${this[_lastSubscriptionId]++}`;\r\n    this[_subscriptions][eventName][subscriptionId] = callback;\r\n  }\r\n\r\n  /**\r\n   * Removes a subscription\r\n   *\r\n   * @param {string} eventName Event name\r\n   * @param {Function} [callback] Callback function\r\n   * @returns {void}\r\n   */\r\n  unsubscribe(eventName, callback) {\r\n    const callbacks = this[_subscriptions][eventName] || {};\r\n    for (let subscriptionId in callbacks) {\r\n      if (!callback) {\r\n        delete callbacks[subscriptionId];\r\n      } else if (callbacks[subscriptionId] === callback) {\r\n        delete callbacks[subscriptionId];\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Publish event to all subscriptions\r\n   *\r\n   * @param {String} eventName Event name\r\n   * @param {any} [payload] Data that will be published\r\n   * @returns {void}\r\n   */\r\n  publish(eventName, ...payload) {\r\n    if (eventName === undefined) {\r\n      throw new Error('Event name is required');\r\n    }\r\n\r\n    const callbacks = this[_subscriptions][eventName] || {};\r\n    for (let subscriptionId in callbacks) {\r\n      callbacks[subscriptionId](...payload);\r\n    }\r\n  }\r\n}\r\n","import PubSub from './PubSub';\r\n\r\n/** Log Events */\r\nexport const LogEvents = Object.freeze({\r\n  OnLog: 'onLog',\r\n});\r\n\r\n/**\r\n * Log manager that implements pub/sub.\r\n * This manager can be used to send logs across different packages\r\n * using previously registered events.\r\n */\r\nclass LogManager extends PubSub {\r\n  EVENTS = LogEvents;\r\n}\r\n\r\n/** Singleton */\r\nexport default new LogManager();\r\n","import { studyMetadataManager } from '../utils';\r\n\r\nimport OHIFError from './OHIFError';\r\nimport { StudyMetadata } from './metadata/StudyMetadata';\r\nimport { StudyMetadataSource } from './StudyMetadataSource.js';\r\nimport { retrieveStudyMetadata } from '../studies/retrieveStudyMetadata.js';\r\n\r\nexport class OHIFStudyMetadataSource extends StudyMetadataSource {\r\n  /**\r\n   * Get study metadata for a study with given study InstanceUID\r\n   * @param server\r\n   * @param  {String} studyInstanceUID Study InstanceUID\r\n   * @return {Promise} A Promise object\r\n   */\r\n  getByInstanceUID(server, studyInstanceUID) {\r\n    return retrieveStudyMetadata(server, studyInstanceUID);\r\n  }\r\n\r\n  /**\r\n   * Load study info (OHIF.viewer.Studies) and study metadata (OHIF.viewer.StudyMetadataList) for a given study.\r\n   * @param {StudyMetadata} study StudyMetadata object.\r\n   */\r\n  loadStudy(study) {\r\n    if (!(study instanceof StudyMetadata)) {\r\n      throw new OHIFError(\r\n        'OHIFStudyMetadataSource::loadStudy study is not an instance of StudyMetadata'\r\n      );\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      const studyInstanceUID = study.getStudyInstanceUID();\r\n\r\n      if (study instanceof StudyMetadata) {\r\n        const alreadyLoaded = OHIF.viewer.Studies.findBy({\r\n          StudyInstanceUID: studyInstanceUID,\r\n        });\r\n\r\n        if (!alreadyLoaded) {\r\n          OHIFStudyMetadataSource._updateStudyCollections(study);\r\n        }\r\n\r\n        resolve(study);\r\n        return;\r\n      }\r\n\r\n      this.getByInstanceUID(studyInstanceUID)\r\n        .then(studyInfo => {\r\n          // Create study metadata object\r\n          const studyMetadata = new StudyMetadata(\r\n            studyInfo,\r\n            studyInfo.StudyInstanceUID\r\n          );\r\n\r\n          // Get Study display sets\r\n          const displaySets = studyMetadata.createDisplaySets();\r\n\r\n          OHIFStudyMetadataSource._updateStudyCollections(studyMetadata);\r\n          resolve(studyMetadata);\r\n        })\r\n        .catch(reject);\r\n    });\r\n  }\r\n\r\n  // Static methods\r\n  static _updateStudyCollections(studyMetadata) {\r\n    const studyInfo = studyMetadata.getData();\r\n\r\n    // Set some studyInfo properties\r\n    studyInfo.selected = true;\r\n    studyInfo.displaySets = studyMetadata.getDisplaySets();\r\n    studyMetadataManager.add(studyMetadata);\r\n  }\r\n}\r\n","import { InstanceMetadata, SeriesMetadata, StudyMetadata } from './metadata';\r\n\r\nimport CommandsManager from './CommandsManager.js';\r\nimport { DICOMFileLoadingListener } from './StudyLoadingListener';\r\nimport HotkeysManager from './HotkeysManager.js';\r\nimport ImageSet from './ImageSet';\r\nimport LogManager from './LogManager';\r\nimport PubSub from './PubSub';\r\nimport MetadataProvider from './MetadataProvider';\r\nimport OHIFError from './OHIFError.js';\r\nimport { OHIFStudyMetadataSource } from './OHIFStudyMetadataSource';\r\nimport { StackLoadingListener } from './StudyLoadingListener';\r\nimport { StudyLoadingListener } from './StudyLoadingListener';\r\nimport { StudyMetadataSource } from './StudyMetadataSource';\r\nimport { StudyPrefetcher } from './StudyPrefetcher';\r\nimport { TypeSafeCollection } from './TypeSafeCollection';\r\n\r\nexport {\r\n  OHIFStudyMetadataSource,\r\n  MetadataProvider,\r\n  CommandsManager,\r\n  HotkeysManager,\r\n  ImageSet,\r\n  StudyPrefetcher,\r\n  StudyLoadingListener,\r\n  StackLoadingListener,\r\n  DICOMFileLoadingListener,\r\n  StudyMetadata,\r\n  SeriesMetadata,\r\n  InstanceMetadata,\r\n  TypeSafeCollection,\r\n  OHIFError,\r\n  StudyMetadataSource,\r\n};\r\n\r\nconst classes = {\r\n  OHIFStudyMetadataSource,\r\n  MetadataProvider,\r\n  CommandsManager,\r\n  HotkeysManager,\r\n  LogManager,\r\n  ImageSet,\r\n  PubSub,\r\n  StudyPrefetcher,\r\n  StudyLoadingListener,\r\n  StackLoadingListener,\r\n  DICOMFileLoadingListener,\r\n  StudyMetadata,\r\n  SeriesMetadata,\r\n  InstanceMetadata,\r\n  TypeSafeCollection,\r\n  OHIFError,\r\n  StudyMetadataSource,\r\n};\r\n\r\nexport default classes;\r\n","const LOW_PRIORITY_MODALITIES = Object.freeze([\r\n  'SEG',\r\n  'DOC',\r\n  'RTSTRUCT',\r\n  'SR',\r\n  'KO',\r\n  'PR',\r\n]);\r\n\r\nexport default function isLowPriorityModality(Modality) {\r\n  return LOW_PRIORITY_MODALITIES.includes(Modality);\r\n}\r\n","// Return the array sorting function for its object's properties\r\nexport default function sortBy() {\r\n  var fields = [].slice.call(arguments),\r\n    n_fields = fields.length;\r\n\r\n  return function(A, B) {\r\n    var a, b, field, key, reverse, result, i;\r\n\r\n    for (i = 0; i < n_fields; i++) {\r\n      result = 0;\r\n      field = fields[i];\r\n\r\n      key = typeof field === 'string' ? field : field.name;\r\n\r\n      a = A[key];\r\n      b = B[key];\r\n\r\n      if (typeof field.primer !== 'undefined') {\r\n        a = field.primer(a);\r\n        b = field.primer(b);\r\n      }\r\n\r\n      reverse = field.reverse ? -1 : 1;\r\n\r\n      if (a < b) {\r\n        result = reverse * -1;\r\n      }\r\n\r\n      if (a > b) {\r\n        result = reverse * 1;\r\n      }\r\n\r\n      if (result !== 0) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return result;\r\n  };\r\n}\r\n","import OHIFError from '../classes/OHIFError.js';\r\nimport getImageId from './getImageId';\r\nimport metadataProvider from '../classes/MetadataProvider.js';\r\n\r\nlet stackMap = {};\r\nlet configuration = {};\r\nconst stackUpdatedCallbacks = [];\r\n\r\n/**\r\n * Loop through the current series and add metadata to the\r\n * Cornerstone meta data provider. This will be used to fill information\r\n * into the viewport overlays, and to calculate reference lines and orientation markers\r\n * @param  {Object} stackMap              stackMap object\r\n * @param  {Object} study                 Study object\r\n * @param  {Object} displaySet            The set of images to make the stack from\r\n * @return {Array}                        Array with image IDs\r\n */\r\nfunction createAndAddStack(stackMap, study, displaySet, stackUpdatedCallbacks) {\r\n  const images = displaySet.images;\r\n  if (!images) {\r\n    return;\r\n  }\r\n\r\n  const numImages = images.length;\r\n  const imageIds = [];\r\n  let imageId;\r\n\r\n  displaySet.images.forEach((instance, imageIndex) => {\r\n    const image = instance.getData();\r\n    const metaData = {\r\n      instance: image, // in this context, instance will be the data of the InstanceMetadata object...\r\n      series: displaySet, // TODO: Check this\r\n      study,\r\n      numImages,\r\n      imageIndex: imageIndex + 1,\r\n    };\r\n\r\n    const naturalizedInstance = instance.getData().metadata;\r\n    const NumberOfFrames = naturalizedInstance.NumberOfFrames;\r\n\r\n    if (NumberOfFrames > 1) {\r\n      for (let i = 0; i < NumberOfFrames; i++) {\r\n        metaData.frameNumber = i;\r\n        imageId = getImageId(image, i);\r\n        imageIds.push(imageId);\r\n\r\n        const {\r\n          StudyInstanceUID,\r\n          SeriesInstanceUID,\r\n          SOPInstanceUID,\r\n        } = instance.getData().metadata;\r\n\r\n        metadataProvider.addImageIdToUIDs(imageId, {\r\n          StudyInstanceUID,\r\n          SeriesInstanceUID,\r\n          SOPInstanceUID,\r\n        });\r\n      }\r\n    } else {\r\n      metaData.frameNumber = 1;\r\n      imageId = getImageId(image);\r\n      imageIds.push(imageId);\r\n\r\n      const {\r\n        StudyInstanceUID,\r\n        SeriesInstanceUID,\r\n        SOPInstanceUID,\r\n      } = naturalizedInstance;\r\n\r\n      metadataProvider.addImageIdToUIDs(imageId, {\r\n        StudyInstanceUID,\r\n        SeriesInstanceUID,\r\n        SOPInstanceUID,\r\n      });\r\n    }\r\n  });\r\n\r\n  const stack = {\r\n    StudyInstanceUID: study.StudyInstanceUID,\r\n    displaySetInstanceUID: displaySet.displaySetInstanceUID,\r\n    imageIds,\r\n    frameRate: displaySet.frameRate,\r\n    isClip: displaySet.isClip,\r\n  };\r\n\r\n  stackMap[displaySet.displaySetInstanceUID] = stack;\r\n\r\n  return stack;\r\n}\r\n\r\nconfiguration = {\r\n  createAndAddStack,\r\n};\r\n\r\n/**\r\n * This object contains all the functions needed for interacting with the stack manager.\r\n * Generally, findStack is the only function used. If you want to know when new stacks\r\n * come in, you can register a callback with addStackUpdatedCallback.\r\n */\r\nconst StackManager = {\r\n  /**\r\n   * Removes all current stacks\r\n   */\r\n  clearStacks() {\r\n    stackMap = {};\r\n  },\r\n  /**\r\n   * Create a stack from an image set, as well as add in the metadata on a per image bases.\r\n   * @param study The study who's metadata will be added\r\n   * @param displaySet The set of images to make the stack from\r\n   * @return {Array} Array with image IDs\r\n   */\r\n  makeAndAddStack(study, displaySet) {\r\n    return configuration.createAndAddStack(\r\n      stackMap,\r\n      study,\r\n      displaySet,\r\n      stackUpdatedCallbacks\r\n    );\r\n  },\r\n  /**\r\n   * Find a stack from the currently created stacks.\r\n   * @param displaySetInstanceUID The UID of the stack to find.\r\n   * @returns {*} undefined if not found, otherwise the stack object is returned.\r\n   */\r\n  findStack(displaySetInstanceUID) {\r\n    return stackMap[displaySetInstanceUID];\r\n  },\r\n  /**\r\n   * Find a stack or reate one if it has not been created yet\r\n   * @param study The study who's metadata will be added\r\n   * @param displaySet The set of images to make the stack from\r\n   * @return {Array} Array with image IDs\r\n   */\r\n  findOrCreateStack(study, displaySet) {\r\n    let stack = this.findStack(displaySet.displaySetInstanceUID);\r\n\r\n    if (!stack || !stack.imageIds) {\r\n      stack = this.makeAndAddStack(study, displaySet);\r\n    }\r\n\r\n    return stack;\r\n  },\r\n  /**\r\n   * Gets the underlying map of displaySetInstanceUID to stack object.\r\n   * WARNING: Do not change this object. It directly affects the manager.\r\n   * @returns {{}} map of displaySetInstanceUID -> stack.\r\n   */\r\n  getAllStacks() {\r\n    return stackMap;\r\n  },\r\n  /**\r\n   * Adds in a callback to be called on a stack being added / updated.\r\n   * @param callback must accept at minimum one argument,\r\n   * which is the stack that was added / updated.\r\n   */\r\n  addStackUpdatedCallback(callback) {\r\n    if (typeof callback !== 'function') {\r\n      throw new OHIFError('callback must be provided as a function');\r\n    }\r\n    stackUpdatedCallbacks.push(callback);\r\n  },\r\n  /**\r\n   * Return configuration\r\n   */\r\n  getConfiguration() {\r\n    return configuration;\r\n  },\r\n  /**\r\n   * Set configuration, in order to provide compatibility\r\n   * with other systems by overriding this functions\r\n   * @param {Object} config object with functions to be overrided\r\n   *\r\n   * For now, only makeAndAddStack can be overrided\r\n   */\r\n  setConfiguration(config) {\r\n    configuration = config;\r\n  },\r\n};\r\n\r\nexport { StackManager };\r\nexport default StackManager;\r\n","import guid from '../utils/guid';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst PROPERTY_SEPARATOR = '.';\r\nconst ORDER_ASC = 'asc';\r\nconst ORDER_DESC = 'desc';\r\nconst MIN_COUNT = 0x00000000;\r\nconst MAX_COUNT = 0x7fffffff;\r\n\r\n/**\r\n * Class Definition\r\n */\r\nexport class TypeSafeCollection {\r\n  constructor() {\r\n    this._operationCount = MIN_COUNT;\r\n    this._elementList = [];\r\n    this._handlers = Object.create(null);\r\n  }\r\n\r\n  /**\r\n   * Private Methods\r\n   */\r\n\r\n  _invalidate() {\r\n    let count = this._operationCount;\r\n    this._operationCount = count < MAX_COUNT ? count + 1 : MIN_COUNT;\r\n  }\r\n\r\n  _elements(silent) {\r\n    silent === true || this._operationCount;\r\n    return this._elementList;\r\n  }\r\n\r\n  _elementWithPayload(payload, silent) {\r\n    return this._elements(silent).find(item => item.payload === payload);\r\n  }\r\n\r\n  _elementWithId(id, silent) {\r\n    return this._elements(silent).find(item => item.id === id);\r\n  }\r\n\r\n  _trigger(event, data) {\r\n    let handlers = this._handlers;\r\n    if (event in handlers) {\r\n      handlers = handlers[event];\r\n      if (!(handlers instanceof Array)) {\r\n        return;\r\n      }\r\n      for (let i = 0, limit = handlers.length; i < limit; ++i) {\r\n        let handler = handlers[i];\r\n        if (_isFunction(handler)) {\r\n          handler.call(null, data);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Public Methods\r\n   */\r\n\r\n  onInsert(callback) {\r\n    if (_isFunction(callback)) {\r\n      let handlers = this._handlers.insert;\r\n      if (!(handlers instanceof Array)) {\r\n        handlers = [];\r\n        this._handlers.insert = handlers;\r\n      }\r\n      handlers.push(callback);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the payload associated with the given ID to be the new supplied payload.\r\n   * @param {string} id The ID of the entry that will be updated.\r\n   * @param {any} payload The element that will replace the previous payload.\r\n   * @returns {boolean} Returns true if the given ID is present in the collection, false otherwise.\r\n   */\r\n  updateById(id, payload) {\r\n    let result = false,\r\n      found = this._elementWithPayload(payload, true);\r\n    if (found) {\r\n      // nothing to do since the element is already in the collection...\r\n      if (found.id === id) {\r\n        // set result to true since the ids match...\r\n        result = true;\r\n        this._invalidate();\r\n      }\r\n    } else {\r\n      found = this._elementWithId(id, true);\r\n      if (found) {\r\n        found.payload = payload;\r\n        result = true;\r\n        this._invalidate();\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Signal that the given element has been changed by notifying reactive data-source observers.\r\n   * This method is basically a means to invalidate the inernal reactive data-source.\r\n   * @param {any} payload The element that has been altered.\r\n   * @returns {boolean} Returns true if the element is present in the collection, false otherwise.\r\n   */\r\n  update(payload) {\r\n    let result = false,\r\n      found = this._elementWithPayload(payload, true);\r\n    if (found) {\r\n      // nothing to do since the element is already in the collection...\r\n      result = true;\r\n      this._invalidate();\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Insert an element in the collection. On success, the element ID (a unique string) is returned. On failure, returns null.\r\n   * A failure scenario only happens when the given payload is already present in the collection. Note that NO exceptions are thrown!\r\n   * @param {any} payload The element to be stored.\r\n   * @returns {string} The ID of the inserted element or null if the element already exists...\r\n   */\r\n  insert(payload) {\r\n    let id = null,\r\n      found = this._elementWithPayload(payload, true);\r\n    if (!found) {\r\n      id = guid();\r\n      this._elements(true).push({ id, payload });\r\n      this._invalidate();\r\n      this._trigger('insert', { id, data: payload });\r\n    }\r\n    return id;\r\n  }\r\n\r\n  /**\r\n   * Remove all elements from the collection.\r\n   * @returns {void} No meaningful value is returned.\r\n   */\r\n  removeAll() {\r\n    let all = this._elements(true),\r\n      length = all.length;\r\n    for (let i = length - 1; i >= 0; i--) {\r\n      let item = all[i];\r\n      delete item.id;\r\n      delete item.payload;\r\n      all[i] = null;\r\n    }\r\n    all.splice(0, length);\r\n    this._invalidate();\r\n  }\r\n\r\n  /**\r\n   * Remove elements from the collection that match the criteria given in the property map.\r\n   * @param {Object} propertyMap A property map that will be macthed against all collection elements.\r\n   * @returns {Array} A list with all removed elements.\r\n   */\r\n  remove(propertyMap) {\r\n    let found = this.findAllEntriesBy(propertyMap),\r\n      foundCount = found.length,\r\n      removed = [];\r\n    if (foundCount > 0) {\r\n      const all = this._elements(true);\r\n      for (let i = foundCount - 1; i >= 0; i--) {\r\n        let item = found[i];\r\n        all.splice(item[2], 1);\r\n        removed.push(item[0]);\r\n      }\r\n      this._invalidate();\r\n    }\r\n    return removed;\r\n  }\r\n\r\n  /**\r\n   * Provides the ID of the given element inside the collection.\r\n   * @param {any} payload The element being searched for.\r\n   * @returns {string} The ID of the given element or undefined if the element is not present.\r\n   */\r\n  getElementId(payload) {\r\n    let found = this._elementWithPayload(payload);\r\n    return found && found.id;\r\n  }\r\n\r\n  /**\r\n   * Provides the position of the given element in the internal list returning -1 if the element is not present.\r\n   * @param {any} payload The element being searched for.\r\n   * @returns {number} The position of the given element in the internal list. If the element is not present -1 is returned.\r\n   */\r\n  findById(id) {\r\n    let found = this._elementWithId(id);\r\n    return found && found.payload;\r\n  }\r\n\r\n  /**\r\n   * Provides the position of the given element in the internal list returning -1 if the element is not present.\r\n   * @param {any} payload The element being searched for.\r\n   * @returns {number} The position of the given element in the internal list. If the element is not present -1 is returned.\r\n   */\r\n  indexOfElement(payload) {\r\n    return this._elements().indexOf(this._elementWithPayload(payload, true));\r\n  }\r\n\r\n  /**\r\n   * Provides the position of the element associated with the given ID in the internal list returning -1 if the element is not present.\r\n   * @param {string} id The index of the element.\r\n   * @returns {number} The position of the element associated with the given ID in the internal list. If the element is not present -1 is returned.\r\n   */\r\n  indexOfId(id) {\r\n    return this._elements().indexOf(this._elementWithId(id, true));\r\n  }\r\n\r\n  /**\r\n   * Provides a list-like approach to the collection returning an element by index.\r\n   * @param {number} index The index of the element.\r\n   * @returns {any} If out of bounds, undefined is returned. Otherwise the element in the given position is returned.\r\n   */\r\n  getElementByIndex(index) {\r\n    let found = this._elements()[index >= 0 ? index : -1];\r\n    return found && found.payload;\r\n  }\r\n\r\n  /**\r\n   * Find an element by a criteria defined by the given callback function.\r\n   * Attention!!! The reactive source will not be notified if no valid callback is supplied...\r\n   * @param {function} callback A callback function which will define the search criteria. The callback\r\n   * function will be passed the collection element, its ID and its index in this very order. The callback\r\n   * shall return true when its criterea has been fulfilled.\r\n   * @returns {any} The matched element or undefined if not match was found.\r\n   */\r\n  find(callback) {\r\n    let found;\r\n    if (_isFunction(callback)) {\r\n      found = this._elements().find((item, index) => {\r\n        return callback.call(this, item.payload, item.id, index);\r\n      });\r\n    }\r\n    return found && found.payload;\r\n  }\r\n\r\n  /**\r\n   * Find the first element that strictly matches the specified property map.\r\n   * @param {Object} propertyMap A property map that will be macthed against all collection elements.\r\n   * @param {Object} options A set of options. Currently only \"options.sort\" option is supported.\r\n   * @param {Object.SortingSpecifier} options.sort An optional sorting specifier. If a sorting specifier is supplied\r\n   * but is not valid, an exception will be thrown.\r\n   * @returns {Any} The matched element or undefined if not match was found.\r\n   */\r\n  findBy(propertyMap, options) {\r\n    let found;\r\n    if (_isObject(options)) {\r\n      // if the \"options\" argument is provided and is a valid object,\r\n      // it must be applied to the dataset before search...\r\n      const all = this.all(options);\r\n      if (all.length > 0) {\r\n        if (_isObject(propertyMap)) {\r\n          found = all.find(item =>\r\n            _compareToPropertyMapStrict(propertyMap, item)\r\n          );\r\n        } else {\r\n          found = all[0]; // simply extract the first element...\r\n        }\r\n      }\r\n    } else if (_isObject(propertyMap)) {\r\n      found = this._elements().find(item =>\r\n        _compareToPropertyMapStrict(propertyMap, item.payload)\r\n      );\r\n      if (found) {\r\n        found = found.payload;\r\n      }\r\n    }\r\n    return found;\r\n  }\r\n\r\n  /**\r\n   * Find all elements that strictly match the specified property map.\r\n   * Attention!!! The reactive source will not be notified if no valid property map is supplied...\r\n   * @param {Object} propertyMap A property map that will be macthed against all collection elements.\r\n   * @returns {Array} An array of entries of all elements that match the given criteria. Each set in\r\n   * in the array has the following format: [ elementData, elementId, elementIndex ].\r\n   */\r\n  findAllEntriesBy(propertyMap) {\r\n    const found = [];\r\n    if (_isObject(propertyMap)) {\r\n      this._elements().forEach((item, index) => {\r\n        if (_compareToPropertyMapStrict(propertyMap, item.payload)) {\r\n          // Match! Add it to the found list...\r\n          found.push([item.payload, item.id, index]);\r\n        }\r\n      });\r\n    }\r\n    return found;\r\n  }\r\n\r\n  /**\r\n   * Find all elements that match a specified property map.\r\n   * Attention!!! The reactive source will not be notified if no valid property map is supplied...\r\n   * @param {Object} propertyMap A property map that will be macthed against all collection elements.\r\n   * @param {Object} options A set of options. Currently only \"options.sort\" option is supported.\r\n   * @param {Object.SortingSpecifier} options.sort An optional sorting specifier. If a sorting specifier is supplied\r\n   * but is not valid, an exception will be thrown.\r\n   * @returns {Array} An array with all elements that match the given criteria and sorted in the specified sorting order.\r\n   */\r\n  findAllBy(propertyMap, options) {\r\n    const found = this.findAllEntriesBy(propertyMap).map(item => item[0]); // Only payload is relevant...\r\n    if (_isObject(options)) {\r\n      if ('sort' in options) {\r\n        _sortListBy(found, options.sort);\r\n      }\r\n    }\r\n    return found;\r\n  }\r\n\r\n  /**\r\n   * Executes the supplied callback function for each element of the collection.\r\n   * Attention!!! The reactive source will not be notified if no valid property map is supplied...\r\n   * @param {function} callback The callback function to be executed. The callback is passed the element,\r\n   * its ID and its index in this very order.\r\n   * @returns {void} Nothing is returned.\r\n   */\r\n  forEach(callback) {\r\n    if (_isFunction(callback)) {\r\n      this._elements().forEach((item, index) => {\r\n        callback.call(this, item.payload, item.id, index);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Count the number of elements currently in the collection.\r\n   * @returns {number} The current number of elements in the collection.\r\n   */\r\n  count() {\r\n    return this._elements().length;\r\n  }\r\n\r\n  /**\r\n   * Returns a list with all elements of the collection optionally sorted by a sorting specifier criteria.\r\n   * @param {Object} options A set of options. Currently only \"options.sort\" option is supported.\r\n   * @param {Object.SortingSpecifier} options.sort An optional sorting specifier. If a sorting specifier is supplied\r\n   * but is not valid, an exception will be thrown.\r\n   * @returns {Array} An array with all elements stored in the collection.\r\n   */\r\n  all(options) {\r\n    let list = this._elements().map(item => item.payload);\r\n    if (_isObject(options)) {\r\n      if ('sort' in options) {\r\n        _sortListBy(list, options.sort);\r\n      }\r\n    }\r\n    return list;\r\n  }\r\n}\r\n\r\n/**\r\n * Utility Functions\r\n */\r\n\r\n/**\r\n * Test if supplied argument is a valid object for current class purposes.\r\n * Atention! The underscore version of this function should not be used for performance reasons.\r\n */\r\nfunction _isObject(subject) {\r\n  return (\r\n    subject instanceof Object ||\r\n    (typeof subject === 'object' && subject !== null)\r\n  );\r\n}\r\n\r\n/**\r\n * Test if supplied argument is a valid string for current class purposes.\r\n * Atention! The underscore version of this function should not be used for performance reasons.\r\n */\r\nfunction _isString(subject) {\r\n  return typeof subject === 'string';\r\n}\r\n\r\n/**\r\n * Test if supplied argument is a valid function for current class purposes.\r\n * Atention! The underscore version of this function should not be used for performance reasons.\r\n */\r\nfunction _isFunction(subject) {\r\n  return typeof subject === 'function';\r\n}\r\n\r\n/**\r\n * Shortcut for Object's prototype \"hasOwnProperty\" method.\r\n */\r\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n/**\r\n * Retrieve an object's property value by name. Composite property names (e.g., 'address.country.name') are accepted.\r\n * @param {Object} targetObject The object we want read the property from...\r\n * @param {String} propertyName The property to be read (e.g., 'address.street.name' or 'address.street.number'\r\n * to read object.address.street.name or object.address.street.number, respectively);\r\n * @returns {Any} Returns whatever the property holds or undefined if the property cannot be read or reached.\r\n */\r\nfunction _getPropertyValue(targetObject, propertyName) {\r\n  let propertyValue; // undefined (the default return value)\r\n  if (_isObject(targetObject) && _isString(propertyName)) {\r\n    const fragments = propertyName.split(PROPERTY_SEPARATOR);\r\n    const fragmentCount = fragments.length;\r\n    if (fragmentCount > 0) {\r\n      const firstFragment = fragments[0];\r\n      const remainingFragments =\r\n        fragmentCount > 1 ? fragments.slice(1).join(PROPERTY_SEPARATOR) : null;\r\n      propertyValue = targetObject[firstFragment];\r\n      if (remainingFragments !== null) {\r\n        propertyValue = _getPropertyValue(propertyValue, remainingFragments);\r\n      }\r\n    }\r\n  }\r\n  return propertyValue;\r\n}\r\n\r\n/**\r\n * Compare a property map with a target object using strict comparison.\r\n * @param {Object} propertyMap The property map whose properties will be used for comparison. Composite\r\n * property names (e.g., 'address.country.name') will be tested against the \"resolved\" properties from the target object.\r\n * @param {Object} targetObject The target object whose properties will be tested.\r\n * @returns {boolean} Returns true if the properties match, false otherwise.\r\n */\r\nfunction _compareToPropertyMapStrict(propertyMap, targetObject) {\r\n  let result = false;\r\n  // \"for in\" loops do not thown exceptions for invalid data types...\r\n  for (let propertyName in propertyMap) {\r\n    if (_hasOwnProperty.call(propertyMap, propertyName)) {\r\n      if (\r\n        propertyMap[propertyName] !==\r\n        _getPropertyValue(targetObject, propertyName)\r\n      ) {\r\n        result = false;\r\n        break;\r\n      } else if (result !== true) {\r\n        result = true;\r\n      }\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Checks if a sorting specifier is valid.\r\n * A valid sorting specifier consists of an array of arrays being each subarray a pair\r\n * in the format [\"property name\", \"sorting order\"].\r\n * The following exemple can be used to sort studies by \"date\"\" and use \"time\" to break ties in descending order.\r\n * [ [ 'study.date', 'desc' ], [ 'study.time', 'desc' ] ]\r\n * @param {Array} specifiers The sorting specifier to be tested.\r\n * @returns {boolean} Returns true if the specifiers are valid, false otherwise.\r\n */\r\nfunction _isValidSortingSpecifier(specifiers) {\r\n  let result = true;\r\n  if (specifiers instanceof Array && specifiers.length > 0) {\r\n    for (let i = specifiers.length - 1; i >= 0; i--) {\r\n      const item = specifiers[i];\r\n      if (item instanceof Array) {\r\n        const property = item[0];\r\n        const order = item[1];\r\n        if (\r\n          _isString(property) &&\r\n          (order === ORDER_ASC || order === ORDER_DESC)\r\n        ) {\r\n          continue;\r\n        }\r\n      }\r\n      result = false;\r\n      break;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Sorts an array based on sorting specifier options.\r\n * @param {Array} list The that needs to be sorted.\r\n * @param {Array} specifiers An array of specifiers. Please read isValidSortingSpecifier method definition for further details.\r\n * @returns {void} No value is returned. The array is sorted in place.\r\n */\r\nfunction _sortListBy(list, specifiers) {\r\n  if (list instanceof Array && _isValidSortingSpecifier(specifiers)) {\r\n    const specifierCount = specifiers.length;\r\n    list.sort(function _sortListByCallback(a, b) {\r\n      // callback name for stack traces...\r\n      let index = 0;\r\n      while (index < specifierCount) {\r\n        const specifier = specifiers[index];\r\n        const property = specifier[0];\r\n        const order = specifier[1] === ORDER_DESC ? -1 : 1;\r\n        const aValue = _getPropertyValue(a, property);\r\n        const bValue = _getPropertyValue(b, property);\r\n        // @TODO: should we check for the types being compared, like:\r\n        // ~~ if (typeof aValue !== typeof bValue) continue;\r\n        // Not sure because dates, for example, can be correctly compared to numbers...\r\n        if (aValue < bValue) {\r\n          return order * -1;\r\n        }\r\n        if (aValue > bValue) {\r\n          return order * 1;\r\n        }\r\n        if (++index >= specifierCount) {\r\n          return 0;\r\n        }\r\n      }\r\n    });\r\n  } else {\r\n    throw new Error('Invalid Arguments');\r\n  }\r\n}\r\n","const displayFunction = data => {\r\n  return data.text || '';\r\n};\r\n\r\nexport const arrowAnnotate = {\r\n  id: 'ArrowAnnotate',\r\n  name: 'ArrowAnnotate',\r\n  toolGroup: 'allTools',\r\n  cornerstoneToolType: 'ArrowAnnotate',\r\n  options: {\r\n    measurementTable: {\r\n      displayFunction,\r\n    },\r\n    caseProgress: {\r\n      include: true,\r\n      evaluate: true,\r\n    },\r\n  },\r\n};\r\n","const displayFunction = data => {\r\n  if (data.shortestDiameter) {\r\n    // TODO: Make this check criteria again to see if we should display shortest x longest\r\n    return data.longestDiameter + ' x ' + data.shortestDiameter;\r\n  }\r\n\r\n  return data.longestDiameter;\r\n};\r\n\r\nexport const bidirectional = {\r\n  id: 'Bidirectional',\r\n  name: 'Target',\r\n  toolGroup: 'allTools',\r\n  cornerstoneToolType: 'Bidirectional',\r\n  options: {\r\n    measurementTable: {\r\n      displayFunction,\r\n    },\r\n    caseProgress: {\r\n      include: true,\r\n      evaluate: true,\r\n    },\r\n  },\r\n};\r\n","const displayFunction = data => {\r\n  let meanValue = '';\r\n  const { cachedStats } = data;\r\n  if (cachedStats && cachedStats.mean && !isNaN(cachedStats.mean)) {\r\n    meanValue = cachedStats.mean.toFixed(2) + ' HU';\r\n  }\r\n  return meanValue;\r\n};\r\n\r\nexport const ellipticalRoi = {\r\n  id: 'EllipticalRoi',\r\n  name: 'Ellipse',\r\n  toolGroup: 'allTools',\r\n  cornerstoneToolType: 'EllipticalRoi',\r\n  options: {\r\n    measurementTable: {\r\n      displayFunction,\r\n    },\r\n    caseProgress: {\r\n      include: true,\r\n      evaluate: true,\r\n    },\r\n  },\r\n};\r\n","const displayFunction = data => {\r\n  let meanValue = '';\r\n  const { cachedStats } = data;\r\n  if (cachedStats && cachedStats.mean && !isNaN(cachedStats.mean)) {\r\n    meanValue = cachedStats.mean.toFixed(2) + ' HU';\r\n  }\r\n  return meanValue;\r\n};\r\n\r\nexport const circleRoi = {\r\n  id: 'CircleRoi',\r\n  name: 'Circle',\r\n  toolGroup: 'allTools',\r\n  cornerstoneToolType: 'CircleRoi',\r\n  options: {\r\n    measurementTable: {\r\n      displayFunction,\r\n    },\r\n    caseProgress: {\r\n      include: true,\r\n      evaluate: true,\r\n    },\r\n  },\r\n};\r\n","const displayFunction = data => {\r\n  let meanValue = '';\r\n  if (data.meanStdDev && data.meanStdDev.mean && !isNaN(data.meanStdDev.mean)) {\r\n    meanValue = data.meanStdDev.mean.toFixed(2) + ' HU';\r\n  }\r\n  return meanValue;\r\n};\r\n\r\nexport const freehandMouse = {\r\n  id: 'FreehandMouse',\r\n  name: 'Freehand',\r\n  toolGroup: 'allTools',\r\n  cornerstoneToolType: 'FreehandMouse',\r\n  options: {\r\n    measurementTable: {\r\n      displayFunction,\r\n    },\r\n    caseProgress: {\r\n      include: true,\r\n      evaluate: true,\r\n    },\r\n  },\r\n};\r\n","const displayFunction = data => {\r\n  let lengthValue = '';\r\n  if (data.length && !isNaN(data.length)) {\r\n    lengthValue = data.length.toFixed(2) + ' mm';\r\n  }\r\n  return lengthValue;\r\n};\r\n\r\nexport const length = {\r\n  id: 'Length',\r\n  name: 'Length',\r\n  toolGroup: 'allTools',\r\n  cornerstoneToolType: 'Length',\r\n  options: {\r\n    measurementTable: {\r\n      displayFunction,\r\n    },\r\n    caseProgress: {\r\n      include: true,\r\n      evaluate: true,\r\n    },\r\n  },\r\n};\r\n","export const nonTarget = {\r\n  id: 'NonTarget',\r\n  name: 'Non-Target',\r\n  toolGroup: 'allTools',\r\n  cornerstoneToolType: 'NonTarget',\r\n  options: {\r\n    measurementTable: {\r\n      displayFunction: data => data.response,\r\n    },\r\n    caseProgress: {\r\n      include: true,\r\n      evaluate: true,\r\n    },\r\n  },\r\n};\r\n","const displayFunction = data => {\r\n  let meanValue = '';\r\n  const { cachedStats } = data;\r\n  if (cachedStats && cachedStats.mean && !isNaN(cachedStats.mean)) {\r\n    meanValue = cachedStats.mean.toFixed(2) + ' HU';\r\n  }\r\n  return meanValue;\r\n};\r\n\r\nexport const rectangleRoi = {\r\n  id: 'RectangleRoi',\r\n  name: 'Rectangle',\r\n  toolGroup: 'allTools',\r\n  cornerstoneToolType: 'RectangleRoi',\r\n  options: {\r\n    measurementTable: {\r\n      displayFunction,\r\n    },\r\n    caseProgress: {\r\n      include: true,\r\n      evaluate: true,\r\n    },\r\n  },\r\n};\r\n","const displayFunction = data => {\r\n  let text = '';\r\n  if (data.rAngle && !isNaN(data.rAngle)) {\r\n    text = data.rAngle.toFixed(2) + String.fromCharCode(parseInt('00B0', 16));\r\n  }\r\n  return text;\r\n};\r\n\r\nexport const angle = {\r\n  id: 'Angle',\r\n  name: 'Angle',\r\n  toolGroup: 'allTools',\r\n  cornerstoneToolType: 'Angle',\r\n  options: {\r\n    measurementTable: {\r\n      displayFunction,\r\n    },\r\n    caseProgress: {\r\n      include: true,\r\n      evaluate: true,\r\n    },\r\n  },\r\n};\r\n","export const targetCR = {\r\n  id: 'TargetCR',\r\n  name: 'CR Target',\r\n  toolGroup: 'allTools',\r\n  cornerstoneToolType: 'TargetCR',\r\n  options: {\r\n    measurementTable: {\r\n      displayFunction: data => data.response,\r\n    },\r\n    caseProgress: {\r\n      include: true,\r\n      evaluate: true,\r\n    },\r\n  },\r\n};\r\n","export const targetNE = {\r\n  id: 'TargetNE',\r\n  name: 'NE Target',\r\n  toolGroup: 'allTools',\r\n  cornerstoneToolType: 'TargetNE',\r\n  options: {\r\n    measurementTable: {\r\n      displayFunction: data => data.response,\r\n    },\r\n    caseProgress: {\r\n      include: true,\r\n      evaluate: true,\r\n    },\r\n  },\r\n};\r\n","export const targetUN = {\r\n  id: 'TargetUN',\r\n  name: 'UN Target',\r\n  toolGroup: 'allTools',\r\n  cornerstoneToolType: 'TargetUN',\r\n  options: {\r\n    measurementTable: {\r\n      displayFunction: data => data.response,\r\n    },\r\n    caseProgress: {\r\n      include: true,\r\n      evaluate: true,\r\n    },\r\n  },\r\n};\r\n","export const dicomSRDisplayTool = {\r\n  id: 'DICOMSRDisplayTool',\r\n  name: 'DICOMSRDisplayTool',\r\n  toolGroup: 'allTools',\r\n  cornerstoneToolType: 'DICOMSRDisplayTool',\r\n  options: {\r\n    measurementTable: {\r\n      displayFunction: data => {\r\n        return `(SR) ${data.lesionNamingNumber ||\r\n          data.measurementNumber ||\r\n          data.text ||\r\n          ''}`;\r\n      },\r\n    },\r\n    caseProgress: {\r\n      include: true,\r\n      evaluate: true,\r\n    },\r\n  },\r\n};\r\n\r\nexport default dicomSRDisplayTool;\r\n","import * as tools from '../tools';\r\n\r\nconst childTools = [];\r\nObject.keys(tools).forEach(key => childTools.push(tools[key]));\r\n\r\nexport const allTools = {\r\n  id: 'allTools',\r\n  name: 'Measurements',\r\n  childTools: childTools,\r\n  options: {\r\n    caseProgress: {\r\n      include: true,\r\n      evaluate: true,\r\n    },\r\n  },\r\n};\r\n","import { allTools } from './toolGroups/allTools';\r\nimport {\r\n  retrieveMeasurements,\r\n  storeMeasurements,\r\n  retrieveTimepoints,\r\n  storeTimepoints,\r\n  removeTimepoint,\r\n  updateTimepoint,\r\n  disassociateStudy,\r\n} from './dataExchange';\r\n\r\nconst measurementApiDefaultConfig = {\r\n  measurementTools: [allTools],\r\n  newLesions: [\r\n    {\r\n      id: 'newTargets',\r\n      name: 'New Targets',\r\n      toolGroupId: 'targets',\r\n    },\r\n    {\r\n      id: 'newNonTargets',\r\n      name: 'New Non-Targets',\r\n      toolGroupId: 'nonTargets',\r\n    },\r\n  ],\r\n  dataExchange: {\r\n    retrieve: retrieveMeasurements,\r\n    store: storeMeasurements,\r\n  },\r\n};\r\n\r\nconst timepointApiDefaultConfig = {\r\n  dataExchange: {\r\n    retrieve: retrieveTimepoints,\r\n    store: storeTimepoints,\r\n    remove: removeTimepoint,\r\n    update: updateTimepoint,\r\n    disassociate: disassociateStudy,\r\n  },\r\n};\r\n\r\nexport { measurementApiDefaultConfig, timepointApiDefaultConfig };\r\n","import log from '../log';\r\n\r\nexport const retrieveMeasurements = (PatientID, timepointIds) => {\r\n  log.error('retrieveMeasurements');\r\n  return Promise.resolve();\r\n};\r\n\r\nexport const storeMeasurements = (measurementData, timepointIds) => {\r\n  log.error('storeMeasurements');\r\n  return Promise.resolve();\r\n};\r\n\r\nexport const retrieveTimepoints = filter => {\r\n  log.error('retrieveTimepoints');\r\n  return Promise.resolve();\r\n};\r\n\r\nexport const storeTimepoints = timepointData => {\r\n  log.error('storeTimepoints');\r\n  return Promise.resolve();\r\n};\r\n\r\nexport const updateTimepoint = (timepointData, query) => {\r\n  log.error('updateTimepoint');\r\n  return Promise.resolve();\r\n};\r\n\r\nexport const removeTimepoint = timepointId => {\r\n  log.error('removeTimepoint');\r\n  return Promise.resolve();\r\n};\r\n\r\nexport const disassociateStudy = (timepointIds, StudyInstanceUID) => {\r\n  log.error('disassociateStudy');\r\n  return Promise.resolve();\r\n};\r\n","import log from '../../log';\r\nimport { timepointApiDefaultConfig } from './../configuration.js';\r\n\r\nconst configuration = {\r\n  ...timepointApiDefaultConfig,\r\n};\r\n\r\nconst TIMEPOINT_TYPE_NAMES = {\r\n  prebaseline: 'Pre-Baseline',\r\n  baseline: 'Baseline',\r\n  followup: 'Follow-up',\r\n};\r\n\r\nexport default class TimepointApi {\r\n  static Instance;\r\n\r\n  static setConfiguration(config) {\r\n    Object.assign(configuration, config);\r\n  }\r\n\r\n  static getConfiguration() {\r\n    return configuration;\r\n  }\r\n\r\n  constructor(currentTimepointId, options = {}) {\r\n    if (TimepointApi.Instance) {\r\n      TimepointApi.Instance.initialize(currentTimepointId, options);\r\n      return TimepointApi.Instance;\r\n    }\r\n\r\n    this.initialize(currentTimepointId, options);\r\n    TimepointApi.Instance = this;\r\n  }\r\n\r\n  initialize(currentTimepointId, options = {}) {\r\n    this.currentTimepointId = currentTimepointId;\r\n    this.comparisonTimepointKey = options.comparisonTimepointKey || 'baseline';\r\n    this.options = options;\r\n    this.timepoints = [];\r\n  }\r\n\r\n  onTimepointsUpdated() {\r\n    if (typeof this.options.onTimepointsUpdated !== 'function') {\r\n      log.warn('Timepoints update callback is not defined');\r\n      return;\r\n    }\r\n\r\n    this.options.onTimepointsUpdated(Object.assign([], this.timepoints));\r\n  }\r\n\r\n  calculateVisitNumber(timepoint) {\r\n    // Retrieve all of the relevant follow-up timepoints for this patient\r\n    const sortedTimepoints = this.timepoints.sort((tp1, tp2) => {\r\n      return tp1.visitDate > tp2.visitDate ? 1 : -1;\r\n    });\r\n    const filteredTimepoints = sortedTimepoints.find(\r\n      tp =>\r\n        tp.PatientID === timepoint.PatientID &&\r\n        tp.timepointType === timepoint.timepointType\r\n    );\r\n\r\n    // Create an array of just timepointIds, so we can use indexOf\r\n    // on it to find the current timepoint's relative position\r\n    const timepointIds = filteredTimepoints.map(\r\n      timepoint => timepoint.timepointId\r\n    );\r\n\r\n    // Calculate the index of the current timepoint in the array of all\r\n    // relevant follow-up timepoints\r\n    const visitNumber = timepointIds.indexOf(timepoint.timepointId) + 1;\r\n\r\n    // If visitNumber is 0, it means that the current timepoint was not in the list\r\n    if (!visitNumber) {\r\n      throw new Error(\r\n        'Current timepoint was not in the list of relevant timepoints?'\r\n      );\r\n    }\r\n\r\n    return visitNumber;\r\n  }\r\n\r\n  retrieveTimepoints(filter) {\r\n    const retrievalFn = configuration.dataExchange.retrieve;\r\n    if (typeof retrievalFn !== 'function') {\r\n      log.error('Timepoint retrieval function has not been configured.');\r\n      return;\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      retrievalFn(filter)\r\n        .then(timepointData => {\r\n          log.info('Timepoint data retrieval');\r\n\r\n          timepointData.forEach(timepoint => {\r\n            const timepointIndex = this.timepoints.findIndex(\r\n              tp => tp.timepointId === timepoint.timepointId\r\n            );\r\n            if (timepointIndex < 0) {\r\n              this.timepoints.push(timepoint);\r\n            } else {\r\n              this.timepoints[timepointIndex] = timepoint;\r\n            }\r\n          });\r\n\r\n          // Let others know that the timepoints are updated\r\n          this.onTimepointsUpdated();\r\n\r\n          resolve();\r\n        })\r\n        .catch(reason => {\r\n          log.error(`Timepoint retrieval function failed: ${reason}`);\r\n          reject(reason);\r\n        });\r\n    });\r\n  }\r\n\r\n  storeTimepoints() {\r\n    const storeFn = configuration.dataExchange.store;\r\n    if (typeof storeFn !== 'function') {\r\n      log.error('Timepoint store function has not been configured.');\r\n      return;\r\n    }\r\n\r\n    log.info('Preparing to store timepoints');\r\n    log.info(JSON.stringify(this.timepoints, null, 2));\r\n\r\n    storeFn(this.timepoints).then(() =>\r\n      log.info('Timepoint storage completed')\r\n    );\r\n  }\r\n\r\n  disassociateStudy(timepointIds, StudyInstanceUID) {\r\n    const disassociateFn = configuration.dataExchange.disassociate;\r\n    if (typeof disassociateFn !== 'function') {\r\n      log.error('Study disassociate function has not been configured.');\r\n      return;\r\n    }\r\n\r\n    disassociateFn(timepointIds, StudyInstanceUID).then(() => {\r\n      log.info('Disassociation completed');\r\n\r\n      this.timepoints = [];\r\n      this.retrieveTimepoints({});\r\n    });\r\n  }\r\n\r\n  removeTimepoint(timepointId) {\r\n    const removeFn = configuration.dataExchange.remove;\r\n    if (typeof removeFn !== 'function') {\r\n      log.error('Timepoint remove function has not been configured.');\r\n      return;\r\n    }\r\n\r\n    const timepointData = {\r\n      timepointId,\r\n    };\r\n\r\n    log.info('Preparing to remove timepoint');\r\n    log.info(JSON.stringify(timepointData, null, 2));\r\n\r\n    removeFn(timepointData).then(() => {\r\n      log.info('Timepoint removal completed');\r\n\r\n      const tpIndex = this.timepoints.findIndex(\r\n        tp => tp.timepointId === timepointId\r\n      );\r\n      if (tpIndex > -1) {\r\n        this.timepoints.splice(tpIndex, 1);\r\n      }\r\n\r\n      // Let others know that the timepoints are updated\r\n      this.onTimepointsUpdated();\r\n    });\r\n  }\r\n\r\n  updateTimepoint(timepointId, query) {\r\n    const updateFn = configuration.dataExchange.update;\r\n    if (typeof updateFn !== 'function') {\r\n      log.error('Timepoint update function has not been configured.');\r\n      return;\r\n    }\r\n\r\n    const timepointData = {\r\n      timepointId,\r\n    };\r\n\r\n    log.info('Preparing to update timepoint');\r\n    log.info(JSON.stringify(timepointData, null, 2));\r\n    log.info(JSON.stringify(query, null, 2));\r\n\r\n    updateFn(timepointData, query).then(() => {\r\n      log.info('Timepoint updated completed');\r\n\r\n      const tpIndex = this.timepoints.findIndex(\r\n        tp => tp.timepointId === timepointId\r\n      );\r\n      if (tpIndex > -1) {\r\n        this.timepoints[tpIndex] = Object.assign(\r\n          {},\r\n          this.timepoints[tpIndex],\r\n          query\r\n        );\r\n      }\r\n\r\n      // Let others know that the timepoints are updated\r\n      this.onTimepointsUpdated();\r\n    });\r\n  }\r\n\r\n  // Return all timepoints\r\n  all(filter) {\r\n    let timepointsToReturn;\r\n    if (filter) {\r\n      timepointsToReturn = this.timepoints.filter(filter);\r\n    } else {\r\n      timepointsToReturn = this.timepoints;\r\n    }\r\n\r\n    return timepointsToReturn.sort((tp1, tp2) => {\r\n      return tp1.visitDate < tp2.visitDate ? 1 : -1;\r\n    });\r\n  }\r\n\r\n  // Return only the current timepoint\r\n  current() {\r\n    return this.timepoints.find(\r\n      tp => tp.timepointId === this.currentTimepointId\r\n    );\r\n  }\r\n\r\n  lock() {\r\n    const tpIndex = this.timepoints.findIndex(\r\n      tp => tp.timepointId === this.currentTimepointId\r\n    );\r\n    if (tpIndex < 0) {\r\n      return;\r\n    }\r\n\r\n    this.timepoints[tpIndex] = Object.assign({}, this.timepoints[tpIndex], {\r\n      locked: true,\r\n    });\r\n  }\r\n\r\n  // Return the prior timepoint\r\n  prior() {\r\n    const current = this.current();\r\n    if (!current) {\r\n      return;\r\n    }\r\n\r\n    return this.all().find(tp => tp.visitDate < current.visitDate);\r\n  }\r\n\r\n  // Return only the current and prior timepoints\r\n  currentAndPrior() {\r\n    const timepoints = [];\r\n\r\n    const current = this.current();\r\n    if (current) {\r\n      timepoints.push(current);\r\n    }\r\n\r\n    const prior = this.prior();\r\n    if (current && prior && prior.timepointId !== current.timepointId) {\r\n      timepoints.push(prior);\r\n    }\r\n\r\n    return timepoints;\r\n  }\r\n\r\n  // Return the current and the comparison timepoints\r\n  currentAndComparison(comparisonTimepointKey = this.comparisonTimepointKey) {\r\n    const current = this.current();\r\n    const comparisonTimepoint = this.comparison(comparisonTimepointKey);\r\n    const timepoints = [current];\r\n\r\n    if (\r\n      comparisonTimepoint &&\r\n      !timepoints.find(tp => tp.timepointId === comparisonTimepoint.timepointId)\r\n    ) {\r\n      timepoints.push(comparisonTimepoint);\r\n    }\r\n\r\n    return timepoints;\r\n  }\r\n\r\n  /**\r\n   * Return true if there are 2 or more baseline timepoints before and at the current timepoint, otherwise false\r\n   * @returns {boolean}\r\n   */\r\n  isRebaseline(timepointId) {\r\n    const current = timepointId\r\n      ? this.timepoints.find(tp => tp.timepointId === timepointId)\r\n      : this.current();\r\n    if (!current) {\r\n      return false;\r\n    }\r\n\r\n    const baselines = this.timepoints.filter(\r\n      tp => tp.timepointType === 'baseline' && tp.visitDate <= current.visitDate\r\n    );\r\n    return baselines.length > 1;\r\n  }\r\n\r\n  /**\r\n   * Return the next (closest future) baseline after current timepoint\r\n   * @returns {*}\r\n   */\r\n  nextBaselineAfterCurrent() {\r\n    let current = this.current();\r\n\r\n    //  Get all next timepoints newer than the current timepoint sorted by visitDate ascending\r\n    const sortedTimepoints = this.timepoints.sort((tp1, tp2) => {\r\n      return tp1.visitDate > tp2.visitDate ? 1 : -1;\r\n    });\r\n    return sortedTimepoints.find(\r\n      tp => tp.visitDate > current.visitDate && tp.timepointType === 'baseline'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Set the current timepoint id\r\n   * @param timepointId\r\n   */\r\n  setCurrentTimepointId(timepointId) {\r\n    this.currentTimepointId = timepointId;\r\n  }\r\n\r\n  /**\r\n   * Set the comparison timepoint that overrides the default comparison timepoint (called based on user selection in a viewport)\r\n   * @param timepoint\r\n   */\r\n  setUserComparison(timepoint) {\r\n    this.userComparison = timepoint;\r\n  }\r\n\r\n  /**\r\n   * Return only the comparison timepoint\r\n   * @param {String} [comparisonTimepointKey]\r\n   * @return {*}\r\n   */\r\n  comparison(comparisonTimepointKey = this.comparisonTimepointKey) {\r\n    // Return the comparison timepoint set by user if exists\r\n    if (this.userComparison) {\r\n      return this.userComparison;\r\n    }\r\n\r\n    const current = this.current();\r\n    if (!current) {\r\n      return;\r\n    }\r\n\r\n    // If current timepoint is prebaseline, the first (closest future) BL after current is comparison regardless of default comparison timepoint\r\n    if (current.timepointType === 'prebaseline') {\r\n      const nextBaselineAfterCurrent = this.nextBaselineAfterCurrent();\r\n      // If there is a next baseline, make it comparison, otherwise comparison is done by default comparison timepoint\r\n      if (nextBaselineAfterCurrent) {\r\n        return nextBaselineAfterCurrent;\r\n      }\r\n    }\r\n\r\n    // If current timepoint is baseline, the prior is comparison if exists regardless of default comparison timepoint\r\n    if (current.timepointType === 'baseline') {\r\n      const prior = this.prior();\r\n      if (prior) {\r\n        return prior;\r\n      }\r\n    }\r\n\r\n    const comparison = this[comparisonTimepointKey]();\r\n\r\n    // Do not return a comparison if it would be identical to\r\n    // the current.\r\n    if (comparison && comparison.timepointId === current.timepointId) {\r\n      return;\r\n    }\r\n\r\n    return comparison;\r\n  }\r\n\r\n  /**\r\n   * Return the latest initial (prebaseline or baseline) timepoint after current and before the next followup timepoint\r\n   * @returns {*}\r\n   */\r\n  latestInitialTimepointAfterCurrent() {\r\n    let currentTimepoint = this.current();\r\n\r\n    //  Skip if the current timepoint is FU since there is no initial timepoint after follow-up\r\n    if (currentTimepoint.timepointType === 'followup') {\r\n      return;\r\n    }\r\n\r\n    //  Get all next timepoints newer than the current timepoint sorted by visitDate ascending\r\n    const sortedTimepoints = this.timepoints.sort((tp1, tp2) => {\r\n      return tp1.visitDate > tp2.visitDate ? 1 : -1;\r\n    });\r\n    const allNextTimepoints = sortedTimepoints.filter(\r\n      tp => tp.visitDate > currentTimepoint.visitDate\r\n    );\r\n\r\n    const nextFollowupIndex = allNextTimepoints.findIndex(\r\n      tp => tp.timepointType === 'followup'\r\n    );\r\n    const latestInitialBeforeNextFUIndex = nextFollowupIndex - 1;\r\n\r\n    if (latestInitialBeforeNextFUIndex < 0) {\r\n      //  There is no FU and all next timepoints are initial, so return the last one\r\n      return allNextTimepoints[allNextTimepoints.length - 1];\r\n    }\r\n\r\n    //  Return the latest initial timepoint before the next FU\r\n    return allNextTimepoints[latestInitialBeforeNextFUIndex];\r\n  }\r\n\r\n  /**\r\n   * Return timepoint ids of initial timepoints which are prebaseline and baseline\r\n   * @returns {*}\r\n   */\r\n  initialTimepointIds() {\r\n    let timepointToCheck = this.current();\r\n\r\n    //  If the current timepoint is PBL or BL, then get the recent PBL/BL of the current timepoint by its first FU\r\n    //      If it does not exist, then there is no newer initial timepoint, so the current timepoint is used to determine initial timepoint ids\r\n    if (\r\n      timepointToCheck.timepointType === 'prebaseline' ||\r\n      timepointToCheck.timepointType === 'baseline'\r\n    ) {\r\n      timepointToCheck =\r\n        this.latestInitialTimepointAfterCurrent() || timepointToCheck;\r\n    }\r\n\r\n    const visitDateToCheck = timepointToCheck.visitDate;\r\n\r\n    const preBaselineTimepoints =\r\n      this.timepoints.filter(\r\n        tp =>\r\n          tp.timepointType === 'prebaseline' && tp.visitDate <= visitDateToCheck\r\n      ) || [];\r\n    const preBaselineTimepointIds = preBaselineTimepoints.map(\r\n      timepoint => timepoint.timepointId\r\n    );\r\n\r\n    const baselineTimepoints =\r\n      this.timepoints.filter(\r\n        tp =>\r\n          tp.timepointType === 'baseline' && tp.visitDate <= visitDateToCheck\r\n      ) || [];\r\n    const baselineTimepointIds = baselineTimepoints.map(\r\n      timepoint => timepoint.timepointId\r\n    );\r\n\r\n    return preBaselineTimepointIds.concat(baselineTimepointIds);\r\n  }\r\n\r\n  // Return only the baseline timepoint\r\n  baseline() {\r\n    const currentVisitDate = this.current().visitDate;\r\n    return this.all().find(\r\n      tp => tp.timepointType === 'baseline' && tp.visitDate <= currentVisitDate\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return only the nadir timepoint. Must be prior to the current timepoint\r\n   * @return {any}\r\n   */\r\n  nadir() {\r\n    const current = this.current();\r\n    const nadir = this.all().find(\r\n      tp =>\r\n        tp.timepointId !== current.timepointId &&\r\n        tp.timepointKey === 'nadir' &&\r\n        tp.visitDate <= current.visitDate\r\n    );\r\n\r\n    // If we have found a nadir, return that\r\n    if (nadir) {\r\n      return nadir;\r\n    }\r\n\r\n    // Otherwise, return the most recent baseline\r\n    // This should only happen if we are only at FU1,\r\n    // so the baseline is the nadir.\r\n    return this.baseline();\r\n  }\r\n\r\n  // Return only the key timepoints (current, prior, nadir and baseline)\r\n  key() {\r\n    const result = [this.current()];\r\n    const prior = this.prior();\r\n    const nadir = this.nadir();\r\n    const baseline = this.baseline();\r\n\r\n    const resultIncludes = timepoint =>\r\n      !!result.find(x => x.timepointId === timepoint.timepointId);\r\n\r\n    if (prior && resultIncludes(prior) === false) {\r\n      result.push(prior);\r\n    }\r\n\r\n    if (nadir && resultIncludes(nadir) === false) {\r\n      result.push(nadir);\r\n    }\r\n\r\n    if (baseline && resultIncludes(baseline) === false) {\r\n      result.push(baseline);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  // Return only the timepoints for the given study\r\n  study(StudyInstanceUID) {\r\n    return this.all().filter(timepoint =>\r\n      timepoint.studyInstanceUIDs.includes(StudyInstanceUID)\r\n    );\r\n  }\r\n\r\n  // Return the timepoint's name\r\n  name(timepoint) {\r\n    const timepointTypeName = TIMEPOINT_TYPE_NAMES[timepoint.timepointType];\r\n\r\n    // Check if this is a Baseline timepoint, if it is, return 'Baseline'\r\n    if (timepoint.timepointType === 'baseline') {\r\n      return 'Baseline';\r\n    } else if (timepoint.visitNumber) {\r\n      return `${timepointTypeName} ${timepoint.visitNumber}`;\r\n    }\r\n\r\n    const visitNumber = this.calculateVisitNumber(timepoint);\r\n\r\n    // Return the timepoint name as 'Follow-up N'\r\n    return `${timepointTypeName} ${visitNumber}`;\r\n  }\r\n\r\n  // Build the timepoint title based on its date\r\n  title(timepoint) {\r\n    const timepointName = this.name(timepoint);\r\n\r\n    const all = this.all();\r\n    let index = -1;\r\n    let currentIndex = null;\r\n    for (let i = 0; i < all.length; i++) {\r\n      const currentTimepoint = all[i];\r\n\r\n      // Skip the iterations until we can't find the selected timepoint on study list\r\n      if (this.currentTimepointId === currentTimepoint.timepointId) {\r\n        currentIndex = 0;\r\n      }\r\n\r\n      if (currentIndex !== null) {\r\n        index = currentIndex++;\r\n      }\r\n\r\n      // Break the loop if reached the timepoint to get the title\r\n      if (currentTimepoint.timepointId === timepoint.timepointId) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    const states = {\r\n      0: ['Current'],\r\n      1: ['Prior'],\r\n    };\r\n    const parenthesis = states[index] || [];\r\n    const nadir = this.nadir();\r\n\r\n    if (nadir && nadir.timepointId === timepoint.timepointId) {\r\n      parenthesis.push('Nadir');\r\n    }\r\n\r\n    let parenthesisText = '';\r\n    if (parenthesis.length) {\r\n      parenthesisText = `(${parenthesis.join(', ')})`;\r\n    }\r\n\r\n    return `${timepointName} ${parenthesisText}`;\r\n  }\r\n}\r\n","export default function(measurement) {\r\n  if (!measurement) {\r\n    return;\r\n  }\r\n\r\n  switch (measurement.toolType) {\r\n    case 'Bidirectional':\r\n    case 'TargetCR':\r\n    case 'TargetNE':\r\n    case 'TargetUN':\r\n      return `Target ${measurement.lesionNamingNumber}`;\r\n    case 'NonTarget':\r\n      return `Non-Target ${measurement.lesionNamingNumber}`;\r\n  }\r\n}\r\n","export default function(measurement) {\r\n  return measurement.description;\r\n}\r\n","import studyMetadataManager from '../../utils/studyMetadataManager';\r\n\r\nexport default function(imagePath, thumbnail = false) {\r\n  const [\r\n    StudyInstanceUID,\r\n    SeriesInstanceUID,\r\n    SOPInstanceUID,\r\n    frameIndex,\r\n  ] = imagePath.split('_');\r\n  const studyMetadata = studyMetadataManager.get(StudyInstanceUID);\r\n  const series = studyMetadata.getSeriesByUID(SeriesInstanceUID);\r\n  const instance = series.getInstanceByUID(SOPInstanceUID);\r\n  return instance.getImageId(frameIndex, thumbnail);\r\n}\r\n","import cornerstoneTools from 'cornerstone-tools';\r\nimport cornerstone from 'cornerstone-core';\r\nimport log from '../../log';\r\nimport getLabel from '../lib/getLabel';\r\nimport getDescription from '../lib/getDescription';\r\nimport getImageIdForImagePath from '../lib/getImageIdForImagePath';\r\nimport guid from '../../utils/guid';\r\nimport studyMetadataManager from '../../utils/studyMetadataManager';\r\nimport { measurementApiDefaultConfig } from './../configuration.js';\r\n\r\nconst configuration = {\r\n  ...measurementApiDefaultConfig,\r\n};\r\n\r\nexport default class MeasurementApi {\r\n  static Instance;\r\n\r\n  /**\r\n   * Set configuration: It should merge default configuration with any new one\r\n   *\r\n   * @static\r\n   * @param {Object} config\r\n   * @param {Object} config.server\r\n   * @param {string} config.server.type - The server type\r\n   * @param {string} config.server.wadoRoot - The server wado URL root\r\n   * @param {Array} config.measurementTools\r\n   * @param {string} config.measurementTools[].id - The tool group id\r\n   * @param {string} config.measurementTools[].name - The tool group name\r\n   * @param {Array} config.measurementTools[].childTools - The child tool's configuration\r\n   * @param {Object} config.dataExchange\r\n   * @param {Function} config.dataExchange.store - Function that store measurement data\r\n   * @param {Function} config.dataExchange.retrieve - Function that retrieves measurement data\r\n   *\r\n   * @memberof MeasurementApi\r\n   */\r\n  static setConfiguration(config) {\r\n    Object.assign(configuration, config);\r\n  }\r\n\r\n  static getConfiguration() {\r\n    return configuration;\r\n  }\r\n\r\n  static getToolsGroupsMap() {\r\n    const toolsGroupsMap = {};\r\n    configuration.measurementTools.forEach(toolGroup => {\r\n      toolGroup.childTools.forEach(\r\n        tool => (toolsGroupsMap[tool.id] = toolGroup.id)\r\n      );\r\n    });\r\n\r\n    return toolsGroupsMap;\r\n  }\r\n\r\n  static getToolGroupTools(toolsGroupsMap) {\r\n    const result = {};\r\n    Object.keys(toolsGroupsMap).forEach(toolType => {\r\n      const toolGroupId = toolsGroupsMap[toolType];\r\n      if (!result[toolGroupId]) {\r\n        result[toolGroupId] = [];\r\n      }\r\n\r\n      result[toolGroupId].push(toolType);\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  static getToolConfiguration(toolType) {\r\n    const configuration = MeasurementApi.getConfiguration();\r\n    const toolsGroupsMap = MeasurementApi.getToolsGroupsMap();\r\n\r\n    const toolGroupId = toolsGroupsMap[toolType];\r\n    const toolGroup = configuration.measurementTools.find(\r\n      toolGroup => toolGroup.id === toolGroupId\r\n    );\r\n\r\n    let tool;\r\n    if (toolGroup) {\r\n      tool = toolGroup.childTools.find(tool => tool.id === toolType);\r\n    }\r\n\r\n    return {\r\n      toolGroupId,\r\n      toolGroup,\r\n      tool,\r\n    };\r\n  }\r\n\r\n  static syncMeasurementAndToolData(measurement) {\r\n    log.info('syncMeasurementAndToolData');\r\n\r\n    const measurementLabel = getLabel(measurement);\r\n    if (measurementLabel) {\r\n      measurement.labels = [measurementLabel];\r\n    }\r\n\r\n    const toolState = cornerstoneTools.globalImageIdSpecificToolStateManager.saveToolState();\r\n\r\n    // Stop here if the metadata for the measurement's study is not loaded yet\r\n    const { StudyInstanceUID } = measurement;\r\n    const metadata = studyMetadataManager.get(StudyInstanceUID);\r\n    if (!metadata) return;\r\n\r\n    // Iterate each child tool if the current tool has children\r\n    const toolType = measurement.toolType;\r\n    const { tool } = MeasurementApi.getToolConfiguration(toolType);\r\n    if (Array.isArray(tool.childTools)) {\r\n      tool.childTools.forEach(childToolKey => {\r\n        const childMeasurement = measurement[childToolKey];\r\n        if (!childMeasurement) return;\r\n        childMeasurement._id = measurement._id;\r\n        childMeasurement.measurementNumber = measurement.measurementNumber;\r\n        childMeasurement.lesionNamingNumber = measurement.lesionNamingNumber;\r\n\r\n        MeasurementApi.syncMeasurementAndToolData(childMeasurement);\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    const imageId = getImageIdForImagePath(measurement.imagePath);\r\n\r\n    // If no tool state exists for this imageId, create an empty object to store it\r\n    if (!toolState[imageId]) {\r\n      toolState[imageId] = {};\r\n    }\r\n\r\n    const currentToolState = toolState[imageId][toolType];\r\n    const toolData = currentToolState && currentToolState.data;\r\n\r\n    // Check if we already have toolData for this imageId and toolType\r\n    if (toolData && toolData.length) {\r\n      // If we have toolData, we should search it for any data related to the current Measurement\r\n      const toolData = toolState[imageId][toolType].data;\r\n\r\n      // Create a flag so we know if we've successfully updated the Measurement in the toolData\r\n      let alreadyExists = false;\r\n\r\n      // Loop through the toolData to search for this Measurement\r\n      toolData.forEach(tool => {\r\n        // Break the loop if this isn't the Measurement we are looking for\r\n        if (tool._id !== measurement._id) {\r\n          return;\r\n        }\r\n\r\n        // If we have found the Measurement, set the flag to True\r\n        alreadyExists = true;\r\n\r\n        // Update the toolData from the Measurement data\r\n        Object.assign(tool, measurement);\r\n        return false;\r\n      });\r\n\r\n      // If we have found the Measurement we intended to update, we can stop this function here\r\n      if (alreadyExists === true) {\r\n        return;\r\n      }\r\n    } else {\r\n      // If no toolData exists for this toolType, create an empty array to hold some\r\n      toolState[imageId][toolType] = {\r\n        data: [],\r\n      };\r\n    }\r\n\r\n    // If we have reached this point, it means we haven't found the Measurement we are looking for\r\n    // in the current toolData. This means we need to add it.\r\n\r\n    // Add the MeasurementData into the toolData for this imageId\r\n    toolState[imageId][toolType].data.push(measurement);\r\n\r\n    cornerstoneTools.globalImageIdSpecificToolStateManager.restoreToolState(\r\n      toolState\r\n    );\r\n  }\r\n\r\n  static isToolIncluded(tool) {\r\n    return (\r\n      tool.options &&\r\n      tool.options.caseProgress &&\r\n      tool.options.caseProgress.include\r\n    );\r\n  }\r\n\r\n  constructor(timepointApi, options = {}) {\r\n    if (MeasurementApi.Instance) {\r\n      MeasurementApi.Instance.initialize(timepointApi, options);\r\n      return MeasurementApi.Instance;\r\n    }\r\n\r\n    this.initialize(timepointApi, options);\r\n    MeasurementApi.Instance = this;\r\n  }\r\n\r\n  initialize(timepointApi, options = {}) {\r\n    this.timepointApi = timepointApi;\r\n    this.options = options;\r\n    this.toolGroups = {};\r\n    this.tools = {};\r\n    this.toolsGroupsMap = MeasurementApi.getToolsGroupsMap();\r\n    this.toolGroupTools = MeasurementApi.getToolGroupTools(this.toolsGroupsMap);\r\n\r\n    // Iterate over each tool group and create collection\r\n    configuration.measurementTools.forEach(toolGroup => {\r\n      this.toolGroups[toolGroup.id] = [];\r\n\r\n      // Iterate over each tool group child tools (e.g. bidirectional, targetCR, etc.) and create collection\r\n      toolGroup.childTools.forEach(tool => {\r\n        this.tools[tool.id] = [];\r\n      });\r\n    });\r\n  }\r\n\r\n  onMeasurementsUpdated() {\r\n    if (typeof this.options.onMeasurementsUpdated !== 'function') {\r\n      log.warn('Measurements update callback is not defined');\r\n      return;\r\n    }\r\n\r\n    this.options.onMeasurementsUpdated(Object.assign({}, this.tools));\r\n  }\r\n\r\n  retrieveMeasurements(PatientID, timepointIds) {\r\n    const retrievalFn = configuration.dataExchange.retrieve;\r\n    const { server } = configuration;\r\n    if (typeof retrievalFn !== 'function') {\r\n      log.error('Measurement retrieval function has not been configured.');\r\n      return;\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      retrievalFn(server).then(measurementData => {\r\n        if (measurementData) {\r\n          log.info('Measurement data retrieval');\r\n          log.info(measurementData);\r\n\r\n          Object.keys(measurementData).forEach(measurementTypeId => {\r\n            const measurements = measurementData[measurementTypeId];\r\n\r\n            measurements.forEach(measurement => {\r\n              const { toolType } = measurement;\r\n\r\n              this.addMeasurement(toolType, measurement);\r\n            });\r\n          });\r\n        }\r\n\r\n        resolve();\r\n\r\n        // Synchronize the new tool data\r\n        this.syncMeasurementsAndToolData();\r\n\r\n        cornerstone.getEnabledElements().forEach(enabledElement => {\r\n          if (enabledElement.image) {\r\n            cornerstone.updateImage(enabledElement.element);\r\n          }\r\n        });\r\n\r\n        // Let others know that the measurements are updated\r\n        this.onMeasurementsUpdated();\r\n      }, reject);\r\n    });\r\n  }\r\n\r\n  storeMeasurements(timepointId) {\r\n    const { server } = configuration;\r\n    const storeFn = configuration.dataExchange.store;\r\n    if (typeof storeFn !== 'function') {\r\n      log.error('Measurement store function has not been configured.');\r\n      return;\r\n    }\r\n\r\n    let measurementData = {};\r\n    configuration.measurementTools.forEach(toolGroup => {\r\n      // Skip the tool groups excluded from case progress\r\n      if (!MeasurementApi.isToolIncluded(toolGroup)) {\r\n        return;\r\n      }\r\n\r\n      toolGroup.childTools.forEach(tool => {\r\n        // Skip the tools excluded from case progress\r\n        if (!MeasurementApi.isToolIncluded(tool)) {\r\n          return;\r\n        }\r\n\r\n        if (!measurementData[toolGroup.id]) {\r\n          measurementData[toolGroup.id] = [];\r\n        }\r\n\r\n        measurementData[toolGroup.id] = measurementData[toolGroup.id].concat(\r\n          this.tools[tool.id]\r\n        );\r\n      });\r\n    });\r\n\r\n    const timepointFilter = timepointId\r\n      ? tp => tp.timepointId === timepointId\r\n      : null;\r\n    const timepoints = this.timepointApi.all(timepointFilter);\r\n    const timepointIds = timepoints.map(t => t.timepointId);\r\n    const PatientID = timepoints[0].PatientID;\r\n    const filter = {\r\n      PatientID,\r\n      timepointIds,\r\n    };\r\n\r\n    log.info('Saving Measurements for timepoints:', timepoints);\r\n    return storeFn(measurementData, filter, server).then(result => {\r\n      log.info('Measurement storage completed');\r\n      return result;\r\n    });\r\n  }\r\n\r\n  calculateLesionNamingNumber(measurements) {\r\n    const sortedMeasurements = measurements.sort((a, b) => {\r\n      if (a.lesionNamingNumber > b.lesionNamingNumber) {\r\n        return 1;\r\n      } else if (a.lesionNamingNumber < b.lesionNamingNumber) {\r\n        return -1;\r\n      }\r\n\r\n      return 0;\r\n    });\r\n\r\n    //  Calculate lesion naming number starting from 1 not to miss any measurement (as seen in MM)\r\n    //      A measurement from beginning of the list might be deleted, so a new measurement should replace that\r\n    let i;\r\n    for (i = 1; i < sortedMeasurements.length + 1; i++) {\r\n      if (i < sortedMeasurements[i - 1].lesionNamingNumber) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return i;\r\n  }\r\n\r\n  fetch(toolGroupId, filter) {\r\n    if (!this.toolGroups[toolGroupId]) {\r\n      throw new Error(\r\n        `MeasurementApi: No Collection with the id: ${toolGroupId}`\r\n      );\r\n    }\r\n\r\n    let items;\r\n    if (filter) {\r\n      items = this.toolGroups[toolGroupId].filter(filter);\r\n    } else {\r\n      items = this.toolGroups[toolGroupId];\r\n    }\r\n\r\n    return items.map(item => {\r\n      if (item.toolId) {\r\n        return this.tools[item.toolId].find(\r\n          tool => tool._id === item.toolItemId\r\n        );\r\n      }\r\n\r\n      return { lesionNamingNumber: item.lesionNamingNumber };\r\n    });\r\n  }\r\n\r\n  getFirstMeasurement(timepointId) {\r\n    // Get child tools from all included tool groups\r\n    let childTools = [];\r\n    configuration.measurementTools.forEach(toolGroup => {\r\n      // Skip the tool groups excluded from case progress\r\n      if (!MeasurementApi.isToolIncluded(toolGroup)) {\r\n        return false;\r\n      }\r\n\r\n      childTools = childTools.concat(toolGroup.childTools);\r\n    });\r\n\r\n    // Get all included child tools\r\n    const includedChildTools = childTools.filter(tool =>\r\n      MeasurementApi.isToolIncluded(tool)\r\n    );\r\n\r\n    // Get the first measurement for the given timepoint\r\n    let measurement = undefined;\r\n    includedChildTools.every(tool => {\r\n      measurement = this.tools[tool.id].find(\r\n        t => t.timepointId === timepointId && t.measurementNumber === 1\r\n      );\r\n\r\n      return !measurement;\r\n    });\r\n\r\n    // Return the found measurement object or undefined if not found\r\n    return measurement;\r\n  }\r\n\r\n  lesionExistsAtTimepoints(lesionNamingNumber, toolGroupId, timepointIds) {\r\n    // Retrieve all the data for the given tool group (e.g. 'targets')\r\n    const measurementsAtTimepoint = this.fetch(toolGroupId, tool =>\r\n      timepointIds.includes(tool.timepointId)\r\n    );\r\n\r\n    // Return whether or not any lesion at this timepoint has the same lesionNamingNumber\r\n    return !!measurementsAtTimepoint.find(\r\n      m => m.lesionNamingNumber === lesionNamingNumber\r\n    );\r\n  }\r\n\r\n  isNewLesionsMeasurement(measurementData) {\r\n    if (!measurementData) {\r\n      return;\r\n    }\r\n\r\n    const toolConfig = MeasurementApi.getToolConfiguration(\r\n      measurementData.toolType\r\n    );\r\n    const toolType = toolConfig.tool.parentTool || measurementData.toolType;\r\n    const { timepointApi } = this;\r\n    const currentMeasurement =\r\n      this.tools[toolType].find(tool => tool._id === measurementData._id) || {};\r\n    const timepointId =\r\n      currentMeasurement.timepointId || measurementData.timepointId;\r\n    const lesionNamingNumber =\r\n      currentMeasurement.lesionNamingNumber ||\r\n      measurementData.lesionNamingNumber;\r\n\r\n    // Stop here if the needed information is not set\r\n    if (!timepointApi || !timepointId || !toolConfig) {\r\n      return;\r\n    }\r\n\r\n    const { toolGroupId } = toolConfig;\r\n    const current = timepointApi.timepoints.find(\r\n      tp => tp.timepointId === timepointId\r\n    );\r\n    const initialTimepointIds = timepointApi.initialTimepointIds();\r\n\r\n    // Stop here if there's no initial timepoint, or if the current is any initial\r\n    if (\r\n      !initialTimepointIds ||\r\n      initialTimepointIds.length < 1 ||\r\n      initialTimepointIds.some(\r\n        initialtpid => initialtpid === current.timepointId\r\n      )\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    return (\r\n      this.lesionExistsAtTimepoints(\r\n        lesionNamingNumber,\r\n        toolGroupId,\r\n        initialTimepointIds\r\n      ) === false\r\n    );\r\n  }\r\n\r\n  calculateLesionMaxMeasurementNumber(groupId, filter) {\r\n    let measurements = [];\r\n    if (groupId) {\r\n      // Get the measurements of the group\r\n      measurements = this.toolGroups[groupId] || [];\r\n    } else {\r\n      // Get all measurements of all groups\r\n      measurements = Object.keys(this.toolGroups).reduce((acc, val) => {\r\n        acc.push(...this.toolGroups[val]);\r\n        return acc;\r\n      }, []);\r\n    }\r\n\r\n    const sortedMeasurements = measurements.filter(filter).sort((tp1, tp2) => {\r\n      return tp1.measurementNumber < tp2.measurementNumber ? 1 : -1;\r\n    });\r\n\r\n    for (let i = 0; i < sortedMeasurements.length; i++) {\r\n      const toolGroupMeasurement = sortedMeasurements[i];\r\n      const measurement = this.tools[toolGroupMeasurement.toolId].find(\r\n        tool => tool._id === toolGroupMeasurement.toolItemId\r\n      );\r\n      const isNew = this.isNewLesionsMeasurement(measurement);\r\n      if (!isNew) {\r\n        return measurement.measurementNumber;\r\n      }\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  calculateNewLesionMaxMeasurementNumber(groupId, filter) {\r\n    const sortedMeasurements = this.toolGroups[groupId]\r\n      .filter(filter)\r\n      .sort((tp1, tp2) => {\r\n        return tp1.measurementNumber < tp2.measurementNumber ? 1 : -1;\r\n      });\r\n\r\n    for (let i = 0; i < sortedMeasurements.length; i++) {\r\n      const toolGroupMeasurement = sortedMeasurements[i];\r\n      const measurement = this.tools[toolGroupMeasurement.toolId].find(\r\n        tool => tool._id === toolGroupMeasurement.toolItemId\r\n      );\r\n      const isNew = this.isNewLesionsMeasurement(measurement);\r\n      if (isNew) {\r\n        return measurement.measurementNumber;\r\n      }\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  calculateMeasurementNumber(measurement) {\r\n    const toolGroupId = this.toolsGroupsMap[measurement.toolType];\r\n\r\n    const filter = tool => tool._id !== measurement._id;\r\n\r\n    const isNew = this.isNewLesionsMeasurement(measurement);\r\n\r\n    if (isNew) {\r\n      const maxTargetMeasurementNumber = this.calculateLesionMaxMeasurementNumber(\r\n        'targets',\r\n        filter\r\n      );\r\n      const maxNonTargetMeasurementNumber = this.calculateLesionMaxMeasurementNumber(\r\n        'nonTargets',\r\n        filter\r\n      );\r\n      const maxNewTargetMeasurementNumber = this.calculateNewLesionMaxMeasurementNumber(\r\n        'targets',\r\n        filter\r\n      );\r\n      if (toolGroupId === 'targets') {\r\n        return Math.max(\r\n          maxTargetMeasurementNumber,\r\n          maxNonTargetMeasurementNumber,\r\n          maxNewTargetMeasurementNumber\r\n        );\r\n      } else if (toolGroupId === 'nonTargets') {\r\n        const maxNewNonTargetMeasurementNumber = this.calculateNewLesionMaxMeasurementNumber(\r\n          'nonTargets',\r\n          filter\r\n        );\r\n        return Math.max(\r\n          maxTargetMeasurementNumber,\r\n          maxNonTargetMeasurementNumber,\r\n          maxNewTargetMeasurementNumber,\r\n          maxNewNonTargetMeasurementNumber\r\n        );\r\n      }\r\n    } else {\r\n      const maxTargetMeasurementNumber = this.calculateLesionMaxMeasurementNumber(\r\n        'targets',\r\n        filter\r\n      );\r\n      if (toolGroupId === 'targets') {\r\n        return maxTargetMeasurementNumber;\r\n      } else if (toolGroupId === 'nonTargets') {\r\n        const maxNonTargetMeasurementNumber = this.calculateLesionMaxMeasurementNumber(\r\n          'nonTargets',\r\n          filter\r\n        );\r\n        return Math.max(\r\n          maxTargetMeasurementNumber,\r\n          maxNonTargetMeasurementNumber\r\n        );\r\n      } else {\r\n        return this.calculateLesionMaxMeasurementNumber(null, filter);\r\n      }\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  getPreviousMeasurement(measurementData) {\r\n    if (!measurementData) {\r\n      return;\r\n    }\r\n\r\n    const { timepointId, toolType, lesionNamingNumber } = measurementData;\r\n    if (!timepointId || !toolType || !lesionNamingNumber) {\r\n      return;\r\n    }\r\n\r\n    const toolGroupId = this.toolsGroupsMap[measurementData.toolType];\r\n\r\n    // TODO: Remove TrialPatientLocationUID from here and override it somehow\r\n    // by dependant applications. Here we should use the location attribute instead of the uid\r\n    let filter;\r\n    const uid =\r\n      measurementData.additionalData &&\r\n      measurementData.additionalData.TrialPatientLocationUID;\r\n    if (uid) {\r\n      filter = tool =>\r\n        tool._id !== measurementData._id &&\r\n        tool.additionalData &&\r\n        tool.additionalData.TrialPatientLocationUID === uid;\r\n    } else {\r\n      filter = tool =>\r\n        tool._id !== measurementData._id &&\r\n        tool.lesionNamingNumber === lesionNamingNumber;\r\n    }\r\n\r\n    const childToolTypes = this.toolGroupTools[toolGroupId];\r\n    for (let i = 0; i < childToolTypes.length; i++) {\r\n      const childToolType = childToolTypes[i];\r\n      const toolCollection = this.tools[childToolType];\r\n      const item = toolCollection.find(filter);\r\n\r\n      if (item) {\r\n        return item;\r\n      }\r\n    }\r\n  }\r\n\r\n  hasDuplicateMeasurementNumber(measurementData) {\r\n    if (!measurementData) {\r\n      return;\r\n    }\r\n\r\n    const { toolType, measurementNumber } = measurementData;\r\n    if (!toolType || !measurementNumber) {\r\n      return;\r\n    }\r\n\r\n    const filter = tool =>\r\n      tool._id !== measurementData._id &&\r\n      tool.measurementNumber === measurementData.measurementNumber;\r\n\r\n    return configuration.measurementTools\r\n      .filter(toolGroup => toolGroup.id !== 'temp')\r\n      .some(toolGroup => {\r\n        if (this.toolGroups[toolGroup.id].find(filter)) {\r\n          return true;\r\n        }\r\n        return toolGroup.childTools.some(tool => {\r\n          if (this.tools[tool.id].find(filter)) {\r\n            return true;\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  updateNumbering(collectionToUpdate, propertyFilter, propertyName, increment) {\r\n    collectionToUpdate.filter(propertyFilter).forEach(item => {\r\n      item[propertyName] += increment;\r\n    });\r\n  }\r\n\r\n  updateMeasurementNumberForAllMeasurements(measurement, increment) {\r\n    const filter = tool =>\r\n      tool._id !== measurement._id &&\r\n      tool.measurementNumber >= measurement.measurementNumber;\r\n\r\n    configuration.measurementTools\r\n      .filter(toolGroup => toolGroup.id !== 'temp')\r\n      .forEach(toolGroup => {\r\n        this.updateNumbering(\r\n          this.toolGroups[toolGroup.id],\r\n          filter,\r\n          'measurementNumber',\r\n          increment\r\n        );\r\n\r\n        toolGroup.childTools.forEach(tool => {\r\n          this.updateNumbering(\r\n            this.tools[tool.id],\r\n            filter,\r\n            'measurementNumber',\r\n            increment\r\n          );\r\n        });\r\n      });\r\n  }\r\n\r\n  addMeasurement(toolType, measurement) {\r\n    const toolGroup = this.toolsGroupsMap[toolType];\r\n    const groupCollection = this.toolGroups[toolGroup];\r\n    const collection = this.tools[toolType];\r\n\r\n    // Get the related measurement by the measurement number and use its location if defined\r\n    const relatedMeasurement = collection.find(\r\n      t =>\r\n        t.lesionNamingNumber === measurement.lesionNamingNumber &&\r\n        t.toolType === measurement.toolType\r\n    );\r\n\r\n    // Use the related measurement location if found and defined\r\n    if (relatedMeasurement && relatedMeasurement.location) {\r\n      measurement.location = relatedMeasurement.location;\r\n    }\r\n\r\n    // Use the related measurement description if found and defined\r\n    if (relatedMeasurement && relatedMeasurement.description) {\r\n      measurement.description = relatedMeasurement.description;\r\n    }\r\n\r\n    measurement._id = guid();\r\n\r\n    // Get the timepoint\r\n    let timepoint;\r\n    if (measurement.StudyInstanceUID) {\r\n      timepoint = this.timepointApi.study(measurement.StudyInstanceUID)[0];\r\n    } else {\r\n      const { timepointId } = measurement;\r\n      timepoint = this.timepointApi.timepoints.find(\r\n        t => t.timepointId === timepointId\r\n      );\r\n    }\r\n\r\n    // Preventing errors thrown when non-associated (standalone) study is opened...\r\n    // @TODO: Make sure this logic is correct.\r\n    if (!timepoint) return;\r\n\r\n    // Empty Item is the lesion just added in cornerstoneTools, but does not have measurement data yet\r\n    const emptyItem = groupCollection.find(\r\n      groupTool =>\r\n        !groupTool.toolId && groupTool.timepointId === timepoint.timepointId\r\n    );\r\n\r\n    // Set the timepointId attribute to measurement to make it easier to filter measurements by timepoint\r\n    measurement.timepointId = timepoint.timepointId;\r\n\r\n    // Check if the measurement data is just added by a cornerstone tool and is still empty\r\n    if (emptyItem) {\r\n      // Set relevant initial data and measurement number to the measurement\r\n      measurement.lesionNamingNumber = emptyItem.lesionNamingNumber;\r\n      measurement.measurementNumber = emptyItem.measurementNumber;\r\n\r\n      groupCollection\r\n        .filter(\r\n          groupTool =>\r\n            groupTool.timepointId === timepoint.timepointId &&\r\n            groupTool.lesionNamingNumber === measurement.lesionNamingNumber\r\n        )\r\n        .forEach(groupTool => {\r\n          groupTool.toolId = tool.id;\r\n          groupTool.toolItemId = measurement._id;\r\n          groupTool.createdAt = measurement.createdAt;\r\n          groupTool.measurementNumber = measurement.measurementNumber;\r\n        });\r\n    } else {\r\n      // Handle measurements not added by cornerstone tools and update its number\r\n      const measurementsInTimepoint = groupCollection.filter(\r\n        groupTool => groupTool.timepointId === timepoint.timepointId\r\n      );\r\n      measurement.lesionNamingNumber = this.calculateLesionNamingNumber(\r\n        measurementsInTimepoint\r\n      );\r\n      measurement.measurementNumber =\r\n        measurement.measurementNumber ||\r\n        this.calculateMeasurementNumber(measurement) + 1;\r\n    }\r\n\r\n    // Define an update object to reflect the changes in the collection\r\n    const updateObject = {\r\n      timepointId: timepoint.timepointId,\r\n      lesionNamingNumber: measurement.lesionNamingNumber,\r\n      measurementNumber: measurement.measurementNumber,\r\n    };\r\n\r\n    // Find the matched measurement from other timepoints\r\n    const found = this.getPreviousMeasurement(measurement);\r\n\r\n    // Check if a previous related meausurement was found on other timepoints\r\n    if (found) {\r\n      // Use the same number as the previous measurement\r\n      measurement.lesionNamingNumber = found.lesionNamingNumber;\r\n      measurement.measurementNumber = found.measurementNumber;\r\n\r\n      // TODO: Remove TrialPatientLocationUID from here and override it somehow\r\n      // by dependant applications\r\n\r\n      // Change the update object to set the same number, additionalData,\r\n      // location, label and description to the current measurement\r\n      updateObject.lesionNamingNumber = found.lesionNamingNumber;\r\n      updateObject.measurementNumber = found.measurementNumber;\r\n      updateObject.additionalData = measurement.additionalData || {};\r\n      updateObject.additionalData.TrialPatientLocationUID =\r\n        found.additionalData && found.additionalData.TrialPatientLocationUID;\r\n      updateObject.location = found.location;\r\n      updateObject.label = found.label;\r\n      updateObject.description = found.description;\r\n      updateObject.isSplitLesion = found.isSplitLesion;\r\n      updateObject.isNodal = found.isNodal;\r\n\r\n      const description = getDescription(found, measurement);\r\n      if (description) {\r\n        updateObject.description = description;\r\n      }\r\n    } else if (this.hasDuplicateMeasurementNumber(measurement)) {\r\n      // Update measurementNumber for the measurements with masurementNumber greater or equal than\r\n      //  measurementNumber of the added measurement (except the added one)\r\n      //   only if there is another measurement with the same measurementNumber\r\n      this.updateMeasurementNumberForAllMeasurements(measurement, 1);\r\n    }\r\n\r\n    let addedMeasurement;\r\n\r\n    // Upsert the measurement in collection\r\n    const toolIndex = collection.findIndex(\r\n      tool => tool._id === measurement._id\r\n    );\r\n    if (toolIndex > -1) {\r\n      addedMeasurement = Object.assign({}, collection[toolIndex], updateObject);\r\n      collection[toolIndex] = addedMeasurement;\r\n    } else {\r\n      addedMeasurement = Object.assign({}, measurement, updateObject);\r\n      collection.push(addedMeasurement);\r\n    }\r\n\r\n    if (measurement.isReadOnly) {\r\n      addedMeasurement.isReadOnly = measurement.isReadOnly;\r\n    }\r\n\r\n    if (!emptyItem) {\r\n      // Reflect the entry in the tool group collection\r\n      groupCollection.push({\r\n        toolId: toolType,\r\n        toolItemId: addedMeasurement._id,\r\n        timepointId: timepoint.timepointId,\r\n        StudyInstanceUID: addedMeasurement.StudyInstanceUID,\r\n        createdAt: addedMeasurement.createdAt,\r\n        lesionNamingNumber: addedMeasurement.lesionNamingNumber,\r\n        measurementNumber: addedMeasurement.measurementNumber,\r\n      });\r\n    }\r\n\r\n    // Let others know that the measurements are updated\r\n    this.onMeasurementsUpdated();\r\n\r\n    // TODO: Enable reactivity\r\n    // this.timepointChanged.set(timepoint.timepointId);\r\n\r\n    return addedMeasurement;\r\n  }\r\n\r\n  updateMeasurement(toolType, measurement) {\r\n    const collection = this.tools[toolType];\r\n\r\n    const toolIndex = collection.findIndex(\r\n      tool => tool._id === measurement._id\r\n    );\r\n    if (toolIndex < 0) {\r\n      return;\r\n    }\r\n\r\n    collection[toolIndex] = Object.assign({}, measurement);\r\n\r\n    // Let others know that the measurements are updated\r\n    this.onMeasurementsUpdated();\r\n\r\n    // TODO: Enable reactivity\r\n    // this.timepointChanged.set(timepoint.timepointId);\r\n  }\r\n\r\n  onMeasurementRemoved(toolType, measurement) {\r\n    const { lesionNamingNumber, measurementNumber } = measurement;\r\n\r\n    const toolGroupId = this.toolsGroupsMap[toolType];\r\n    const groupCollection = this.toolGroups[toolGroupId];\r\n\r\n    const groupIndex = groupCollection.findIndex(\r\n      group => group.toolItemId === measurement._id\r\n    );\r\n    if (groupIndex < 0) {\r\n      return;\r\n    }\r\n\r\n    //  Remove the deleted measurement only in its timepoint from the collection\r\n    groupCollection.splice(groupIndex, 1);\r\n\r\n    //  Check which timepoints have the deleted measurement\r\n    const timepointsWithDeletedMeasurement = groupCollection\r\n      .filter(tool => tool.measurementNumber === measurementNumber)\r\n      .map(tool => tool.timepointId);\r\n\r\n    //  Update lesionNamingNumber and measurementNumber only if there is no timepoint with that measurement\r\n    if (timepointsWithDeletedMeasurement.length < 1) {\r\n      //  Decrease lesionNamingNumber of all measurements with lesionNamingNumber greater than lesionNamingNumber of the deleted measurement by 1\r\n      const lesionNamingNumberFilter = tool =>\r\n        tool.lesionNamingNumber >= lesionNamingNumber;\r\n      this.updateNumbering(\r\n        groupCollection,\r\n        lesionNamingNumberFilter,\r\n        'lesionNamingNumber',\r\n        -1\r\n      );\r\n\r\n      const toolGroup = configuration.measurementTools.find(\r\n        tGroup => tGroup.id === toolGroupId\r\n      );\r\n      if (toolGroup && toolGroup.childTools) {\r\n        toolGroup.childTools.forEach(childTool => {\r\n          const collection = this.tools[childTool.id];\r\n          this.updateNumbering(\r\n            collection,\r\n            lesionNamingNumberFilter,\r\n            'lesionNamingNumber',\r\n            -1\r\n          );\r\n        });\r\n      }\r\n\r\n      //  Decrease measurementNumber of all measurements with measurementNumber greater than measurementNumber of the deleted measurement by 1\r\n      this.updateMeasurementNumberForAllMeasurements(measurement, -1);\r\n    }\r\n\r\n    // Synchronize the new tool data\r\n    this.syncMeasurementsAndToolData();\r\n\r\n    // Let others know that the measurements are updated\r\n    this.onMeasurementsUpdated();\r\n\r\n    // TODO: Enable reactivity\r\n    // this.timepointChanged.set(timepoint.timepointId);\r\n  }\r\n\r\n  syncMeasurementsAndToolData() {\r\n    configuration.measurementTools.forEach(toolGroup => {\r\n      // Skip the tool groups excluded from case progress\r\n      if (!MeasurementApi.isToolIncluded(toolGroup)) {\r\n        return;\r\n      }\r\n      toolGroup.childTools.forEach(tool => {\r\n        // Skip the tools excluded from case progress\r\n        if (!MeasurementApi.isToolIncluded(tool)) {\r\n          return;\r\n        }\r\n        const measurements = this.tools[tool.id];\r\n        measurements.forEach(measurement => {\r\n          MeasurementApi.syncMeasurementAndToolData(measurement);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  deleteMeasurements(toolType, measurementTypeId, filter) {\r\n    const filterKeys = Object.keys(filter);\r\n    const groupCollection = this.toolGroups[measurementTypeId];\r\n\r\n    // Stop here if it is a temporary toolGroups\r\n    if (!groupCollection) return;\r\n\r\n    // Get the entries information before removing them\r\n    const groupItems = groupCollection.filter(toolGroup => {\r\n      return filterKeys.every(\r\n        filterKey => toolGroup[filterKey] === filter[filterKey]\r\n      );\r\n    });\r\n    const entries = [];\r\n    groupItems.forEach(groupItem => {\r\n      if (!groupItem.toolId) {\r\n        return;\r\n      }\r\n\r\n      const collection = this.tools[groupItem.toolId];\r\n      const toolIndex = collection.findIndex(\r\n        tool => tool._id === groupItem.toolItemId\r\n      );\r\n      if (toolIndex > -1) {\r\n        entries.push(collection[toolIndex]);\r\n        collection.splice(toolIndex, 1);\r\n      }\r\n    });\r\n\r\n    // Stop here if no entries were found\r\n    if (!entries.length) {\r\n      return;\r\n    }\r\n\r\n    // If the filter doesn't have the measurement number, get it from the first entry\r\n    const lesionNamingNumber =\r\n      filter.lesionNamingNumber || entries[0].lesionNamingNumber;\r\n\r\n    // Synchronize the new data with cornerstone tools\r\n    const toolState = cornerstoneTools.globalImageIdSpecificToolStateManager.saveToolState();\r\n\r\n    entries.forEach(entry => {\r\n      const measurementsData = [];\r\n      const { tool } = MeasurementApi.getToolConfiguration(entry.toolType);\r\n      if (Array.isArray(tool.childTools)) {\r\n        tool.childTools.forEach(key => {\r\n          const childMeasurement = entry[key];\r\n          if (!childMeasurement) return;\r\n          measurementsData.push(childMeasurement);\r\n        });\r\n      } else {\r\n        measurementsData.push(entry);\r\n      }\r\n\r\n      measurementsData.forEach(measurementData => {\r\n        const { imagePath, toolType } = measurementData;\r\n        const imageId = getImageIdForImagePath(imagePath);\r\n        if (imageId && toolState[imageId]) {\r\n          const toolData = toolState[imageId][toolType];\r\n          const measurementEntries = toolData && toolData.data;\r\n          const measurementEntry = measurementEntries.find(\r\n            mEntry => mEntry._id === entry._id\r\n          );\r\n          if (measurementEntry) {\r\n            const index = measurementEntries.indexOf(measurementEntry);\r\n            measurementEntries.splice(index, 1);\r\n          }\r\n        }\r\n      });\r\n\r\n      this.onMeasurementRemoved(toolType, entry);\r\n    });\r\n\r\n    cornerstoneTools.globalImageIdSpecificToolStateManager.restoreToolState(\r\n      toolState\r\n    );\r\n\r\n    // Synchronize the updated measurements with Cornerstone Tools\r\n    // toolData to make sure the displayed measurements show 'Target X' correctly\r\n    const syncFilter = Object.assign({}, filter);\r\n    delete syncFilter.timepointId;\r\n    delete syncFilter.lesionNamingNumber;\r\n\r\n    const syncFilterKeys = Object.keys(syncFilter);\r\n\r\n    const toolTypes = [...new Set(entries.map(entry => entry.toolType))];\r\n    toolTypes.forEach(toolType => {\r\n      const collection = this.tools[toolType];\r\n      collection\r\n        .filter(tool => {\r\n          return (\r\n            tool.lesionNamingNumber > lesionNamingNumber - 1 &&\r\n            syncFilterKeys.every(\r\n              syncFilterKey => tool[syncFilterKey] === filter[syncFilterKey]\r\n            )\r\n          );\r\n        })\r\n        .forEach(measurement => {\r\n          MeasurementApi.syncMeasurementAndToolData(measurement);\r\n        });\r\n    });\r\n  }\r\n}\r\n","export class BaseCriterion {\r\n  constructor(options, criterionName) {\r\n    this.options = options;\r\n    this.criterionName = criterionName;\r\n  }\r\n\r\n  generateResponse(message, measurements) {\r\n    const passed = !message;\r\n    const isGlobal = !measurements || !measurements.length;\r\n\r\n    return {\r\n      passed,\r\n      isGlobal,\r\n      message,\r\n      measurements,\r\n      criterionName: this.criterionName,\r\n    };\r\n  }\r\n\r\n  getNewTargetNumbers(data) {\r\n    const { options } = this;\r\n    const baselineMeasurementNumbers = [];\r\n    const newTargetNumbers = new Set();\r\n\r\n    if (options.newTarget) {\r\n      data.targets.forEach(target => {\r\n        const { measurementNumber } = target.measurement;\r\n        if (target.timepoint.timepointType === 'baseline') {\r\n          baselineMeasurementNumbers.push(measurementNumber);\r\n        }\r\n      });\r\n      data.targets.forEach(target => {\r\n        const { measurementNumber } = target.measurement;\r\n        if (target.timepoint.timepointType === 'followup') {\r\n          if (!baselineMeasurementNumbers.includes(measurementNumber)) {\r\n            newTargetNumbers.add(measurementNumber);\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    return newTargetNumbers;\r\n  }\r\n}\r\n","import { BaseCriterion } from './BaseCriterion';\r\n\r\nexport const LocationSchema = {\r\n  type: 'object',\r\n};\r\n\r\n/* LocationCriterion\r\n *   Check if the there are non-target measurements with response different than \"present\" on baseline\r\n */\r\nexport class LocationCriterion extends BaseCriterion {\r\n  constructor(...props) {\r\n    super(...props);\r\n  }\r\n\r\n  evaluate(data) {\r\n    const items = data.targets.concat(data.nonTargets);\r\n    const measurements = [];\r\n    let message;\r\n\r\n    items.forEach(item => {\r\n      const measurement = item.measurement;\r\n\r\n      if (!measurement.location) {\r\n        measurements.push(measurement);\r\n      }\r\n    });\r\n\r\n    if (measurements.length) {\r\n      message = 'All measurements should have a location';\r\n    }\r\n\r\n    return this.generateResponse(message, measurements);\r\n  }\r\n}\r\n","import { BaseCriterion } from './BaseCriterion';\r\n\r\nexport const MaxTargetsPerOrganSchema = {\r\n  type: 'object',\r\n  properties: {\r\n    limit: {\r\n      label: 'Max targets allowed per organ',\r\n      type: 'integer',\r\n      minimum: 1,\r\n    },\r\n    newTarget: {\r\n      label: 'Flag to evaluate only new targets',\r\n      type: 'boolean',\r\n    },\r\n    isNodal: {\r\n      label: 'Filter to evaluate only nodal or extranodal measurements',\r\n      type: 'boolean'\r\n    },\r\n    message: {\r\n      label: 'Message to be displayed in case of nonconformity',\r\n      type: 'string',\r\n    }\r\n  },\r\n  required: ['limit'],\r\n};\r\n\r\n/*\r\n * MaxTargetsPerOrganCriterion\r\n *   Check if the number of target measurements per organ exceeded the limit allowed\r\n * Options:\r\n *   limit: Max targets allowed in study\r\n *   newTarget: Flag to evaluate only new targets (must be evaluated on both)\r\n *   isNodal: Filter to evaluate only nodal or extranodal measurements\r\n *   message: Message to be displayed in case of nonconformity\r\n */\r\nexport class MaxTargetsPerOrganCriterion extends BaseCriterion {\r\n  constructor(...props) {\r\n    super(...props);\r\n  }\r\n\r\n  evaluate(data) {\r\n    const { options } = this;\r\n    const targetsPerOrgan = {};\r\n    let measurements = [];\r\n\r\n    const newTargetNumbers = this.getNewTargetNumbers(data);\r\n    data.targets.forEach(target => {\r\n      const { measurement } = target;\r\n      const { location, measurementNumber, isSplitLesion, isNodal } = measurement;\r\n\r\n      if (isSplitLesion)\r\n        return;\r\n\r\n      if (typeof isNodal === 'boolean' && typeof options.isNodal === 'boolean' && options.isNodal !== isNodal)\r\n        return;\r\n\r\n      if (!targetsPerOrgan[location]) {\r\n        targetsPerOrgan[location] = new Set();\r\n      }\r\n\r\n      if (!options.newTarget || newTargetNumbers.has(measurementNumber)) {\r\n        targetsPerOrgan[location].add(measurementNumber);\r\n      }\r\n\r\n      if (targetsPerOrgan[location].size > options.limit) {\r\n        measurements.push(measurement);\r\n      }\r\n    });\r\n\r\n    let message;\r\n    if (measurements.length) {\r\n      const increment = options.newTarget ? 'new ' : '';\r\n      message =\r\n        options.message ||\r\n        `Each organ should not have more than ${\r\n        options.limit\r\n        } ${increment}targets.`;\r\n    }\r\n\r\n    return this.generateResponse(message, measurements);\r\n  }\r\n}\r\n","import { BaseCriterion } from './BaseCriterion';\r\n\r\nexport const MaxTargetsSchema = {\r\n  type: 'object',\r\n  properties: {\r\n    limit: {\r\n      label: 'Max targets allowed in study',\r\n      type: 'integer',\r\n      minimum: 0,\r\n    },\r\n    newTarget: {\r\n      label: 'Flag to evaluate only new targets',\r\n      type: 'boolean',\r\n    },\r\n    locationIn: {\r\n      label:\r\n        'Filter to evaluate only measurements with the specified locations',\r\n      type: 'array',\r\n      items: {\r\n        type: 'string',\r\n      },\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n    },\r\n    locationNotIn: {\r\n      label:\r\n        'Filter to evaluate only measurements without the specified locations',\r\n      type: 'array',\r\n      items: {\r\n        type: 'string',\r\n      },\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n    },\r\n    isNodal: {\r\n      label: 'Filter to evaluate only nodal or extranodal measurements',\r\n      type: 'boolean'\r\n    },\r\n    message: {\r\n      label: 'Message to be displayed in case of nonconformity',\r\n      type: 'string',\r\n    }\r\n  },\r\n  required: ['limit'],\r\n};\r\n\r\n/* MaxTargetsCriterion\r\n *   Check if the number of target measurements exceeded the limit allowed\r\n * Options:\r\n *   limit: Max targets allowed in study\r\n *   newTarget: Flag to evaluate only new targets (must be evaluated on both)\r\n *   locationIn: Filter to evaluate only measurements with the specified locations\r\n *   locationNotIn: Filter to evaluate only measurements without the specified locations\r\n *   isNodal: Filter to evaluate only nodal or extranodal measurements\r\n *   message: Message to be displayed in case of nonconformity\r\n */\r\nexport class MaxTargetsCriterion extends BaseCriterion {\r\n  constructor(...props) {\r\n    super(...props);\r\n  }\r\n\r\n  evaluate(data) {\r\n    const { options } = this;\r\n\r\n    const newTargetNumbers = this.getNewTargetNumbers(data);\r\n    const measurementNumbers = [];\r\n    data.targets.forEach(target => {\r\n      const { location, measurementNumber, isSplitLesion, isNodal } = target.measurement;\r\n\r\n      if (isSplitLesion)\r\n        return;\r\n\r\n      if (typeof isNodal === 'boolean' && typeof options.isNodal === 'boolean' && options.isNodal !== isNodal)\r\n        return;\r\n\r\n      if (options.newTarget && !newTargetNumbers.has(measurementNumber))\r\n        return;\r\n\r\n      if (options.locationIn && options.locationIn.indexOf(location) === -1)\r\n        return;\r\n\r\n      if (options.locationNotIn && options.locationNotIn.indexOf(location) > -1)\r\n        return;\r\n\r\n      measurementNumbers.push(measurementNumber);\r\n    });\r\n\r\n    let lesionType = '';\r\n    if (typeof options.isNodal === 'boolean') {\r\n      lesionType = options.isNodal ? 'nodal ' : 'extranodal ';\r\n    }\r\n\r\n    let message;\r\n    if (measurementNumbers.length > options.limit) {\r\n      const increment = options.newTarget ? 'new ' : '';\r\n      const plural = options.limit === 1 ? '' : 's';\r\n      const amount = options.limit === 0 ? '' : `more than ${options.limit}`;\r\n      message =\r\n        options.message ||\r\n        `The study should not have ${amount} ${increment}${lesionType}target${plural}.`;\r\n    }\r\n\r\n    return this.generateResponse(message);\r\n  }\r\n}\r\n","import { BaseCriterion } from './BaseCriterion';\r\n\r\nexport const MeasurementsLengthSchema = {\r\n  type: 'object',\r\n  properties: {\r\n    longAxis: {\r\n      label: 'Minimum length of long axis',\r\n      type: 'number',\r\n      minimum: 0,\r\n    },\r\n    shortAxis: {\r\n      label: 'Minimum length of short axis',\r\n      type: 'number',\r\n      minimum: 0,\r\n    },\r\n    longAxisSliceThicknessMultiplier: {\r\n      label: 'Length of long axis multiplier',\r\n      type: 'number',\r\n      minimum: 0,\r\n    },\r\n    shortAxisSliceThicknessMultiplier: {\r\n      label: 'Length of short axis multiplier',\r\n      type: 'number',\r\n      minimum: 0,\r\n    },\r\n    modalityIn: {\r\n      label:\r\n        'Filter to evaluate only measurements with the specified modalities',\r\n      type: 'array',\r\n      items: {\r\n        type: 'string',\r\n      },\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n    },\r\n    modalityNotIn: {\r\n      label:\r\n        'Filter to evaluate only measurements without the specified modalities',\r\n      type: 'array',\r\n      items: {\r\n        type: 'string',\r\n      },\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n    },\r\n    locationIn: {\r\n      label:\r\n        'Filter to evaluate only measurements with the specified locations',\r\n      type: 'array',\r\n      items: {\r\n        type: 'string',\r\n      },\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n    },\r\n    locationNotIn: {\r\n      label:\r\n        'Filter to evaluate only measurements without the specified locations',\r\n      type: 'array',\r\n      items: {\r\n        type: 'string',\r\n      },\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n    },\r\n    isNodal: {\r\n      label: 'Filter to evaluate only nodal or extranodal measurements',\r\n      type: 'boolean',\r\n    },\r\n    message: {\r\n      label: 'Message to be displayed in case of nonconformity',\r\n      type: 'string',\r\n    },\r\n  },\r\n  anyOf: [\r\n    { required: ['message', 'longAxis'] },\r\n    { required: ['message', 'shortAxis'] },\r\n    { required: ['message', 'longAxisSliceThicknessMultiplier'] },\r\n    { required: ['message', 'shortAxisSliceThicknessMultiplier'] },\r\n  ],\r\n};\r\n\r\n/*\r\n * MeasurementsLengthCriterion\r\n *   Check the measurements of all bidirectional tools based on\r\n *   short axis, long axis, modalities, location and slice thickness\r\n * Options:\r\n *   longAxis: Minimum length of long axis\r\n *   shortAxis: Minimum length of short axis\r\n *   longAxisSliceThicknessMultiplier: Length of long axis multiplier\r\n *   shortAxisSliceThicknessMultiplier: Length of short axis multiplier\r\n *   modalityIn: Filter to evaluate only measurements with the specified modalities\r\n *   modalityNotIn: Filter to evaluate only measurements without the specified modalities\r\n *   locationIn: Filter to evaluate only measurements with the specified locations\r\n *   locationNotIn: Filter to evaluate only measurements without the specified locations\r\n *   isNodal: Filter to evaluate only nodal or extranodal measurements\r\n *   message: Message to be displayed in case of nonconformity\r\n */\r\nexport class MeasurementsLengthCriterion extends BaseCriterion {\r\n  constructor(...props) {\r\n    super(...props);\r\n  }\r\n\r\n  evaluate(data) {\r\n    let message;\r\n    let measurements = [];\r\n    const { options } = this;\r\n    const longMultiplier = options.longAxisSliceThicknessMultiplier;\r\n    const shortMultiplier = options.shortAxisSliceThicknessMultiplier;\r\n\r\n    data.targets.forEach(item => {\r\n      const { metadata, measurement } = item;\r\n      const { location } = measurement;\r\n\r\n      let { longestDiameter, shortestDiameter, isNodal } = measurement;\r\n      if (measurement.childToolsCount) {\r\n        const child = measurement.bidirectional;\r\n        longestDiameter = (child && child.longestDiameter) || 0;\r\n        shortestDiameter = (child && child.shortestDiameter) || 0;\r\n      }\r\n\r\n      const { SliceThickness } = metadata;\r\n\r\n      const Modality = metadata.getTagValue('Modality') || '';\r\n\r\n      // Stop here if the measurement does not match the Modality and location filters\r\n      if (\r\n        typeof isNodal === 'boolean' &&\r\n        typeof options.isNodal === 'boolean' &&\r\n        options.isNodal !== isNodal\r\n      )\r\n        return;\r\n      if (options.locationIn && options.locationIn.indexOf(location) === -1)\r\n        return;\r\n      if (options.modalityIn && options.modalityIn.indexOf(Modality) === -1)\r\n        return;\r\n      if (options.locationNotIn && options.locationNotIn.indexOf(location) > -1)\r\n        return;\r\n      if (options.modalityNotIn && options.modalityNotIn.indexOf(Modality) > -1)\r\n        return;\r\n\r\n      // Check the measurement length\r\n      const failed =\r\n        (options.longAxis && longestDiameter < options.longAxis) ||\r\n        (options.shortAxis && shortestDiameter < options.shortAxis) ||\r\n        (longMultiplier &&\r\n          !isNaN(SliceThickness) &&\r\n          longestDiameter < longMultiplier * SliceThickness) ||\r\n        (shortMultiplier &&\r\n          !isNaN(SliceThickness) &&\r\n          shortestDiameter < shortMultiplier * SliceThickness);\r\n\r\n      // Mark this measurement as invalid if some of the checks have failed\r\n      if (failed) {\r\n        measurements.push(measurement);\r\n      }\r\n    });\r\n\r\n    // Use the options' message if some measurement is invalid\r\n    if (measurements.length) {\r\n      message = options.message;\r\n    }\r\n\r\n    return this.generateResponse(message, measurements);\r\n  }\r\n}\r\n","import { BaseCriterion } from './BaseCriterion';\r\n\r\nexport const ModalitySchema = {\r\n  type: 'object',\r\n  properties: {\r\n    method: {\r\n      label: 'Specify if it\\'s goinig to \"allow\" or \"deny\" the modalities',\r\n      type: 'string',\r\n      enum: ['allow', 'deny'],\r\n    },\r\n    measurementTypes: {\r\n      label: 'List of measurement types that will be evaluated',\r\n      type: 'array',\r\n      items: {\r\n        type: 'string',\r\n      },\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n    },\r\n    modalities: {\r\n      label: 'List of allowed/denied modalities',\r\n      type: 'array',\r\n      items: {\r\n        type: 'string',\r\n      },\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n    },\r\n  },\r\n  required: ['method', 'modalities'],\r\n};\r\n\r\n/*\r\n * ModalityCriteria\r\n *   Check if a Modality is allowed or denied\r\n * Options:\r\n *   method (string): Specify if it\\'s goinig to \"allow\" or \"deny\" the modalities\r\n *   measurementTypes (string[]): List of measurement types that will be evaluated\r\n *   modalities (string[]): List of allowed/denied modalities\r\n */\r\nexport class ModalityCriterion extends BaseCriterion {\r\n  constructor(...props) {\r\n    super(...props);\r\n  }\r\n\r\n  evaluate(data) {\r\n    const measurementTypes = this.options.measurementTypes || ['targets'];\r\n    const modalitiesSet = new Set(this.options.modalities);\r\n    const validationMethod = this.options.method;\r\n    const measurements = [];\r\n    const invalidModalities = new Set();\r\n    let message;\r\n\r\n    measurementTypes.forEach(measurementType => {\r\n      const items = data[measurementType];\r\n\r\n      items.forEach(item => {\r\n        const { measurement, metadata } = item;\r\n        const Modality = metadata.getTagValue('Modality') || '';\r\n\r\n        if (\r\n          (validationMethod === 'allow' && !modalitiesSet.has(Modality)) ||\r\n          (validationMethod === 'deny' && modalitiesSet.has(Modality))\r\n        ) {\r\n          measurements.push(measurement);\r\n          invalidModalities.add(Modality);\r\n        }\r\n      });\r\n    });\r\n\r\n    if (measurements.length) {\r\n      const uniqueModalities = Array.from(invalidModalities);\r\n      const uniqueModalitiesText = uniqueModalities.join(', ');\r\n      const modalityText =\r\n        uniqueModalities.length > 1 ? 'modalities' : 'Modality';\r\n\r\n      message = `The ${modalityText} ${uniqueModalitiesText} should not be used as a method of measurement`;\r\n    }\r\n\r\n    return this.generateResponse(message, measurements);\r\n  }\r\n}\r\n","import { BaseCriterion } from './BaseCriterion';\r\n\r\nexport const NonTargetResponseSchema = {\r\n  type: 'object',\r\n};\r\n\r\n/* NonTargetResponseCriterion\r\n *   Check if the there are non-target measurements with response different than \"present\" on baseline\r\n */\r\nexport class NonTargetResponseCriterion extends BaseCriterion {\r\n  constructor(...props) {\r\n    super(...props);\r\n  }\r\n\r\n  evaluate(data) {\r\n    const items = data.nonTargets;\r\n    const measurements = [];\r\n    let message;\r\n\r\n    items.forEach(item => {\r\n      const measurement = item.measurement;\r\n      const response = (measurement.response || '').toLowerCase();\r\n\r\n      if (response !== 'present') {\r\n        measurements.push(measurement);\r\n      }\r\n    });\r\n\r\n    if (measurements.length) {\r\n      message = 'Non-targets can only be assessed as \"present\"';\r\n    }\r\n\r\n    return this.generateResponse(message, measurements);\r\n  }\r\n}\r\n","import { BaseCriterion } from './BaseCriterion';\r\n\r\nexport const TargetTypeSchema = {\r\n  type: 'object',\r\n};\r\n\r\n/* TargetTypeCriterion\r\n *   Check if the there are non-bidirectional target measurements on baseline\r\n */\r\nexport class TargetTypeCriterion extends BaseCriterion {\r\n  constructor(...props) {\r\n    super(...props);\r\n  }\r\n\r\n  evaluate(data) {\r\n    const items = data.targets;\r\n    const measurements = [];\r\n    let message;\r\n\r\n    items.forEach(item => {\r\n      const measurement = item.measurement;\r\n\r\n      if (\r\n        measurement.toolType !== 'Bidirectional' &&\r\n        !measurement.bidirectional\r\n      ) {\r\n        measurements.push(measurement);\r\n      }\r\n    });\r\n\r\n    if (measurements.length) {\r\n      message =\r\n        'Target lesions must have measurements (cannot be assessed as CR, UN/NE, EX)';\r\n    }\r\n\r\n    return this.generateResponse(message, measurements);\r\n  }\r\n}\r\n","import { BaseCriterion } from './criteria/BaseCriterion';\r\nimport * as initialCriteria from './criteria';\r\nimport Ajv from 'ajv';\r\n\r\nconst Criteria = Object.assign({}, initialCriteria);\r\n\r\nexport class CriteriaEvaluator {\r\n  constructor(criteriaObject) {\r\n    const criteriaValidator = this.getCriteriaValidator();\r\n    this.criteria = [];\r\n\r\n    if (!criteriaValidator(criteriaObject)) {\r\n      let message = '';\r\n      criteriaValidator.errors.forEach(error => {\r\n        message += `\\noptions${error.dataPath} ${error.message}`;\r\n      });\r\n      throw new Error(message);\r\n    }\r\n\r\n    Object.keys(criteriaObject).forEach(criterionkey => {\r\n      const optionsObject = criteriaObject[criterionkey];\r\n      const Criterion = Criteria[`${criterionkey}Criterion`];\r\n      const optionsArray =\r\n        optionsObject instanceof Array ? optionsObject : [optionsObject];\r\n      optionsArray.forEach(options =>\r\n        this.criteria.push(new Criterion(options, criterionkey))\r\n      );\r\n    });\r\n  }\r\n\r\n  getMaxTargets(newTarget = false) {\r\n    let result = 0;\r\n    this.criteria.forEach(criterion => {\r\n      const newTargetMatch = newTarget === !!criterion.options.newTarget;\r\n      if (criterion instanceof Criteria.MaxTargetsCriterion && newTargetMatch) {\r\n        const { limit } = criterion.options;\r\n        if (limit > result) {\r\n          result = limit;\r\n        }\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  getCriteriaValidator() {\r\n    if (CriteriaEvaluator.criteriaValidator) {\r\n      return CriteriaEvaluator.criteriaValidator;\r\n    }\r\n\r\n    const schema = {\r\n      properties: {},\r\n      definitions: {},\r\n    };\r\n\r\n    Object.keys(Criteria).forEach(key => {\r\n      const Criterion = Criteria[key];\r\n      if (Criterion.prototype instanceof BaseCriterion) {\r\n        const criterionkey = key.replace(/Criterion$/, '');\r\n        const criterionDefinition = `#/definitions/${criterionkey}`;\r\n\r\n        schema.definitions[criterionkey] = Criteria[`${criterionkey}Schema`];\r\n        schema.properties[criterionkey] = {\r\n          oneOf: [\r\n            { $ref: criterionDefinition },\r\n            {\r\n              type: 'array',\r\n              items: {\r\n                $ref: criterionDefinition,\r\n              },\r\n            },\r\n          ],\r\n        };\r\n      }\r\n    });\r\n\r\n    CriteriaEvaluator.criteriaValidator = new Ajv().compile(schema);\r\n    return CriteriaEvaluator.criteriaValidator;\r\n  }\r\n\r\n  evaluate(data) {\r\n    const nonconformities = [];\r\n    this.criteria.forEach(criterion => {\r\n      const criterionResult = criterion.evaluate(data);\r\n      if (!criterionResult.passed) {\r\n        nonconformities.push(criterionResult);\r\n      }\r\n    });\r\n    return nonconformities;\r\n  }\r\n\r\n  static setCriterion(criterionKey, criterionDefinitions) {\r\n    Criteria[criterionKey] = criterionDefinitions;\r\n  }\r\n}\r\n","import * as recistEvaluation from './recist.json';\r\n\r\nexport const recist11 = recistEvaluation;\r\n","import { CriteriaEvaluator } from './CriteriaEvaluator';\r\nimport * as initialEvaluations from './evaluations';\r\nimport log from '../../log';\r\n\r\nconst evaluations = Object.assign({}, initialEvaluations);\r\n\r\nconst BASELINE = 'baseline';\r\nconst FOLLOWUP = 'followup';\r\nconst BOTH = 'both';\r\nconst TARGETS = 'targets';\r\nconst NONTARGETS = 'nonTargets';\r\n\r\nclass ConformanceCriteria {\r\n  constructor(measurementApi, timepointApi, options = {}) {\r\n    this.measurementApi = measurementApi;\r\n    this.timepointApi = timepointApi;\r\n    this.nonconformities = [];\r\n    this.groupedNonConformities = [];\r\n    this.maxTargets = null;\r\n    this.maxNewTargets = null;\r\n    this.options = options;\r\n  }\r\n\r\n  loadStudy(StudyInstanceUID) {\r\n    if (typeof this.options.loadStudy !== 'function') {\r\n      throw new Error('loadStudy callback is not defined');\r\n    }\r\n\r\n    return this.options.loadStudy(null, StudyInstanceUID);\r\n  }\r\n\r\n  async validate(trialCriteriaType) {\r\n    const baselinePromise = this.getData(BASELINE);\r\n    const followupPromise = this.getData(FOLLOWUP);\r\n    const [baselineData, followupData] = await Promise.all([\r\n      baselinePromise,\r\n      followupPromise,\r\n    ]);\r\n    const mergedData = {\r\n      targets: [],\r\n      nonTargets: [],\r\n    };\r\n\r\n    mergedData.targets = mergedData.targets.concat(baselineData.targets);\r\n    mergedData.targets = mergedData.targets.concat(followupData.targets);\r\n    mergedData.nonTargets = mergedData.nonTargets.concat(\r\n      baselineData.nonTargets\r\n    );\r\n    mergedData.nonTargets = mergedData.nonTargets.concat(\r\n      followupData.nonTargets\r\n    );\r\n\r\n    this.maxTargets = null;\r\n    this.maxNewTargets = null;\r\n    const resultBoth = this.validateTimepoint(\r\n      BOTH,\r\n      trialCriteriaType,\r\n      mergedData\r\n    );\r\n    const resultBaseline = this.validateTimepoint(\r\n      BASELINE,\r\n      trialCriteriaType,\r\n      baselineData\r\n    );\r\n    const resultFollowup = this.validateTimepoint(\r\n      FOLLOWUP,\r\n      trialCriteriaType,\r\n      followupData\r\n    );\r\n    const nonconformities = resultBaseline\r\n      .concat(resultFollowup)\r\n      .concat(resultBoth);\r\n    const groupedNonConformities = this.groupNonConformities(nonconformities);\r\n\r\n    // Keep both? Group the data only on viewer/measurementTable views?\r\n    // Work with not grouped data (worse lookup performance on measurementTableRow)?\r\n    this.nonconformities = nonconformities;\r\n    this.groupedNonConformities = groupedNonConformities;\r\n\r\n    console.warn('nonconformities');\r\n    console.warn(nonconformities);\r\n    console.warn('groupedNonConformities');\r\n    console.warn(groupedNonConformities);\r\n\r\n    return nonconformities;\r\n  }\r\n\r\n  groupNonConformities(nonconformities) {\r\n    const groups = {};\r\n    const toolsGroupsMap = this.measurementApi.toolsGroupsMap;\r\n\r\n    nonconformities.forEach(nonConformity => {\r\n      if (nonConformity.isGlobal) {\r\n        groups.globals = groups.globals || { messages: [] };\r\n        groups.globals.messages.push(nonConformity.message);\r\n\r\n        return;\r\n      }\r\n\r\n      nonConformity.measurements.forEach(measurement => {\r\n        const groupName = toolsGroupsMap[measurement.toolType];\r\n        groups[groupName] = groups[groupName] || { measurementNumbers: {} };\r\n\r\n        const group = groups[groupName];\r\n        const measureNumber = measurement.measurementNumber;\r\n        let measurementNumbers = group.measurementNumbers[measureNumber];\r\n\r\n        if (!measurementNumbers) {\r\n          measurementNumbers = group.measurementNumbers[measureNumber] = {\r\n            messages: [],\r\n            measurements: [],\r\n          };\r\n        }\r\n\r\n        measurementNumbers.messages.push(nonConformity.message);\r\n        measurementNumbers.measurements.push(measurement);\r\n      });\r\n    });\r\n\r\n    return groups;\r\n  }\r\n\r\n  validateTimepoint(timepointType, trialCriteriaType, data) {\r\n    const evaluators = this.getEvaluators(timepointType, trialCriteriaType);\r\n    let nonconformities = [];\r\n\r\n    evaluators.forEach(evaluator => {\r\n      const maxTargets = evaluator.getMaxTargets(false);\r\n      const maxNewTargets = evaluator.getMaxTargets(true);\r\n      if (maxTargets) {\r\n        this.maxTargets = maxTargets;\r\n      }\r\n\r\n      if (maxNewTargets) {\r\n        this.maxNewTargets = maxNewTargets;\r\n      }\r\n\r\n      const result = evaluator.evaluate(data);\r\n\r\n      if (result.length > 0) {\r\n        result.forEach(resultItem => {\r\n          resultItem.timepointType = timepointType;\r\n        });\r\n      }\r\n\r\n      nonconformities = nonconformities.concat(result);\r\n    });\r\n\r\n    return nonconformities;\r\n  }\r\n\r\n  getEvaluators(timepointType, trialCriteriaType) {\r\n    const evaluators = [];\r\n    console.warn(evaluations);\r\n    const trialCriteriaTypeId = trialCriteriaType.id.toLowerCase();\r\n    const evaluation = evaluations[trialCriteriaTypeId];\r\n\r\n    if (evaluation) {\r\n      const evaluationTimepoint = evaluation[timepointType];\r\n\r\n      if (evaluationTimepoint) {\r\n        evaluators.push(new CriteriaEvaluator(evaluationTimepoint));\r\n      }\r\n    }\r\n\r\n    return evaluators;\r\n  }\r\n\r\n  /*\r\n   * Build the data that will be used to do the conformance criteria checks\r\n   */\r\n  async getData(timepointType) {\r\n    const data = {\r\n      targets: [],\r\n      nonTargets: [],\r\n    };\r\n\r\n    const studyPromises = [];\r\n\r\n    const fillData = measurementType => {\r\n      const measurements = this.measurementApi.fetch(measurementType);\r\n\r\n      measurements.forEach(measurement => {\r\n        const { StudyInstanceUID } = measurement;\r\n\r\n        const timepointId = measurement.timepointId;\r\n        const timepoint =\r\n          timepointId &&\r\n          this.timepointApi.timepoints.find(a => a.timepointId === timepointId);\r\n\r\n        if (\r\n          !timepoint ||\r\n          (timepointType !== BOTH && timepoint.timepointType !== timepointType)\r\n        ) {\r\n          return;\r\n        }\r\n\r\n        const promise = this.loadStudy(StudyInstanceUID);\r\n        promise.then(\r\n          studyMetadata => {\r\n            data[measurementType].push({\r\n              measurement,\r\n              metadata: studyMetadata.getFirstInstance(),\r\n              timepoint,\r\n            });\r\n          },\r\n          error => {\r\n            throw new Error(error);\r\n          }\r\n        );\r\n        studyPromises.push(promise);\r\n      });\r\n    };\r\n\r\n    fillData(TARGETS);\r\n    fillData(NONTARGETS);\r\n\r\n    await Promise.all(studyPromises);\r\n\r\n    return data;\r\n  }\r\n\r\n  static setEvaluationDefinitions(evaluationKey, evaluationDefinitions) {\r\n    evaluations[evaluationKey] = evaluationDefinitions;\r\n  }\r\n}\r\n\r\nexport default ConformanceCriteria;\r\n//OHIF.measurements.ConformanceCriteria = ConformanceCriteria;\r\n","import cornerstone from 'cornerstone-core';\r\n\r\nexport default function(element, imageId) {\r\n  if (!imageId) {\r\n    // Get the Cornerstone imageId\r\n    const enabledElement = cornerstone.getEnabledElement(element);\r\n    imageId = enabledElement.image.imageId;\r\n  }\r\n\r\n  // Get StudyInstanceUID & PatientID\r\n  const {\r\n    StudyInstanceUID,\r\n    PatientID,\r\n    SeriesInstanceUID,\r\n    SOPInstanceUID,\r\n  } = cornerstone.metaData.get('instance', imageId);\r\n\r\n  const splitImageId = imageId.split('&frame');\r\n  const frameIndex =\r\n    splitImageId[1] !== undefined ? Number(splitImageId[1]) : 0;\r\n\r\n  const imagePath = [\r\n    StudyInstanceUID,\r\n    SeriesInstanceUID,\r\n    SOPInstanceUID,\r\n    frameIndex,\r\n  ].join('_');\r\n\r\n  return {\r\n    PatientID,\r\n    StudyInstanceUID,\r\n    SeriesInstanceUID,\r\n    SOPInstanceUID,\r\n    frameIndex,\r\n    imagePath,\r\n  };\r\n}\r\n","import cornerstone from 'cornerstone-core';\r\n\r\nexport default function refreshCornerstoneViewports() {\r\n  cornerstone.getEnabledElements().forEach(enabledElement => {\r\n    if (enabledElement.image) {\r\n      cornerstone.updateImage(enabledElement.element);\r\n    }\r\n  });\r\n}\r\n","import cornerstone from 'cornerstone-core';\r\nimport { MeasurementApi } from '../classes';\r\nimport log from '../../log';\r\nimport user from '../../user';\r\nimport getImageAttributes from '../lib/getImageAttributes';\r\nimport getLabel from '../lib/getLabel';\r\nimport refreshCornerstoneViewports from '../lib/refreshCornerstoneViewports';\r\n\r\nexport default function handleSingleMeasurementAdded({ eventData, tool }) {\r\n  const measurementApi = MeasurementApi.Instance;\r\n  if (!measurementApi) {\r\n    log.warn('Measurement API is not initialized');\r\n  }\r\n\r\n  const { measurementData, toolType } = eventData;\r\n\r\n  const collection = measurementApi.tools[toolType];\r\n\r\n  // Stop here if the tool data shall not be persisted (e.g. temp tools)\r\n  if (!collection) return;\r\n\r\n  // Stop here if there's no measurement data or if it was cancelled\r\n  if (!measurementData || measurementData.cancelled) return;\r\n\r\n  log.info('CornerstoneToolsMeasurementAdded');\r\n\r\n  const imageAttributes = getImageAttributes(eventData.element);\r\n  const measurement = Object.assign({}, measurementData, imageAttributes, {\r\n    lesionNamingNumber: measurementData.lesionNamingNumber,\r\n    userId: user.getUserId(),\r\n    toolType,\r\n  });\r\n\r\n  const addedMeasurement = measurementApi.addMeasurement(toolType, measurement);\r\n  Object.assign(measurementData, addedMeasurement);\r\n\r\n  const measurementLabel = getLabel(measurementData);\r\n  if (measurementLabel) {\r\n    measurementData.labels = [measurementLabel];\r\n  }\r\n\r\n  // TODO: This is very hacky, but will work for now\r\n  refreshCornerstoneViewports();\r\n\r\n  // TODO: Notify about the last activated measurement\r\n\r\n  if (MeasurementApi.isToolIncluded(tool)) {\r\n    // TODO: Notify that viewer suffered changes\r\n  }\r\n}\r\n","import cornerstone from 'cornerstone-core';\r\nimport { MeasurementApi } from '../classes';\r\nimport log from '../../log';\r\nimport user from '../../user';\r\nimport getImageAttributes from '../lib/getImageAttributes';\r\nimport getLabel from '../lib/getLabel';\r\nimport refreshCornerstoneViewports from '../lib/refreshCornerstoneViewports';\r\n\r\nexport default function({ eventData, tool, toolGroupId, toolGroup }) {\r\n  const measurementApi = MeasurementApi.Instance;\r\n  if (!measurementApi) {\r\n    log.warn('Measurement API is not initialized');\r\n  }\r\n\r\n  const { measurementData } = eventData;\r\n\r\n  const collection = measurementApi.tools[tool.parentTool];\r\n\r\n  // Stop here if the tool data shall not be persisted (e.g. temp tools)\r\n  if (!collection) return;\r\n\r\n  // Stop here if there's no measurement data or if it was cancelled\r\n  if (!measurementData || measurementData.cancelled) return;\r\n\r\n  log.info('CornerstoneToolsMeasurementAdded');\r\n\r\n  const imageAttributes = getImageAttributes(eventData.element);\r\n\r\n  const additionalProperties = Object.assign(imageAttributes, {\r\n    userId: user.getUserId(),\r\n  });\r\n\r\n  const childMeasurement = Object.assign(\r\n    {},\r\n    measurementData,\r\n    additionalProperties\r\n  );\r\n\r\n  const parentMeasurement = collection.find(\r\n    t =>\r\n      t.toolType === tool.parentTool &&\r\n      t.PatientID === imageAttributes.PatientID &&\r\n      t[tool.attribute] === null\r\n  );\r\n\r\n  // Check if a measurement to fit this child tool already exists\r\n  if (parentMeasurement) {\r\n    const key = tool.attribute;\r\n\r\n    // Add the createdAt attribute\r\n    childMeasurement.createdAt = new Date();\r\n\r\n    // Update the parent measurement\r\n    parentMeasurement[key] = childMeasurement;\r\n    parentMeasurement.childToolsCount =\r\n      (parentMeasurement.childToolsCount || 0) + 1;\r\n    measurementApi.updateMeasurement(tool.parentTool, parentMeasurement);\r\n\r\n    // Update the measurementData ID and lesionNamingNumber\r\n    measurementData._id = parentMeasurement._id;\r\n    measurementData.lesionNamingNumber = parentMeasurement.lesionNamingNumber;\r\n  } else {\r\n    const measurement = {\r\n      toolType: tool.parentTool,\r\n      lesionNamingNumber: measurementData.lesionNamingNumber,\r\n      userId: user.getUserId(),\r\n      PatientID: imageAttributes.PatientID,\r\n      StudyInstanceUID: imageAttributes.StudyInstanceUID,\r\n    };\r\n\r\n    measurement[tool.attribute] = Object.assign(\r\n      {},\r\n      measurementData,\r\n      additionalProperties\r\n    );\r\n\r\n    const addedMeasurement = measurementApi.addMeasurement(\r\n      tool.parentTool,\r\n      measurement\r\n    );\r\n    Object.assign(measurementData, addedMeasurement);\r\n  }\r\n\r\n  const measurementLabel = getLabel(measurementData);\r\n  if (measurementLabel) {\r\n    measurementData.labels = [measurementLabel];\r\n  }\r\n\r\n  // TODO: This is very hacky, but will work for now\r\n  refreshCornerstoneViewports();\r\n\r\n  // TODO: Notify about the last activated measurement\r\n\r\n  if (MeasurementApi.isToolIncluded(tool)) {\r\n    // TODO: Notify that viewer suffered changes\r\n  }\r\n}\r\n","import cornerstone from 'cornerstone-core';\r\nimport { MeasurementApi } from '../classes';\r\nimport log from '../../log';\r\n\r\nexport default function({ eventData, tool, toolGroupId, toolGroup }) {\r\n  const measurementApi = MeasurementApi.Instance;\r\n  if (!measurementApi) {\r\n    log.warn('Measurement API is not initialized');\r\n  }\r\n\r\n  const { measurementData, toolType } = eventData;\r\n\r\n  const collection = measurementApi.tools[toolType];\r\n\r\n  // Stop here if the tool data shall not be persisted (e.g. temp tools)\r\n  if (!collection) return;\r\n\r\n  log.info('CornerstoneToolsMeasurementModified');\r\n  let measurement = collection.find(t => t._id === measurementData._id);\r\n\r\n  // Stop here if the measurement is already deleted\r\n  if (!measurement) return;\r\n\r\n  measurement = Object.assign(measurement, measurementData);\r\n  measurement.viewport = cornerstone.getViewport(eventData.element);\r\n\r\n  measurementApi.updateMeasurement(toolType, measurement);\r\n\r\n  // TODO: Notify about the last activated measurement\r\n\r\n  if (MeasurementApi.isToolIncluded(tool)) {\r\n    // TODO: Notify that viewer suffered changes\r\n  }\r\n}\r\n","import cornerstone from 'cornerstone-core';\r\nimport { MeasurementApi } from '../classes';\r\nimport log from '../../log';\r\n\r\nexport default function({ eventData, tool, toolGroupId, toolGroup }) {\r\n  const measurementApi = MeasurementApi.Instance;\r\n  if (!measurementApi) {\r\n    log.warn('Measurement API is not initialized');\r\n  }\r\n\r\n  const { measurementData } = eventData;\r\n\r\n  const collection = measurementApi.tools[tool.parentTool];\r\n\r\n  // Stop here if the tool data shall not be persisted (e.g. temp tools)\r\n  if (!collection) return;\r\n\r\n  log.info('CornerstoneToolsMeasurementModified');\r\n\r\n  const measurement = collection.find(t => t._id === measurementData._id);\r\n  let childMeasurement = measurement && measurement[tool.attribute];\r\n\r\n  // Stop here if the measurement is already deleted\r\n  if (!childMeasurement) return;\r\n\r\n  childMeasurement = Object.assign(childMeasurement, measurementData);\r\n  childMeasurement.viewport = cornerstone.getViewport(eventData.element);\r\n\r\n  // Update the parent measurement\r\n  measurement[tool.attribute] = childMeasurement;\r\n  measurementApi.updateMeasurement(tool.parentTool, measurement);\r\n\r\n  // TODO: Notify about the last activated measurement\r\n\r\n  if (MeasurementApi.isToolIncluded(tool)) {\r\n    // TODO: Notify that viewer suffered changes\r\n  }\r\n}\r\n","import cornerstone from 'cornerstone-core';\r\nimport { MeasurementApi } from '../classes';\r\nimport log from '../../log';\r\nimport refreshCornerstoneViewports from '../lib/refreshCornerstoneViewports';\r\n\r\nexport default function handleSingleMeasurementRemoved({\r\n  eventData,\r\n  tool,\r\n  toolGroupId,\r\n  toolGroup,\r\n}) {\r\n  log.info('CornerstoneToolsMeasurementRemoved');\r\n  const { measurementData, toolType } = eventData;\r\n\r\n  const measurementApi = MeasurementApi.Instance;\r\n  if (!measurementApi) {\r\n    log.warn('Measurement API is not initialized');\r\n  }\r\n\r\n  const collection = measurementApi.tools[toolType];\r\n\r\n  // Stop here if the tool data shall not be persisted (e.g. temp tools)\r\n  if (!collection) return;\r\n\r\n  const measurementTypeId = measurementApi.toolsGroupsMap[toolType];\r\n  const measurement = collection.find(t => t._id === measurementData._id);\r\n\r\n  // Stop here if the measurement is already gone or never existed\r\n  if (!measurement) return;\r\n\r\n  // Remove all the measurements with the given type and number\r\n  const { lesionNamingNumber, timepointId } = measurement;\r\n  measurementApi.deleteMeasurements(toolType, measurementTypeId, {\r\n    lesionNamingNumber,\r\n    timepointId,\r\n  });\r\n\r\n  // TODO: This is very hacky, but will work for now\r\n  refreshCornerstoneViewports();\r\n\r\n  if (MeasurementApi.isToolIncluded(tool)) {\r\n    // TODO: Notify that viewer suffered changes\r\n  }\r\n}\r\n","import cornerstone from 'cornerstone-core';\r\nimport { MeasurementApi } from '../classes';\r\nimport log from '../../log';\r\nimport refreshCornerstoneViewports from '../lib/refreshCornerstoneViewports';\r\n\r\nexport default function({ eventData, tool, toolGroupId, toolGroup }) {\r\n  log.info('CornerstoneToolsMeasurementRemoved');\r\n  const { measurementData } = eventData;\r\n\r\n  const measurementApi = MeasurementApi.Instance;\r\n  if (!measurementApi) {\r\n    log.warn('Measurement API is not initialized');\r\n  }\r\n\r\n  const collection = measurementApi.tools[tool.parentTool];\r\n\r\n  // Stop here if the tool data shall not be persisted (e.g. temp tools)\r\n  if (!collection) return;\r\n\r\n  const measurementIndex = collection.findIndex(\r\n    t => t._id === measurementData._id\r\n  );\r\n  const measurement =\r\n    measurementIndex > -1 ? collection[measurementIndex] : null;\r\n\r\n  // Stop here if the measurement is already gone or never existed\r\n  if (!measurement) return;\r\n\r\n  if (measurement.childToolsCount === 1) {\r\n    // Remove the measurement\r\n    collection.splice(measurementIndex, 1);\r\n    measurementApi.onMeasurementRemoved(tool.parentTool, measurement);\r\n  } else {\r\n    // Update the measurement\r\n    measurement[tool.attribute] = null;\r\n    measurement.childToolsCount = (measurement.childToolsCount || 0) - 1;\r\n    measurementApi.updateMeasurement(tool.parentTool, measurement);\r\n  }\r\n\r\n  // TODO: This is very hacky, but will work for now\r\n  refreshCornerstoneViewports();\r\n\r\n  if (MeasurementApi.isToolIncluded(tool)) {\r\n    // TODO: Notify that viewer suffered changes\r\n  }\r\n}\r\n","import { MeasurementApi } from '../classes';\r\nimport handleSingleMeasurementAdded from './handleSingleMeasurementAdded';\r\nimport handleChildMeasurementAdded from './handleChildMeasurementAdded';\r\nimport handleSingleMeasurementModified from './handleSingleMeasurementModified';\r\nimport handleChildMeasurementModified from './handleChildMeasurementModified';\r\nimport handleSingleMeasurementRemoved from './handleSingleMeasurementRemoved';\r\nimport handleChildMeasurementRemoved from './handleChildMeasurementRemoved';\r\n\r\nconst getEventData = event => {\r\n  const eventData = event.detail;\r\n  if (eventData.toolName) {\r\n    eventData.toolType = eventData.toolName;\r\n  }\r\n\r\n  return eventData;\r\n};\r\n\r\nconst MeasurementHandlers = {\r\n  handleSingleMeasurementAdded,\r\n  handleChildMeasurementAdded,\r\n  handleSingleMeasurementModified,\r\n  handleChildMeasurementModified,\r\n  handleSingleMeasurementRemoved,\r\n  handleChildMeasurementRemoved,\r\n\r\n  onAdded(event) {\r\n    const eventData = getEventData(event);\r\n    const { toolType } = eventData;\r\n    const {\r\n      toolGroupId,\r\n      toolGroup,\r\n      tool,\r\n    } = MeasurementApi.getToolConfiguration(toolType);\r\n    const params = {\r\n      eventData,\r\n      tool,\r\n      toolGroupId,\r\n      toolGroup,\r\n    };\r\n\r\n    if (!tool) return;\r\n\r\n    if (tool.parentTool) {\r\n      handleChildMeasurementAdded(params);\r\n    } else {\r\n      handleSingleMeasurementAdded(params);\r\n    }\r\n  },\r\n\r\n  onModified(event) {\r\n    const eventData = getEventData(event);\r\n    const { toolType } = eventData;\r\n    const {\r\n      toolGroupId,\r\n      toolGroup,\r\n      tool,\r\n    } = MeasurementApi.getToolConfiguration(toolType);\r\n    const params = {\r\n      eventData,\r\n      tool,\r\n      toolGroupId,\r\n      toolGroup,\r\n    };\r\n\r\n    if (!tool) return;\r\n\r\n    if (tool.parentTool) {\r\n      handleChildMeasurementModified(params);\r\n    } else {\r\n      handleSingleMeasurementModified(params);\r\n    }\r\n  },\r\n\r\n  onRemoved(event) {\r\n    const eventData = getEventData(event);\r\n    const { toolType } = eventData;\r\n    const {\r\n      toolGroupId,\r\n      toolGroup,\r\n      tool,\r\n    } = MeasurementApi.getToolConfiguration(toolType);\r\n    const params = {\r\n      eventData,\r\n      tool,\r\n      toolGroupId,\r\n      toolGroup,\r\n    };\r\n\r\n    if (!tool) return;\r\n\r\n    if (tool.parentTool) {\r\n      handleChildMeasurementRemoved(params);\r\n    } else {\r\n      handleSingleMeasurementRemoved(params);\r\n    }\r\n  },\r\n};\r\n\r\nexport default MeasurementHandlers;\r\n","import { bidirectional, targetCR, targetUN, targetNE } from '../tools';\r\n\r\nexport const targets = {\r\n  id: 'targets',\r\n  name: 'Targets',\r\n  childTools: [bidirectional, targetCR, targetUN, targetNE],\r\n  options: {\r\n    caseProgress: {\r\n      include: true,\r\n      evaluate: true,\r\n    },\r\n  },\r\n};\r\n","import { nonTarget } from '../tools';\r\n\r\nexport const nonTargets = {\r\n  id: 'nonTargets',\r\n  name: 'Non-Targets',\r\n  childTools: [nonTarget],\r\n  options: {\r\n    caseProgress: {\r\n      include: true,\r\n      evaluate: true,\r\n    },\r\n  },\r\n};\r\n","import { length, ellipticalRoi } from '../tools';\r\nimport cloneDeep from 'lodash.clonedeep';\r\n\r\nconst childTools = cloneDeep([length, ellipticalRoi]);\r\n\r\n// Exclude temp tools from case progress\r\nchildTools.forEach(childTool => {\r\n  childTool.options = Object.assign({}, childTool.options, {\r\n    caseProgress: {\r\n      include: false,\r\n      evaluate: false,\r\n    },\r\n  });\r\n});\r\n\r\nexport const temp = {\r\n  id: 'temp',\r\n  name: 'Temporary',\r\n  childTools,\r\n  options: {\r\n    caseProgress: {\r\n      include: false,\r\n      evaluate: false,\r\n    },\r\n  },\r\n};\r\n","import { targets } from './toolGroups/targets';\r\nimport { nonTargets } from './toolGroups/nonTargets';\r\nimport { temp } from './toolGroups/temp';\r\nimport cloneDeep from 'lodash.clonedeep';\r\n\r\nconst ltTools = cloneDeep([targets, nonTargets, temp]);\r\n\r\nltTools.forEach(toolGroup => {\r\n  toolGroup.childTools.forEach(tool => {\r\n    tool.toolGroup = toolGroup.id;\r\n  });\r\n});\r\n\r\nexport default ltTools;\r\n","import * as tools from './tools';\r\n\r\nimport { MeasurementApi, TimepointApi } from './classes';\r\nimport { ConformanceCriteria } from './conformance';\r\nimport MeasurementHandlers from './measurementHandlers';\r\nimport getDescription from './lib/getDescription';\r\nimport getImageAttributes from './lib/getImageAttributes';\r\nimport getImageIdForImagePath from './lib/getImageIdForImagePath';\r\nimport getLabel from './lib/getLabel';\r\nimport ltTools from './ltTools';\r\n\r\nconst measurements = {\r\n  TimepointApi,\r\n  MeasurementApi,\r\n  ConformanceCriteria,\r\n  MeasurementHandlers,\r\n  ltTools,\r\n  tools,\r\n  getLabel,\r\n  getDescription,\r\n  getImageAttributes,\r\n  getImageIdForImagePath,\r\n};\r\n\r\nexport default measurements;\r\n","import DICOMWeb from '../../../DICOMWeb/';\r\nimport { api } from 'dicomweb-client';\r\n\r\nimport errorHandler from '../../../errorHandler';\r\n\r\n/**\r\n * Parses data returned from a QIDO search and transforms it into\r\n * an array of series that are present in the study\r\n *\r\n * @param server The DICOM server\r\n * @param StudyInstanceUID\r\n * @param resultData\r\n * @returns {Array} Series List\r\n */\r\nfunction resultDataToStudyMetadata(server, StudyInstanceUID, resultData) {\r\n  const seriesMap = {};\r\n  const series = [];\r\n\r\n  resultData.forEach(function(instance) {\r\n    // Use seriesMap to cache series data\r\n    // If the series instance UID has already been used to\r\n    // process series data, continue using that series\r\n    var SeriesInstanceUID = DICOMWeb.getString(instance['0020000E']);\r\n    var series = seriesMap[SeriesInstanceUID];\r\n\r\n    // If no series data exists in the seriesMap cache variable,\r\n    // process any available series data\r\n    if (!series) {\r\n      series = {\r\n        SeriesInstanceUID: SeriesInstanceUID,\r\n        SeriesNumber: DICOMWeb.getString(instance['00200011']),\r\n        instances: [],\r\n      };\r\n\r\n      // Save this data in the seriesMap cache variable\r\n      seriesMap[SeriesInstanceUID] = series;\r\n      series.push(series);\r\n    }\r\n\r\n    // The uri for the dicomweb\r\n    // NOTE: DCM4CHEE seems to return the data zipped\r\n    // NOTE: Orthanc returns the data with multi-part mime which cornerstoneWADOImageLoader doesn't\r\n    //       know how to parse yet\r\n    //var uri = DICOMWeb.getString(instance['00081190']);\r\n    //uri = uri.replace('wado-rs', 'dicom-web');\r\n\r\n    // manually create a WADO-URI from the UIDs\r\n    // NOTE: Haven't been able to get Orthanc's WADO-URI to work yet - maybe its not configured?\r\n    var SOPInstanceUID = DICOMWeb.getString(instance['00080018']);\r\n    var uri =\r\n      server.wadoUriRoot +\r\n      '?requestType=WADO&studyUID=' +\r\n      StudyInstanceUID +\r\n      '&seriesUID=' +\r\n      SeriesInstanceUID +\r\n      '&objectUID=' +\r\n      SOPInstanceUID +\r\n      '&contentType=application%2Fdicom';\r\n\r\n    // Add this instance to the current series\r\n    series.instances.push({\r\n      SOPClassUID: DICOMWeb.getString(instance['00080016']),\r\n      SOPInstanceUID: SOPInstanceUID,\r\n      uri: uri,\r\n      InstanceNumber: DICOMWeb.getString(instance['00200013']),\r\n    });\r\n  });\r\n  return series;\r\n}\r\n\r\n/**\r\n * Retrieve a set of instances using a QIDO call\r\n * @param server\r\n * @param StudyInstanceUID\r\n * @throws ECONNREFUSED\r\n * @returns {{wadoUriRoot: String, StudyInstanceUID: String, series: Array}}\r\n */\r\nexport default function Instances(server, StudyInstanceUID) {\r\n  // TODO: Are we using this function anywhere?? Can we remove it?\r\n\r\n  const config = {\r\n    url: server.qidoRoot,\r\n    headers: DICOMWeb.getAuthorizationHeader(server),\r\n    errorInterceptor: errorHandler.getHTTPErrorHandler(),\r\n  };\r\n  const dicomWeb = new api.DICOMwebClient(config);\r\n  const queryParams = getQIDOQueryParams(\r\n    filter,\r\n    server.qidoSupportsIncludeField\r\n  );\r\n  const options = {\r\n    studyInstanceUID: StudyInstanceUID,\r\n  };\r\n\r\n  return dicomWeb.searchForInstances(options).then(result => {\r\n    return {\r\n      wadoUriRoot: server.wadoUriRoot,\r\n      StudyInstanceUID: StudyInstanceUID,\r\n      series: resultDataToStudyMetadata(server, StudyInstanceUID, result.data),\r\n    };\r\n  });\r\n}\r\n","import { api } from 'dicomweb-client';\r\nimport StaticWadoClient from './StaticWadoClient';\r\nimport DICOMWeb from '../../../DICOMWeb/';\r\n\r\nimport errorHandler from '../../../errorHandler';\r\nimport getXHRRetryRequestHook from '../../../utils/xhrRetryRequestHook';\r\n\r\n/**\r\n * Creates a QIDO date string for a date range query\r\n * Assumes the year is positive, at most 4 digits long.\r\n *\r\n * @param date The Date object to be formatted\r\n * @returns {string} The formatted date string\r\n */\r\nfunction dateToString(date) {\r\n  if (!date) return '';\r\n  let year = date.getFullYear().toString();\r\n  let month = (date.getMonth() + 1).toString();\r\n  let day = date.getDate().toString();\r\n  year = '0'.repeat(4 - year.length).concat(year);\r\n  month = '0'.repeat(2 - month.length).concat(month);\r\n  day = '0'.repeat(2 - day.length).concat(day);\r\n  return ''.concat(year, month, day);\r\n}\r\n\r\n/**\r\n * Produces a QIDO URL given server details and a set of specified search filter\r\n * items\r\n *\r\n * @param filter\r\n * @param serverSupportsQIDOIncludeField\r\n * @returns {string} The URL with encoded filter query data\r\n */\r\nfunction getQIDOQueryParams(filter, serverSupportsQIDOIncludeField) {\r\n  const commaSeparatedFields = [\r\n    '00081030', // Study Description\r\n    '00080060', // Modality\r\n    // Add more fields here if you want them in the result\r\n  ].join(',');\r\n\r\n  const parameters = {\r\n    PatientName: filter.PatientName,\r\n    PatientID: filter.PatientID,\r\n    AccessionNumber: filter.AccessionNumber,\r\n    StudyDescription: filter.StudyDescription,\r\n    ModalitiesInStudy: filter.ModalitiesInStudy,\r\n    limit: filter.limit,\r\n    offset: filter.offset,\r\n    fuzzymatching: filter.fuzzymatching,\r\n    includefield: serverSupportsQIDOIncludeField ? commaSeparatedFields : 'all',\r\n  };\r\n\r\n  // build the StudyDate range parameter\r\n  if (filter.studyDateFrom || filter.studyDateTo) {\r\n    const dateFrom = dateToString(new Date(filter.studyDateFrom));\r\n    const dateTo = dateToString(new Date(filter.studyDateTo));\r\n    parameters.StudyDate = `${dateFrom}-${dateTo}`;\r\n  }\r\n\r\n  // Build the StudyInstanceUID parameter\r\n  if (filter.StudyInstanceUID) {\r\n    let studyUIDs = filter.StudyInstanceUID;\r\n    studyUIDs = Array.isArray(studyUIDs) ? studyUIDs.join() : studyUIDs;\r\n    studyUIDs = studyUIDs.replace(/[^0-9.]+/g, '\\\\');\r\n    parameters.StudyInstanceUID = studyUIDs;\r\n  }\r\n\r\n  // Clean query params of undefined values.\r\n  const params = {};\r\n  Object.keys(parameters).forEach(key => {\r\n    if (parameters[key] !== undefined && parameters[key] !== '') {\r\n      params[key] = parameters[key];\r\n    }\r\n  });\r\n\r\n  return params;\r\n}\r\n\r\n/**\r\n * Parses resulting data from a QIDO call into a set of Study MetaData\r\n *\r\n * @param resultData\r\n * @returns {Array} An array of Study MetaData objects\r\n */\r\nfunction resultDataToStudies(resultData) {\r\n  const studies = [];\r\n\r\n  if (!resultData || !resultData.length) return;\r\n\r\n  resultData.forEach(study =>\r\n    studies.push({\r\n      StudyInstanceUID: DICOMWeb.getString(study['0020000D']),\r\n      // 00080005 = SpecificCharacterSet\r\n      StudyDate: DICOMWeb.getString(study['00080020']),\r\n      StudyTime: DICOMWeb.getString(study['00080030']),\r\n      AccessionNumber: DICOMWeb.getString(study['00080050']),\r\n      referringPhysicianName: DICOMWeb.getString(study['00080090']),\r\n      // 00081190 = URL\r\n      PatientName: DICOMWeb.getName(study['00100010']),\r\n      PatientID: DICOMWeb.getString(study['00100020']),\r\n      PatientBirthdate: DICOMWeb.getString(study['00100030']),\r\n      patientSex: DICOMWeb.getString(study['00100040']),\r\n      studyId: DICOMWeb.getString(study['00200010']),\r\n      numberOfStudyRelatedSeries: DICOMWeb.getString(study['00201206']),\r\n      numberOfStudyRelatedInstances: DICOMWeb.getString(study['00201208']),\r\n      StudyDescription: DICOMWeb.getString(study['00081030']),\r\n      // Modality: DICOMWeb.getString(study['00080060']),\r\n      // ModalitiesInStudy: DICOMWeb.getString(study['00080061']),\r\n      modalities: DICOMWeb.getString(\r\n        DICOMWeb.getModalities(study['00080060'], study['00080061'])\r\n      ),\r\n    })\r\n  );\r\n\r\n  return studies;\r\n}\r\n\r\nexport default function Studies(server, filter) {\r\n  const { staticWado } = server;\r\n  const config = {\r\n    ...server,\r\n    url: server.qidoRoot,\r\n    headers: DICOMWeb.getAuthorizationHeader(server),\r\n    errorInterceptor: errorHandler.getHTTPErrorHandler(),\r\n    requestHooks: [getXHRRetryRequestHook()],\r\n  };\r\n\r\n  const dicomWeb = staticWado\r\n    ? new StaticWadoClient(config)\r\n    : new api.DICOMwebClient(config);\r\n  server.qidoSupportsIncludeField =\r\n    server.qidoSupportsIncludeField === undefined\r\n      ? true\r\n      : server.qidoSupportsIncludeField;\r\n  const queryParams = getQIDOQueryParams(\r\n    filter,\r\n    server.qidoSupportsIncludeField\r\n  );\r\n  const options = {\r\n    queryParams,\r\n  };\r\n\r\n  return dicomWeb.searchForStudies(options).then(resultDataToStudies);\r\n}\r\n","// DICOMWeb instance, study, and metadata retrieval\r\nimport Instances from './qido/instances.js';\r\nimport Studies from './qido/studies.js';\r\nimport RetrieveMetadata from './wado/retrieveMetadata.js';\r\n\r\nconst WADO = {\r\n  RetrieveMetadata,\r\n};\r\n\r\nconst QIDO = {\r\n  Studies,\r\n  Instances,\r\n};\r\n\r\nexport { QIDO, WADO };\r\n","import Studies from './services/qido/studies';\r\n\r\nconst studySearchPromises = new Map();\r\n\r\n/**\r\n * Search for studies information by the given filter\r\n *\r\n * @param {Object} filter Filter that will be used on search\r\n * @returns {Promise} resolved with an array of studies information or rejected with an error\r\n */\r\nexport default function searchStudies(server, filter) {\r\n  const promiseKeyObj = {\r\n    qidoRoot: server.qidoRoot,\r\n    filter,\r\n  };\r\n  const promiseKey = JSON.stringify(promiseKeyObj);\r\n  if (studySearchPromises.has(promiseKey)) {\r\n    return studySearchPromises.get(promiseKey);\r\n  } else {\r\n    const promise = Studies(server, filter);\r\n\r\n    studySearchPromises.set(promiseKey, promise);\r\n\r\n    return promise;\r\n  }\r\n}\r\n","import { QIDO, WADO } from './services/';\r\nimport {\r\n  deleteStudyMetadataPromise,\r\n  retrieveStudyMetadata,\r\n} from './retrieveStudyMetadata.js';\r\n\r\nimport getStudyBoxData from './getStudyBoxData';\r\nimport retrieveStudiesMetadata from './retrieveStudiesMetadata.js';\r\nimport searchStudies from './searchStudies';\r\nimport sortStudy from './sortStudy';\r\n\r\nconst studies = {\r\n  services: {\r\n    QIDO,\r\n    WADO,\r\n  },\r\n  loadingDict: {},\r\n  retrieveStudyMetadata,\r\n  deleteStudyMetadataPromise,\r\n  retrieveStudiesMetadata,\r\n  getStudyBoxData,\r\n  searchStudies,\r\n  sortStudy,\r\n};\r\n\r\nexport default studies;\r\n","import log from '../log.js';\r\nimport { retrieveStudyMetadata } from './retrieveStudyMetadata';\r\n\r\n/**\r\n * Retrieves metaData for multiple studies at once.\r\n *\r\n * This function calls retrieveStudyMetadata several times, asynchronously,\r\n * and waits for all of the results to be returned.\r\n *\r\n * @param {Object} server Object with server configuration parameters\r\n * @param {Array} studyInstanceUIDs The UIDs of the Studies to be retrieved\r\n * @param {Object} [filters] - Object containing filters to be applied on retrieve metadata process\r\n * @param {string} [filter.seriesInstanceUID] - series instance uid to filter results against\r\n * @param {boolean} [separateSeriesInstanceUIDFilters = false] - If true, split filtered metadata calls into multiple calls,\r\n * as some DICOMWeb implementations only support single filters.\r\n * @returns {Promise} that will be resolved with the metadata or rejected with the error\r\n */\r\nexport default function retrieveStudiesMetadata(\r\n  server,\r\n  studyInstanceUIDs,\r\n  filters,\r\n  separateSeriesInstanceUIDFilters = false\r\n) {\r\n  // Create an empty array to store the Promises for each metaData retrieval call\r\n  const promises = [];\r\n\r\n  // Loop through the array of studyInstanceUIDs\r\n  studyInstanceUIDs.forEach(function(StudyInstanceUID) {\r\n    // Send the call and resolve or reject the related promise based on its outcome\r\n    const promise = retrieveStudyMetadata(\r\n      server,\r\n      StudyInstanceUID,\r\n      filters,\r\n      separateSeriesInstanceUIDFilters\r\n    );\r\n\r\n    // Add the current promise to the array of promises\r\n    promises.push(promise);\r\n  });\r\n\r\n  // When all of the promises are complete, this callback runs\r\n  const promise = Promise.all(promises);\r\n\r\n  // Warn the error on console if some retrieval failed\r\n  promise.catch(error => log.warn(error));\r\n\r\n  return promise;\r\n}\r\n","/**\r\n * Overridable namespace to allow getting study boxes data externally.\r\n *\r\n * The function must handle the first parameter as a studyInformation object containing at least the\r\n * StudyInstanceUID attribute.\r\n *\r\n * Shall return a promise that will be resolved with an object containing those attributes:\r\n * - StudyInstanceUID {String}: copy of studyInformation.StudyInstanceUID\r\n * - modalities {String}: 2 uppercase letters for each Modality split by any non-alphabetical char(s)\r\n * - StudyDate {String}: date formatted as YYYYMMDD\r\n * - StudyDescription {String}: study description string\r\n */\r\n// TODO: What is this for?\r\nconst getStudyBoxData = false;\r\n\r\nexport default getStudyBoxData;\r\n","function getWADORSImageUrl(instance, frame) {\r\n  let wadorsuri = instance.wadorsuri;\r\n\r\n  if (!wadorsuri) {\r\n    return;\r\n  }\r\n\r\n  // Use null to obtain an imageId which represents the instance\r\n  if (frame === null) {\r\n    wadorsuri = wadorsuri.replace(/frames\\/(\\d+)/, '');\r\n  } else {\r\n    // We need to sum 1 because WADO-RS frame number is 1-based\r\n    frame = frame ? parseInt(frame) + 1 : 1;\r\n\r\n    // Replaces /frame/1 by /frame/{frame}\r\n    wadorsuri = wadorsuri.replace(/frames\\/(\\d+)/, `frames/${frame}`);\r\n  }\r\n\r\n  return wadorsuri;\r\n}\r\n\r\n/**\r\n * Obtain an imageId for Cornerstone based on the WADO-RS scheme\r\n *\r\n * @param {object} instanceMetada metadata object (InstanceMetadata)\r\n * @param {(string\\|number)} [frame] the frame number\r\n * @returns {string} The imageId to be used by Cornerstone\r\n */\r\nexport default function getWADORSImageId(instance, frame) {\r\n  const uri = getWADORSImageUrl(instance, frame);\r\n\r\n  if (!uri) {\r\n    return;\r\n  }\r\n\r\n  return `wadors:${uri}`;\r\n}\r\n","import DICOMWeb from '../DICOMWeb/';\r\nimport isLowPriorityModality from '../utils/isLowPriorityModality';\r\n\r\nconst INFO = Symbol('INFO');\r\n\r\n/**\r\n * Creates an object with processed series information and saves its reference\r\n * inside the series object itself.\r\n * @param {Object} series The raw series object\r\n * @returns {Object} object containing some useful info from given series\r\n */\r\nexport default function getSeriesInfo(series) {\r\n  let info = series[INFO];\r\n  if (!info) {\r\n    const Modality = DICOMWeb.getString(series['00080060'], '').toUpperCase();\r\n    info = Object.freeze({\r\n      Modality,\r\n      isLowPriority: isLowPriorityModality(Modality),\r\n      SeriesInstanceUID: DICOMWeb.getString(series['0020000E']),\r\n      SeriesNumber: DICOMWeb.getNumber(series['00200011'], 0) || 0,\r\n    });\r\n    series[INFO] = info;\r\n  }\r\n  return info;\r\n}\r\n","import getSeriesInfo from './getSeriesInfo';\r\n\r\n/**\r\n * Series sorting criteria: series considered low priority are moved to the end\r\n * of the list and series number is used to break ties\r\n * @param {Object} firstSeries\r\n * @param {Object} secondSeries\r\n */\r\nfunction seriesInfoSortingCriteria(firstSeries, secondSeries) {\r\n  const a = getSeriesInfo(firstSeries);\r\n  const b = getSeriesInfo(secondSeries);\r\n  if (!a.isLowPriority && b.isLowPriority) {\r\n    return -1;\r\n  }\r\n  if (a.isLowPriority && !b.isLowPriority) {\r\n    return 1;\r\n  }\r\n  return a.SeriesNumber - b.SeriesNumber;\r\n}\r\n\r\nconst seriesSortCriteria = {\r\n  default: (a, b) => a.SeriesNumber - b.SeriesNumber,\r\n  seriesInfoSortingCriteria,\r\n};\r\n\r\nconst instancesSortCriteria = {\r\n  default: (a, b) => a.InstanceNumber - b.InstanceNumber,\r\n};\r\n\r\nconst sortingCriteria = {\r\n  seriesSortCriteria,\r\n  instancesSortCriteria,\r\n};\r\n\r\n/**\r\n * Sorts given series (given param is modified)\r\n * The default criteria is based on series number in ascending order.\r\n *\r\n * @param {Array} series List of series\r\n * @param {function} seriesSortingCriteria method for sorting\r\n * @returns {Array} sorted series object\r\n */\r\nconst sortStudySeries = (\r\n  series,\r\n  seriesSortingCriteria = seriesSortCriteria.default\r\n) => {\r\n  return series.sort(seriesSortingCriteria);\r\n};\r\n\r\n/**\r\n * Sorts given instancesList (given param is modified)\r\n * The default criteria is based on instance number in ascending order.\r\n *\r\n * @param {Array} instancesList List of series\r\n * @param {function} instancesSortingCriteria method for sorting\r\n * @returns {Array} sorted instancesList object\r\n */\r\nconst sortStudyInstances = (\r\n  instancesList,\r\n  instancesSortingCriteria = instancesSortCriteria.default\r\n) => {\r\n  return instancesList.sort(instancesSortingCriteria);\r\n};\r\n\r\n/**\r\n * Sorts the series and instances (by default) inside a study instance based on sortingCriteria (given param is modified)\r\n * The default criteria is based on series and instance numbers in ascending order.\r\n *\r\n * @param {Object} study The study instance\r\n * @param {boolean} [deepSort = true] to sort instance also\r\n * @param {function} [seriesSortingCriteria = seriesSortCriteria.default] method for sorting series\r\n * @param {function} [instancesSortingCriteria = instancesSortCriteria.default] method for sorting instances\r\n * @returns {Object} sorted study object\r\n */\r\nexport default function sortStudy(\r\n  study,\r\n  deepSort = true,\r\n  seriesSortingCriteria = seriesSortCriteria.default,\r\n  instancesSortingCriteria = instancesSortCriteria.default\r\n) {\r\n  if (!study || !study.series) {\r\n    throw new Error('Insufficient study data was provided to sortStudy');\r\n  }\r\n\r\n  sortStudySeries(study.series, seriesSortingCriteria);\r\n\r\n  if (deepSort) {\r\n    study.series.forEach(series => {\r\n      sortStudyInstances(series.instances, instancesSortingCriteria);\r\n    });\r\n  }\r\n\r\n  return study;\r\n}\r\n\r\nexport { sortStudySeries, sortStudyInstances, sortingCriteria };\r\n","import { asyncComponent, retryImport } from '@ohif/ui';\r\nimport OHIF from '@ohif/core';\r\n\r\nconst { urlUtil: UrlUtil } = OHIF.utils;\r\n\r\n// Dynamic Import Routes (CodeSplitting)\r\nconst IHEInvokeImageDisplay = asyncComponent(() =>\r\n  retryImport(() =>\r\n    import(/* webpackChunkName: \"IHEInvokeImageDisplay\" */ './IHEInvokeImageDisplay.js')\r\n  )\r\n);\r\nconst ViewerRouting = asyncComponent(() =>\r\n  retryImport(() => import(/* webpackChunkName: \"ViewerRouting\" */ './ViewerRouting.js'))\r\n);\r\n\r\nconst StudyListRouting = asyncComponent(() =>\r\n  retryImport(() => import(\r\n    /* webpackChunkName: \"StudyListRouting\" */ '../studylist/StudyListRouting.js'\r\n  ))\r\n);\r\nconst StandaloneRouting = asyncComponent(() =>\r\n  retryImport(() => import(\r\n    /* webpackChunkName: \"ConnectedStandaloneRouting\" */ '../connectedComponents/ConnectedStandaloneRouting.js'\r\n  ))\r\n);\r\nconst ViewerLocalFileData = asyncComponent(() =>\r\n  retryImport(() => import(\r\n    /* webpackChunkName: \"ViewerLocalFileData\" */ '../connectedComponents/ViewerLocalFileData.js'\r\n  ))\r\n);\r\n\r\nconst reload = () => window.location.reload();\r\n\r\nconst ROUTES_DEF = {\r\n  default: {\r\n    viewer: {\r\n      path: '/viewer/:studyInstanceUIDs',\r\n      component: ViewerRouting,\r\n    },\r\n    standaloneViewer: {\r\n      path: '/viewer',\r\n      component: StandaloneRouting,\r\n    },\r\n    list: {\r\n      path: ['/studylist', '/'],\r\n      component: StudyListRouting,\r\n      condition: appConfig => {\r\n        return appConfig.showStudyList;\r\n      },\r\n    },\r\n    local: {\r\n      path: '/local',\r\n      component: ViewerLocalFileData,\r\n    },\r\n    IHEInvokeImageDisplay: {\r\n      path: '/IHEInvokeImageDisplay',\r\n      component: IHEInvokeImageDisplay\r\n    },\r\n  },\r\n  gcloud: {\r\n    viewer: {\r\n      path:\r\n        '/projects/:project/locations/:location/datasets/:dataset/dicomStores/:dicomStore/study/:studyInstanceUIDs',\r\n      component: ViewerRouting,\r\n      condition: appConfig => {\r\n        return !!appConfig.enableGoogleCloudAdapter;\r\n      },\r\n    },\r\n    list: {\r\n      path:\r\n        '/projects/:project/locations/:location/datasets/:dataset/dicomStores/:dicomStore',\r\n      component: StudyListRouting,\r\n      condition: appConfig => {\r\n        const showList = appConfig.showStudyList;\r\n\r\n        return showList && !!appConfig.enableGoogleCloudAdapter;\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst getRoutes = appConfig => {\r\n  const routes = [];\r\n  for (let keyConfig in ROUTES_DEF) {\r\n    const routesConfig = ROUTES_DEF[keyConfig];\r\n\r\n    for (let routeKey in routesConfig) {\r\n      const route = routesConfig[routeKey];\r\n      const validRoute =\r\n        typeof route.condition === 'function'\r\n          ? route.condition(appConfig)\r\n          : true;\r\n\r\n      if (validRoute) {\r\n        routes.push({\r\n          path: route.path,\r\n          Component: route.component,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  return routes;\r\n};\r\n\r\nconst parsePath = (path, server, params) => {\r\n  let _path = path;\r\n  const _paramsCopy = Object.assign({}, server, params);\r\n\r\n  for (let key in _paramsCopy) {\r\n    _path = UrlUtil.paramString.replaceParam(_path, key, _paramsCopy[key]);\r\n  }\r\n\r\n  return _path;\r\n};\r\n\r\nconst parseViewerPath = (appConfig = {}, server = {}, params) => {\r\n  let viewerPath = ROUTES_DEF.default.viewer.path;\r\n  if (appConfig.enableGoogleCloudAdapter) {\r\n    viewerPath = ROUTES_DEF.gcloud.viewer.path;\r\n  }\r\n\r\n  return parsePath(viewerPath, server, params);\r\n};\r\n\r\nconst parseStudyListPath = (appConfig = {}, server = {}, params) => {\r\n  let studyListPath = ROUTES_DEF.default.list.path;\r\n  if (appConfig.enableGoogleCloudAdapter) {\r\n    studyListPath = ROUTES_DEF.gcloud.list.path || studyListPath;\r\n  }\r\n\r\n  return parsePath(studyListPath, server, params);\r\n};\r\n\r\nexport { getRoutes, parseViewerPath, parseStudyListPath, reload };\r\n","import DICOMWeb from '../../../DICOMWeb';\r\n\r\n/**\r\n * Function to get series sequence (sequence of pepeating items where each\r\n * item includes the attributes of one or more series) based on a given sopInstance.\r\n *\r\n * @param {Object} instance The sop instance\r\n * @returns {Promise} Referenced series sequence\r\n */\r\nconst getReferencedSeriesSequence = instance => {\r\n  const referencedSeriesSequenceRaw = instance['00081115'];\r\n\r\n  const referencedSeriesSequence = [];\r\n\r\n  if (referencedSeriesSequenceRaw && referencedSeriesSequenceRaw.Value) {\r\n    referencedSeriesSequenceRaw.Value.forEach(referencedSeries => {\r\n      const referencedSeriesInstanceUID = DICOMWeb.getString(\r\n        referencedSeries['0020000E']\r\n      );\r\n\r\n      const referencedInstanceSequenceRaw = referencedSeries['0008114A'];\r\n      const referencedInstanceSequence = [];\r\n\r\n      referencedInstanceSequenceRaw.Value.forEach(referencedInstance => {\r\n        referencedInstanceSequence.push({\r\n          referencedSOPClassUID: DICOMWeb.getString(\r\n            referencedInstance['00081150']\r\n          ),\r\n          referencedSOPInstanceUID: DICOMWeb.getString(\r\n            referencedInstance['00081155']\r\n          ),\r\n        });\r\n      });\r\n\r\n      referencedSeriesSequence.push({\r\n        referencedSeriesInstanceUID,\r\n        referencedInstanceSequence,\r\n      });\r\n    });\r\n  }\r\n\r\n  return referencedSeriesSequence;\r\n};\r\n\r\nexport default getReferencedSeriesSequence;\r\n","import DICOMWeb from '../../../DICOMWeb';\r\nimport metadataProvider from '../../../classes/MetadataProvider';\r\nimport getWADORSImageId from '../../../utils/getWADORSImageId';\r\nimport cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\r\nimport getReferencedSeriesSequence from './getReferencedSeriesSequence';\r\n\r\n/**\r\n * Create a plain JS object that describes a study (a study descriptor object)\r\n * @param {Object} server Object with server configuration parameters\r\n * @param {Object} aSopInstance a SOP Instance from which study information will be added\r\n */\r\nfunction createStudy(server, aSopInstance) {\r\n  // TODO: Pass a reference ID to the server instead of including the URLs here\r\n  return {\r\n    series: [],\r\n    seriesMap: Object.create(null),\r\n    seriesLoader: null,\r\n    wadoUriRoot: server.wadoUriRoot,\r\n    wadoRoot: server.wadoRoot,\r\n    qidoRoot: server.qidoRoot,\r\n    PatientName: DICOMWeb.getName(aSopInstance['00100010']),\r\n    PatientID: DICOMWeb.getString(aSopInstance['00100020']),\r\n    PatientAge: DICOMWeb.getNumber(aSopInstance['00101010']),\r\n    PatientSize: DICOMWeb.getNumber(aSopInstance['00101020']),\r\n    PatientWeight: DICOMWeb.getNumber(aSopInstance['00101030']),\r\n    AccessionNumber: DICOMWeb.getString(aSopInstance['00080050']),\r\n    StudyTime: DICOMWeb.getString(aSopInstance['00080030']),\r\n    StudyDate: DICOMWeb.getString(aSopInstance['00080020']),\r\n    FrameOfReferenceUID: DICOMWeb.getString(aSopInstance['00200052']),\r\n    ReferencedSeriesSequence: getReferencedSeriesSequence(aSopInstance),\r\n    modalities: DICOMWeb.getString(aSopInstance['00080061']), // TODO -> Rename this.. it'll take a while to not mess this one up.\r\n    StudyDescription: DICOMWeb.getString(aSopInstance['00081030']),\r\n    NumberOfStudyRelatedInstances: DICOMWeb.getString(aSopInstance['00201208']),\r\n    StudyInstanceUID: DICOMWeb.getString(aSopInstance['0020000D']),\r\n    InstitutionName: DICOMWeb.getString(aSopInstance['00080080']),\r\n  };\r\n}\r\n\r\n/** Returns a WADO url for an instance\r\n *\r\n * @param StudyInstanceUID\r\n * @param SeriesInstanceUID\r\n * @param SOPInstanceUID\r\n * @returns  {string}\r\n */\r\nfunction buildInstanceWadoUrl(\r\n  server,\r\n  StudyInstanceUID,\r\n  SeriesInstanceUID,\r\n  SOPInstanceUID\r\n) {\r\n  // TODO: This can be removed, since DICOMWebClient has the same function. Not urgent, though\r\n  const params = [];\r\n\r\n  params.push('requestType=WADO');\r\n  params.push(`studyUID=${StudyInstanceUID}`);\r\n  params.push(`seriesUID=${SeriesInstanceUID}`);\r\n  params.push(`objectUID=${SOPInstanceUID}`);\r\n  params.push('contentType=application/dicom');\r\n  params.push('transferSyntax=*');\r\n\r\n  const paramString = params.join('&');\r\n\r\n  return `${server.wadoUriRoot}?${paramString}`;\r\n}\r\n\r\nfunction buildInstanceWadoRsUri(\r\n  server,\r\n  StudyInstanceUID,\r\n  SeriesInstanceUID,\r\n  SOPInstanceUID\r\n) {\r\n  return `${server.wadoRoot}/studies/${StudyInstanceUID}/series/${SeriesInstanceUID}/instances/${SOPInstanceUID}`;\r\n}\r\n\r\nfunction buildInstanceFrameWadoRsUri(\r\n  server,\r\n  StudyInstanceUID,\r\n  SeriesInstanceUID,\r\n  SOPInstanceUID,\r\n  frame\r\n) {\r\n  const baseWadoRsUri = buildInstanceWadoRsUri(\r\n    server,\r\n    StudyInstanceUID,\r\n    SeriesInstanceUID,\r\n    SOPInstanceUID\r\n  );\r\n  frame = frame != null || 1;\r\n\r\n  return `${baseWadoRsUri}/frames/${frame}`;\r\n}\r\n\r\nasync function makeSOPInstance(server, study, instance) {\r\n  const naturalizedInstance = await metadataProvider.addInstance(instance, {\r\n    server,\r\n  });\r\n\r\n  const {\r\n    StudyInstanceUID,\r\n    SeriesInstanceUID,\r\n    SOPInstanceUID,\r\n  } = naturalizedInstance;\r\n\r\n  let series = study.seriesMap[SeriesInstanceUID];\r\n\r\n  if (!series) {\r\n    series = {\r\n      SeriesInstanceUID,\r\n      SeriesDescription: naturalizedInstance.SeriesDescription,\r\n      Modality: naturalizedInstance.Modality,\r\n      SeriesNumber: naturalizedInstance.SeriesNumber,\r\n      SeriesDate: naturalizedInstance.SeriesDate,\r\n      SeriesTime: naturalizedInstance.SeriesTime,\r\n      instances: [],\r\n    };\r\n    study.seriesMap[SeriesInstanceUID] = series;\r\n    study.series.push(series);\r\n  } else {\r\n    if (series.SeriesDate === undefined)\r\n      series.SeriesDate = naturalizedInstance.SeriesDate;\r\n    if (series.SeriesTime === undefined)\r\n      series.SeriesTime = naturalizedInstance.SeriesTime;\r\n  }\r\n\r\n  const wadouri = buildInstanceWadoUrl(\r\n    server,\r\n    StudyInstanceUID,\r\n    SeriesInstanceUID,\r\n    SOPInstanceUID\r\n  );\r\n  const baseWadoRsUri = buildInstanceWadoRsUri(\r\n    server,\r\n    StudyInstanceUID,\r\n    SeriesInstanceUID,\r\n    SOPInstanceUID\r\n  );\r\n  const wadorsuri = buildInstanceFrameWadoRsUri(\r\n    server,\r\n    StudyInstanceUID,\r\n    SeriesInstanceUID,\r\n    SOPInstanceUID\r\n  );\r\n\r\n  const sopInstance = {\r\n    metadata: naturalizedInstance,\r\n    baseWadoRsUri,\r\n    wadouri,\r\n    wadorsuri,\r\n    wadoRoot: server.wadoRoot,\r\n    imageRendering: server.imageRendering,\r\n    thumbnailRendering: server.thumbnailRendering,\r\n  };\r\n\r\n  series.instances.push(sopInstance);\r\n\r\n  if (\r\n    sopInstance.thumbnailRendering === 'wadors' ||\r\n    sopInstance.imageRendering === 'wadors'\r\n  ) {\r\n    // If using WADO-RS for either images or thumbnails,\r\n    // Need to add this to cornerstoneWADOImageLoader's provider\r\n    // (it won't be hit on cornerstone.metaData.get, but cornerstoneWADOImageLoader\r\n    // will cry if you don't add data to cornerstoneWADOImageLoader.wadors.metaDataManager).\r\n\r\n    const wadoRSMetadata = Object.assign(instance);\r\n\r\n    const { NumberOfFrames } = sopInstance.metadata;\r\n\r\n    if (NumberOfFrames) {\r\n      for (let i = 0; i < NumberOfFrames; i++) {\r\n        const wadorsImageId = getWADORSImageId(sopInstance, i);\r\n\r\n        cornerstoneWADOImageLoader.wadors.metaDataManager.add(\r\n          wadorsImageId,\r\n          wadoRSMetadata\r\n        );\r\n      }\r\n    } else {\r\n      const wadorsImageId = getWADORSImageId(sopInstance);\r\n\r\n      cornerstoneWADOImageLoader.wadors.metaDataManager.add(\r\n        wadorsImageId,\r\n        wadoRSMetadata\r\n      );\r\n    }\r\n  }\r\n\r\n  return sopInstance;\r\n}\r\n\r\n/**\r\n * Add a list of SOP Instances to a given study object descriptor\r\n * @param {Object} server Object with server configuration parameters\r\n * @param {Object} study The study descriptor to which the given SOP instances will be added\r\n * @param {Array} sopInstanceList A list of SOP instance objects\r\n */\r\nasync function addInstancesToStudy(server, study, sopInstanceList) {\r\n  return Promise.all(\r\n    sopInstanceList.map(function(sopInstance) {\r\n      return makeSOPInstance(server, study, sopInstance);\r\n    })\r\n  );\r\n}\r\n\r\nconst createStudyFromSOPInstanceList = async (server, sopInstanceList) => {\r\n  if (Array.isArray(sopInstanceList) && sopInstanceList.length > 0) {\r\n    const firstSopInstance = sopInstanceList[0];\r\n    const study = createStudy(server, firstSopInstance);\r\n    await addInstancesToStudy(server, study, sopInstanceList);\r\n    return study;\r\n  }\r\n  throw new Error('Failed to create study out of provided SOP instance list');\r\n};\r\n\r\nexport { createStudyFromSOPInstanceList, addInstancesToStudy };\r\n","/**\r\n * Class to define inheritance of load retrieve strategy.\r\n * The process can be async load (lazy) or sync load\r\n *\r\n * There are methods that must be implemented at consumer level\r\n * To retrieve study call execLoad\r\n */\r\nexport default class RetrieveMetadataLoader {\r\n  /**\r\n   * @constructor\r\n   * @param {Object} server Object with server configuration parameters\r\n   * @param {Array} studyInstanceUID Study instance ui to be retrieved\r\n   * @param {Object} [filters] - Object containing filters to be applied on retrieve metadata process\r\n   * @param {string} [filter.seriesInstanceUID] - series instance uid to filter results against\r\n   */\r\n  constructor(server, studyInstanceUID, filters = {}) {\r\n    this.server = server;\r\n    this.studyInstanceUID = studyInstanceUID;\r\n    this.filters = filters;\r\n  }\r\n\r\n  async execLoad() {\r\n    await this.configLoad();\r\n    const preLoadData = await this.preLoad();\r\n    const loadData = await this.load(preLoadData);\r\n    const postLoadData = await this.posLoad(loadData);\r\n\r\n    return postLoadData;\r\n  }\r\n\r\n  /**\r\n   * It iterates over given loaders running each one. Loaders parameters must be bind when getting it.\r\n   * @param {Array} loaders - array of loader to retrieve data.\r\n   */\r\n  async runLoaders(loaders) {\r\n    let result;\r\n    for (const loader of loaders) {\r\n      try {\r\n        result = await loader();\r\n        if (result && result.length) {\r\n          break; // closes iterator in case data is retrieved successfully\r\n        }\r\n      } catch (e) {\r\n        throw e;\r\n      }\r\n    }\r\n\r\n    if (loaders.next().done && !result) {\r\n      throw new Error('RetrieveMetadataLoader failed');\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  // Methods to be overwrite\r\n  async configLoad() {}\r\n  async preLoad() {}\r\n  async load(preLoadData) {}\r\n  async posLoad(loadData) {}\r\n}\r\n","import { api } from 'dicomweb-client';\r\nimport DICOMWeb from '../../../DICOMWeb/';\r\nimport { createStudyFromSOPInstanceList } from './studyInstanceHelpers';\r\nimport RetrieveMetadataLoader from './retrieveMetadataLoader';\r\n\r\nimport errorHandler from '../../../errorHandler';\r\nimport getXHRRetryRequestHook from '../../../utils/xhrRetryRequestHook';\r\n\r\n/**\r\n * Class for sync load of study metadata.\r\n * It inherits from RetrieveMetadataLoader\r\n *\r\n * A list of loaders (getLoaders) can be created so, it will be applied a fallback load strategy.\r\n * I.e Retrieve metadata using all loaders possibilities.\r\n */\r\nexport default class RetrieveMetadataLoaderSync extends RetrieveMetadataLoader {\r\n  getOptions() {\r\n    const { studyInstanceUID, filters } = this;\r\n\r\n    const options = {\r\n      studyInstanceUID,\r\n    };\r\n\r\n    const { seriesInstanceUID } = filters;\r\n    if (seriesInstanceUID) {\r\n      options['seriesInstanceUID'] = seriesInstanceUID;\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  /**\r\n   * @returns {Array} Array of loaders. To be consumed as queue\r\n   */\r\n  *getLoaders() {\r\n    const loaders = [];\r\n    const {\r\n      studyInstanceUID,\r\n      filters: { seriesInstanceUID } = {},\r\n      client,\r\n    } = this;\r\n\r\n    if (seriesInstanceUID) {\r\n      loaders.push(\r\n        client.retrieveSeriesMetadata.bind(client, {\r\n          studyInstanceUID,\r\n          seriesInstanceUID,\r\n        })\r\n      );\r\n    }\r\n\r\n    loaders.push(\r\n      client.retrieveStudyMetadata.bind(client, { studyInstanceUID })\r\n    );\r\n\r\n    yield* loaders;\r\n  }\r\n\r\n  configLoad() {\r\n    const { server } = this;\r\n    const client = new api.DICOMwebClient({\r\n      url: server.wadoRoot,\r\n      headers: DICOMWeb.getAuthorizationHeader(server),\r\n      errorInterceptor: errorHandler.getHTTPErrorHandler(),\r\n      requestHooks: [getXHRRetryRequestHook()],\r\n    });\r\n\r\n    this.client = client;\r\n  }\r\n\r\n  async load(preLoadData) {\r\n    const loaders = this.getLoaders();\r\n    const result = this.runLoaders(loaders);\r\n    return result;\r\n  }\r\n\r\n  async posLoad(loadData) {\r\n    const { server } = this;\r\n    return createStudyFromSOPInstanceList(server, loadData);\r\n  }\r\n}\r\n","import StaticWadoClient from '../qido/StaticWadoClient';\r\nimport dcmjs from 'dcmjs';\r\nimport DICOMWeb from '../../../DICOMWeb/';\r\nimport RetrieveMetadataLoader from './retrieveMetadataLoader';\r\nimport { sortStudySeries, sortingCriteria } from '../../sortStudy';\r\nimport getSeriesInfo from '../../getSeriesInfo';\r\nimport {\r\n  createStudyFromSOPInstanceList,\r\n  addInstancesToStudy,\r\n} from './studyInstanceHelpers';\r\n\r\nimport errorHandler from '../../../errorHandler';\r\nimport { getXHRRetryRequestHook } from '../../../utils/xhrRetryRequestHook';\r\n\r\nconst { naturalizeDataset } = dcmjs.data.DicomMetaDictionary;\r\n\r\n/**\r\n * Map series to an array of SeriesInstanceUID\r\n * @param {Arrays} series list of Series Instance UIDs\r\n * @returns {Arrays} A list of Series Instance UIDs\r\n */\r\nfunction mapStudySeries(series) {\r\n  return series.map(series => getSeriesInfo(series).SeriesInstanceUID);\r\n}\r\n\r\nfunction attachSeriesLoader(server, study, seriesLoader) {\r\n  study.seriesLoader = Object.freeze({\r\n    hasNext() {\r\n      return seriesLoader.hasNext();\r\n    },\r\n    async next() {\r\n      const series = await seriesLoader.next();\r\n      await addInstancesToStudy(server, study, series.sopInstances);\r\n      return study.seriesMap[series.seriesInstanceUID];\r\n    },\r\n  });\r\n}\r\n\r\n/**\r\n * Creates an immutable series loader object which loads each series sequentially using the iterator interface\r\n * @param {DICOMWebClient} dicomWebClient The DICOMWebClient instance to be used for series load\r\n * @param {string} studyInstanceUID The Study Instance UID from which series will be loaded\r\n * @param {Array} seriesInstanceUIDList A list of Series Instance UIDs\r\n * @returns {Object} Returns an object which supports loading of instances from each of given Series Instance UID\r\n */\r\nfunction makeSeriesAsyncLoader(\r\n  dicomWebClient,\r\n  studyInstanceUID,\r\n  seriesInstanceUIDList\r\n) {\r\n  return Object.freeze({\r\n    hasNext() {\r\n      return seriesInstanceUIDList.length > 0;\r\n    },\r\n    async next() {\r\n      const seriesInstanceUID = seriesInstanceUIDList.shift();\r\n      const sopInstances = await dicomWebClient.retrieveSeriesMetadata({\r\n        studyInstanceUID,\r\n        seriesInstanceUID,\r\n      });\r\n      return { studyInstanceUID, seriesInstanceUID, sopInstances };\r\n    },\r\n  });\r\n}\r\n\r\n/**\r\n * Class for async load of study metadata.\r\n * It inherits from RetrieveMetadataLoader\r\n *\r\n * It loads the one series and then append to seriesLoader the others to be consumed/loaded\r\n */\r\nexport default class RetrieveMetadataLoaderAsync extends RetrieveMetadataLoader {\r\n  configLoad() {\r\n    const { server } = this;\r\n\r\n    const client = new StaticWadoClient({\r\n      ...server,\r\n      url: server.qidoRoot,\r\n      headers: DICOMWeb.getAuthorizationHeader(server),\r\n      errorInterceptor: errorHandler.getHTTPErrorHandler(),\r\n      requestHooks: [getXHRRetryRequestHook()],\r\n    });\r\n\r\n    this.client = client;\r\n  }\r\n\r\n  /**\r\n   * @returns {Array} Array of preLoaders. To be consumed as queue\r\n   */\r\n  *getPreLoaders() {\r\n    const preLoaders = [];\r\n    const {\r\n      studyInstanceUID,\r\n      filters: { seriesInstanceUID } = {},\r\n      client,\r\n    } = this;\r\n\r\n    if (seriesInstanceUID) {\r\n      const options = {\r\n        studyInstanceUID,\r\n        queryParams: { SeriesInstanceUID: seriesInstanceUID },\r\n      };\r\n      preLoaders.push(client.searchForSeries.bind(client, options));\r\n    }\r\n    // Fallback preloader\r\n    preLoaders.push(client.searchForSeries.bind(client, { studyInstanceUID }));\r\n\r\n    yield* preLoaders;\r\n  }\r\n\r\n  async preLoad() {\r\n    const preLoaders = this.getPreLoaders();\r\n\r\n    // seriesData is the result of the QIDO-RS Search For Series request\r\n    // It's an array of Objects containing DICOM Tag values at the Series level\r\n    const seriesData = await this.runLoaders(preLoaders);\r\n\r\n    const seriesSorted = sortStudySeries(\r\n      seriesData,\r\n      sortingCriteria.seriesSortCriteria.seriesInfoSortingCriteria\r\n    );\r\n    const seriesInstanceUIDsMap = mapStudySeries(seriesSorted);\r\n\r\n    return {\r\n      seriesInstanceUIDsMap,\r\n      seriesData,\r\n    };\r\n  }\r\n\r\n  async load(preLoadData) {\r\n    const { client, studyInstanceUID } = this;\r\n\r\n    const seriesAsyncLoader = makeSeriesAsyncLoader(\r\n      client,\r\n      studyInstanceUID,\r\n      preLoadData.seriesInstanceUIDsMap\r\n    );\r\n\r\n    const firstSeries = await seriesAsyncLoader.next();\r\n\r\n    return {\r\n      sopInstances: firstSeries.sopInstances,\r\n      asyncLoader: seriesAsyncLoader,\r\n      seriesData: preLoadData.seriesData,\r\n    };\r\n  }\r\n\r\n  async posLoad(loadData) {\r\n    const { server } = this;\r\n\r\n    const { sopInstances, asyncLoader, seriesData } = loadData;\r\n\r\n    const study = await createStudyFromSOPInstanceList(server, sopInstances);\r\n\r\n    // TODO: Should this be in a helper\r\n    const seriesDataNaturalized = seriesData.map(naturalizeDataset);\r\n\r\n    seriesDataNaturalized.forEach((series, idx) => {\r\n      const seriesDataFromQIDO = {\r\n        SeriesInstanceUID: series.SeriesInstanceUID,\r\n        SeriesDescription: series.SeriesDescription,\r\n        SeriesNumber: series.SeriesNumber,\r\n        Modality: series.Modality,\r\n        instances: [],\r\n      };\r\n\r\n      if (study.series[idx]) {\r\n        study.series[idx] = Object.assign(\r\n          seriesDataFromQIDO,\r\n          study.series[idx]\r\n        );\r\n      } else {\r\n        study.series[idx] = seriesDataFromQIDO;\r\n      }\r\n\r\n      study.seriesMap[series.SeriesInstanceUID] = study.series[idx];\r\n    });\r\n\r\n    if (asyncLoader.hasNext()) {\r\n      attachSeriesLoader(server, study, asyncLoader);\r\n    }\r\n\r\n    return study;\r\n  }\r\n}\r\n","import RetrieveMetadataLoaderSync from './retrieveMetadataLoaderSync';\r\nimport RetrieveMetadataLoaderAsync from './retrieveMetadataLoaderAsync';\r\n\r\n/**\r\n * Retrieve Study metadata from a DICOM server. If the server is configured to use lazy load, only the first series\r\n * will be loaded and the property \"studyLoader\" will be set to let consumer load remaining series as needed.\r\n *\r\n * @param {Object} server Object with server configuration parameters\r\n * @param {string} StudyInstanceUID The Study Instance UID of the study which needs to be loaded\r\n * @param {Object} [filters] - Object containing filters to be applied on retrieve metadata process\r\n * @param {string} [filter.seriesInstanceUID] - series instance uid to filter results against\r\n * @returns {Object} A study descriptor object\r\n */\r\nasync function RetrieveMetadata(server, StudyInstanceUID, filters = {}) {\r\n  const RetrieveMetadataLoader =\r\n    server.enableStudyLazyLoad != false\r\n      ? RetrieveMetadataLoaderAsync\r\n      : RetrieveMetadataLoaderSync;\r\n\r\n  const retrieveMetadataLoader = new RetrieveMetadataLoader(\r\n    server,\r\n    StudyInstanceUID,\r\n    filters\r\n  );\r\n  const studyMetadata = retrieveMetadataLoader.execLoad();\r\n\r\n  return studyMetadata;\r\n}\r\n\r\nexport default RetrieveMetadata;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport function ViewportErrorIndicator(props) {\r\n  return (\r\n    <div\r\n      className=\"loadingIndicator\"\r\n      style={{\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        margin: 'auto',\r\n        textAlign: 'center',\r\n        pointerEvents: 'none',\r\n      }}\r\n    >\r\n      <p>Error</p>\r\n      <p className=\"description\">An error has occurred.</p>\r\n      <p className=\"details\">{props.details}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nViewportErrorIndicator.propTypes = {\r\n  details: PropTypes.string,\r\n};\r\n\r\nexport default ViewportErrorIndicator;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport function ViewportLoadingIndicator(props) {\r\n  return (\r\n    <div\r\n      className=\"loading-indicator\"\r\n      style={{\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        margin: 'auto',\r\n        textAlign: 'center',\r\n        pointerEvents: 'none',\r\n      }}\r\n    >\r\n      Loading {props.percentComplete}\r\n    </div>\r\n  );\r\n}\r\n\r\nViewportLoadingIndicator.propTypes = {\r\n  percentComplete: PropTypes.number,\r\n};\r\n\r\nexport default ViewportLoadingIndicator;\r\n","/* global cornerstone */\r\nimport './ImageThumbnail.styl';\r\n\r\nimport { utils } from '@ohif/core';\r\nimport React, { useState, useEffect, createRef, useCallback } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport ViewportErrorIndicator from '../../viewer/ViewportErrorIndicator';\r\nimport ViewportLoadingIndicator from '../../viewer/ViewportLoadingIndicator';\r\n\r\n// TODO: How should we have this component depend on Cornerstone?\r\n// - Passed in as a prop?\r\n// - Set as external dependency?\r\n// - Pass in the entire load and render function as a prop?\r\n//import cornerstone from 'cornerstone-core';\r\nfunction ImageThumbnail(props) {\r\n  const {\r\n    active,\r\n    width,\r\n    height,\r\n    imageSrc,\r\n    imageId,\r\n    stackPercentComplete,\r\n    error: propsError,\r\n    showProgressBar,\r\n  } = props;\r\n\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [image, setImage] = useState({});\r\n  const canvasRef = createRef();\r\n\r\n  let loadingOrError;\r\n  let cancelablePromise;\r\n\r\n  if (propsError || error) {\r\n    loadingOrError = <ViewportErrorIndicator />;\r\n  } else if (isLoading) {\r\n    loadingOrError = <ViewportLoadingIndicator />;\r\n  }\r\n\r\n  const showStackLoadingProgressBar =\r\n    showProgressBar && stackPercentComplete !== undefined;\r\n\r\n  const shouldRenderToCanvas = () => {\r\n    return imageId && !imageSrc;\r\n  };\r\n\r\n  const fetchImagePromise = () => {\r\n    if (!cancelablePromise) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    cancelablePromise\r\n      .then(response => {\r\n        setImage(response);\r\n      })\r\n      .catch(error => {\r\n        if (error.isCanceled) return;\r\n        // setLoading(false);\r\n        // setError(true);\r\n        // throw new Error(error);\r\n      });\r\n  };\r\n\r\n  const setImagePromise = () => {\r\n    if (shouldRenderToCanvas()) {\r\n      cancelablePromise = utils.makeCancelable(\r\n        cornerstone.loadAndCacheImage(imageId)\r\n      );\r\n    }\r\n  };\r\n\r\n  const purgeCancelablePromise = useCallback(() => {\r\n    if (cancelablePromise) {\r\n      cancelablePromise.cancel();\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      purgeCancelablePromise();\r\n    };\r\n  }, [purgeCancelablePromise]);\r\n\r\n  useEffect(() => {\r\n    if (image.imageId) {\r\n      cornerstone.renderToCanvas(canvasRef.current, image);\r\n      setLoading(false);\r\n    }\r\n  }, [canvasRef, image, image.imageId]);\r\n\r\n  useEffect(() => {\r\n    if (!image.imageId || image.imageId !== imageId) {\r\n      purgeCancelablePromise();\r\n      setImagePromise();\r\n      fetchImagePromise();\r\n    }\r\n  }, [\r\n    fetchImagePromise,\r\n    image.imageId,\r\n    imageId,\r\n    purgeCancelablePromise,\r\n    setImagePromise,\r\n  ]);\r\n\r\n  return (\r\n    <div className={classNames('ImageThumbnail', { active: active })}>\r\n      <div className=\"image-thumbnail-canvas\">\r\n        {shouldRenderToCanvas() ? (\r\n          <canvas ref={canvasRef} width={width} height={height} />\r\n        ) : (\r\n          <img\r\n            className=\"static-image\"\r\n            src={imageSrc}\r\n            //width={this.props.width}\r\n            height={height}\r\n            alt={''}\r\n          />\r\n        )}\r\n      </div>\r\n      {loadingOrError}\r\n      {showStackLoadingProgressBar && (\r\n        <div className=\"image-thumbnail-progress-bar\">\r\n          <div\r\n            className=\"image-thumbnail-progress-bar-inner\"\r\n            style={{ width: `${stackPercentComplete}%` }}\r\n          />\r\n        </div>\r\n      )}\r\n      {isLoading && <div className=\"image-thumbnail-loading-indicator\"></div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nImageThumbnail.propTypes = {\r\n  active: PropTypes.bool,\r\n  imageSrc: PropTypes.string,\r\n  imageId: PropTypes.string,\r\n  error: PropTypes.bool,\r\n  width: PropTypes.number,\r\n  height: PropTypes.number,\r\n  stackPercentComplete: PropTypes.number.isRequired,\r\n  showProgressBar: PropTypes.bool,\r\n};\r\n\r\nImageThumbnail.defaultProps = {\r\n  active: false,\r\n  error: false,\r\n  stackPercentComplete: 0,\r\n  width: 217,\r\n  height: 123,\r\n  showProgressBar: true,\r\n};\r\n\r\nexport default ImageThumbnail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport throttle from 'lodash.throttle';\r\nimport { useDrag } from 'react-dnd';\r\nimport { classes } from '@ohif/core';\r\nimport ImageThumbnail from './ImageThumbnail';\r\nimport classNames from 'classnames';\r\nimport { Icon } from './../../elements/Icon';\r\nimport { Tooltip } from './../tooltip';\r\nimport { OverlayTrigger } from './../overlayTrigger';\r\nimport './Thumbnail.styl';\r\n\r\nconst StudyLoadingListener = classes.StudyLoadingListener;\r\n\r\nfunction ThumbnailFooter({\r\n  SeriesDescription,\r\n  SeriesNumber,\r\n  numImageFrames,\r\n  hasWarnings,\r\n  hasDerivedDisplaySets,\r\n}) {\r\n  const [inconsistencyWarnings, inconsistencyWarningsSet] = useState([]);\r\n  const [derivedDisplaySetsActive, derivedDisplaySetsActiveSet] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    hasWarnings.then(response => {\r\n      if (!unmounted) {\r\n        inconsistencyWarningsSet(response);\r\n      }\r\n    });\r\n    hasDerivedDisplaySets.then(response => {\r\n      if (!unmounted) {\r\n        derivedDisplaySetsActiveSet(response);\r\n      }\r\n    });\r\n    return () => {\r\n      unmounted = true;\r\n    };\r\n  }, [hasWarnings, hasDerivedDisplaySets]);\r\n\r\n  const infoOnly = !SeriesDescription;\r\n\r\n  const getInfo = (value, icon, className = '') => {\r\n    return (\r\n      <div className={classNames('item item-series', className)}>\r\n        <div className=\"icon\">{icon}</div>\r\n        <div className=\"value\">{value}</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const getWarningContent = inconsistencyWarnings => {\r\n    if (Array.isArray(inconsistencyWarnings)) {\r\n      const listedWarnings = inconsistencyWarnings.map((warn, index) => {\r\n        return <li key={index}>{warn}</li>;\r\n      });\r\n\r\n      return <ol>{listedWarnings}</ol>;\r\n    } else {\r\n      return <React.Fragment>{inconsistencyWarnings}</React.Fragment>;\r\n    }\r\n  };\r\n\r\n  const getWarningInfo = (SeriesNumber, inconsistencyWarnings) => {\r\n    return (\r\n      <React.Fragment>\r\n        {inconsistencyWarnings && inconsistencyWarnings.length != 0 ? (\r\n          <OverlayTrigger\r\n            key={SeriesNumber}\r\n            placement=\"left\"\r\n            overlay={\r\n              <Tooltip\r\n                placement=\"left\"\r\n                className=\"in tooltip-warning\"\r\n                id=\"tooltip-left\"\r\n              >\r\n                <div className=\"warningTitle\">Series Inconsistencies</div>\r\n                <div className=\"warningContent\">\r\n                  {getWarningContent(inconsistencyWarnings)}\r\n                </div>\r\n              </Tooltip>\r\n            }\r\n          >\r\n            <div className={classNames('warning')}>\r\n              <span className=\"warning-icon\">\r\n                <Icon name=\"exclamation-triangle\" />\r\n              </span>\r\n            </div>\r\n          </OverlayTrigger>\r\n        ) : (\r\n          <React.Fragment></React.Fragment>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const getDerivedInfo = derivedDisplaySetsActive => {\r\n    return (\r\n      <React.Fragment>\r\n        {derivedDisplaySetsActive ? (\r\n          <div className=\"derived\">\r\n            <Icon name=\"link\" />\r\n          </div>\r\n        ) : (\r\n          <React.Fragment></React.Fragment>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const getSeriesInformation = (\r\n    SeriesNumber,\r\n    numImageFrames,\r\n    inconsistencyWarnings,\r\n    derivedDisplaySetsActive\r\n  ) => {\r\n    if (!SeriesNumber && !numImageFrames) {\r\n      return;\r\n    }\r\n    const seriesInformation = (\r\n      <div className=\"series-information\">\r\n        <React.Fragment>\r\n          {SeriesNumber !== undefined ? (\r\n            getInfo(SeriesNumber, 'S:')\r\n          ) : (\r\n            <React.Fragment></React.Fragment>\r\n          )}\r\n        </React.Fragment>\r\n        <React.Fragment>\r\n          {numImageFrames !== undefined ? (\r\n            getInfo(numImageFrames, '', 'image-frames')\r\n          ) : (\r\n            <React.Fragment></React.Fragment>\r\n          )}\r\n        </React.Fragment>\r\n        {getDerivedInfo(derivedDisplaySetsActive)}\r\n        {getWarningInfo(SeriesNumber, inconsistencyWarnings)}\r\n      </div>\r\n    );\r\n\r\n    return seriesInformation;\r\n  };\r\n\r\n  return (\r\n    <div className={classNames('series-details', { 'info-only': infoOnly })}>\r\n      <div className=\"series-description\">{SeriesDescription}</div>\r\n      {getSeriesInformation(\r\n        SeriesNumber,\r\n        numImageFrames,\r\n        inconsistencyWarnings,\r\n        derivedDisplaySetsActive\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Thumbnail(props) {\r\n  const {\r\n    active,\r\n    altImageText,\r\n    error,\r\n    displaySetInstanceUID,\r\n    imageId,\r\n    imageSrc,\r\n    StudyInstanceUID,\r\n    onClick,\r\n    onDoubleClick,\r\n    onMouseDown,\r\n    supportsDrag,\r\n    showProgressBar,\r\n  } = props;\r\n\r\n  const [stackPercentComplete, setStackPercentComplete] = useState(0);\r\n  useEffect(() => {\r\n    const onProgressChange = throttle(({ detail }) => {\r\n      const { progressId, progressData } = detail;\r\n      if (`StackProgress:${displaySetInstanceUID}` === progressId) {\r\n        const percent = progressData ? progressData.percentComplete : 0;\r\n        setStackPercentComplete(percent);\r\n      }\r\n    }, 100);\r\n\r\n    document.addEventListener(\r\n      StudyLoadingListener.events.OnProgress,\r\n      onProgressChange\r\n    );\r\n\r\n    return () => {\r\n      document.removeEventListener(\r\n        StudyLoadingListener.events.OnProgress,\r\n        onProgressChange\r\n      );\r\n    };\r\n  }, [displaySetInstanceUID]);\r\n\r\n  const [collectedProps, drag, dragPreview] = useDrag({\r\n    // `droppedItem` in `dropTarget`\r\n    // The only data it will have access to\r\n    item: {\r\n      StudyInstanceUID,\r\n      displaySetInstanceUID,\r\n      type: 'thumbnail', // Has to match `dropTarget`'s type\r\n    },\r\n    canDrag: function(monitor) {\r\n      return supportsDrag;\r\n    },\r\n  });\r\n\r\n  const hasImage = imageSrc || imageId;\r\n  const hasAltText = altImageText !== undefined;\r\n\r\n  return (\r\n    <div\r\n      ref={drag}\r\n      className={classNames('thumbnail', { active: active })}\r\n      onClick={onClick}\r\n      onDoubleClick={onDoubleClick}\r\n      onMouseDown={onMouseDown}\r\n    >\r\n      {/* SHOW IMAGE */}\r\n      {hasImage && (\r\n        <ImageThumbnail\r\n          active={active}\r\n          imageSrc={imageSrc}\r\n          imageId={imageId}\r\n          error={error}\r\n          stackPercentComplete={stackPercentComplete}\r\n          showProgressBar={showProgressBar}\r\n        />\r\n      )}\r\n      {/* SHOW TEXT ALTERNATIVE */}\r\n      {!hasImage && hasAltText && (\r\n        <div className={'alt-image-text p-x-1'}>\r\n          <h1>{altImageText}</h1>\r\n        </div>\r\n      )}\r\n      {ThumbnailFooter(props)}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst noop = () => {};\r\n\r\nThumbnail.propTypes = {\r\n  supportsDrag: PropTypes.bool,\r\n  id: PropTypes.string.isRequired,\r\n  displaySetInstanceUID: PropTypes.string.isRequired,\r\n  StudyInstanceUID: PropTypes.string.isRequired,\r\n  imageSrc: PropTypes.string,\r\n  imageId: PropTypes.string,\r\n  error: PropTypes.bool,\r\n  active: PropTypes.bool,\r\n  stackPercentComplete: PropTypes.number,\r\n  /**\r\n  altImageText will be used when no imageId or imageSrc is provided.\r\n  It will be displayed inside the <div>. This is useful when it is difficult\r\n  to make a preview for a type of DICOM series (e.g. DICOM-SR)\r\n  */\r\n  altImageText: PropTypes.string,\r\n  SeriesDescription: PropTypes.string,\r\n  SeriesNumber: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  hasWarnings: PropTypes.instanceOf(Promise),\r\n  hasDerivedDisplaySets: PropTypes.instanceOf(Promise),\r\n  numImageFrames: PropTypes.number,\r\n  onDoubleClick: PropTypes.func,\r\n  onClick: PropTypes.func,\r\n  onMouseDown: PropTypes.func,\r\n  showProgressBar: PropTypes.bool,\r\n};\r\n\r\nThumbnail.defaultProps = {\r\n  supportsDrag: false,\r\n  active: false,\r\n  error: false,\r\n  stackPercentComplete: 0,\r\n  onDoubleClick: noop,\r\n  onClick: noop,\r\n  onMouseDown: noop,\r\n};\r\n\r\nexport { Thumbnail };\r\n","import { api } from 'dicomweb-client';\r\n\r\n/**\r\n * An implementation of the static wado client, that fetches data from\r\n * a static response rather than actually doing real queries.  This allows\r\n * fast encoding of test data, but because it is static, anything actually\r\n * performing searches doesn't work.  This version fixes the query issue\r\n * by manually implementing a query option.\r\n */\r\nexport default class StaticWadoClient extends api.DICOMwebClient {\r\n  static filterKeys = {\r\n    \"StudyInstanceUID\": \"0020000D\",\r\n    \"PatientName\": \"00100010\",\r\n    \"00100020\": \"mrn\",\r\n    \"PatientID\": \"00100020\",\r\n    \"StudyDescription\": \"00081030\",\r\n    \"StudyDate\": \"00080020\",\r\n    \"ModalitiesInStudy\": \"00080061\",\r\n    AccessionNumber: \"00080050\",\r\n  };\r\n\r\n  constructor(qidoConfig) {\r\n    super(qidoConfig);\r\n    this.staticWado = qidoConfig.staticWado;\r\n  }\r\n\r\n  /**\r\n   * Replace the search for studies remote query with a local version which\r\n   * retrieves a complete query list and then sub-selects from it locally.\r\n   * @param {*} options\r\n   * @returns\r\n   */\r\n  async searchForStudies(options) {\r\n    if (!this.staticWado) return super.searchForStudies(options);\r\n\r\n    let searchResult = await super.searchForStudies(options);\r\n    const { queryParams } = options;\r\n    if (!queryParams) return searchResult;\r\n    const filtered = searchResult.filter(study => {\r\n      for (const key of Object.keys(StaticWadoClient.filterKeys)) {\r\n        if (!this.filterItem(key, queryParams, study)) return false;\r\n      }\r\n      return true;\r\n    });\r\n    return filtered;\r\n  }\r\n\r\n  /**\r\n   * Compares values, matching any instance of desired to any instance of\r\n   * actual by recursively go through the paired set of values.  That is,\r\n   * this is O(m*n) where m is how many items in desired and n is the length of actual\r\n   * Then, at the individual item node, compares the Alphabetic name if present,\r\n   * and does a sub-string matching on string values, and otherwise does an\r\n   * exact match comparison.\r\n   *\r\n   * @param {*} desired\r\n   * @param {*} actual\r\n   * @returns true if the values match\r\n   */\r\n  compareValues(desired, actual) {\r\n    if (Array.isArray(desired)) {\r\n      return desired.find(item => this.compareValues(item, actual));\r\n    }\r\n    if (Array.isArray(actual)) {\r\n      return actual.find(actualItem => this.compareValues(desired, actualItem));\r\n    }\r\n    if (actual && actual.Alphabetic) {\r\n      actual = actual.Alphabetic;\r\n    }\r\n    if (typeof (actual) == 'string') {\r\n      if (actual.length === 0) return true;\r\n      if (desired.length === 0 || desired === '*') return true;\r\n      if (desired[0] === '*' && desired[desired.length - 1] === '*') {\r\n        console.log(`Comparing ${actual} to ${desired.substring(1, desired.length - 1)}`)\r\n        return actual.indexOf(desired.substring(1, desired.length - 1)) != -1;\r\n      } else if (desired[desired.length - 1] === '*') {\r\n        return actual.indexOf(desired.substring(0, desired.length - 1)) != -1;\r\n      } else if (desired[0] === '*') {\r\n        return actual.indexOf(desired.substring(1)) === actual.length - desired.length + 1;\r\n      }\r\n    }\r\n    return desired === actual;\r\n  }\r\n\r\n  /** Compares a pair of dates to see if the value is within the range */\r\n  compareDateRange(range, value) {\r\n    if (!value) return true;\r\n    const dash = range.indexOf('-');\r\n    if (dash === -1) return this.compareValues(range, value);\r\n    const start = range.substring(0, dash);\r\n    const end = range.substring(dash + 1);\r\n    return (!start || value >= start) &&\r\n      (!end || value <= end);\r\n  }\r\n\r\n  /**\r\n   * Filters the return list by the query parameters.\r\n   *\r\n   * @param {*} key\r\n   * @param {*} queryParams\r\n   * @param {*} study\r\n   * @returns\r\n   */\r\n  filterItem(key, queryParams, study) {\r\n    const altKey = StaticWadoClient.filterKeys[key] || key;\r\n    if (!queryParams) return true;\r\n    const testValue = queryParams[key] || queryParams[altKey];\r\n    if (!testValue) return true;\r\n    const valueElem = study[key] || study[altKey];\r\n    if (!valueElem) return false;\r\n    if (valueElem.vr == 'DA') return this.compareDateRange(testValue, valueElem.Value[0]);\r\n    const value = valueElem.Value;\r\n    return this.compareValues(testValue, value) && true;\r\n  }\r\n}\r\n","import { createSelector } from 'reselect';\r\n\r\nconst getActiveViewportIndex = state => state.viewports.activeViewportIndex;\r\nconst getLayoutViewports = state => state.viewports.layout.viewports;\r\nconst getViewportSpecificData = state => state.viewports.viewportSpecificData;\r\n\r\n/**\r\n * Think of this as a computed getter for our store. It lets us watch parts of\r\n * our redux state, and only update/recalculate when those values change.\r\n */\r\nexport const getActiveContexts = createSelector(\r\n  [getActiveViewportIndex, getLayoutViewports, getViewportSpecificData],\r\n  (activeViewportIndex, layoutViewports, viewportSpecificData) => {\r\n    const activeContexts = ['VIEWER'];\r\n    const activeLayoutViewport = layoutViewports[activeViewportIndex] || {};\r\n    const activeViewportSpecificData =\r\n      viewportSpecificData[activeViewportIndex] || {};\r\n    const activeViewportPluginName =\r\n      activeLayoutViewport.plugin || activeViewportSpecificData.plugin;\r\n\r\n    if (activeViewportPluginName) {\r\n      const activeViewportExtension = `ACTIVE_VIEWPORT::${activeViewportPluginName.toUpperCase()}`;\r\n      activeContexts.push(activeViewportExtension);\r\n    }\r\n\r\n    return activeContexts;\r\n  }\r\n);\r\n","// TODO: Deprecate since we have the same thing in dcmjs?\r\nexport const sopClassDictionary = {\r\n  ComputedRadiographyImageStorage: '1.2.840.10008.5.1.4.1.1.1',\r\n  DigitalXRayImageStorageForPresentation: '1.2.840.10008.5.1.4.1.1.1.1',\r\n  DigitalXRayImageStorageForProcessing: '1.2.840.10008.5.1.4.1.1.1.1.1',\r\n  DigitalMammographyXRayImageStorageForPresentation:\r\n    '1.2.840.10008.5.1.4.1.1.1.2',\r\n  DigitalMammographyXRayImageStorageForProcessing:\r\n    '1.2.840.10008.5.1.4.1.1.1.2.1',\r\n  DigitalIntraOralXRayImageStorageForPresentation:\r\n    '1.2.840.10008.5.1.4.1.1.1.3',\r\n  DigitalIntraOralXRayImageStorageForProcessing:\r\n    '1.2.840.10008.5.1.4.1.1.1.3.1',\r\n  CTImageStorage: '1.2.840.10008.5.1.4.1.1.2',\r\n  EnhancedCTImageStorage: '1.2.840.10008.5.1.4.1.1.2.1',\r\n  LegacyConvertedEnhancedCTImageStorage: '1.2.840.10008.5.1.4.1.1.2.2',\r\n  UltrasoundMultiframeImageStorage: '1.2.840.10008.5.1.4.1.1.3.1',\r\n  MRImageStorage: '1.2.840.10008.5.1.4.1.1.4',\r\n  EnhancedMRImageStorage: '1.2.840.10008.5.1.4.1.1.4.1',\r\n  MRSpectroscopyStorage: '1.2.840.10008.5.1.4.1.1.4.2',\r\n  EnhancedMRColorImageStorage: '1.2.840.10008.5.1.4.1.1.4.3',\r\n  LegacyConvertedEnhancedMRImageStorage: '1.2.840.10008.5.1.4.1.1.4.4',\r\n  UltrasoundImageStorage: '1.2.840.10008.5.1.4.1.1.6.1',\r\n  EnhancedUSVolumeStorage: '1.2.840.10008.5.1.4.1.1.6.2',\r\n  SecondaryCaptureImageStorage: '1.2.840.10008.5.1.4.1.1.7',\r\n  MultiframeSingleBitSecondaryCaptureImageStorage:\r\n    '1.2.840.10008.5.1.4.1.1.7.1',\r\n  MultiframeGrayscaleByteSecondaryCaptureImageStorage:\r\n    '1.2.840.10008.5.1.4.1.1.7.2',\r\n  MultiframeGrayscaleWordSecondaryCaptureImageStorage:\r\n    '1.2.840.10008.5.1.4.1.1.7.3',\r\n  MultiframeTrueColorSecondaryCaptureImageStorage:\r\n    '1.2.840.10008.5.1.4.1.1.7.4',\r\n  Sop12LeadECGWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.1.1',\r\n  GeneralECGWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.1.2',\r\n  AmbulatoryECGWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.1.3',\r\n  HemodynamicWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.2.1',\r\n  CardiacElectrophysiologyWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.3.1',\r\n  BasicVoiceAudioWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.4.1',\r\n  GeneralAudioWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.4.2',\r\n  ArterialPulseWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.5.1',\r\n  RespiratoryWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.6.1',\r\n  GrayscaleSoftcopyPresentationStateStorage: '1.2.840.10008.5.1.4.1.1.11.1',\r\n  ColorSoftcopyPresentationStateStorage: '1.2.840.10008.5.1.4.1.1.11.2',\r\n  PseudoColorSoftcopyPresentationStateStorage: '1.2.840.10008.5.1.4.1.1.11.3',\r\n  BlendingSoftcopyPresentationStateStorage: '1.2.840.10008.5.1.4.1.1.11.4',\r\n  XAXRFGrayscaleSoftcopyPresentationStateStorage:\r\n    '1.2.840.10008.5.1.4.1.1.11.5',\r\n  XRayAngiographicImageStorage: '1.2.840.10008.5.1.4.1.1.12.1',\r\n  EnhancedXAImageStorage: '1.2.840.10008.5.1.4.1.1.12.1.1',\r\n  XRayRadiofluoroscopicImageStorage: '1.2.840.10008.5.1.4.1.1.12.2',\r\n  EnhancedXRFImageStorage: '1.2.840.10008.5.1.4.1.1.12.2.1',\r\n  XRay3DAngiographicImageStorage: '1.2.840.10008.5.1.4.1.1.13.1.1',\r\n  XRay3DCraniofacialImageStorage: '1.2.840.10008.5.1.4.1.1.13.1.2',\r\n  BreastTomosynthesisImageStorage: '1.2.840.10008.5.1.4.1.1.13.1.3',\r\n  BreastProjectionXRayImageStorageForPresentation:\r\n    '1.2.840.10008.5.1.4.1.1.13.1.4',\r\n  BreastProjectionXRayImageStorageForProcessing:\r\n    '1.2.840.10008.5.1.4.1.1.13.1.5',\r\n  IntravascularOpticalCoherenceTomographyImageStorageForPresentation:\r\n    '1.2.840.10008.5.1.4.1.1.14.1',\r\n  IntravascularOpticalCoherenceTomographyImageStorageForProcessing:\r\n    '1.2.840.10008.5.1.4.1.1.14.2',\r\n  NuclearMedicineImageStorage: '1.2.840.10008.5.1.4.1.1.20',\r\n  RawDataStorage: '1.2.840.10008.5.1.4.1.1.66',\r\n  SpatialRegistrationStorage: '1.2.840.10008.5.1.4.1.1.66.1',\r\n  SpatialFiducialsStorage: '1.2.840.10008.5.1.4.1.1.66.2',\r\n  DeformableSpatialRegistrationStorage: '1.2.840.10008.5.1.4.1.1.66.3',\r\n  SegmentationStorage: '1.2.840.10008.5.1.4.1.1.66.4',\r\n  SurfaceSegmentationStorage: '1.2.840.10008.5.1.4.1.1.66.5',\r\n  RealWorldValueMappingStorage: '1.2.840.10008.5.1.4.1.1.67',\r\n  SurfaceScanMeshStorage: '1.2.840.10008.5.1.4.1.1.68.1',\r\n  SurfaceScanPointCloudStorage: '1.2.840.10008.5.1.4.1.1.68.2',\r\n  VLEndoscopicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.1',\r\n  VideoEndoscopicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.1.1',\r\n  VLMicroscopicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.2',\r\n  VideoMicroscopicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.2.1',\r\n  VLSlideCoordinatesMicroscopicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.3',\r\n  VLPhotographicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.4',\r\n  VideoPhotographicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.4.1',\r\n  OphthalmicPhotography8BitImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.5.1',\r\n  OphthalmicPhotography16BitImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.5.2',\r\n  StereometricRelationshipStorage: '1.2.840.10008.5.1.4.1.1.77.1.5.3',\r\n  OphthalmicTomographyImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.5.4',\r\n  VLWholeSlideMicroscopyImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.6',\r\n  LensometryMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.1',\r\n  AutorefractionMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.2',\r\n  KeratometryMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.3',\r\n  SubjectiveRefractionMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.4',\r\n  VisualAcuityMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.5',\r\n  SpectaclePrescriptionReportStorage: '1.2.840.10008.5.1.4.1.1.78.6',\r\n  OphthalmicAxialMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.7',\r\n  IntraocularLensCalculationsStorage: '1.2.840.10008.5.1.4.1.1.78.8',\r\n  MacularGridThicknessandVolumeReport: '1.2.840.10008.5.1.4.1.1.79.1',\r\n  OphthalmicVisualFieldStaticPerimetryMeasurementsStorage:\r\n    '1.2.840.10008.5.1.4.1.1.80.1',\r\n  OphthalmicThicknessMapStorage: '1.2.840.10008.5.1.4.1.1.81.1',\r\n  CornealTopographyMapStorage: '1.2.840.10008.5.1.4.1.1.82.1',\r\n  BasicTextSR: '1.2.840.10008.5.1.4.1.1.88.11',\r\n  EnhancedSR: '1.2.840.10008.5.1.4.1.1.88.22',\r\n  ComprehensiveSR: '1.2.840.10008.5.1.4.1.1.88.33',\r\n  Comprehensive3DSR: '1.2.840.10008.5.1.4.1.1.88.34',\r\n  ProcedureLog: '1.2.840.10008.5.1.4.1.1.88.40',\r\n  MammographyCADSR: '1.2.840.10008.5.1.4.1.1.88.50',\r\n  KeyObjectSelection: '1.2.840.10008.5.1.4.1.1.88.59',\r\n  ChestCADSR: '1.2.840.10008.5.1.4.1.1.88.65',\r\n  XRayRadiationDoseSR: '1.2.840.10008.5.1.4.1.1.88.67',\r\n  RadiopharmaceuticalRadiationDoseSR: '1.2.840.10008.5.1.4.1.1.88.68',\r\n  ColonCADSR: '1.2.840.10008.5.1.4.1.1.88.69',\r\n  ImplantationPlanSRDocumentStorage: '1.2.840.10008.5.1.4.1.1.88.70',\r\n  EncapsulatedPDFStorage: '1.2.840.10008.5.1.4.1.1.104.1',\r\n  EncapsulatedCDAStorage: '1.2.840.10008.5.1.4.1.1.104.2',\r\n  PositronEmissionTomographyImageStorage: '1.2.840.10008.5.1.4.1.1.128',\r\n  EnhancedPETImageStorage: '1.2.840.10008.5.1.4.1.1.130',\r\n  LegacyConvertedEnhancedPETImageStorage: '1.2.840.10008.5.1.4.1.1.128.1',\r\n  BasicStructuredDisplayStorage: '1.2.840.10008.5.1.4.1.1.131',\r\n  RTImageStorage: '1.2.840.10008.5.1.4.1.1.481.1',\r\n  RTDoseStorage: '1.2.840.10008.5.1.4.1.1.481.2',\r\n  RTStructureSetStorage: '1.2.840.10008.5.1.4.1.1.481.3',\r\n  RTBeamsTreatmentRecordStorage: '1.2.840.10008.5.1.4.1.1.481.4',\r\n  RTPlanStorage: '1.2.840.10008.5.1.4.1.1.481.5',\r\n  RTBrachyTreatmentRecordStorage: '1.2.840.10008.5.1.4.1.1.481.6',\r\n  RTTreatmentSummaryRecordStorage: '1.2.840.10008.5.1.4.1.1.481.7',\r\n  RTIonPlanStorage: '1.2.840.10008.5.1.4.1.1.481.8',\r\n  RTIonBeamsTreatmentRecordStorage: '1.2.840.10008.5.1.4.1.1.481.9',\r\n  RTBeamsDeliveryInstructionStorage: '1.2.840.10008.5.1.4.34.7',\r\n  GenericImplantTemplateStorage: '1.2.840.10008.5.1.4.43.1',\r\n  ImplantAssemblyTemplateStorage: '1.2.840.10008.5.1.4.44.1',\r\n  ImplantTemplateGroupStorage: '1.2.840.10008.5.1.4.45.1',\r\n};\r\n","import { sopClassDictionary } from './sopClassDictionary';\r\n\r\nconst imagesTypes = [\r\n  sopClassDictionary.ComputedRadiographyImageStorage,\r\n  sopClassDictionary.DigitalXRayImageStorageForPresentation,\r\n  sopClassDictionary.DigitalXRayImageStorageForProcessing,\r\n  sopClassDictionary.DigitalMammographyXRayImageStorageForPresentation,\r\n  sopClassDictionary.DigitalMammographyXRayImageStorageForProcessing,\r\n  sopClassDictionary.DigitalIntraOralXRayImageStorageForPresentation,\r\n  sopClassDictionary.DigitalIntraOralXRayImageStorageForProcessing,\r\n  sopClassDictionary.CTImageStorage,\r\n  sopClassDictionary.EnhancedCTImageStorage,\r\n  sopClassDictionary.LegacyConvertedEnhancedCTImageStorage,\r\n  sopClassDictionary.UltrasoundMultiframeImageStorage,\r\n  sopClassDictionary.MRImageStorage,\r\n  sopClassDictionary.EnhancedMRImageStorage,\r\n  sopClassDictionary.EnhancedMRColorImageStorage,\r\n  sopClassDictionary.LegacyConvertedEnhancedMRImageStorage,\r\n  sopClassDictionary.UltrasoundImageStorage,\r\n  sopClassDictionary.SecondaryCaptureImageStorage,\r\n  sopClassDictionary.MultiframeSingleBitSecondaryCaptureImageStorage,\r\n  sopClassDictionary.MultiframeGrayscaleByteSecondaryCaptureImageStorage,\r\n  sopClassDictionary.MultiframeGrayscaleWordSecondaryCaptureImageStorage,\r\n  sopClassDictionary.MultiframeTrueColorSecondaryCaptureImageStorage,\r\n  sopClassDictionary.XRayAngiographicImageStorage,\r\n  sopClassDictionary.EnhancedXAImageStorage,\r\n  sopClassDictionary.XRayRadiofluoroscopicImageStorage,\r\n  sopClassDictionary.EnhancedXRFImageStorage,\r\n  sopClassDictionary.XRay3DAngiographicImageStorage,\r\n  sopClassDictionary.XRay3DCraniofacialImageStorage,\r\n  sopClassDictionary.BreastTomosynthesisImageStorage,\r\n  sopClassDictionary.BreastProjectionXRayImageStorageForPresentation,\r\n  sopClassDictionary.BreastProjectionXRayImageStorageForProcessing,\r\n  sopClassDictionary.IntravascularOpticalCoherenceTomographyImageStorageForPresentation,\r\n  sopClassDictionary.IntravascularOpticalCoherenceTomographyImageStorageForProcessing,\r\n  sopClassDictionary.NuclearMedicineImageStorage,\r\n  sopClassDictionary.VLEndoscopicImageStorage,\r\n  sopClassDictionary.VideoEndoscopicImageStorage,\r\n  sopClassDictionary.VLMicroscopicImageStorage,\r\n  sopClassDictionary.VideoMicroscopicImageStorage,\r\n  sopClassDictionary.VLSlideCoordinatesMicroscopicImageStorage,\r\n  sopClassDictionary.VLPhotographicImageStorage,\r\n  sopClassDictionary.VideoPhotographicImageStorage,\r\n  sopClassDictionary.OphthalmicPhotography8BitImageStorage,\r\n  sopClassDictionary.OphthalmicPhotography16BitImageStorage,\r\n  sopClassDictionary.OphthalmicTomographyImageStorage,\r\n  sopClassDictionary.VLWholeSlideMicroscopyImageStorage,\r\n  sopClassDictionary.PositronEmissionTomographyImageStorage,\r\n  sopClassDictionary.EnhancedPETImageStorage,\r\n  sopClassDictionary.LegacyConvertedEnhancedPETImageStorage,\r\n  sopClassDictionary.RTImageStorage,\r\n];\r\n\r\n/**\r\n * Checks whether dicom files with specified SOP Class UID have image data\r\n * @param {string} SOPClassUID - SOP Class UID to be checked\r\n * @returns {boolean} - true if it has image data\r\n */\r\nexport const isImage = SOPClassUID => {\r\n  if (!SOPClassUID) return false;\r\n  return imagesTypes.indexOf(SOPClassUID) !== -1;\r\n};\r\n","import OHIFLogo from '../components/OHIFLogo/OHIFLogo.js';\r\nimport React from 'react';\r\n\r\nconst defaultContextValues = {\r\n  createLogoComponentFn: React => OHIFLogo(),\r\n};\r\n\r\nconst WhiteLabelingContext = React.createContext(defaultContextValues);\r\n\r\nexport default WhiteLabelingContext;\r\n","import log from '../log.js';\r\n\r\n/**\r\n * The definition of a command\r\n *\r\n * @typedef {Object} CommandDefinition\r\n * @property {Function} commandFn - Command to call\r\n * @property {Array} storeContexts - Array of string of modules required from store\r\n * @property {Object} options - Object of params to pass action\r\n */\r\n\r\n/**\r\n * The Commands Manager tracks named commands (or functions) that are scoped to\r\n * a context. When we attempt to run a command with a given name, we look for it\r\n * in our active contexts. If found, we run the command, passing in any application\r\n * or call specific data specified in the command's definition.\r\n *\r\n * NOTE: A more robust version of the CommandsManager lives in v1. If you're looking\r\n * to extend this class, please check it's source before adding new methods.\r\n */\r\nexport class CommandsManager {\r\n  constructor({ getAppState, getActiveContexts } = {}) {\r\n    this.contexts = {};\r\n\r\n    if (!getAppState || !getActiveContexts) {\r\n      log.warn(\r\n        'CommandsManager was instantiated without getAppState() or getActiveContexts()'\r\n      );\r\n    }\r\n\r\n    this._getAppState = getAppState;\r\n    this._getActiveContexts = getActiveContexts;\r\n  }\r\n\r\n  /**\r\n   * Allows us to create commands \"per context\". An example would be the \"Cornerstone\"\r\n   * context having a `SaveImage` command, and the \"VTK\" context having a `SaveImage`\r\n   * command. The distinction of a context allows us to call the command in either\r\n   * context, and have faith that the correct command will be run.\r\n   *\r\n   * @method\r\n   * @param {string} contextName - Namespace for commands\r\n   * @returns {undefined}\r\n   */\r\n  createContext(contextName) {\r\n    if (!contextName) {\r\n      return;\r\n    }\r\n\r\n    if (this.contexts[contextName]) {\r\n      return this.clearContext(contextName);\r\n    }\r\n\r\n    this.contexts[contextName] = {};\r\n  }\r\n\r\n  /**\r\n   * Returns all command definitions for a given context\r\n   *\r\n   * @method\r\n   * @param {string} contextName - Namespace for commands\r\n   * @returns {Object} - the matched context\r\n   */\r\n  getContext(contextName) {\r\n    const context = this.contexts[contextName];\r\n\r\n    if (!context) {\r\n      return;\r\n    }\r\n\r\n    return context;\r\n  }\r\n\r\n  /**\r\n   * Clears all registered commands for a given context.\r\n   *\r\n   * @param {string} contextName - Namespace for commands\r\n   * @returns {undefined}\r\n   */\r\n  clearContext(contextName) {\r\n    if (!contextName) {\r\n      return;\r\n    }\r\n\r\n    this.contexts[contextName] = {};\r\n  }\r\n\r\n  /**\r\n   * Register a new command with the command manager. Scoped to a context, and\r\n   * with a definition to assist command callers w/ providing the necessary params\r\n   *\r\n   * @method\r\n   * @param {string} contextName - Namespace for command; often scoped to the extension that added it\r\n   * @param {string} commandName - Unique name identifying the command\r\n   * @param {CommandDefinition} definition - {@link CommandDefinition}\r\n   */\r\n  registerCommand(contextName, commandName, definition) {\r\n    if (typeof definition !== 'object') {\r\n      return;\r\n    }\r\n\r\n    const context = this.getContext(contextName);\r\n    if (!context) {\r\n      return;\r\n    }\r\n\r\n    context[commandName] = definition;\r\n  }\r\n\r\n  /**\r\n   * Finds a command with the provided name if it exists in the specified context,\r\n   * or a currently active context.\r\n   *\r\n   * @method\r\n   * @param {String} commandName - Command to find\r\n   * @param {String} [contextName] - Specific command to look in. Defaults to current activeContexts\r\n   */\r\n  getCommand(commandName, contextName) {\r\n    let contexts = [];\r\n\r\n    if (contextName) {\r\n      const context = this.getContext(contextName);\r\n      if (context) {\r\n        contexts.push(context);\r\n      }\r\n    } else {\r\n      const activeContexts = this._getActiveContexts();\r\n      activeContexts.forEach(activeContext => {\r\n        const context = this.getContext(activeContext);\r\n        if (context) {\r\n          contexts.push(context);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (contexts.length === 0) {\r\n      return;\r\n    }\r\n\r\n    let foundCommand;\r\n    contexts.forEach(context => {\r\n      if (context[commandName]) {\r\n        foundCommand = context[commandName];\r\n      }\r\n    });\r\n\r\n    return foundCommand;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @method\r\n   * @param {String} commandName\r\n   * @param {Object} [options={}] - Extra options to pass the command. Like a mousedown event\r\n   * @param {String} [contextName]\r\n   */\r\n  runCommand(commandName, options = {}, contextName) {\r\n    const definition = this.getCommand(commandName, contextName);\r\n    if (!definition) {\r\n      log.warn(`Command \"${commandName}\" not found in current context`);\r\n      return;\r\n    }\r\n\r\n    const { commandFn, storeContexts = [] } = definition;\r\n    const definitionOptions = definition.options;\r\n\r\n    let commandParams = {};\r\n    const appState = this._getAppState();\r\n    storeContexts.forEach(context => {\r\n      commandParams[context] = appState[context];\r\n    });\r\n\r\n    commandParams = Object.assign(\r\n      {},\r\n      commandParams, // Required store contexts\r\n      definitionOptions, // \"Command configuration\"\r\n      options // \"Time of call\" info\r\n    );\r\n\r\n    if (typeof commandFn !== 'function') {\r\n      log.warn(`No commandFn was defined for command \"${commandName}\"`);\r\n      return;\r\n    } else {\r\n      return commandFn(commandParams);\r\n    }\r\n  }\r\n}\r\n\r\nexport default CommandsManager;\r\n","import hotkeys from './../utils/hotkeys';\r\nimport log from './../log.js';\r\n\r\n/**\r\n *\r\n *\r\n * @typedef {Object} HotkeyDefinition\r\n * @property {String} commandName - Command to call\r\n * @property {String} label - Display name for hotkey\r\n * @property {String[]} keys - Keys to bind; Follows Mousetrap.js binding syntax\r\n */\r\n\r\nexport class HotkeysManager {\r\n  constructor(commandsManager, servicesManager) {\r\n    this.hotkeyDefinitions = {};\r\n    this.hotkeyDefaults = [];\r\n    this.isEnabled = true;\r\n\r\n    if (!commandsManager) {\r\n      log.warn(\r\n        'HotkeysManager instantiated without a commandsManager. Hotkeys will be unable to find and run commands.'\r\n      );\r\n    }\r\n\r\n    this._servicesManager = servicesManager;\r\n    this._commandsManager = commandsManager;\r\n  }\r\n\r\n  /**\r\n   * Exposes Mousetrap.js's `.record` method, added by the record plugin.\r\n   *\r\n   * @param {*} event\r\n   */\r\n  record(event) {\r\n    return hotkeys.record(event);\r\n  }\r\n\r\n  /**\r\n   * Disables all hotkeys. Hotkeys added while disabled will not listen for\r\n   * input.\r\n   */\r\n  disable() {\r\n    this.isEnabled = false;\r\n    hotkeys.pause();\r\n  }\r\n\r\n  /**\r\n   * Enables all hotkeys.\r\n   */\r\n  enable() {\r\n    this.isEnabled = true;\r\n    hotkeys.unpause();\r\n  }\r\n\r\n  /**\r\n   * Registers a list of hotkeydefinitions.\r\n   *\r\n   * @param {HotkeyDefinition[] | Object} [hotkeyDefinitions=[]] Contains hotkeys definitions\r\n   */\r\n  setHotkeys(hotkeyDefinitions = []) {\r\n    try {\r\n      const definitions = this._getValidDefinitions(hotkeyDefinitions);\r\n\r\n      definitions.forEach(definition => this.registerHotkeys(definition));\r\n    } catch (error) {\r\n      const {\r\n        UINotificationService,\r\n        LoggerService,\r\n      } = this._servicesManager.services;\r\n      const message = 'Erro while setting hotkeys';\r\n      LoggerService.error({ error, message });\r\n      UINotificationService.show({\r\n        title: 'Hotkeys Manager',\r\n        message,\r\n        type: 'error',\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set default hotkey bindings. These\r\n   * values are used in `this.restoreDefaultBindings`.\r\n   *\r\n   * @param {HotkeyDefinition[] | Object} [hotkeyDefinitions=[]] Contains hotkeys definitions\r\n   */\r\n  setDefaultHotKeys(hotkeyDefinitions = []) {\r\n    const definitions = this._getValidDefinitions(hotkeyDefinitions);\r\n\r\n    this.hotkeyDefaults = definitions;\r\n  }\r\n\r\n  /**\r\n   * Take hotkey definitions that can be an array or object and make sure that it\r\n   * returns an array of hotkeys\r\n   *\r\n   * @param {HotkeyDefinition[] | Object} [hotkeyDefinitions=[]] Contains hotkeys definitions\r\n   */\r\n  _getValidDefinitions(hotkeyDefinitions) {\r\n    const definitions = Array.isArray(hotkeyDefinitions)\r\n      ? [...hotkeyDefinitions]\r\n      : this._parseToArrayLike(hotkeyDefinitions);\r\n\r\n    return definitions;\r\n  }\r\n\r\n  /**\r\n   * It parses given object containing hotkeyDefinition to array like.\r\n   * Each property of given object will be mapped to an object of an array. And its property name will be the value of a property named as commandName\r\n   *\r\n   * @param {HotkeyDefinition[] | Object} [hotkeyDefinitions={}] Contains hotkeys definitions\r\n   * @returns {HotkeyDefinition[]}\r\n   */\r\n  _parseToArrayLike(hotkeyDefinitionsObj = {}) {\r\n    const copy = { ...hotkeyDefinitionsObj };\r\n    return Object.entries(copy).map(entryValue =>\r\n      this._parseToHotKeyObj(entryValue[0], entryValue[1])\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return HotkeyDefinition object like based on given property name and property value\r\n   * @param {string} propertyName property name of hotkey definition object\r\n   * @param {object} propertyValue property value of hotkey definition object\r\n   *\r\n   * @example\r\n   *\r\n   * const hotKeyObj = {hotKeyDefA: {keys:[],....}}\r\n   *\r\n   * const parsed = _parseToHotKeyObj(Object.keys(hotKeyDefA)[0], hotKeyObj[hotKeyDefA]);\r\n   *  {\r\n   *   commandName: hotKeyDefA,\r\n   *   keys: [],\r\n   *   ....\r\n   *  }\r\n   *\r\n   */\r\n  _parseToHotKeyObj(propertyName, propertyValue) {\r\n    return {\r\n      commandName: propertyName,\r\n      ...propertyValue,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * (unbinds and) binds the specified command to one or more key combinations.\r\n   * When a hotkey combination is triggered, the command name and active contexts\r\n   * are used to locate the correct command to call.\r\n   *\r\n   * @param {HotkeyDefinition} commandName\r\n   * @param {String} extension\r\n   * @returns {undefined}\r\n   */\r\n  registerHotkeys({ commandName, keys, label } = {}, extension) {\r\n    if (!commandName) {\r\n      log.warn(`No command was defined for hotkey \"${keys}\"`);\r\n      return;\r\n    }\r\n\r\n    const previouslyRegisteredDefinition = this.hotkeyDefinitions[commandName];\r\n\r\n    if (previouslyRegisteredDefinition) {\r\n      const previouslyRegisteredKeys = previouslyRegisteredDefinition.keys;\r\n      this._unbindHotkeys(commandName, previouslyRegisteredKeys);\r\n      log.info(`Unbinding ${commandName} from ${previouslyRegisteredKeys}`);\r\n    }\r\n\r\n    // Set definition & bind\r\n    this.hotkeyDefinitions[commandName] = { keys, label };\r\n    this._bindHotkeys(commandName, keys);\r\n    log.info(`Binding ${commandName} to ${keys}`);\r\n  }\r\n\r\n  /**\r\n   * Uses most recent\r\n   *\r\n   * @returns {undefined}\r\n   */\r\n  restoreDefaultBindings() {\r\n    this.setHotkeys(this.hotkeyDefaults);\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  destroy() {\r\n    this.hotkeyDefaults = [];\r\n    this.hotkeyDefinitions = {};\r\n    hotkeys.reset();\r\n  }\r\n\r\n  /**\r\n   * Binds one or more set of hotkey combinations for a given command\r\n   *\r\n   * @private\r\n   * @param {string} commandName - The name of the command to trigger when hotkeys are used\r\n   * @param {string[]} keys - One or more key combinations that should trigger command\r\n   * @returns {undefined}\r\n   */\r\n  _bindHotkeys(commandName, keys) {\r\n    const isKeyDefined = keys === '' || keys === undefined;\r\n    if (isKeyDefined) {\r\n      return;\r\n    }\r\n\r\n    const isKeyArray = keys instanceof Array;\r\n    const combinedKeys = isKeyArray ? keys.join('+') : keys;\r\n\r\n    hotkeys.bind(combinedKeys, evt => {\r\n      evt.preventDefault();\r\n      evt.stopPropagation();\r\n      this._commandsManager.runCommand(commandName, { evt });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * unbinds one or more set of hotkey combinations for a given command\r\n   *\r\n   * @private\r\n   * @param {string} commandName - The name of the previously bound command\r\n   * @param {string[]} keys - One or more sets of previously bound keys\r\n   * @returns {undefined}\r\n   */\r\n  _unbindHotkeys(commandName, keys) {\r\n    const isKeyDefined = keys !== '' && keys !== undefined;\r\n    if (!isKeyDefined) {\r\n      return;\r\n    }\r\n\r\n    const isKeyArray = keys instanceof Array;\r\n    if (isKeyArray) {\r\n      const combinedKeys = keys.join('+');\r\n      this._unbindHotkeys(commandName, combinedKeys);\r\n      return;\r\n    }\r\n\r\n    hotkeys.unbind(keys);\r\n  }\r\n}\r\n\r\nexport default HotkeysManager;\r\n\r\n// Commands Contexts:\r\n\r\n// --> Name and Priority\r\n// GLOBAL: 0\r\n// VIEWER::CORNERSTONE: 1\r\n// VIEWER::VTK: 1\r\n","export const CodeNameCodeSequenceValues = {\r\n  ImagingMeasurementReport: '126000',\r\n  ImageLibrary: '111028',\r\n  ImagingMeasurements: '126010',\r\n  MeasurementGroup: '125007',\r\n  ImageLibraryGroup: '126200',\r\n  TrackingUniqueIdentifier: '112040',\r\n  TrackingIdentifier: '112039',\r\n  Finding: '121071',\r\n  FindingSite: 'G-C0E3', // SRT\r\n  CornerstoneFreeText: 'CORNERSTONEFREETEXT', // CST4\r\n  Score: '246262008',\r\n};\r\n\r\nexport const RELATIONSHIP_TYPE = {\r\n  INFERRED_FROM: 'INFERRED FROM',\r\n  SELECTED_FROM: 'SELECTED FROM',\r\n};\r\n\r\nexport const CodingSchemeDesignators = {\r\n  SRT: 'SRT',\r\n  cornerstoneTools4: 'CST4',\r\n};\r\n\r\nexport default {\r\n  CodeNameCodeSequenceValues,\r\n  RELATIONSHIP_TYPE,\r\n  CodingSchemeDesignators,\r\n};\r\n","const getSequenceAsArray = sequence =>\r\n  Array.isArray(sequence) ? sequence : [sequence];\r\n\r\nexport default getSequenceAsArray;\r\n","import getSequenceAsArray from './getSequenceAsArray';\r\nimport { CodeNameCodeSequenceValues } from '../enums';\r\n\r\nconst getMergedContentSequencesByTrackingUniqueIdentifiers = MeasurementGroups => {\r\n  const mergedContentSequencesByTrackingUniqueIdentifiers = {};\r\n\r\n  MeasurementGroups.forEach(MeasurementGroup => {\r\n    const ContentSequence = getSequenceAsArray(\r\n      MeasurementGroup.ContentSequence\r\n    );\r\n\r\n    const TrackingUniqueIdentifierItem = ContentSequence.find(\r\n      item =>\r\n        item.ConceptNameCodeSequence.CodeValue ===\r\n        CodeNameCodeSequenceValues.TrackingUniqueIdentifier\r\n    );\r\n\r\n    if (!TrackingUniqueIdentifierItem) {\r\n      console.warn(\r\n        'No Tracking Unique Identifier, skipping ambiguous measurement.'\r\n      );\r\n    }\r\n\r\n    const trackingUniqueIdentifier = TrackingUniqueIdentifierItem.UID;\r\n\r\n    if (\r\n      mergedContentSequencesByTrackingUniqueIdentifiers[\r\n        trackingUniqueIdentifier\r\n      ] === undefined\r\n    ) {\r\n      // Add the full ContentSequence\r\n      mergedContentSequencesByTrackingUniqueIdentifiers[\r\n        trackingUniqueIdentifier\r\n      ] = [...ContentSequence];\r\n    } else {\r\n      // Add the ContentSequence minus the tracking identifier, as we have this\r\n      // Information in the merged ContentSequence anyway.\r\n      ContentSequence.forEach(item => {\r\n        if (\r\n          item.ConceptNameCodeSequence.CodeValue !==\r\n          CodeNameCodeSequenceValues.TrackingUniqueIdentifier\r\n        ) {\r\n          mergedContentSequencesByTrackingUniqueIdentifiers[\r\n            trackingUniqueIdentifier\r\n          ].push(item);\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  return mergedContentSequencesByTrackingUniqueIdentifiers;\r\n};\r\n\r\nexport default getMergedContentSequencesByTrackingUniqueIdentifiers;\r\n","const getLabelFromMeasuredValueSequence = (\r\n  ConceptNameCodeSequence,\r\n  MeasuredValueSequence\r\n) => {\r\n  const { CodeMeaning } = ConceptNameCodeSequence;\r\n  const { NumericValue, MeasurementUnitsCodeSequence } = MeasuredValueSequence;\r\n  const { CodeValue } = MeasurementUnitsCodeSequence;\r\n\r\n  const formatedNumericValue = NumericValue\r\n    ? Number(NumericValue).toFixed(1)\r\n    : '';\r\n\r\n  return {\r\n    label: CodeMeaning,\r\n    value: `${formatedNumericValue} ${CodeValue}`,\r\n  }; // E.g. Long Axis: 31.0 mm\r\n};\r\n\r\nexport default getLabelFromMeasuredValueSequence;\r\n","const getCoordsFromSCOORDOrSCOORD3D = (graphicItem, displaySet) => {\r\n  const { ValueType, RelationshipType, GraphicType, GraphicData } = graphicItem;\r\n\r\n  // if (RelationshipType !== RELATIONSHIP_TYPE.INFERRED_FROM) {\r\n  //   console.warn(\r\n  //     `Relationshiptype === ${RelationshipType}. Cannot deal with NON TID-1400 SCOORD group with RelationshipType !== \"INFERRED FROM.\"`\r\n  //   );\r\n  //   return;\r\n  // }\r\n\r\n  const coords = { ValueType, GraphicType, GraphicData };\r\n\r\n  // ContentSequence has length of 1 as RelationshipType === 'INFERRED FROM'\r\n  if (ValueType === 'SCOORD') {\r\n    const { ReferencedSOPSequence } = graphicItem.ContentSequence;\r\n    coords.ReferencedSOPSequence = ReferencedSOPSequence;\r\n  } else if (ValueType === 'SCOORD3D') {\r\n    if (graphicItem.ReferencedFrameOfReferenceUID) {\r\n      coords.ReferencedFrameOfReferenceSequence = graphicItem.ReferencedFrameOfReferenceUID;\r\n    } else if (graphicItem.ContentSequence) {\r\n      const {\r\n        ReferencedFrameOfReferenceSequence,\r\n      } = graphicItem.ContentSequence;\r\n      coords.ReferencedFrameOfReferenceSequence = ReferencedFrameOfReferenceSequence;\r\n    }\r\n  }\r\n\r\n  return coords;\r\n};\r\n\r\nexport default getCoordsFromSCOORDOrSCOORD3D;\r\n","import getLabelFromMeasuredValueSequence from './getLabelFromMeasuredValueSequence';\r\nimport getCoordsFromSCOORDOrSCOORD3D from './getCoordsFromSCOORDOrSCOORD3D';\r\nimport { RELATIONSHIP_TYPE, CodeNameCodeSequenceValues } from '../enums';\r\n\r\n/**\r\n * TID 1410 Planar ROI Measurements and Qualitative Evaluations.\r\n *\r\n * @param {*} mergedContentSequence\r\n * @returns\r\n */\r\nconst processTID1410Measurement = (mergedContentSequence, displaySet) => {\r\n  // Need to deal with TID 1410 style measurements, which will have a SCOORD or SCOORD3D at the top level,\r\n  // And non-geometric representations where each NUM has \"INFERRED FROM\" SCOORD/SCOORD3D\r\n\r\n  const graphicItem = mergedContentSequence.find(\r\n    group => group.ValueType === 'SCOORD' || group.ValueType === 'SCOORD3D'\r\n  );\r\n\r\n  if (!graphicItem) {\r\n    console.warn(\r\n      `graphic ValueType ${graphicItem.ValueType} not currently supported, skipping annotation.`\r\n    );\r\n    return;\r\n  }\r\n\r\n  const UIDREFContentItem = mergedContentSequence.find(\r\n    group => group.ValueType === 'UIDREF'\r\n  );\r\n\r\n  const TrackingIdentifierContentItem = mergedContentSequence.find(\r\n    item =>\r\n      item.ConceptNameCodeSequence.CodeValue ===\r\n      CodeNameCodeSequenceValues.TrackingIdentifier\r\n  );\r\n\r\n  const NUMContentItems = mergedContentSequence.filter(\r\n    group => group.ValueType === 'NUM'\r\n  );\r\n\r\n  const measurement = {\r\n    loaded: false,\r\n    labels: [],\r\n    coords: [getCoordsFromSCOORDOrSCOORD3D(graphicItem, displaySet)],\r\n    TrackingUniqueIdentifier: UIDREFContentItem.UID,\r\n    TrackingIdentifier: TrackingIdentifierContentItem.TextValue,\r\n  };\r\n\r\n  NUMContentItems.forEach(item => {\r\n    const {\r\n      ConceptNameCodeSequence,\r\n      ContentSequence,\r\n      MeasuredValueSequence,\r\n    } = item;\r\n\r\n    if (\r\n      item.ConceptNameCodeSequence.CodeValue ===\r\n      CodeNameCodeSequenceValues.Score\r\n    ) {\r\n      ContentSequence.forEach(item => {\r\n        if (\r\n          [\r\n            RELATIONSHIP_TYPE.SELECTED_FROM,\r\n            RELATIONSHIP_TYPE.INFERRED_FROM,\r\n          ].includes(item.RelationshipType)\r\n        ) {\r\n          if (item.ReferencedSOPSequence) {\r\n            measurement.coords.forEach(coord => {\r\n              coord.ReferencedSOPSequence = item.ReferencedSOPSequence;\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    if (MeasuredValueSequence) {\r\n      measurement.labels.push(\r\n        getLabelFromMeasuredValueSequence(\r\n          ConceptNameCodeSequence,\r\n          MeasuredValueSequence\r\n        )\r\n      );\r\n    }\r\n  });\r\n\r\n  return measurement;\r\n};\r\n\r\nexport default processTID1410Measurement;\r\n","import getLabelFromMeasuredValueSequence from './getLabelFromMeasuredValueSequence';\r\nimport getCoordsFromSCOORDOrSCOORD3D from './getCoordsFromSCOORDOrSCOORD3D';\r\nimport { CodeNameCodeSequenceValues, CodingSchemeDesignators } from '../enums';\r\n\r\nconst CORNERSTONE_FREETEXT_CODE_VALUE = 'CORNERSTONEFREETEXT';\r\n\r\nconst processNonGeometricallyDefinedMeasurement = mergedContentSequence => {\r\n  const NUMContentItems = mergedContentSequence.filter(\r\n    group => group.ValueType === 'NUM'\r\n  );\r\n\r\n  const UIDREFContentItem = mergedContentSequence.find(\r\n    group => group.ValueType === 'UIDREF'\r\n  );\r\n\r\n  const TrackingIdentifierContentItem = mergedContentSequence.find(\r\n    item =>\r\n      item.ConceptNameCodeSequence.CodeValue ===\r\n      CodeNameCodeSequenceValues.TrackingIdentifier\r\n  );\r\n\r\n  const Finding = mergedContentSequence.find(\r\n    item =>\r\n      item.ConceptNameCodeSequence.CodeValue ===\r\n      CodeNameCodeSequenceValues.Finding\r\n  );\r\n\r\n  const FindingSites = mergedContentSequence.filter(\r\n    item =>\r\n      item.ConceptNameCodeSequence.CodingSchemeDesignator ===\r\n        CodingSchemeDesignators.SRT &&\r\n      item.ConceptNameCodeSequence.CodeValue ===\r\n        CodeNameCodeSequenceValues.FindingSite\r\n  );\r\n\r\n  const measurement = {\r\n    loaded: false,\r\n    labels: [],\r\n    coords: [],\r\n    TrackingUniqueIdentifier: UIDREFContentItem.UID,\r\n    TrackingIdentifier: TrackingIdentifierContentItem.TextValue,\r\n  };\r\n\r\n  if (\r\n    Finding &&\r\n    Finding.ConceptCodeSequence.CodingSchemeDesignator ===\r\n      CodingSchemeDesignators.cornerstoneTools4 &&\r\n    Finding.ConceptCodeSequence.CodeValue ===\r\n      CodeNameCodeSequenceValues.CornerstoneFreeText\r\n  ) {\r\n    measurement.labels.push({\r\n      label: CORNERSTONE_FREETEXT_CODE_VALUE,\r\n      value: Finding.ConceptCodeSequence.CodeMeaning,\r\n    });\r\n  }\r\n\r\n  // TODO -> Eventually hopefully support SNOMED or some proper code library, just free text for now.\r\n  if (FindingSites.length) {\r\n    const cornerstoneFreeTextFindingSite = FindingSites.find(\r\n      FindingSite =>\r\n        FindingSite.ConceptCodeSequence.CodingSchemeDesignator ===\r\n          CodingSchemeDesignators.cornerstoneTools4 &&\r\n        FindingSite.ConceptCodeSequence.CodeValue ===\r\n          CodeNameCodeSequenceValues.CornerstoneFreeText\r\n    );\r\n\r\n    if (cornerstoneFreeTextFindingSite) {\r\n      measurement.labels.push({\r\n        label: CORNERSTONE_FREETEXT_CODE_VALUE,\r\n        value: cornerstoneFreeTextFindingSite.ConceptCodeSequence.CodeMeaning,\r\n      });\r\n    }\r\n  }\r\n\r\n  NUMContentItems.forEach(item => {\r\n    const {\r\n      ConceptNameCodeSequence,\r\n      ContentSequence,\r\n      MeasuredValueSequence,\r\n    } = item;\r\n\r\n    if (!ContentSequence) {\r\n      console.warn(`Graphic ${ContentSequence} missing, skipping annotation.`);\r\n\r\n      return;\r\n    }\r\n\r\n    const { ValueType } = ContentSequence;\r\n\r\n    if (!ValueType === 'SCOORD' && !ValueType === 'SCOORD3D') {\r\n      console.warn(\r\n        `Graphic ${ValueType} not currently supported, skipping annotation.`\r\n      );\r\n\r\n      return;\r\n    }\r\n\r\n    const coords = getCoordsFromSCOORDOrSCOORD3D(ContentSequence);\r\n\r\n    if (coords) {\r\n      measurement.coords.push(coords);\r\n    }\r\n\r\n    if (MeasuredValueSequence) {\r\n      measurement.labels.push(\r\n        getLabelFromMeasuredValueSequence(\r\n          ConceptNameCodeSequence,\r\n          MeasuredValueSequence\r\n        )\r\n      );\r\n    }\r\n  });\r\n\r\n  return measurement;\r\n};\r\n\r\nexport default processNonGeometricallyDefinedMeasurement;\r\n","import processTID1410Measurement from './processTID1410Measurement';\r\nimport processNonGeometricallyDefinedMeasurement from './processNonGeometricallyDefinedMeasurement';\r\n\r\nconst processMeasurement = (mergedContentSequence, displaySet) => {\r\n  if (\r\n    mergedContentSequence.some(\r\n      group => group.ValueType === 'SCOORD' || group.ValueType === 'SCOORD3D'\r\n    )\r\n  ) {\r\n    return processTID1410Measurement(mergedContentSequence, displaySet);\r\n  }\r\n\r\n  return processNonGeometricallyDefinedMeasurement(mergedContentSequence);\r\n};\r\n\r\nexport default processMeasurement;\r\n","import { CodeNameCodeSequenceValues } from '../enums';\r\nimport getSequenceAsArray from './getSequenceAsArray';\r\nimport getMergedContentSequencesByTrackingUniqueIdentifiers from './getMergedContentSequencesByTrackingUniqueIdentifiers';\r\nimport processMeasurement from './processMeasurement';\r\n\r\nconst getMeasurements = (\r\n  ImagingMeasurementReportContentSequence,\r\n  displaySet\r\n) => {\r\n  const ImagingMeasurements = ImagingMeasurementReportContentSequence.find(\r\n    item =>\r\n      item.ConceptNameCodeSequence.CodeValue ===\r\n      CodeNameCodeSequenceValues.ImagingMeasurements\r\n  );\r\n\r\n  const MeasurementGroups = getSequenceAsArray(\r\n    ImagingMeasurements.ContentSequence\r\n  ).filter(\r\n    item =>\r\n      item.ConceptNameCodeSequence.CodeValue ===\r\n      CodeNameCodeSequenceValues.MeasurementGroup\r\n  );\r\n\r\n  const mergedContentSequencesByTrackingUniqueIdentifiers = getMergedContentSequencesByTrackingUniqueIdentifiers(\r\n    MeasurementGroups\r\n  );\r\n\r\n  let measurements = [];\r\n\r\n  Object.keys(mergedContentSequencesByTrackingUniqueIdentifiers).forEach(\r\n    trackingUniqueIdentifier => {\r\n      const mergedContentSequence =\r\n        mergedContentSequencesByTrackingUniqueIdentifiers[\r\n          trackingUniqueIdentifier\r\n        ];\r\n\r\n      const measurement = processMeasurement(mergedContentSequence, displaySet);\r\n      if (measurement) {\r\n        measurements.push(measurement);\r\n      }\r\n    }\r\n  );\r\n\r\n  return measurements;\r\n};\r\n\r\nexport default getMeasurements;\r\n","import getSequenceAsArray from './getSequenceAsArray';\r\nimport { CodeNameCodeSequenceValues } from '../enums';\r\n\r\nconst getReferencedImagesList = ImagingMeasurementReportContentSequence => {\r\n  const referencedImages = [];\r\n\r\n  const ImageLibrary = ImagingMeasurementReportContentSequence.find(\r\n    item =>\r\n      item.ConceptNameCodeSequence.CodeValue ===\r\n      CodeNameCodeSequenceValues.ImageLibrary\r\n  );\r\n\r\n  if (!ImageLibrary.ContentSequence) {\r\n    return referencedImages;\r\n  }\r\n\r\n  const ImageLibraryGroup = getSequenceAsArray(\r\n    ImageLibrary.ContentSequence\r\n  ).find(\r\n    item =>\r\n      item.ConceptNameCodeSequence.CodeValue ===\r\n      CodeNameCodeSequenceValues.ImageLibraryGroup\r\n  );\r\n\r\n  getSequenceAsArray(ImageLibraryGroup.ContentSequence).forEach(item => {\r\n    const { ReferencedSOPSequence } = item;\r\n    if (ReferencedSOPSequence) {\r\n      const {\r\n        ReferencedSOPClassUID,\r\n        ReferencedSOPInstanceUID,\r\n      } = ReferencedSOPSequence;\r\n\r\n      referencedImages.push({\r\n        ReferencedSOPClassUID,\r\n        ReferencedSOPInstanceUID,\r\n      });\r\n    }\r\n  });\r\n\r\n  return referencedImages;\r\n};\r\n\r\nexport default getReferencedImagesList;\r\n","import { adapters } from 'dcmjs';\r\n\r\nconst cornerstoneAdapters = adapters.Cornerstone;\r\n\r\n/**\r\n * Checks if the given `displaySet`can be rehydrated into the `MeasurementService`.\r\n *\r\n * @param {object} displaySet The SR `displaySet` to check.\r\n * @param {object[]} mappings The CornerstoneTools 4 mappings to the `MeasurementService`.\r\n * @returns {boolean} True if the SR can be rehydrated into the `MeasurementService`.\r\n */\r\nexport default function isRehydratable(displaySet, mappings) {\r\n  if (!mappings || !mappings.length) {\r\n    return false;\r\n  }\r\n\r\n  const mappingDefinitions = mappings.map(m => m.definition);\r\n  const { measurements } = displaySet;\r\n\r\n  const adapterKeys = Object.keys(cornerstoneAdapters).filter(\r\n    adapterKey =>\r\n      typeof cornerstoneAdapters[adapterKey]\r\n        .isValidCornerstoneTrackingIdentifier === 'function'\r\n  );\r\n\r\n  const adapters = [];\r\n\r\n  adapterKeys.forEach(key => {\r\n    if (mappingDefinitions.includes(key)) {\r\n      // Must have both a dcmjs adapter and a MeasurementService\r\n      // Definition in order to be a candidate for import.\r\n      adapters.push(cornerstoneAdapters[key]);\r\n    }\r\n  });\r\n\r\n  for (let i = 0; i < measurements.length; i++) {\r\n    const TrackingIdentifier = measurements[i].TrackingIdentifier;\r\n    const hydratable = adapters.some(adapter =>\r\n      adapter.isValidCornerstoneTrackingIdentifier(TrackingIdentifier)\r\n    );\r\n\r\n    if (hydratable) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n","const TOOL_NAMES = {\r\n  DICOM_SR_DISPLAY_TOOL: 'DICOMSRDisplayTool',\r\n};\r\n\r\nexport default TOOL_NAMES;\r\n","export default {\r\n  POINT: 'POINT',\r\n  MULTIPOINT: 'MULTIPOINT',\r\n  POLYLINE: 'POLYLINE',\r\n  CIRCLE: 'CIRCLE',\r\n  ELLIPSE: 'ELLIPSE',\r\n  POLYGON: 'POLYGON',\r\n};\r\n","import csMath from 'cornerstone-math';\r\nimport SCOORD_TYPES from '../constants/scoordTypes';\r\nimport { inv } from 'mathjs';\r\n\r\nconst getRenderableData = (\r\n  GraphicType,\r\n  GraphicData,\r\n  ValueType,\r\n  imageMetadata\r\n) => {\r\n  let renderableData;\r\n\r\n  const orientation = imageMetadata.ImageOrientationPatient;\r\n  const position = imageMetadata.ImagePositionPatient;\r\n  const pixelSpacing = imageMetadata.PixelSpacing;\r\n  const sliceSpacing = imageMetadata.SliceThickness\r\n    ? imageMetadata.SliceThickness\r\n    : 1;\r\n  //  https://nipy.org/nibabel/dicom/dicom_orientation.html\r\n  const M = [\r\n    [\r\n      orientation[0] * pixelSpacing[0],\r\n      orientation[3] * pixelSpacing[1],\r\n      sliceSpacing,\r\n      position[0],\r\n    ],\r\n    [\r\n      orientation[1] * pixelSpacing[0],\r\n      orientation[4] * pixelSpacing[1],\r\n      sliceSpacing,\r\n      position[1],\r\n    ],\r\n    [\r\n      orientation[2] * pixelSpacing[0],\r\n      orientation[5] * pixelSpacing[1],\r\n      sliceSpacing,\r\n      position[2],\r\n    ],\r\n    [0, 0, 0, 1],\r\n  ];\r\n\r\n  // we need to go from 3D to pixel (cornerstone2D works in pixel coordinates),\r\n  // we take the inverse.\r\n  const M1 = inv(M);\r\n\r\n  const worldToIJK = (point, M1) => {\r\n    const worldPoint = {\r\n      x:\r\n        M1[0][0] * point.x + M1[0][1] * point.y + M1[0][2] * point.z + M1[0][3],\r\n      y:\r\n        M1[1][0] * point.x + M1[1][1] * point.y + M1[1][2] * point.z + M1[1][3],\r\n      z:\r\n        M1[2][0] * point.x + M1[2][1] * point.y + M1[2][2] * point.z + M1[2][3],\r\n    };\r\n    return worldPoint;\r\n  };\r\n\r\n  // https://dicom.innolitics.com/ciods/procedure-log/sr-document-content/00700023\r\n  switch (GraphicType) {\r\n    case SCOORD_TYPES.POINT:\r\n      renderableData = [];\r\n\r\n      if (ValueType === 'SCOORD3D') {\r\n        for (let i = 0; i < GraphicData.length; i += 3) {\r\n          const point = {\r\n            x: GraphicData[i],\r\n            y: GraphicData[i + 1],\r\n            z: GraphicData[i + 2],\r\n          };\r\n\r\n          renderableData.push(worldToIJK(point, M1));\r\n        }\r\n      } else {\r\n        for (let i = 0; i < GraphicData.length; i += 2) {\r\n          renderableData.push({ x: GraphicData[i], y: GraphicData[i + 1] });\r\n        }\r\n      }\r\n\r\n      break;\r\n    case SCOORD_TYPES.MULTIPOINT:\r\n      renderableData = [];\r\n\r\n      if (ValueType === 'SCOORD3D') {\r\n        for (let i = 0; i < GraphicData.length; i += 3) {\r\n          const point = {\r\n            x: GraphicData[i],\r\n            y: GraphicData[i + 1],\r\n            z: GraphicData[i + 2],\r\n          };\r\n\r\n          renderableData.push(worldToIJK(point, M1));\r\n        }\r\n      } else {\r\n        for (let i = 0; i < GraphicData.length; i += 2) {\r\n          renderableData.push({ x: GraphicData[i], y: GraphicData[i + 1] });\r\n        }\r\n      }\r\n\r\n      break;\r\n    case SCOORD_TYPES.POLYLINE:\r\n      renderableData = [];\r\n\r\n      if (ValueType === 'SCOORD3D') {\r\n        for (let i = 0; i < GraphicData.length; i += 3) {\r\n          const point = {\r\n            x: GraphicData[i],\r\n            y: GraphicData[i + 1],\r\n            z: GraphicData[i + 2],\r\n          };\r\n\r\n          renderableData.push(worldToIJK(point, M1));\r\n        }\r\n      } else {\r\n        for (let i = 0; i < GraphicData.length; i += 2) {\r\n          renderableData.push({ x: GraphicData[i], y: GraphicData[i + 1] });\r\n        }\r\n      }\r\n\r\n      break;\r\n    case SCOORD_TYPES.POLYGON:\r\n      // this is only scoord3d\r\n      renderableData = [];\r\n      for (let i = 0; i < GraphicData.length; i += 3) {\r\n        const point = {\r\n          x: GraphicData[i],\r\n          y: GraphicData[i + 1],\r\n          z: GraphicData[i + 2],\r\n        };\r\n\r\n        renderableData.push(worldToIJK(point, M1));\r\n      }\r\n      break;\r\n    case SCOORD_TYPES.CIRCLE: {\r\n      // this is only scoord\r\n      const center = { x: GraphicData[0], y: GraphicData[1] };\r\n      const onPerimeter = { x: GraphicData[2], y: GraphicData[3] };\r\n\r\n      const radius = csMath.point.distance(center, onPerimeter);\r\n\r\n      renderableData = {\r\n        center,\r\n        radius,\r\n      };\r\n      break;\r\n    }\r\n    case SCOORD_TYPES.ELLIPSE: {\r\n      console.warn('ROTATED ELLIPSE NOT YET SUPPORTED!');\r\n      // To Do: scoord3d ellips, need data for testing\r\n      const majorAxis = [\r\n        { x: GraphicData[0], y: GraphicData[1] },\r\n        { x: GraphicData[2], y: GraphicData[3] },\r\n      ];\r\n      const minorAxis = [\r\n        { x: GraphicData[4], y: GraphicData[5] },\r\n        { x: GraphicData[6], y: GraphicData[7] },\r\n      ];\r\n\r\n      // Calculate two opposite corners of box defined by two axes.\r\n\r\n      const minorAxisLength = csMath.point.distance(minorAxis[0], minorAxis[1]);\r\n\r\n      const minorAxisDirection = {\r\n        x: (minorAxis[1].x - minorAxis[0].x) / minorAxisLength,\r\n        y: (minorAxis[1].y - minorAxis[0].y) / minorAxisLength,\r\n      };\r\n\r\n      const halfMinorAxisLength = minorAxisLength / 2;\r\n\r\n      // First end point of major axis + half minor axis vector\r\n      const corner1 = {\r\n        x: majorAxis[0].x + minorAxisDirection.x * halfMinorAxisLength,\r\n        y: majorAxis[0].y + minorAxisDirection.y * halfMinorAxisLength,\r\n      };\r\n\r\n      // Second end point of major axis - half of minor axis vector\r\n      const corner2 = {\r\n        x: majorAxis[1].x - minorAxisDirection.x * halfMinorAxisLength,\r\n        y: majorAxis[1].y - minorAxisDirection.y * halfMinorAxisLength,\r\n      };\r\n\r\n      renderableData = {\r\n        corner1,\r\n        corner2,\r\n      };\r\n      break;\r\n    }\r\n  }\r\n\r\n  return renderableData;\r\n};\r\n\r\nexport default getRenderableData;\r\n","import csTools from 'cornerstone-tools';\r\nimport OHIF from '../../../';\r\n\r\n/** Internal imports */\r\nimport TOOL_NAMES from '../constants/toolNames';\r\nimport getRenderableData from './getRenderableData';\r\n\r\nconst globalImageIdSpecificToolStateManager =\r\n  csTools.globalImageIdSpecificToolStateManager;\r\n\r\n/**\r\n * Add a measurement to a display set.\r\n *\r\n * @param {*} measurement\r\n * @param {*} imageId\r\n * @param {*} displaySetInstanceUID\r\n */\r\nexport default function addMeasurement(\r\n  measurement,\r\n  imageId,\r\n  imageMetadata,\r\n  displaySetInstanceUID\r\n) {\r\n  // TODO -> Render rotated ellipse .\r\n  const toolName = TOOL_NAMES.DICOM_SR_DISPLAY_TOOL;\r\n\r\n  const measurementData = {\r\n    TrackingUniqueIdentifier: measurement.TrackingUniqueIdentifier,\r\n    renderableData: {},\r\n    labels: measurement.labels,\r\n  };\r\n\r\n  measurement.coords.forEach(coord => {\r\n    const { GraphicType, GraphicData, ValueType } = coord;\r\n\r\n    if (measurementData.renderableData[GraphicType] === undefined) {\r\n      measurementData.renderableData[GraphicType] = [];\r\n    }\r\n    measurementData.renderableData[GraphicType].push(\r\n      getRenderableData(GraphicType, GraphicData, ValueType, imageMetadata)\r\n    );\r\n  });\r\n\r\n  const toolState = globalImageIdSpecificToolStateManager.saveToolState();\r\n\r\n  if (toolState[imageId] === undefined) {\r\n    toolState[imageId] = {};\r\n  }\r\n\r\n  const imageIdToolState = toolState[imageId];\r\n\r\n  // If we don't have tool state for this type of tool, add an empty object\r\n  if (imageIdToolState[toolName] === undefined) {\r\n    imageIdToolState[toolName] = {\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  const toolData = imageIdToolState[toolName];\r\n\r\n  measurementData.description = `Read-only annotation`;\r\n  measurementData.isReadOnly = true;\r\n  toolData.data.push(measurementData);\r\n\r\n  addToMeasurementApi({ measurementData, toolName, imageId });\r\n\r\n  measurement.loaded = true;\r\n  measurement.imageId = imageId;\r\n  measurement.displaySetInstanceUID = displaySetInstanceUID;\r\n\r\n  // Remove the unneeded coord now its processed, but keep the SOPInstanceUID.\r\n  // NOTE: We assume that each SCOORD in the MeasurementGroup maps onto one frame,\r\n  // It'd be super werid if it didn't anyway as a SCOORD.\r\n  measurement.ReferencedSOPInstanceUID =\r\n    measurement.coords[0].ReferencedSOPSequence.ReferencedSOPInstanceUID;\r\n\r\n  return measurement;\r\n}\r\n\r\nconst addToMeasurementApi = ({ measurementData, toolName, imageId }) => {\r\n  const measurementApi = OHIF.measurements.MeasurementApi.Instance;\r\n\r\n  const toolType = toolName;\r\n  const collection = measurementApi.tools[toolType];\r\n  if (!collection) return;\r\n  if (!measurementData || measurementData.cancelled) return;\r\n\r\n  const imageAttributes = OHIF.measurements.getImageAttributes(null, imageId);\r\n  const measurement = Object.assign({}, measurementData, imageAttributes, {\r\n    lesionNamingNumber: measurementData.lesionNamingNumber,\r\n    userId: OHIF.user.getUserId(),\r\n    toolType,\r\n  });\r\n\r\n  const addedMeasurement = measurementApi.addMeasurement(toolType, measurement);\r\n  Object.assign(measurementData, addedMeasurement);\r\n\r\n  const measurementLabel = OHIF.measurements.getLabel(measurementData);\r\n  if (measurementLabel) {\r\n    measurementData.labels = [measurementLabel];\r\n  }\r\n};\r\n","import { ImageSet } from '../../classes';\r\nimport getMeasurements from './utils/getMeasurements';\r\nimport getReferencedImagesList from './utils/getReferencedImagesList';\r\nimport isRehydratable from './utils/isRehydratable';\r\nimport addMeasurement from './utils/addMeasurement';\r\n\r\nconst parseSCOORD3D = ({ servicesManager, displaySets }) => {\r\n  const { MeasurementService } = servicesManager.services;\r\n\r\n  const srDisplaySets = displaySets.filter(ds => ds.Modality === 'SR');\r\n\r\n  srDisplaySets.forEach(srDisplaySet => {\r\n    const firstInstance = srDisplaySet.metadata;\r\n    if (!firstInstance) {\r\n      return;\r\n    }\r\n\r\n    const { ContentSequence } = firstInstance;\r\n\r\n    srDisplaySet.referencedImages = getReferencedImagesList(ContentSequence);\r\n    srDisplaySet.measurements = getMeasurements(ContentSequence, srDisplaySet);\r\n    const mappings = MeasurementService.getSourceMappings(\r\n      'CornerstoneTools',\r\n      '4'\r\n    );\r\n\r\n    srDisplaySet.isHydrated = false;\r\n    srDisplaySet.isRehydratable = isRehydratable(srDisplaySet, mappings);\r\n    srDisplaySet.isLoaded = true;\r\n\r\n    const imageDisplaySets = displaySets.filter(\r\n      ds =>\r\n        ds.Modality !== 'SR' &&\r\n        ds.Modality !== 'SEG' &&\r\n        ds.Modality !== 'RTSTRUCT' &&\r\n        ds.Modality !== 'RTDOSE'\r\n    );\r\n    imageDisplaySets.forEach(imageDisplaySet => {\r\n      // Check currently added displaySets and add measurements if the sources exist.\r\n      checkIfCanAddMeasurementsToDisplaySet(srDisplaySet, imageDisplaySet);\r\n    });\r\n  });\r\n};\r\n\r\nconst checkIfCanAddMeasurementsToDisplaySet = (\r\n  srDisplaySet,\r\n  imageDisplaySet\r\n) => {\r\n  let measurements = srDisplaySet.measurements;\r\n\r\n  /**\r\n   * Look for image sets.\r\n   * This also filters out _this_ displaySet, as it is not an image set.\r\n   */\r\n  if (!(imageDisplaySet instanceof ImageSet)) {\r\n    return;\r\n  }\r\n\r\n  const { sopClassUIDs, images } = imageDisplaySet;\r\n\r\n  /**\r\n   * Filter measurements that references the correct sop class.\r\n   */\r\n  measurements = measurements.filter(measurement => {\r\n    return measurement.coords.some(coord => {\r\n      if (coord.ReferencedSOPSequence === undefined) {\r\n        /** we miss the referenced information. We can compare the annotation SCOORD3D coordinates with\r\n         * the ImagePatientPosition of the frames. However (WARNING!!!),\r\n         * if more than a source series is present, this logic can find the wrong frame\r\n         * (i.e. two source series, with the same frameOfReferenceUID,\r\n         * that have each a frame with the same ImagePositionPatient of the annotation 3D coordinates)\r\n         */\r\n        for (let i = 0; i < images.length; ++i) {\r\n          const imageMetadata = images[i].getData().metadata;\r\n          if (\r\n            imageMetadata.FrameOfReferenceUID !==\r\n            coord.ReferencedFrameOfReferenceSequence\r\n          ) {\r\n            continue;\r\n          }\r\n\r\n          let sliceNormal = [0, 0, 0];\r\n          const orientation = imageMetadata.ImageOrientationPatient;\r\n          sliceNormal[0] =\r\n            orientation[1] * orientation[5] - orientation[2] * orientation[4];\r\n          sliceNormal[1] =\r\n            orientation[2] * orientation[3] - orientation[0] * orientation[5];\r\n          sliceNormal[2] =\r\n            orientation[0] * orientation[4] - orientation[1] * orientation[3];\r\n\r\n          let distanceAlongNormal = 0;\r\n          for (let j = 0; j < 3; ++j) {\r\n            distanceAlongNormal +=\r\n              sliceNormal[j] * imageMetadata.ImagePositionPatient[j];\r\n          }\r\n\r\n          // assuming 1 mm tolerance\r\n          if (Math.abs(distanceAlongNormal - coord.GraphicData[2]) > 1) {\r\n            continue;\r\n          }\r\n\r\n          coord.ReferencedSOPSequence = {\r\n            ReferencedSOPClassUID: imageMetadata.SOPClassUID,\r\n            ReferencedSOPInstanceUID: imageMetadata.SOPInstanceUID,\r\n          };\r\n\r\n          break;\r\n        }\r\n\r\n        if (coord.ReferencedSOPSequence === undefined) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      return sopClassUIDs.includes(\r\n        coord.ReferencedSOPSequence.ReferencedSOPClassUID\r\n      );\r\n    });\r\n  });\r\n\r\n  /**\r\n   * New display set doesn't have measurements that references the correct sop class.\r\n   */\r\n  if (measurements.length === 0) {\r\n    return;\r\n  }\r\n\r\n  const imageIds = images.map(i => i.getImageId());\r\n  const SOPInstanceUIDs = images.map(i => i.SOPInstanceUID);\r\n  measurements.forEach(measurement => {\r\n    const { coords } = measurement;\r\n\r\n    coords.forEach(coord => {\r\n      if (coord.ReferencedSOPSequence !== undefined) {\r\n        const imageIndex = SOPInstanceUIDs.findIndex(\r\n          SOPInstanceUID =>\r\n            SOPInstanceUID ===\r\n            coord.ReferencedSOPSequence.ReferencedSOPInstanceUID\r\n        );\r\n        if (imageIndex > -1) {\r\n          const imageId = imageIds[imageIndex];\r\n          const imageMetadata = images[imageIndex].getData().metadata;\r\n          addMeasurement(\r\n            measurement,\r\n            imageId,\r\n            imageMetadata,\r\n            imageDisplaySet.displaySetInstanceUID\r\n          );\r\n        }\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nexport default parseSCOORD3D;\r\n","/**\r\n *  Should Find the requested instance metadata into the displaySets and return\r\n *\r\n * @param {Array} displaySets - List of displaySets\r\n * @param {string} SOPInstanceUID - sopInstanceUID to look for\r\n * @returns {Object} - instance metadata found\r\n */\r\nconst findInstanceMetadataBySopInstanceUID = (displaySets, SOPInstanceUID) => {\r\n  let instanceFound;\r\n\r\n  displaySets.find(displaySet => {\r\n    if (!displaySet.images) return false;\r\n\r\n    instanceFound = displaySet.images.find(\r\n      instanceMetadata =>\r\n        instanceMetadata.getSOPInstanceUID() === SOPInstanceUID\r\n    );\r\n\r\n    return !!instanceFound;\r\n  });\r\n\r\n  return instanceFound;\r\n};\r\n\r\nexport default findInstanceMetadataBySopInstanceUID;\r\n","import dcmjs from 'dcmjs';\r\nimport classes from '../classes';\r\nimport parseSCOORD3D from './SCOORD3D/parseSCOORD3D';\r\n\r\nimport findInstanceMetadataBySopInstanceUID from './utils/findInstanceMetadataBySopInstanceUid';\r\n\r\nconst { LogManager } = classes;\r\n\r\n/**\r\n * Function to parse the part10 array buffer that comes from a DICOM Structured report into measurementData\r\n * measurementData format is a viewer specific format to be stored into the redux and consumed by other components\r\n * (e.g. measurement table)\r\n *\r\n * @param {ArrayBuffer} part10SRArrayBuffer\r\n * @param {Array} displaySets\r\n * @param {object} external\r\n * @returns\r\n */\r\nconst parseDicomStructuredReport = (\r\n  part10SRArrayBuffer,\r\n  displaySets,\r\n  external\r\n) => {\r\n  if (external && external.servicesManager) {\r\n    parseSCOORD3D({ servicesManager: external.servicesManager, displaySets });\r\n  }\r\n\r\n  // Get the dicom data as an Object\r\n  const dicomData = dcmjs.data.DicomMessage.readFile(part10SRArrayBuffer);\r\n  const dataset = dcmjs.data.DicomMetaDictionary.naturalizeDataset(\r\n    dicomData.dict\r\n  );\r\n\r\n  const { MeasurementReport } = dcmjs.adapters.Cornerstone;\r\n\r\n  let storedMeasurementByToolType;\r\n  try {\r\n    storedMeasurementByToolType = MeasurementReport.generateToolState(dataset);\r\n  } catch (error) {\r\n    const seriesDescription = dataset.SeriesDescription || '';\r\n    LogManager.publish(LogManager.EVENTS.OnLog, {\r\n      title: `Failed to parse ${seriesDescription} measurement report`,\r\n      type: 'warning',\r\n      message: error.message || '',\r\n      notify: true,\r\n    });\r\n    return;\r\n  }\r\n\r\n  const measurementData = {};\r\n  let measurementNumber = 0;\r\n\r\n  Object.keys(storedMeasurementByToolType).forEach(toolName => {\r\n    const measurements = storedMeasurementByToolType[toolName];\r\n    measurementData[toolName] = [];\r\n\r\n    measurements.forEach(measurement => {\r\n      const instanceMetadata = findInstanceMetadataBySopInstanceUID(\r\n        displaySets,\r\n        measurement.sopInstanceUid\r\n      );\r\n\r\n      const { _study: study, _series: series } = instanceMetadata;\r\n      const { StudyInstanceUID, PatientID } = study;\r\n      const { SeriesInstanceUID } = series;\r\n      const { sopInstanceUid, frameIndex } = measurement;\r\n      const imagePath = getImagePath(\r\n        StudyInstanceUID,\r\n        SeriesInstanceUID,\r\n        sopInstanceUid,\r\n        frameIndex\r\n      );\r\n\r\n      const imageId = instanceMetadata.getImageId();\r\n      if (!imageId) {\r\n        return;\r\n      }\r\n\r\n      // TODO: We need the currentTimepointID set into the viewer\r\n      const currentTimepointId = 'TimepointId';\r\n\r\n      const toolData = Object.assign({}, measurement, {\r\n        imageId,\r\n        imagePath,\r\n        SOPInstanceUID: sopInstanceUid,\r\n        SeriesInstanceUID,\r\n        StudyInstanceUID,\r\n        PatientID,\r\n        measurementNumber: ++measurementNumber,\r\n        timepointId: currentTimepointId,\r\n        toolType: toolName,\r\n        _id: imageId + measurementNumber,\r\n      });\r\n\r\n      measurementData[toolName].push(toolData);\r\n    });\r\n  });\r\n\r\n  return measurementData;\r\n};\r\n\r\n/**\r\n * Function to create imagePath with all imageData related\r\n * @param {string} StudyInstanceUID\r\n * @param {string} SeriesInstanceUID\r\n * @param {string} SOPInstanceUID\r\n * @param {string} frameIndex\r\n * @returns\r\n */\r\nconst getImagePath = (\r\n  StudyInstanceUID,\r\n  SeriesInstanceUID,\r\n  SOPInstanceUID,\r\n  frameIndex\r\n) => {\r\n  return [StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID, frameIndex].join(\r\n    '_'\r\n  );\r\n};\r\n\r\nexport default parseDicomStructuredReport;\r\n","import dcmjs from 'dcmjs';\r\n\r\n/**\r\n *  Checks if dcmjs has support to determined tool\r\n *\r\n * @param {string} toolName\r\n * @returns {boolean}\r\n */\r\nconst isToolSupported = toolName => {\r\n  const adapter = dcmjs.adapters.Cornerstone;\r\n  return !!adapter[toolName];\r\n};\r\n\r\nexport default isToolSupported;\r\n","import dcmjs from 'dcmjs';\r\nimport cornerstone from 'cornerstone-core';\r\n\r\nimport log from '../log';\r\nimport measurements from '../measurements';\r\nimport isToolSupported from './utils/isToolSupported';\r\n\r\n/**\r\n * Function to parse OHIF viewer measurementData into a dcmjs MeasurementReport\r\n *\r\n * @param {Object} measurementsData - OHIF measurementData object\r\n * @returns {Object} Dataset: measurement report from dcmjs\r\n */\r\nconst parseMeasurementsData = measurementsData => {\r\n  const { MeasurementReport } = dcmjs.adapters.Cornerstone;\r\n  const { getImageIdForImagePath } = measurements;\r\n\r\n  const toolState = {};\r\n  const unsupportedTools = [];\r\n\r\n  Object.keys(measurementsData).forEach(measurementType => {\r\n    const annotations = measurementsData[measurementType];\r\n\r\n    annotations.forEach(annotation => {\r\n      const { toolType, imagePath } = annotation;\r\n\r\n      if (isToolSupported(toolType)) {\r\n        const imageId = getImageIdForImagePath(imagePath);\r\n        toolState[imageId] = toolState[imageId] || {};\r\n        toolState[imageId][toolType] = toolState[imageId][toolType] || {\r\n          data: [],\r\n        };\r\n\r\n        toolState[imageId][toolType].data.push(annotation);\r\n      } else {\r\n        unsupportedTools.push(toolType);\r\n      }\r\n    });\r\n  });\r\n\r\n  if (unsupportedTools.length > 0) {\r\n    log.warn(\r\n      `[DICOMSR] Tooltypes not supported: ${unsupportedTools.join(', ')}`\r\n    );\r\n  }\r\n\r\n  const report = MeasurementReport.generateReport(\r\n    toolState,\r\n    cornerstone.metaData\r\n  );\r\n\r\n  return {\r\n    dataset: report.dataset,\r\n  };\r\n};\r\n\r\nexport default parseMeasurementsData;\r\n","/**\r\n * Retrieve a list of all displaySets of all studies\r\n *\r\n * @param {Object} studies - List of studies loaded into the viewer\r\n * @returns {Object} List of DisplaySets\r\n */\r\nconst getAllDisplaySets = studies => {\r\n  let allDisplaySets = [];\r\n\r\n  studies.forEach(study => {\r\n    if (study.getDisplaySets) {\r\n      allDisplaySets = allDisplaySets.concat(study.getDisplaySets());\r\n    }\r\n  });\r\n\r\n  return allDisplaySets;\r\n};\r\n\r\nexport default getAllDisplaySets;\r\n","import dcmjs from 'dcmjs';\r\nimport { api } from 'dicomweb-client';\r\n\r\nimport DICOMWeb from '../DICOMWeb';\r\nimport parseDicomStructuredReport from './parseDicomStructuredReport';\r\nimport parseMeasurementsData from './parseMeasurementsData';\r\nimport getAllDisplaySets from './utils/getAllDisplaySets';\r\nimport errorHandler from '../errorHandler';\r\nimport getXHRRetryRequestHook from '../utils/xhrRetryRequestHook';\r\n\r\nconst VERSION_NAME = 'dcmjs-0.0';\r\nconst TRANSFER_SYNTAX_UID = '1.2.840.10008.1.2.1';\r\n\r\n/**\r\n * Function to retrieve measurements from DICOM Structured Reports coming from determined server\r\n *\r\n * @param {Array} series - List of all series metaData loaded\r\n * @param {Array} studies - List of all studies metaData loaded\r\n * @param {string} serverUrl - Server URL to be used on request\r\n * @param {object} external\r\n * @returns {Object} MeasurementData\r\n */\r\nconst retrieveMeasurementFromSR = async (\r\n  series,\r\n  studies,\r\n  serverUrl,\r\n  external\r\n) => {\r\n  const config = {\r\n    url: serverUrl,\r\n    headers: DICOMWeb.getAuthorizationHeader(),\r\n    errorInterceptor: errorHandler.getHTTPErrorHandler(),\r\n    requestHooks: [getXHRRetryRequestHook()],\r\n  };\r\n\r\n  const dicomWeb = new api.DICOMwebClient(config);\r\n\r\n  const instance = series.getFirstInstance();\r\n  const options = {\r\n    studyInstanceUID: instance.getStudyInstanceUID(),\r\n    seriesInstanceUID: instance.getSeriesInstanceUID(),\r\n    sopInstanceUID: instance.getSOPInstanceUID(),\r\n  };\r\n\r\n  const part10SRArrayBuffer = await dicomWeb.retrieveInstance(options);\r\n  const displaySets = getAllDisplaySets(studies);\r\n  const measurementsData = parseDicomStructuredReport(\r\n    part10SRArrayBuffer,\r\n    displaySets,\r\n    external\r\n  );\r\n\r\n  return measurementsData;\r\n};\r\n\r\n/**\r\n * Function to store measurements to DICOM Structured Reports in determined server\r\n *\r\n * @param {Object} measurements - OHIF measurementData object\r\n * @param {string} serverUrl - Server URL to be used on request\r\n * @returns {Promise}\r\n */\r\nconst stowSRFromMeasurements = async (measurements, serverUrl) => {\r\n  const { dataset } = parseMeasurementsData(measurements);\r\n  const { DicomMetaDictionary, DicomDict } = dcmjs.data;\r\n  const meta = {\r\n    FileMetaInformationVersion: dataset._meta.FileMetaInformationVersion.Value,\r\n    MediaStorageSOPClassUID: dataset.SOPClassUID,\r\n    MediaStorageSOPInstanceUID: dataset.SOPInstanceUID,\r\n    TransferSyntaxUID: TRANSFER_SYNTAX_UID,\r\n    ImplementationClassUID: DicomMetaDictionary.uid(),\r\n    ImplementationVersionName: VERSION_NAME,\r\n  };\r\n\r\n  const denaturalized = DicomMetaDictionary.denaturalizeDataset(meta);\r\n  const dicomDict = new DicomDict(denaturalized);\r\n\r\n  dicomDict.dict = DicomMetaDictionary.denaturalizeDataset(dataset);\r\n\r\n  const part10Buffer = dicomDict.write();\r\n\r\n  const config = {\r\n    url: serverUrl,\r\n    headers: DICOMWeb.getAuthorizationHeader(),\r\n    errorInterceptor: errorHandler.getHTTPErrorHandler(),\r\n    requestHooks: [getXHRRetryRequestHook()],\r\n  };\r\n\r\n  const dicomWeb = new api.DICOMwebClient(config);\r\n  const options = {\r\n    datasets: [part10Buffer],\r\n  };\r\n\r\n  await dicomWeb.storeInstances(options);\r\n};\r\n\r\nexport { retrieveMeasurementFromSR, stowSRFromMeasurements };\r\n","/**\r\n * Should find the most recent Structured Report metadata\r\n *\r\n * @param {Array} studies\r\n * @returns {Object} Series\r\n */\r\nconst findMostRecentStructuredReport = studies => {\r\n  let mostRecentStructuredReport;\r\n\r\n  studies.forEach(study => {\r\n    const allSeries = study.getSeries ? study.getSeries() : [];\r\n    allSeries.forEach(series => {\r\n      // Skip series that may not have instances yet\r\n      // This can happen if we have retrieved just the initial\r\n      // details about the series via QIDO-RS, but not the full metadata\r\n      if (!series || series.getInstanceCount() === 0) {\r\n        return;\r\n      }\r\n\r\n      if (isStructuredReportSeries(series)) {\r\n        if (\r\n          !mostRecentStructuredReport ||\r\n          compareSeriesDate(series, mostRecentStructuredReport)\r\n        ) {\r\n          mostRecentStructuredReport = series;\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n  return mostRecentStructuredReport;\r\n};\r\n\r\n/**\r\n *  Checks if series sopClassUID matches with the supported Structured Reports sopClassUID\r\n *\r\n * @param {Object} series - Series metadata\r\n * @returns {boolean}\r\n */\r\nconst isStructuredReportSeries = series => {\r\n  const supportedSopClassUIDs = [\r\n    '1.2.840.10008.5.1.4.1.1.88.22',\r\n    '1.2.840.10008.5.1.4.1.1.11.1',\r\n    '1.2.840.10008.5.1.4.1.1.88.34', // COMPREHENSIVE_3D_SR\r\n  ];\r\n\r\n  const firstInstance = series.getFirstInstance();\r\n  const SOPClassUID = firstInstance.getData().metadata.SOPClassUID;\r\n\r\n  return supportedSopClassUIDs.includes(SOPClassUID);\r\n};\r\n\r\n/**\r\n *  Checkes if series1 is newer than series2\r\n *\r\n * @param {Object} series1 - Series Metadata 1\r\n * @param {Object} series2 - Series Metadata 2\r\n * @returns {boolean} true/false if series1 is newer than series2\r\n */\r\nconst compareSeriesDate = (series1, series2) => {\r\n  return (\r\n    series1._data.SeriesDate > series2._data.SeriesDate ||\r\n    (series1._data.SeriesDate === series2._data.SeriesDate &&\r\n      series1._data.SeriesTime > series2._data.SeriesTime)\r\n  );\r\n};\r\n\r\nexport default findMostRecentStructuredReport;\r\n","import log from '../log';\r\nimport studies from '../studies';\r\nimport utils from '../utils';\r\nimport {\r\n  retrieveMeasurementFromSR,\r\n  stowSRFromMeasurements,\r\n} from './handleStructuredReport';\r\nimport findMostRecentStructuredReport from './utils/findMostRecentStructuredReport';\r\n\r\n/**\r\n *\r\n * @typedef serverType\r\n * @property {string} type - type of the server\r\n * @property {string} wadoRoot - server wado root url\r\n *\r\n */\r\n\r\n/**\r\n * Function to be registered into MeasurementAPI to retrieve measurements from DICOM Structured Reports\r\n *\r\n * @param {serverType} server\r\n * @param {object} external\r\n * @returns {Promise} Should resolve with OHIF measurementData object\r\n */\r\nconst retrieveMeasurements = (server, external = {}) => {\r\n  log.info('[DICOMSR] retrieveMeasurements');\r\n\r\n  if (!server || server.type !== 'dicomWeb') {\r\n    log.error('[DICOMSR] DicomWeb server is required!');\r\n    return Promise.reject({});\r\n  }\r\n\r\n  const serverUrl = server.wadoRoot;\r\n  const studies = utils.studyMetadataManager.all();\r\n\r\n  const latestSeries = findMostRecentStructuredReport(studies);\r\n\r\n  if (!latestSeries) return Promise.resolve({});\r\n\r\n  return retrieveMeasurementFromSR(latestSeries, studies, serverUrl, external);\r\n};\r\n\r\n/**\r\n *  Function to be registered into MeasurementAPI to store measurements into DICOM Structured Reports\r\n *\r\n * @param {Object} measurementData - OHIF measurementData object\r\n * @param {Object} filter\r\n * @param {serverType} server\r\n * @returns {Object} With message to be displayed on success\r\n */\r\nconst storeMeasurements = async (measurementData, filter, server) => {\r\n  log.info('[DICOMSR] storeMeasurements');\r\n\r\n  if (!server || server.type !== 'dicomWeb') {\r\n    log.error('[DICOMSR] DicomWeb server is required!');\r\n    return Promise.reject({});\r\n  }\r\n\r\n  const serverUrl = server.wadoRoot;\r\n  const firstMeasurementKey = Object.keys(measurementData)[0];\r\n  const firstMeasurement = measurementData[firstMeasurementKey][0];\r\n  const StudyInstanceUID =\r\n    firstMeasurement && firstMeasurement.StudyInstanceUID;\r\n\r\n  try {\r\n    await stowSRFromMeasurements(measurementData, serverUrl);\r\n    if (StudyInstanceUID) {\r\n      studies.deleteStudyMetadataPromise(StudyInstanceUID);\r\n    }\r\n\r\n    return {\r\n      message: 'Measurements saved successfully',\r\n    };\r\n  } catch (error) {\r\n    log.error(\r\n      `[DICOMSR] Error while saving the measurements: ${error.message}`\r\n    );\r\n    throw new Error('Error while saving the measurements.');\r\n  }\r\n};\r\n\r\nexport { retrieveMeasurements, storeMeasurements };\r\n","import { retrieveMeasurements, storeMeasurements } from './dataExchange';\r\nimport isToolSupported from './utils/isToolSupported';\r\n\r\nconst DICOMSR = {\r\n  retrieveMeasurements,\r\n  storeMeasurements,\r\n  isToolSupported,\r\n};\r\n\r\nexport default DICOMSR;\r\n","/**\r\n * VIEWPORT\r\n */\r\nexport const SET_VIEWPORT = 'VIEWPORT::SET';\r\nexport const SET_VIEWPORT_ACTIVE = 'VIEWPORT::SET_ACTIVE';\r\nexport const SET_VIEWPORT_LAYOUT = 'VIEWPORT::SET_LAYOUT';\r\nexport const SET_VIEWPORT_LAYOUT_AND_DATA =\r\n  'VIEWPORT::SET_VIEWPORT_LAYOUT_AND_DATA';\r\nexport const CLEAR_VIEWPORT = 'VIEWPORT::CLEAR';\r\nexport const SET_SPECIFIC_DATA = 'VIEWPORT::SET_SPECIFIC_DATA';\r\nexport const SET_ACTIVE_SPECIFIC_DATA = 'VIEWPORT::SET_ACTIVE_SPECIFIC_DATA';\r\n\r\n/**\r\n * SERVERS\r\n */\r\nexport const ADD_SERVER = 'ADD_SERVER';\r\nexport const SET_SERVERS = 'SET_SERVERS';\r\n\r\n/**\r\n * EXTENSIONS\r\n */\r\nexport const SET_EXTENSION_DATA = 'SET_EXTENSION_DATA';\r\n\r\n/**\r\n * PREFERENCES\r\n * */\r\nexport const SET_USER_PREFERENCES = 'SET_USER_PREFERENCES';\r\n","/** Action Creators:\r\n *  https://redux.js.org/basics/actions#action-creators\r\n */\r\n\r\nimport {\r\n  CLEAR_VIEWPORT,\r\n  SET_ACTIVE_SPECIFIC_DATA,\r\n  SET_SERVERS,\r\n  SET_VIEWPORT,\r\n  SET_VIEWPORT_ACTIVE,\r\n  SET_VIEWPORT_LAYOUT,\r\n  SET_VIEWPORT_LAYOUT_AND_DATA,\r\n  SET_USER_PREFERENCES,\r\n} from './constants/ActionTypes.js';\r\n\r\n/**\r\n * The definition of a viewport layout.\r\n *\r\n * @typedef {Object} ViewportLayout\r\n * @property {number} numRows -\r\n * @property {number} numColumns -\r\n * @property {array} viewports -\r\n */\r\n\r\n/**\r\n * VIEWPORT\r\n */\r\nexport const setViewportSpecificData = (\r\n  viewportIndex,\r\n  viewportSpecificData\r\n) => ({\r\n  type: SET_VIEWPORT,\r\n  viewportIndex,\r\n  viewportSpecificData,\r\n});\r\n\r\nexport const setViewportActive = viewportIndex => ({\r\n  type: SET_VIEWPORT_ACTIVE,\r\n  viewportIndex,\r\n});\r\n\r\n/**\r\n * @param {ViewportLayout} layout\r\n */\r\nexport const setLayout = ({ numRows, numColumns, viewports }) => ({\r\n  type: SET_VIEWPORT_LAYOUT,\r\n  numRows,\r\n  numColumns,\r\n  viewports,\r\n});\r\n\r\n/**\r\n * @param {number} layout.numRows\r\n * @param {number} layout.numColumns\r\n * @param {array} viewports\r\n */\r\nexport const setViewportLayoutAndData = (\r\n  { numRows, numColumns, viewports },\r\n  viewportSpecificData\r\n) => ({\r\n  type: SET_VIEWPORT_LAYOUT_AND_DATA,\r\n  numRows,\r\n  numColumns,\r\n  viewports,\r\n  viewportSpecificData,\r\n});\r\n\r\nexport const clearViewportSpecificData = viewportIndex => ({\r\n  type: CLEAR_VIEWPORT,\r\n  viewportIndex,\r\n});\r\n\r\nexport const setActiveViewportSpecificData = viewportSpecificData => ({\r\n  type: SET_ACTIVE_SPECIFIC_DATA,\r\n  viewportSpecificData,\r\n});\r\n\r\n/**\r\n * NOT-VIEWPORT\r\n */\r\nexport const setUserPreferences = state => ({\r\n  type: SET_USER_PREFERENCES,\r\n  state,\r\n});\r\n\r\nexport const setExtensionData = (extension, data) => ({\r\n  type: 'SET_EXTENSION_DATA',\r\n  extension,\r\n  data,\r\n});\r\n\r\nexport const setTimepoints = state => ({\r\n  type: 'SET_TIMEPOINTS',\r\n  state,\r\n});\r\n\r\nexport const setMeasurements = state => ({\r\n  type: 'SET_MEASUREMENTS',\r\n  state,\r\n});\r\n\r\nexport const setStudyData = (StudyInstanceUID, data) => ({\r\n  type: 'SET_STUDY_DATA',\r\n  StudyInstanceUID,\r\n  data,\r\n});\r\n\r\nexport const setServers = servers => ({\r\n  type: SET_SERVERS,\r\n  servers,\r\n});\r\n\r\nconst actions = {\r\n  /**\r\n   * VIEWPORT\r\n   */\r\n  setViewportActive,\r\n  setViewportSpecificData,\r\n  setViewportLayoutAndData,\r\n  setLayout,\r\n  clearViewportSpecificData,\r\n  setActiveViewportSpecificData,\r\n  /**\r\n   * NOT-VIEWPORT\r\n   */\r\n  setUserPreferences,\r\n  setExtensionData,\r\n  setTimepoints,\r\n  setMeasurements,\r\n  setStudyData,\r\n  setServers,\r\n};\r\n\r\nexport default actions;\r\n","export const defaultState = {};\r\n\r\nconst extensions = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_EXTENSION_DATA':\r\n      const extensionName = action.extension;\r\n      const currentData = state[extensionName] || {};\r\n\r\n      const incomingData = action.data;\r\n\r\n      const extension = {\r\n        [extensionName]: {\r\n          ...currentData,\r\n          ...incomingData,\r\n        },\r\n      };\r\n\r\n      return { ...state, ...extension };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default extensions;\r\n","const defaultState = {\r\n  windowLevelData: {\r\n    1: { description: 'Soft tissue', window: '550', level: '40' },\r\n    2: { description: 'Lung', window: '150', level: '-600' },\r\n    3: { description: 'Liver', window: '150', level: '90' },\r\n    4: { description: 'Bone', window: '2500', level: '480' },\r\n    5: { description: 'Brain', window: '80', level: '40' },\r\n    6: { description: 'Trest', window: '1', level: '1' },\r\n    7: { description: '', window: '', level: '' },\r\n    8: { description: '', window: '', level: '' },\r\n    9: { description: '', window: '', level: '' },\r\n    10: { description: '', window: '', level: '' },\r\n  },\r\n  generalPreferences: {\r\n    // language: 'en-US'\r\n  },\r\n};\r\n\r\nconst preferences = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_USER_PREFERENCES': {\r\n      return Object.assign({}, state, action.state);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { defaultState };\r\nexport default preferences;\r\n","import uniqBy from 'lodash/uniqBy';\r\n\r\nexport const defaultState = {\r\n  servers: [],\r\n};\r\n\r\nconst servers = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_SERVER':\r\n      let servers = uniqBy([...state.servers, action.server], 'id');\r\n      servers.forEach(s => (s.active = true));\r\n      return { ...state, servers };\r\n\r\n    case 'ACTIVATE_SERVER': {\r\n      const newServer = { ...action.server, active: true };\r\n      const newServers = state.servers;\r\n      newServers.forEach(s => (s.active = false));\r\n      return {\r\n        ...state,\r\n        servers: uniqBy([...newServers, newServer], 'wadoRoot'),\r\n      };\r\n    }\r\n\r\n    case 'SET_SERVERS':\r\n      return { ...state, servers: action.servers };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default servers;\r\n","import cloneDeep from 'lodash.clonedeep';\r\n\r\nconst defaultState = {\r\n  studyData: {},\r\n};\r\n\r\nconst servers = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_STUDY_DATA': {\r\n      const updatedStudyData = cloneDeep(state.studyData);\r\n      updatedStudyData[action.StudyInstanceUID] = cloneDeep(action.data);\r\n\r\n      return Object.assign({}, state, { studyData: updatedStudyData });\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default servers;\r\n","const defaultState = {\r\n  timepoints: [],\r\n  measurements: [],\r\n};\r\n\r\nconst timepointManager = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_TIMEPOINTS':\r\n      return Object.assign({}, state, { timepoints: action.state });\r\n    case 'SET_MEASUREMENTS':\r\n      return Object.assign({}, state, { measurements: action.state });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default timepointManager;\r\n","import cloneDeep from 'lodash.clonedeep';\r\nimport produce, { setAutoFreeze } from 'immer';\r\n\r\nimport {\r\n  CLEAR_VIEWPORT,\r\n  SET_ACTIVE_SPECIFIC_DATA,\r\n  SET_SPECIFIC_DATA,\r\n  SET_VIEWPORT,\r\n  SET_VIEWPORT_ACTIVE,\r\n  SET_VIEWPORT_LAYOUT,\r\n  SET_VIEWPORT_LAYOUT_AND_DATA,\r\n} from './../constants/ActionTypes.js';\r\n\r\nsetAutoFreeze(false);\r\n\r\nexport const DEFAULT_STATE = {\r\n  numRows: 1,\r\n  numColumns: 1,\r\n  activeViewportIndex: 0,\r\n  layout: {\r\n    viewports: [{}],\r\n  },\r\n  viewportSpecificData: {},\r\n};\r\n\r\n/**\r\n *  Take the new number of Rows and Columns, delete all not used viewport data and also set\r\n *  active viewport as default in case current one is not available anymore.\r\n *\r\n * @param {Number} numRows\r\n * @param {Number} numColumns\r\n * @param {Object} currentViewportSpecificData\r\n * @returns\r\n */\r\nconst findActiveViewportSpecificData = (\r\n  numRows,\r\n  numColumns,\r\n  currentViewportSpecificData = {}\r\n) => {\r\n  const numberOfViewports = numRows * numColumns;\r\n  const viewportSpecificData = cloneDeep(currentViewportSpecificData);\r\n\r\n  if (numberOfViewports < Object.keys(viewportSpecificData).length) {\r\n    Object.keys(viewportSpecificData).forEach(key => {\r\n      if (key > numberOfViewports - 1) {\r\n        delete viewportSpecificData[key];\r\n      }\r\n    });\r\n  }\r\n\r\n  return viewportSpecificData;\r\n};\r\n/**\r\n *  Take new number of Rows and Columns and make sure the current active viewport index is still available, if not, return the default\r\n *\r\n * @param {Number} numRows\r\n * @param {Number} numColumns\r\n * @param {Number} currentActiveViewportIndex\r\n * @returns\r\n */\r\nconst getActiveViewportIndex = (\r\n  numRows,\r\n  numColumns,\r\n  currentActiveViewportIndex\r\n) => {\r\n  const numberOfViewports = numRows * numColumns;\r\n\r\n  return currentActiveViewportIndex > numberOfViewports - 1\r\n    ? DEFAULT_STATE.activeViewportIndex\r\n    : currentActiveViewportIndex;\r\n};\r\n\r\n/**\r\n * The definition of a viewport action.\r\n *\r\n * @typedef {Object} ViewportAction\r\n * @property {string} type -\r\n * @property {Object} data -\r\n * @property {Object} layout -\r\n * @property {number} viewportIndex -\r\n * @property {Object} viewportSpecificData -\r\n */\r\n\r\n/**\r\n * @param {Object} [state=DEFAULT_STATE] The current viewport state.\r\n * @param {ViewportAction} action A viewport action.\r\n */\r\nconst viewports = (state = DEFAULT_STATE, action) => {\r\n  let useActiveViewport = false;\r\n\r\n  switch (action.type) {\r\n    /**\r\n     * Sets the active viewport index.\r\n     *\r\n     * @return {Object} New state.\r\n     */\r\n    case SET_VIEWPORT_ACTIVE: {\r\n      return produce(state, draftState => {\r\n        draftState.activeViewportIndex = getActiveViewportIndex(\r\n          draftState.numRows,\r\n          draftState.numColumns,\r\n          action.viewportIndex\r\n        );\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Sets viewport layout.\r\n     *\r\n     * @return {Object} New state.\r\n     */\r\n    case SET_VIEWPORT_LAYOUT: {\r\n      const { numRows, numColumns } = action;\r\n      const viewportSpecificData = findActiveViewportSpecificData(\r\n        numRows,\r\n        numColumns,\r\n        state.viewportSpecificData\r\n      );\r\n      const activeViewportIndex = getActiveViewportIndex(\r\n        numRows,\r\n        numColumns,\r\n        state.activeViewportIndex\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        numRows: action.numRows,\r\n        numColumns: action.numColumns,\r\n        layout: { viewports: [...action.viewports] },\r\n        viewportSpecificData,\r\n        activeViewportIndex,\r\n      };\r\n    }\r\n\r\n    /**\r\n     * Sets viewport layout and data.\r\n     *\r\n     * @return {Object} New state.\r\n     */\r\n    case SET_VIEWPORT_LAYOUT_AND_DATA: {\r\n      const { numRows, numColumns } = action;\r\n      const viewportSpecificData = findActiveViewportSpecificData(\r\n        numRows,\r\n        numColumns,\r\n        action.viewportSpecificData\r\n      );\r\n      const activeViewportIndex = getActiveViewportIndex(\r\n        numRows,\r\n        numColumns,\r\n        state.activeViewportIndex\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        numRows: action.numRows,\r\n        numColumns: action.numColumns,\r\n        layout: { viewports: [...action.viewports] },\r\n        viewportSpecificData,\r\n        activeViewportIndex,\r\n      };\r\n    }\r\n\r\n    /**\r\n     * Sets viewport specific data of active viewport.\r\n     *\r\n     * @return {Object} New state.\r\n     */\r\n    case SET_VIEWPORT: {\r\n      return produce(state, draftState => {\r\n        draftState.viewportSpecificData[action.viewportIndex] =\r\n          draftState.viewportSpecificData[action.viewportIndex] || {};\r\n\r\n        Object.keys(action.viewportSpecificData).forEach(key => {\r\n          draftState.viewportSpecificData[action.viewportIndex][key] =\r\n            action.viewportSpecificData[key];\r\n        });\r\n\r\n        if (action.viewportSpecificData && action.viewportSpecificData.plugin) {\r\n          draftState.layout.viewports[action.viewportIndex].plugin =\r\n            action.viewportSpecificData.plugin;\r\n        }\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Sets viewport specific data of active/any viewport.\r\n     *\r\n     * @return {Object} New state.\r\n     */\r\n    case SET_ACTIVE_SPECIFIC_DATA:\r\n      useActiveViewport = true;\r\n    // Allow fall-through\r\n    // eslint-disable-next-line\r\n    case SET_SPECIFIC_DATA: {\r\n      const layout = cloneDeep(state.layout);\r\n      const viewportIndex = useActiveViewport\r\n        ? state.activeViewportIndex\r\n        : action.viewportIndex;\r\n\r\n      let viewportSpecificData = cloneDeep(state.viewportSpecificData);\r\n      viewportSpecificData[viewportIndex] = {\r\n        ...action.viewportSpecificData,\r\n      };\r\n\r\n      if (action.viewportSpecificData && action.viewportSpecificData.plugin) {\r\n        layout.viewports[viewportIndex].plugin =\r\n          action.viewportSpecificData.plugin;\r\n      }\r\n\r\n      return { ...state, layout, viewportSpecificData };\r\n    }\r\n\r\n    /**\r\n     * Clears viewport specific data of any viewport.\r\n     *\r\n     * @return {Object} New state.\r\n     */\r\n    case CLEAR_VIEWPORT: {\r\n      let viewportSpecificData = cloneDeep(state.viewportSpecificData);\r\n\r\n      if (action.viewportIndex) {\r\n        viewportSpecificData[action.viewportIndex] = {};\r\n        return { ...state, viewportSpecificData };\r\n      } else {\r\n        return DEFAULT_STATE;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Returns the current application state.\r\n     *\r\n     * @return {Object} The current state.\r\n     */\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default viewports;\r\n","import extensions from './extensions';\r\nimport preferences from './preferences';\r\nimport servers from './servers';\r\nimport studies from './studies';\r\nimport timepointManager from './timepointManager';\r\nimport viewports from './viewports';\r\n\r\nconst reducers = {\r\n  extensions,\r\n  preferences,\r\n  servers,\r\n  studies,\r\n  timepointManager,\r\n  viewports,\r\n};\r\n\r\nexport default reducers;\r\n","const LocalStorageApi = window.localStorage;\r\nconst localStorageKey = 'state';\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = LocalStorageApi.getItem(localStorageKey);\r\n    if (!serializedState) {\r\n      return undefined;\r\n    }\r\n\r\n    return JSON.parse(serializedState);\r\n  } catch (e) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = state => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    LocalStorageApi.setItem(localStorageKey, serializedState);\r\n  } catch (e) {}\r\n};\r\n\r\nconst localStorage = {\r\n  saveState,\r\n  loadState,\r\n};\r\n\r\nexport default localStorage;\r\n","const SessionStorageApi = window.sessionStorage;\r\nconst sessionStorageKey = 'state';\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = SessionStorageApi.getItem(sessionStorageKey);\r\n    if (!serializedState) {\r\n      return undefined;\r\n    }\r\n\r\n    return JSON.parse(serializedState);\r\n  } catch (e) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = state => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    SessionStorageApi.setItem(sessionStorageKey, serializedState);\r\n  } catch (e) {}\r\n};\r\n\r\nconst sessionStorage = {\r\n  saveState,\r\n  loadState,\r\n};\r\n\r\nexport default sessionStorage;\r\n","import actions from './actions.js';\r\nimport reducers from './reducers';\r\nimport localStorage from './localStorage.js';\r\nimport sessionStorage from './sessionStorage.js';\r\n\r\nconst redux = {\r\n  reducers,\r\n  actions,\r\n  localStorage,\r\n  sessionStorage,\r\n};\r\n\r\nexport default redux;\r\n","import Hammer from 'hammerjs';\r\nimport cornerstone from 'cornerstone-core';\r\nimport cornerstoneMath from 'cornerstone-math';\r\nimport cornerstoneTools from 'cornerstone-tools';\r\nimport OHIF from '@ohif/core';\r\n\r\nconst { log } = OHIF;\r\n\r\nexport default function(configuration = {}) {\r\n  // For debugging\r\n  window.cornerstoneTools = cornerstoneTools;\r\n\r\n  cornerstoneTools.external.cornerstone = cornerstone;\r\n  cornerstoneTools.external.Hammer = Hammer;\r\n  cornerstoneTools.external.cornerstoneMath = cornerstoneMath;\r\n  cornerstoneTools.init(configuration);\r\n\r\n  cornerstoneTools.loadHandlerManager.setErrorLoadingHandler(\r\n    (element, imageId, error) => {\r\n      log.error(imageId);\r\n      throw error;\r\n    }\r\n  );\r\n\r\n  // Set the tool font and font size\r\n  // context.font = \"[style] [variant] [weight] [size]/[line height] [font family]\";\r\n  const fontFamily =\r\n    'Roboto, OpenSans, HelveticaNeue-Light, Helvetica Neue Light, Helvetica Neue, Helvetica, Arial, Lucida Grande, sans-serif';\r\n  cornerstoneTools.textStyle.setFont(`16px ${fontFamily}`);\r\n\r\n  // Tool styles/colors\r\n  cornerstoneTools.toolStyle.setToolWidth(2);\r\n  cornerstoneTools.toolColors.setToolColor('rgb(255, 255, 0)');\r\n  cornerstoneTools.toolColors.setActiveColor('rgb(0, 255, 0)');\r\n\r\n  cornerstoneTools.store.state.touchProximity = 40;\r\n\r\n  // Configure stack prefetch\r\n  cornerstoneTools.stackPrefetch.setConfiguration({\r\n    maxImagesToPrefetch: configuration.maxImagesToPrefetch,\r\n    preserveExistingPool: configuration.preserveExistingPool,\r\n    maxSimultaneousRequests: configuration.maxSimultaneousRequests,\r\n  });\r\n}\r\n","import cornerstone from 'cornerstone-core';\r\n\r\nconst SUPPORTED_TOOLS = [\r\n  'Length',\r\n  'EllipticalRoi',\r\n  'RectangleRoi',\r\n  'ArrowAnnotate',\r\n];\r\n\r\nconst measurementServiceMappingsFactory = measurementService => {\r\n  /**\r\n   * Maps measurement service format object to cornerstone annotation object.\r\n   *\r\n   * @param {Measurement} measurement The measurement instance\r\n   * @param {string} definition The source definition\r\n   * @return {Object} Cornerstone annotation data\r\n   */\r\n  const toAnnotation = (measurement, definition) => {\r\n    const {\r\n      id,\r\n      label,\r\n      description,\r\n      points,\r\n      unit,\r\n      SOPInstanceUID,\r\n      FrameOfReferenceUID,\r\n      referenceSeriesUID,\r\n    } = measurement;\r\n\r\n    return {\r\n      toolName: definition,\r\n      measurementData: {\r\n        sopInstanceUid: SOPInstanceUID,\r\n        frameOfReferenceUID: FrameOfReferenceUID,\r\n        SeriesInstanceUID: referenceSeriesUID,\r\n        unit,\r\n        text: label,\r\n        description,\r\n        handles: _getHandlesFromPoints(points),\r\n        _measurementServiceId: id,\r\n      },\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Maps cornerstone annotation event data to measurement service format.\r\n   *\r\n   * @param {Object} cornerstone Cornerstone event data\r\n   * @return {Measurement} Measurement instance\r\n   */\r\n  const toMeasurement = csToolsAnnotation => {\r\n    const { element, measurementData } = csToolsAnnotation;\r\n    const tool =\r\n      csToolsAnnotation.toolType ||\r\n      csToolsAnnotation.toolName ||\r\n      measurementData.toolType;\r\n\r\n    const validToolType = toolName => SUPPORTED_TOOLS.includes(toolName);\r\n\r\n    if (!validToolType(tool)) {\r\n      throw new Error('Tool not supported');\r\n    }\r\n\r\n    const {\r\n      SOPInstanceUID,\r\n      FrameOfReferenceUID,\r\n      SeriesInstanceUID,\r\n    } = _getAttributes(element);\r\n\r\n    const points = [];\r\n    points.push(measurementData.handles);\r\n\r\n    return {\r\n      id: measurementData._measurementServiceId,\r\n      SOPInstanceUID: SOPInstanceUID,\r\n      FrameOfReferenceUID,\r\n      referenceSeriesUID: SeriesInstanceUID,\r\n      label: measurementData.text,\r\n      description: measurementData.description,\r\n      unit: measurementData.unit,\r\n      area:\r\n        measurementData.cachedStats &&\r\n        measurementData.cachedStats\r\n          .area /* TODO: Add concept names instead (descriptor) */,\r\n      type: _getValueTypeFromToolType(tool),\r\n      points: _getPointsFromHandles(measurementData.handles),\r\n    };\r\n  };\r\n\r\n  const _getAttributes = element => {\r\n    const enabledElement = cornerstone.getEnabledElement(element);\r\n    const imageId = enabledElement.image.imageId;\r\n    const instance = cornerstone.metaData.get('instance', imageId);\r\n\r\n    return {\r\n      SOPInstanceUID: instance.SOPInstanceUID,\r\n      FrameOfReferenceUID: instance.FrameOfReferenceUID,\r\n      SeriesInstanceUID: instance.SeriesInstanceUID,\r\n    };\r\n  };\r\n\r\n  const _getValueTypeFromToolType = toolType => {\r\n    const { POLYLINE, ELLIPSE, POINT } = measurementService.VALUE_TYPES;\r\n\r\n    /* TODO: Relocate static value types */\r\n    const TOOL_TYPE_TO_VALUE_TYPE = {\r\n      Length: POLYLINE,\r\n      EllipticalRoi: ELLIPSE,\r\n      RectangleRoi: POLYLINE,\r\n      ArrowAnnotate: POINT,\r\n    };\r\n\r\n    return TOOL_TYPE_TO_VALUE_TYPE[toolType];\r\n  };\r\n\r\n  const _getPointsFromHandles = handles => {\r\n    let points = [];\r\n    Object.keys(handles).map(handle => {\r\n      if (['start', 'end'].includes(handle)) {\r\n        let point = {};\r\n        if (handles[handle].x) point.x = handles[handle].x;\r\n        if (handles[handle].y) point.y = handles[handle].y;\r\n        points.push(point);\r\n      }\r\n    });\r\n    return points;\r\n  };\r\n\r\n  const _getHandlesFromPoints = points => {\r\n    return points\r\n      .map((p, i) => (i % 10 === 0 ? { start: p } : { end: p }))\r\n      .reduce((obj, item) => Object.assign(obj, { ...item }), {});\r\n  };\r\n\r\n  return {\r\n    toAnnotation,\r\n    toMeasurement,\r\n  };\r\n};\r\n\r\nexport default measurementServiceMappingsFactory;\r\n","import cornerstone from 'cornerstone-core';\r\n\r\nconst state = {\r\n  TrackingUniqueIdentifier: null,\r\n  trackingIdentifiersByEnabledElementUUID: {},\r\n};\r\n\r\nfunction setTrackingUniqueIdentifiersForElement(\r\n  element,\r\n  trackingUniqueIdentifiers,\r\n  activeIndex = 0\r\n) {\r\n  const enabledElement = cornerstone.getEnabledElement(element);\r\n  const { uuid } = enabledElement;\r\n\r\n  state.trackingIdentifiersByEnabledElementUUID[uuid] = {\r\n    trackingUniqueIdentifiers,\r\n    activeIndex,\r\n  };\r\n}\r\n\r\nfunction setActiveTrackingUniqueIdentifierForElement(\r\n  element,\r\n  TrackingUniqueIdentifier\r\n) {\r\n  const enabledElement = cornerstone.getEnabledElement(element);\r\n  const { uuid } = enabledElement;\r\n\r\n  const trackingIdentifiersForElement =\r\n    state.trackingIdentifiersByEnabledElementUUID[uuid];\r\n\r\n  if (trackingIdentifiersForElement) {\r\n    const activeIndex = trackingIdentifiersForElement.trackingUniqueIdentifiers.findIndex(\r\n      tuid => tuid === TrackingUniqueIdentifier\r\n    );\r\n\r\n    trackingIdentifiersForElement.activeIndex = activeIndex;\r\n  }\r\n}\r\n\r\nfunction getTrackingUniqueIdentifiersForElement(element) {\r\n  const enabledElement = cornerstone.getEnabledElement(element);\r\n  const { uuid } = enabledElement;\r\n\r\n  if (state.trackingIdentifiersByEnabledElementUUID[uuid]) {\r\n    return state.trackingIdentifiersByEnabledElementUUID[uuid];\r\n  }\r\n\r\n  return { trackingUniqueIdentifiers: [] };\r\n}\r\n\r\nexport default {\r\n  state,\r\n  getters: {\r\n    trackingUniqueIdentifiersForElement: getTrackingUniqueIdentifiersForElement,\r\n  },\r\n  setters: {\r\n    trackingUniqueIdentifiersForElement: setTrackingUniqueIdentifiersForElement,\r\n    activeTrackingUniqueIdentifierForElement: setActiveTrackingUniqueIdentifierForElement,\r\n  },\r\n};\r\n","import OHIF from '@ohif/core';\r\nimport { SimpleDialog } from '@ohif/ui';\r\nimport cornerstone from 'cornerstone-core';\r\nimport csTools from 'cornerstone-tools';\r\nimport merge from 'lodash.merge';\r\nimport initCornerstoneTools from './initCornerstoneTools.js';\r\nimport measurementServiceMappingsFactory from './utils/measurementServiceMappings/measurementServiceMappingsFactory';\r\nimport dicomSRModule from './tools/modules/dicomSRModule';\r\nimport srModuleId from './tools/id';\r\n\r\n/**\r\n *\r\n * @param {Object} servicesManager\r\n * @param {Object} configuration\r\n * @param {Object|Array} configuration.csToolsConfig\r\n */\r\nexport default function init({ servicesManager, configuration }) {\r\n  const { UIDialogService, MeasurementService } = servicesManager.services;\r\n\r\n  csTools.register('module', srModuleId, dicomSRModule);\r\n\r\n  const callInputDialog = (data, event, callback) => {\r\n    if (UIDialogService) {\r\n      let dialogId = UIDialogService.create({\r\n        centralize: true,\r\n        isDraggable: false,\r\n        content: SimpleDialog.InputDialog,\r\n        useLastPosition: false,\r\n        showOverlay: true,\r\n        contentProps: {\r\n          title: 'Enter your annotation',\r\n          label: 'New label',\r\n          measurementData: data ? { description: data.text } : {},\r\n          onClose: () => UIDialogService.dismiss({ id: dialogId }),\r\n          onSubmit: value => {\r\n            callback(value);\r\n            UIDialogService.dismiss({ id: dialogId });\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const {\r\n    csToolsConfig,\r\n    stackPrefetch = {\r\n      maxImagesToPrefetch: Infinity,\r\n      preserveExistingPool: false,\r\n      maxSimultaneousRequests: 20,\r\n    },\r\n  } = configuration;\r\n  const metadataProvider = OHIF.cornerstone.metadataProvider;\r\n\r\n  cornerstone.metaData.addProvider(\r\n    metadataProvider.get.bind(metadataProvider),\r\n    9999\r\n  );\r\n\r\n  // ~~\r\n  const defaultCsToolsConfig = csToolsConfig || {\r\n    globalToolSyncEnabled: true,\r\n    showSVGCursors: true,\r\n    autoResizeViewports: false,\r\n  };\r\n\r\n  initCornerstoneTools({ ...defaultCsToolsConfig, ...stackPrefetch });\r\n\r\n  const toolsGroupedByType = {\r\n    touch: [csTools.PanMultiTouchTool, csTools.ZoomTouchPinchTool],\r\n    annotations: [\r\n      csTools.ArrowAnnotateTool,\r\n      csTools.BidirectionalTool,\r\n      csTools.LengthTool,\r\n      csTools.AngleTool,\r\n      csTools.FreehandRoiTool,\r\n      csTools.EllipticalRoiTool,\r\n      csTools.DragProbeTool,\r\n      csTools.RectangleRoiTool,\r\n    ],\r\n    other: [\r\n      csTools.PanTool,\r\n      csTools.ZoomTool,\r\n      csTools.WwwcTool,\r\n      csTools.WwwcRegionTool,\r\n      csTools.MagnifyTool,\r\n      csTools.StackScrollTool,\r\n      csTools.StackScrollMouseWheelTool,\r\n      csTools.OverlayTool,\r\n    ],\r\n  };\r\n\r\n  let tools = [];\r\n  Object.keys(toolsGroupedByType).forEach(toolsGroup =>\r\n    tools.push(...toolsGroupedByType[toolsGroup])\r\n  );\r\n\r\n  /* Measurement Service */\r\n  _connectToolsToMeasurementService(MeasurementService);\r\n\r\n  /* Add extension tools configuration here. */\r\n  const internalToolsConfig = {\r\n    ArrowAnnotate: {\r\n      configuration: {\r\n        getTextCallback: (callback, eventDetails) =>\r\n          callInputDialog(null, eventDetails, callback),\r\n        changeTextCallback: (data, eventDetails, callback) =>\r\n          callInputDialog(data, eventDetails, callback),\r\n      },\r\n    },\r\n  };\r\n\r\n  /* Abstract tools configuration using extension configuration. */\r\n  const parseToolProps = (props, tool) => {\r\n    const { annotations } = toolsGroupedByType;\r\n    // An alternative approach would be to remove the `drawHandlesOnHover` config\r\n    // from the supported configuration properties in `cornerstone-tools`\r\n    const toolsWithHideableHandles = annotations.filter(\r\n      tool => !['RectangleRoiTool', 'EllipticalRoiTool'].includes(tool.name)\r\n    );\r\n\r\n    let parsedProps = { ...props };\r\n\r\n    /**\r\n     * drawHandles - Never/Always show handles\r\n     * drawHandlesOnHover - Only show handles on handle hover (pointNearHandle)\r\n     *\r\n     * Does not apply to tools where handles aren't placed in predictable\r\n     * locations.\r\n     */\r\n    if (\r\n      configuration.hideHandles !== false &&\r\n      toolsWithHideableHandles.includes(tool)\r\n    ) {\r\n      if (props.configuration) {\r\n        parsedProps.configuration.drawHandlesOnHover = true;\r\n      } else {\r\n        parsedProps.configuration = { drawHandlesOnHover: true };\r\n      }\r\n    }\r\n\r\n    return parsedProps;\r\n  };\r\n\r\n  /* Add tools with its custom props through extension configuration. */\r\n  tools.forEach(tool => {\r\n    const toolName = tool.name.replace('Tool', '');\r\n    const externalToolsConfig = configuration.tools || {};\r\n    const externalToolProps = externalToolsConfig[toolName] || {};\r\n    const internalToolProps = internalToolsConfig[toolName] || {};\r\n    const props = merge(\r\n      internalToolProps,\r\n      parseToolProps(externalToolProps, tool)\r\n    );\r\n    csTools.addTool(tool, props);\r\n  });\r\n\r\n  // TODO -> We need a better way to do this with maybe global tool state setting all tools passive.\r\n  const BaseAnnotationTool = csTools.importInternal('base/BaseAnnotationTool');\r\n  tools.forEach(tool => {\r\n    if (tool.prototype instanceof BaseAnnotationTool) {\r\n      // BaseAnnotationTool would likely come from csTools lib exports\r\n      const toolName = new tool().name;\r\n      csTools.setToolPassive(toolName); // there may be a better place to determine name; may not be on uninstantiated class\r\n    }\r\n  });\r\n\r\n  csTools.setToolActive('Pan', { mouseButtonMask: 4 });\r\n  csTools.setToolActive('Zoom', { mouseButtonMask: 2 });\r\n  csTools.setToolActive('Wwwc', { mouseButtonMask: 1 });\r\n  csTools.setToolActive('StackScrollMouseWheel', {}); // TODO: Empty options should not be required\r\n  csTools.setToolActive('PanMultiTouch', { pointers: 2 }); // TODO: Better error if no options\r\n  csTools.setToolActive('ZoomTouchPinch', {});\r\n  csTools.setToolEnabled('Overlay', {});\r\n}\r\n\r\nconst _initMeasurementService = measurementService => {\r\n  /* Initialization */\r\n  const { toAnnotation, toMeasurement } = measurementServiceMappingsFactory(\r\n    measurementService\r\n  );\r\n  const csToolsVer4MeasurementSource = measurementService.createSource(\r\n    'CornerstoneTools',\r\n    '4'\r\n  );\r\n\r\n  /* Matching Criterias */\r\n  const matchingCriteria = {\r\n    valueType: measurementService.VALUE_TYPES.POLYLINE,\r\n    points: 2,\r\n  };\r\n\r\n  /* Mappings */\r\n  measurementService.addMapping(\r\n    csToolsVer4MeasurementSource,\r\n    'Length',\r\n    matchingCriteria,\r\n    toAnnotation,\r\n    toMeasurement\r\n  );\r\n\r\n  return csToolsVer4MeasurementSource;\r\n};\r\n\r\nconst _connectToolsToMeasurementService = measurementService => {\r\n  const csToolsVer4MeasurementSource = _initMeasurementService(\r\n    measurementService\r\n  );\r\n  const {\r\n    id: sourceId,\r\n    addOrUpdate,\r\n    getAnnotation,\r\n  } = csToolsVer4MeasurementSource;\r\n\r\n  /* Measurement Service Events */\r\n  cornerstone.events.addEventListener(\r\n    cornerstone.EVENTS.ELEMENT_ENABLED,\r\n    event => {\r\n      const {\r\n        MEASUREMENT_ADDED,\r\n        MEASUREMENT_UPDATED,\r\n      } = measurementService.EVENTS;\r\n\r\n      measurementService.subscribe(\r\n        MEASUREMENT_ADDED,\r\n        ({ source, measurement }) => {\r\n          if (![sourceId].includes(source.id)) {\r\n            const annotation = getAnnotation('Length', measurement.id);\r\n\r\n            console.log(\r\n              'Measurement Service [Cornerstone]: Measurement added',\r\n              measurement\r\n            );\r\n            console.log('Mapped annotation:', annotation);\r\n          }\r\n        }\r\n      );\r\n\r\n      measurementService.subscribe(\r\n        MEASUREMENT_UPDATED,\r\n        ({ source, measurement }) => {\r\n          if (![sourceId].includes(source.id)) {\r\n            const annotation = getAnnotation('Length', measurement.id);\r\n\r\n            console.log(\r\n              'Measurement Service [Cornerstone]: Measurement updated',\r\n              measurement\r\n            );\r\n            console.log('Mapped annotation:', annotation);\r\n          }\r\n        }\r\n      );\r\n\r\n      const addOrUpdateMeasurement = csToolsAnnotation => {\r\n        try {\r\n          const { toolName, toolType, measurementData } = csToolsAnnotation;\r\n          const csTool = toolName || measurementData.toolType || toolType;\r\n          csToolsAnnotation.id = measurementData._measurementServiceId;\r\n          const measurementServiceId = addOrUpdate(csTool, csToolsAnnotation);\r\n\r\n          if (!measurementData._measurementServiceId) {\r\n            addMeasurementServiceId(measurementServiceId, csToolsAnnotation);\r\n          }\r\n        } catch (error) {\r\n          console.warn('Failed to add or update measurement:', error);\r\n        }\r\n      };\r\n\r\n      const addMeasurementServiceId = (id, csToolsAnnotation) => {\r\n        const { measurementData } = csToolsAnnotation;\r\n        Object.assign(measurementData, { _measurementServiceId: id });\r\n      };\r\n\r\n      [\r\n        csTools.EVENTS.MEASUREMENT_ADDED,\r\n        csTools.EVENTS.MEASUREMENT_MODIFIED,\r\n      ].forEach(csToolsEvtName => {\r\n        event.detail.element.addEventListener(\r\n          csToolsEvtName,\r\n          ({ detail: csToolsAnnotation }) => {\r\n            console.log(`Cornerstone Element Event: ${csToolsEvtName}`);\r\n            addOrUpdateMeasurement(csToolsAnnotation);\r\n          }\r\n        );\r\n      });\r\n    }\r\n  );\r\n};\r\n","import { redux } from '@ohif/core';\r\n\r\nconst { setLayout } = redux.actions;\r\n\r\n/**\r\n * Update the current layout with a simple Cornerstone one\r\n *\r\n * @return void\r\n */\r\nconst setCornerstoneLayout = () => {\r\n  const layout = {\r\n    numRows: 1,\r\n    numColumns: 1,\r\n    viewports: [{ plugin: 'cornerstone' }],\r\n  };\r\n\r\n  const action = setLayout(layout);\r\n\r\n  window.store.dispatch(action);\r\n}\r\n\r\nexport default setCornerstoneLayout;\r\n","import React from 'react';\r\nimport cornerstone from 'cornerstone-core';\r\nimport cornerstoneTools from 'cornerstone-tools';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { ViewportDownloadForm } from '@ohif/ui';\r\nimport { utils } from '@ohif/core';\r\n\r\nimport { getEnabledElement } from './state';\r\n\r\nconst MINIMUM_SIZE = 100;\r\nconst DEFAULT_SIZE = 512;\r\nconst MAX_TEXTURE_SIZE = 10000;\r\n\r\nconst CornerstoneViewportDownloadForm = ({ onClose, activeViewportIndex }) => {\r\n  const activeEnabledElement = getEnabledElement(activeViewportIndex);\r\n\r\n  const enableViewport = viewportElement => {\r\n    if (viewportElement) {\r\n      cornerstone.enable(viewportElement);\r\n    }\r\n  };\r\n\r\n  const disableViewport = viewportElement => {\r\n    if (viewportElement) {\r\n      cornerstone.disable(viewportElement);\r\n    }\r\n  };\r\n\r\n  const updateViewportPreview = (viewportElement, downloadCanvas, fileType) =>\r\n    new Promise(resolve => {\r\n      cornerstone.fitToWindow(viewportElement);\r\n\r\n      viewportElement.addEventListener(\r\n        'cornerstoneimagerendered',\r\n        function updateViewport(event) {\r\n          const enabledElement = cornerstone.getEnabledElement(event.target)\r\n            .element;\r\n          const type = 'image/' + fileType;\r\n          const dataUrl = downloadCanvas.toDataURL(type, 1);\r\n\r\n          let newWidth = enabledElement.offsetHeight;\r\n          let newHeight = enabledElement.offsetWidth;\r\n\r\n          if (newWidth > DEFAULT_SIZE || newHeight > DEFAULT_SIZE) {\r\n            const multiplier = DEFAULT_SIZE / Math.max(newWidth, newHeight);\r\n            newHeight *= multiplier;\r\n            newWidth *= multiplier;\r\n          }\r\n\r\n          resolve({ dataUrl, width: newWidth, height: newHeight });\r\n\r\n          viewportElement.removeEventListener(\r\n            'cornerstoneimagerendered',\r\n            updateViewport\r\n          );\r\n        }\r\n      );\r\n    });\r\n\r\n  const loadImage = (activeViewport, viewportElement, width, height) =>\r\n    new Promise(resolve => {\r\n      if (activeViewport && viewportElement) {\r\n        const enabledElement = cornerstone.getEnabledElement(activeViewport);\r\n        const viewport = Object.assign({}, enabledElement.viewport);\r\n        delete viewport.scale;\r\n        viewport.translation = {\r\n          x: 0,\r\n          y: 0,\r\n        };\r\n\r\n        cornerstone.loadImage(enabledElement.image.imageId).then(image => {\r\n          cornerstone.displayImage(viewportElement, image);\r\n          cornerstone.setViewport(viewportElement, viewport);\r\n          cornerstone.resize(viewportElement, true);\r\n\r\n          const newWidth = Math.min(width || image.width, MAX_TEXTURE_SIZE);\r\n          const newHeight = Math.min(height || image.height, MAX_TEXTURE_SIZE);\r\n\r\n          resolve({ image, width: newWidth, height: newHeight });\r\n        });\r\n      }\r\n    });\r\n\r\n  const toggleAnnotations = (toggle, viewportElement) => {\r\n    cornerstoneTools.store.state.tools.forEach(({ name }) => {\r\n      if (toggle) {\r\n        cornerstoneTools.setToolEnabledForElement(viewportElement, name);\r\n      } else {\r\n        cornerstoneTools.setToolDisabledForElement(viewportElement, name);\r\n      }\r\n    });\r\n  };\r\n\r\n  const downloadBlob = (\r\n    filename,\r\n    fileType,\r\n    viewportElement,\r\n    downloadCanvas\r\n  ) => {\r\n    const file = `${filename}.${fileType}`;\r\n    const mimetype = `image/${fileType}`;\r\n\r\n    /* Handles JPEG images for IE11 */\r\n    if (downloadCanvas.msToBlob && fileType === 'jpeg') {\r\n      const image = downloadCanvas.toDataURL(mimetype, 1);\r\n      const blob = utils.b64toBlob(\r\n        image.replace('data:image/jpeg;base64,', ''),\r\n        mimetype\r\n      );\r\n      return window.navigator.msSaveBlob(blob, file);\r\n    }\r\n\r\n    viewportElement.querySelector('canvas').toBlob(blob => {\r\n      const URLObj = window.URL || window.webkitURL;\r\n      const a = document.createElement('a');\r\n      a.href = URLObj.createObjectURL(blob);\r\n      a.download = file;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ViewportDownloadForm\r\n      onClose={onClose}\r\n      minimumSize={MINIMUM_SIZE}\r\n      maximumSize={MAX_TEXTURE_SIZE}\r\n      defaultSize={DEFAULT_SIZE}\r\n      canvasClass={'cornerstone-canvas'}\r\n      activeViewport={activeEnabledElement}\r\n      enableViewport={enableViewport}\r\n      disableViewport={disableViewport}\r\n      updateViewportPreview={updateViewportPreview}\r\n      loadImage={loadImage}\r\n      toggleAnnotations={toggleAnnotations}\r\n      downloadBlob={downloadBlob}\r\n    />\r\n  );\r\n};\r\n\r\nCornerstoneViewportDownloadForm.propTypes = {\r\n  onClose: PropTypes.func,\r\n  activeViewportIndex: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default CornerstoneViewportDownloadForm;\r\n","import cornerstone from 'cornerstone-core';\r\nimport cornerstoneTools from 'cornerstone-tools';\r\nimport OHIF from '@ohif/core';\r\n\r\nimport setCornerstoneLayout from './utils/setCornerstoneLayout.js';\r\nimport { getEnabledElement } from './state';\r\nimport CornerstoneViewportDownloadForm from './CornerstoneViewportDownloadForm';\r\nconst scroll = cornerstoneTools.import('util/scroll');\r\n\r\nconst { studyMetadataManager } = OHIF.utils;\r\nconst { setViewportSpecificData } = OHIF.redux.actions;\r\n\r\nconst refreshCornerstoneViewports = () => {\r\n  cornerstone.getEnabledElements().forEach(enabledElement => {\r\n    if (enabledElement.image) {\r\n      cornerstone.updateImage(enabledElement.element);\r\n    }\r\n  });\r\n};\r\n\r\nconst commandsModule = ({ servicesManager }) => {\r\n  const actions = {\r\n    rotateViewport: ({ viewports, rotation }) => {\r\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\r\n\r\n      if (enabledElement) {\r\n        let viewport = cornerstone.getViewport(enabledElement);\r\n        viewport.rotation += rotation;\r\n        cornerstone.setViewport(enabledElement, viewport);\r\n      }\r\n    },\r\n    flipViewportHorizontal: ({ viewports }) => {\r\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\r\n\r\n      if (enabledElement) {\r\n        let viewport = cornerstone.getViewport(enabledElement);\r\n        viewport.hflip = !viewport.hflip;\r\n        cornerstone.setViewport(enabledElement, viewport);\r\n      }\r\n    },\r\n    flipViewportVertical: ({ viewports }) => {\r\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\r\n\r\n      if (enabledElement) {\r\n        let viewport = cornerstone.getViewport(enabledElement);\r\n        viewport.vflip = !viewport.vflip;\r\n        cornerstone.setViewport(enabledElement, viewport);\r\n      }\r\n    },\r\n    scaleViewport: ({ direction, viewports }) => {\r\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\r\n      const step = direction * 0.15;\r\n\r\n      if (enabledElement) {\r\n        if (step) {\r\n          let viewport = cornerstone.getViewport(enabledElement);\r\n          viewport.scale += step;\r\n          cornerstone.setViewport(enabledElement, viewport);\r\n        } else {\r\n          cornerstone.fitToWindow(enabledElement);\r\n        }\r\n      }\r\n    },\r\n    resetViewport: ({ viewports }) => {\r\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\r\n\r\n      if (enabledElement) {\r\n        cornerstone.reset(enabledElement);\r\n      }\r\n    },\r\n    invertViewport: ({ viewports }) => {\r\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\r\n\r\n      if (enabledElement) {\r\n        let viewport = cornerstone.getViewport(enabledElement);\r\n        viewport.invert = !viewport.invert;\r\n        cornerstone.setViewport(enabledElement, viewport);\r\n      }\r\n    },\r\n    // TODO: this is receiving `evt` from `ToolbarRow`. We could use it to have\r\n    //       better mouseButtonMask sets.\r\n    setToolActive: ({ toolName }) => {\r\n      if (!toolName) {\r\n        console.warn('No toolname provided to setToolActive command');\r\n      }\r\n      cornerstoneTools.setToolActive(toolName, { mouseButtonMask: 1 });\r\n    },\r\n    clearAnnotations: ({ viewports }) => {\r\n      const element = getEnabledElement(viewports.activeViewportIndex);\r\n      if (!element) {\r\n        return;\r\n      }\r\n\r\n      const enabledElement = cornerstone.getEnabledElement(element);\r\n      if (!enabledElement || !enabledElement.image) {\r\n        return;\r\n      }\r\n\r\n      const {\r\n        toolState,\r\n      } = cornerstoneTools.globalImageIdSpecificToolStateManager;\r\n      if (\r\n        !toolState ||\r\n        toolState.hasOwnProperty(enabledElement.image.imageId) === false\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      const imageIdToolState = toolState[enabledElement.image.imageId];\r\n\r\n      const measurementsToRemove = [];\r\n\r\n      Object.keys(imageIdToolState).forEach(toolType => {\r\n        const { data } = imageIdToolState[toolType];\r\n\r\n        data.forEach(measurementData => {\r\n          const {\r\n            _id,\r\n            lesionNamingNumber,\r\n            measurementNumber,\r\n          } = measurementData;\r\n          if (!_id) {\r\n            return;\r\n          }\r\n\r\n          measurementsToRemove.push({\r\n            toolType,\r\n            _id,\r\n            lesionNamingNumber,\r\n            measurementNumber,\r\n          });\r\n        });\r\n      });\r\n\r\n      measurementsToRemove.forEach(measurementData => {\r\n        OHIF.measurements.MeasurementHandlers.onRemoved({\r\n          detail: {\r\n            toolType: measurementData.toolType,\r\n            measurementData,\r\n          },\r\n        });\r\n      });\r\n    },\r\n    nextImage: ({ viewports }) => {\r\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\r\n      scroll(enabledElement, 1);\r\n    },\r\n    previousImage: ({ viewports }) => {\r\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\r\n      scroll(enabledElement, -1);\r\n    },\r\n    getActiveViewportEnabledElement: ({ viewports }) => {\r\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\r\n      return enabledElement;\r\n    },\r\n    showDownloadViewportModal: ({ title, viewports }) => {\r\n      const activeViewportIndex = viewports.activeViewportIndex;\r\n      const { UIModalService } = servicesManager.services;\r\n      if (UIModalService) {\r\n        UIModalService.show({\r\n          content: CornerstoneViewportDownloadForm,\r\n          title,\r\n          contentProps: {\r\n            activeViewportIndex,\r\n            onClose: UIModalService.hide,\r\n          },\r\n        });\r\n      }\r\n    },\r\n    updateTableWithNewMeasurementData({\r\n      toolType,\r\n      measurementNumber,\r\n      location,\r\n      description,\r\n    }) {\r\n      // Update all measurements by measurement number\r\n      const measurementApi = OHIF.measurements.MeasurementApi.Instance;\r\n      const measurements = measurementApi.tools[toolType].filter(\r\n        m => m.measurementNumber === measurementNumber\r\n      );\r\n\r\n      measurements.forEach(measurement => {\r\n        measurement.location = location;\r\n        measurement.description = description;\r\n\r\n        measurementApi.updateMeasurement(measurement.toolType, measurement);\r\n      });\r\n\r\n      measurementApi.syncMeasurementsAndToolData();\r\n\r\n      refreshCornerstoneViewports();\r\n    },\r\n    getNearbyToolData({ element, canvasCoordinates, availableToolTypes }) {\r\n      const nearbyTool = {};\r\n      let pointNearTool = false;\r\n\r\n      availableToolTypes.forEach(toolType => {\r\n        const elementToolData = cornerstoneTools.getToolState(\r\n          element,\r\n          toolType\r\n        );\r\n\r\n        if (!elementToolData) {\r\n          return;\r\n        }\r\n\r\n        elementToolData.data.forEach((toolData, index) => {\r\n          let elementToolInstance = cornerstoneTools.getToolForElement(\r\n            element,\r\n            toolType\r\n          );\r\n\r\n          if (!elementToolInstance) {\r\n            elementToolInstance = cornerstoneTools.getToolForElement(\r\n              element,\r\n              `${toolType}Tool`\r\n            );\r\n          }\r\n\r\n          if (!elementToolInstance) {\r\n            console.warn('Tool not found.');\r\n            return undefined;\r\n          }\r\n\r\n          if (\r\n            elementToolInstance.pointNearTool(\r\n              element,\r\n              toolData,\r\n              canvasCoordinates\r\n            )\r\n          ) {\r\n            pointNearTool = true;\r\n            nearbyTool.tool = toolData;\r\n            nearbyTool.index = index;\r\n            nearbyTool.toolType = toolType;\r\n          }\r\n        });\r\n\r\n        if (pointNearTool) {\r\n          return false;\r\n        }\r\n      });\r\n\r\n      return pointNearTool ? nearbyTool : undefined;\r\n    },\r\n    removeToolState: ({ element, toolType, tool }) => {\r\n      cornerstoneTools.removeToolState(element, toolType, tool);\r\n      cornerstone.updateImage(element);\r\n    },\r\n    setCornerstoneLayout: () => {\r\n      setCornerstoneLayout();\r\n    },\r\n    setWindowLevel: ({ viewports, window, level }) => {\r\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\r\n\r\n      if (enabledElement) {\r\n        let viewport = cornerstone.getViewport(enabledElement);\r\n\r\n        viewport.voi = {\r\n          windowWidth: Number(window),\r\n          windowCenter: Number(level),\r\n        };\r\n        cornerstone.setViewport(enabledElement, viewport);\r\n      }\r\n    },\r\n    jumpToImage: ({\r\n      StudyInstanceUID,\r\n      SOPInstanceUID,\r\n      frameIndex,\r\n      activeViewportIndex,\r\n      refreshViewports = true,\r\n    }) => {\r\n      const study = studyMetadataManager.get(StudyInstanceUID);\r\n\r\n      const displaySet = study.findDisplaySet(ds => {\r\n        return (\r\n          ds.images &&\r\n          ds.images.find(i => i.getSOPInstanceUID() === SOPInstanceUID)\r\n        );\r\n      });\r\n\r\n      if (!displaySet) {\r\n        return;\r\n      }\r\n\r\n      displaySet.SOPInstanceUID = SOPInstanceUID;\r\n      displaySet.frameIndex = frameIndex;\r\n\r\n      window.store.dispatch(\r\n        setViewportSpecificData(activeViewportIndex, displaySet)\r\n      );\r\n\r\n      if (refreshViewports) {\r\n        refreshCornerstoneViewports();\r\n      }\r\n    },\r\n  };\r\n\r\n  const definitions = {\r\n    jumpToImage: {\r\n      commandFn: actions.jumpToImage,\r\n      storeContexts: [],\r\n      options: {},\r\n    },\r\n    getNearbyToolData: {\r\n      commandFn: actions.getNearbyToolData,\r\n      storeContexts: [],\r\n      options: {},\r\n    },\r\n    removeToolState: {\r\n      commandFn: actions.removeToolState,\r\n      storeContexts: [],\r\n      options: {},\r\n    },\r\n    updateTableWithNewMeasurementData: {\r\n      commandFn: actions.updateTableWithNewMeasurementData,\r\n      storeContexts: [],\r\n      options: {},\r\n    },\r\n    showDownloadViewportModal: {\r\n      commandFn: actions.showDownloadViewportModal,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n    },\r\n    getActiveViewportEnabledElement: {\r\n      commandFn: actions.getActiveViewportEnabledElement,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n    },\r\n    rotateViewportCW: {\r\n      commandFn: actions.rotateViewport,\r\n      storeContexts: ['viewports'],\r\n      options: { rotation: 90 },\r\n    },\r\n    rotateViewportCCW: {\r\n      commandFn: actions.rotateViewport,\r\n      storeContexts: ['viewports'],\r\n      options: { rotation: -90 },\r\n    },\r\n    invertViewport: {\r\n      commandFn: actions.invertViewport,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n    },\r\n    flipViewportVertical: {\r\n      commandFn: actions.flipViewportVertical,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n    },\r\n    flipViewportHorizontal: {\r\n      commandFn: actions.flipViewportHorizontal,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n    },\r\n    scaleUpViewport: {\r\n      commandFn: actions.scaleViewport,\r\n      storeContexts: ['viewports'],\r\n      options: { direction: 1 },\r\n    },\r\n    scaleDownViewport: {\r\n      commandFn: actions.scaleViewport,\r\n      storeContexts: ['viewports'],\r\n      options: { direction: -1 },\r\n    },\r\n    fitViewportToWindow: {\r\n      commandFn: actions.scaleViewport,\r\n      storeContexts: ['viewports'],\r\n      options: { direction: 0 },\r\n    },\r\n    resetViewport: {\r\n      commandFn: actions.resetViewport,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n    },\r\n    clearAnnotations: {\r\n      commandFn: actions.clearAnnotations,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n    },\r\n    nextImage: {\r\n      commandFn: actions.nextImage,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n    },\r\n    previousImage: {\r\n      commandFn: actions.previousImage,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n    },\r\n    // TOOLS\r\n    setToolActive: {\r\n      commandFn: actions.setToolActive,\r\n      storeContexts: [],\r\n      options: {},\r\n    },\r\n    setZoomTool: {\r\n      commandFn: actions.setToolActive,\r\n      storeContexts: [],\r\n      options: { toolName: 'Zoom' },\r\n    },\r\n    setCornerstoneLayout: {\r\n      commandFn: actions.setCornerstoneLayout,\r\n      storeContexts: [],\r\n      options: {},\r\n      context: 'VIEWER',\r\n    },\r\n    setWindowLevel: {\r\n      commandFn: actions.setWindowLevel,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n    },\r\n  };\r\n\r\n  return {\r\n    actions,\r\n    definitions,\r\n    defaultContext: 'ACTIVE_VIEWPORT::CORNERSTONE',\r\n  };\r\n};\r\n\r\nexport default commandsModule;\r\n","// TODO: A way to add Icons that don't already exist?\r\n// - Register them and add\r\n// - Include SVG Source/Inline?\r\n// - By URL, or own component?\r\n\r\n// What KINDS of toolbar buttons do we have...\r\n// - One's that dispatch commands\r\n// - One's that set tool's active\r\n// - More custom, like CINE\r\n//    - Built in for one's like this, or custom components?\r\n\r\n// Visible?\r\n// Disabled?\r\n// Based on contexts or misc. criteria?\r\n//  -- ACTIVE_ROUTE::VIEWER\r\n//  -- ACTIVE_VIEWPORT::CORNERSTONE\r\n// setToolActive commands should receive the button event that triggered\r\n// so we can do the \"bind to this button\" magic\r\n\r\nconst TOOLBAR_BUTTON_TYPES = {\r\n  COMMAND: 'command',\r\n  SET_TOOL_ACTIVE: 'setToolActive',\r\n  BUILT_IN: 'builtIn',\r\n};\r\n\r\nconst TOOLBAR_BUTTON_BEHAVIORS = {\r\n  CINE: 'CINE',\r\n  DOWNLOAD_SCREEN_SHOT: 'DOWNLOAD_SCREEN_SHOT',\r\n};\r\n\r\n/* TODO: Export enums through a extension manager. */\r\nconst enums = {\r\n  TOOLBAR_BUTTON_TYPES,\r\n  TOOLBAR_BUTTON_BEHAVIORS,\r\n};\r\n\r\nconst definitions = [\r\n  {\r\n    id: 'StackScroll',\r\n    label: 'Stack Scroll',\r\n    icon: 'bars',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n    commandName: 'setToolActive',\r\n    commandOptions: { toolName: 'StackScroll' },\r\n  },\r\n  {\r\n    id: 'Zoom',\r\n    label: 'Zoom',\r\n    icon: 'search-plus',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n    commandName: 'setToolActive',\r\n    commandOptions: { toolName: 'Zoom' },\r\n  },\r\n  {\r\n    id: 'Wwwc',\r\n    label: 'Levels',\r\n    icon: 'level',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n    commandName: 'setToolActive',\r\n    commandOptions: { toolName: 'Wwwc' },\r\n  },\r\n  {\r\n    id: 'Pan',\r\n    label: 'Pan',\r\n    icon: 'arrows',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n    commandName: 'setToolActive',\r\n    commandOptions: { toolName: 'Pan' },\r\n  },\r\n  {\r\n    id: 'Length',\r\n    label: 'Length',\r\n    icon: 'measure-temp',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n    commandName: 'setToolActive',\r\n    commandOptions: { toolName: 'Length' },\r\n  },\r\n  {\r\n    id: 'ArrowAnnotate',\r\n    label: 'Annotate',\r\n    icon: 'measure-non-target',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n    commandName: 'setToolActive',\r\n    commandOptions: { toolName: 'ArrowAnnotate' },\r\n  },\r\n  {\r\n    id: 'Angle',\r\n    label: 'Angle',\r\n    icon: 'angle-left',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n    commandName: 'setToolActive',\r\n    commandOptions: { toolName: 'Angle' },\r\n  },\r\n  {\r\n    id: 'Reset',\r\n    label: 'Reset',\r\n    icon: 'reset',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.COMMAND,\r\n    commandName: 'resetViewport',\r\n  },\r\n  {\r\n    id: 'Cine',\r\n    label: 'CINE',\r\n    icon: 'youtube',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.BUILT_IN,\r\n    options: {\r\n      behavior: TOOLBAR_BUTTON_BEHAVIORS.CINE,\r\n    },\r\n  },\r\n  {\r\n    id: 'More',\r\n    label: 'More',\r\n    icon: 'ellipse-circle',\r\n    buttons: [\r\n      {\r\n        id: 'Magnify',\r\n        label: 'Magnify',\r\n        icon: 'circle',\r\n        //\r\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n        commandName: 'setToolActive',\r\n        commandOptions: { toolName: 'Magnify' },\r\n      },\r\n      {\r\n        id: 'WwwcRegion',\r\n        label: 'ROI Window',\r\n        icon: 'stop',\r\n        //\r\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n        commandName: 'setToolActive',\r\n        commandOptions: { toolName: 'WwwcRegion' },\r\n      },\r\n      {\r\n        id: 'DragProbe',\r\n        label: 'Probe',\r\n        icon: 'dot-circle',\r\n        //\r\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n        commandName: 'setToolActive',\r\n        commandOptions: { toolName: 'DragProbe' },\r\n      },\r\n      {\r\n        id: 'EllipticalRoi',\r\n        label: 'Ellipse',\r\n        icon: 'circle-o',\r\n        //\r\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n        commandName: 'setToolActive',\r\n        commandOptions: { toolName: 'EllipticalRoi' },\r\n      },\r\n      {\r\n        id: 'RectangleRoi',\r\n        label: 'Rectangle',\r\n        icon: 'square-o',\r\n        //\r\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n        commandName: 'setToolActive',\r\n        commandOptions: { toolName: 'RectangleRoi' },\r\n      },\r\n      {\r\n        id: 'Invert',\r\n        label: 'Invert',\r\n        icon: 'adjust',\r\n        //\r\n        type: TOOLBAR_BUTTON_TYPES.COMMAND,\r\n        commandName: 'invertViewport',\r\n      },\r\n      {\r\n        id: 'RotateRight',\r\n        label: 'Rotate Right',\r\n        icon: 'rotate-right',\r\n        //\r\n        type: TOOLBAR_BUTTON_TYPES.COMMAND,\r\n        commandName: 'rotateViewportCW',\r\n      },\r\n      {\r\n        id: 'FlipH',\r\n        label: 'Flip H',\r\n        icon: 'ellipse-h',\r\n        //\r\n        type: TOOLBAR_BUTTON_TYPES.COMMAND,\r\n        commandName: 'flipViewportHorizontal',\r\n      },\r\n      {\r\n        id: 'FlipV',\r\n        label: 'Flip V',\r\n        icon: 'ellipse-v',\r\n        //\r\n        type: TOOLBAR_BUTTON_TYPES.COMMAND,\r\n        commandName: 'flipViewportVertical',\r\n      },\r\n      {\r\n        id: 'Clear',\r\n        label: 'Clear',\r\n        icon: 'trash',\r\n        //\r\n        type: TOOLBAR_BUTTON_TYPES.COMMAND,\r\n        commandName: 'clearAnnotations',\r\n      },\r\n      {\r\n        id: 'Bidirectional',\r\n        label: 'Bidirectional',\r\n        icon: 'measure-target',\r\n        //\r\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n        commandName: 'setToolActive',\r\n        commandOptions: { toolName: 'Bidirectional' },\r\n      },\r\n      {\r\n        id: 'Download',\r\n        label: 'Download',\r\n        icon: 'create-screen-capture',\r\n        //\r\n        type: TOOLBAR_BUTTON_TYPES.BUILT_IN,\r\n        options: {\r\n          behavior: TOOLBAR_BUTTON_BEHAVIORS.DOWNLOAD_SCREEN_SHOT,\r\n          togglable: true,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 'Exit2DMPR',\r\n    label: 'Exit 2D MPR',\r\n    icon: 'times',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.COMMAND,\r\n    commandName: 'setCornerstoneLayout',\r\n    context: 'ACTIVE_VIEWPORT::VTK',\r\n  },\r\n];\r\n\r\nexport default {\r\n  definitions,\r\n  defaultContext: 'ACTIVE_VIEWPORT::CORNERSTONE',\r\n};\r\n","import React from 'react';\r\nimport init from './init.js';\r\nimport commandsModule from './commandsModule.js';\r\nimport toolbarModule from './toolbarModule.js';\r\nimport CornerstoneViewportDownloadForm from './CornerstoneViewportDownloadForm';\r\nimport { version } from '../package.json';\r\n\r\nconst Component = React.lazy(() => {\r\n  return import('./OHIFCornerstoneViewport');\r\n});\r\n\r\nconst OHIFCornerstoneViewport = props => {\r\n  return (\r\n    <React.Suspense fallback={<div>Loading...</div>}>\r\n      <Component {...props} />\r\n    </React.Suspense>\r\n  );\r\n};\r\n\r\n/**\r\n *\r\n */\r\nexport default {\r\n  /**\r\n   * Only required property. Should be a unique value across all extensions.\r\n   */\r\n  id: 'cornerstone',\r\n  version,\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param {object} [configuration={}]\r\n   * @param {object|array} [configuration.csToolsConfig] - Passed directly to `initCornerstoneTools`\r\n   */\r\n  preRegistration({ servicesManager, configuration = {} }) {\r\n    init({ servicesManager, configuration });\r\n  },\r\n  getViewportModule({ commandsManager, appConfig }) {\r\n    const ExtendedOHIFCornerstoneViewport = props => {\r\n      /**\r\n       * TODO: This appears to be used to set the redux parameters for\r\n       * the viewport when new images are loaded. It's very ugly\r\n       * and we should remove it.\r\n       */\r\n      const onNewImageHandler = jumpData => {\r\n        /** Do not trigger all viewports to render unnecessarily */\r\n        jumpData.refreshViewports = false;\r\n        commandsManager.runCommand('jumpToImage', jumpData);\r\n      };\r\n\r\n      const { studyPrefetcher } = appConfig;\r\n      const isStackPrefetchEnabled =\r\n        studyPrefetcher && !studyPrefetcher.enabled;\r\n\r\n      return (\r\n        <OHIFCornerstoneViewport\r\n          {...props}\r\n          onNewImage={onNewImageHandler}\r\n          isStackPrefetchEnabled={isStackPrefetchEnabled}\r\n        />\r\n      );\r\n    };\r\n\r\n    return ExtendedOHIFCornerstoneViewport;\r\n  },\r\n  getToolbarModule() {\r\n    return toolbarModule;\r\n  },\r\n  getCommandsModule({ servicesManager }) {\r\n    return commandsModule({ servicesManager });\r\n  },\r\n};\r\n\r\nexport { CornerstoneViewportDownloadForm };\r\n","export default '0.0.50';\r\n","// https://github.com/maxmantz/redux-oidc/blob/master/docs/API.md\r\nimport { loadUser, createUserManager } from 'redux-oidc';\r\n\r\n/**\r\n * Creates a userManager from oidcSettings;\r\n * loads the user into the provided redux store\r\n * LINK: https://github.com/IdentityModel/oidc-client-js/wiki#configuration\r\n *\r\n * @param {*} store\r\n * @param {Object} oidcSettings\r\n * @param {string} oidcSettings.authServerUrl,\r\n * @param {string} oidcSettings.clientId,\r\n * @param {string} oidcSettings.authRedirectUri,\r\n * @param {string} oidcSettings.postLogoutRedirectUri,\r\n * @param {string} oidcSettings.responseType,\r\n * @param {string} oidcSettings.extraQueryParams,\r\n */\r\nexport default function(store, oidcSettings) {\r\n  if (!store || !oidcSettings) {\r\n    return;\r\n  }\r\n\r\n  const settings = {\r\n    ...oidcSettings,\r\n    automaticSilentRenew: true,\r\n    revokeAccessTokenOnSignout: true,\r\n    filterProtocolClaims: true,\r\n  };\r\n\r\n  const userManager = createUserManager(settings);\r\n\r\n  loadUser(store, userManager);\r\n\r\n  return userManager;\r\n}\r\n","import cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\r\n\r\nlet initialized = false;\r\n\r\nconst MAX_CONCURRENCY = 6;\r\n\r\nexport default function initWebWorkers() {\r\n  const config = {\r\n    maxWebWorkers: Math.max(Math.min(navigator.hardwareConcurrency - 1, MAX_CONCURRENCY), 1),\r\n    startWebWorkersOnDemand: true,\r\n    taskConfiguration: {\r\n      decodeTask: {\r\n        initializeCodecsOnStartup: false,\r\n        usePDFJS: false,\r\n        strict: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  if (!initialized) {\r\n    cornerstoneWADOImageLoader.webWorkerManager.initialize(config);\r\n    initialized = true;\r\n  }\r\n}\r\n","import {\r\n  applyMiddleware,\r\n  combineReducers,\r\n  createStore,\r\n  compose,\r\n} from 'redux/es/redux.js';\r\n\r\n// import { createLogger } from 'redux-logger';\r\nimport { reducer as oidcReducer } from 'redux-oidc';\r\nimport { redux } from '@ohif/core';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\n// Combine our @ohif/core and oidc reducers\r\n// Set init data, using values found in localStorage\r\nconst { reducers, localStorage, sessionStorage } = redux;\r\nconst middleware = [thunkMiddleware];\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nreducers.oidc = oidcReducer;\r\n\r\nconst rootReducer = combineReducers(reducers);\r\nconst preloadedState = {\r\n  ...localStorage.loadState(),\r\n  ...sessionStorage.loadState(),\r\n};\r\n\r\nif (window.config && window.config.disableServersCache === true) {\r\n  delete preloadedState.servers;\r\n}\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  preloadedState,\r\n  composeEnhancers(applyMiddleware(...middleware))\r\n);\r\n\r\n// When the store's preferences change,\r\n// Update our cached preferences in localStorage\r\nstore.subscribe(() => {\r\n  localStorage.saveState({\r\n    preferences: store.getState().preferences,\r\n  });\r\n  sessionStorage.saveState({\r\n    servers: store.getState().servers,\r\n  });\r\n});\r\n\r\nexport default store;\r\n","import { redux } from '@ohif/core';\r\nimport store from './../../store';\r\n\r\nconst commandsModule = ({ commandsManager }) => {\r\n  const { setViewportActive, setActiveViewportSpecificData } = redux.actions;\r\n\r\n  const actions = {\r\n    updateActiveViewport: ({ viewports, direction }) => {\r\n      const { viewportSpecificData, activeViewportIndex } = viewports;\r\n      const maxIndex = Object.keys(viewportSpecificData).length - 1;\r\n\r\n      let newIndex = activeViewportIndex + direction;\r\n      newIndex = newIndex > maxIndex ? 0 : newIndex;\r\n      newIndex = newIndex < 0 ? maxIndex : newIndex;\r\n\r\n      store.dispatch(setViewportActive(newIndex));\r\n    },\r\n    setWindowLevelPreset: ({ viewports, preset }) => {\r\n      const state = store.getState();\r\n      const { preferences = {} } = state;\r\n      const { window, level } =\r\n        preferences.windowLevelData && preferences.windowLevelData[preset];\r\n\r\n      if (window && level) {\r\n        commandsManager.runCommand('setWindowLevel', {\r\n          viewports,\r\n          window,\r\n          level,\r\n        });\r\n      }\r\n    },\r\n    updateViewportDisplaySet: ({ viewports, direction }) => {\r\n      const viewportSpecificData = { ...viewports.viewportSpecificData };\r\n      const activeViewport =\r\n        viewportSpecificData[viewports.activeViewportIndex];\r\n      const studyMetadata = utils.studyMetadataManager.get(\r\n        activeViewport.StudyInstanceUID\r\n      );\r\n\r\n      if (!studyMetadata) {\r\n        return;\r\n      }\r\n\r\n      const allDisplaySets = studyMetadata.getDisplaySets();\r\n      const currentDisplaySetIndex = allDisplaySets.findIndex(\r\n        displaySet =>\r\n          displaySet.displaySetInstanceUID ===\r\n          activeViewport.displaySetInstanceUID\r\n      );\r\n      if (currentDisplaySetIndex < 0) {\r\n        return;\r\n      }\r\n\r\n      const newDisplaySetIndex = currentDisplaySetIndex + direction;\r\n      const newDisplaySetData = allDisplaySets[newDisplaySetIndex];\r\n      if (!newDisplaySetData) {\r\n        return;\r\n      }\r\n\r\n      store.dispatch(setActiveViewportSpecificData(newDisplaySetData));\r\n    },\r\n  };\r\n\r\n  const definitions = {\r\n    // Next/Previous active viewport\r\n    incrementActiveViewport: {\r\n      commandFn: actions.updateActiveViewport,\r\n      storeContexts: ['viewports'],\r\n      options: { direction: 1 },\r\n    },\r\n    decrementActiveViewport: {\r\n      commandFn: actions.updateActiveViewport,\r\n      storeContexts: ['viewports'],\r\n      options: { direction: -1 },\r\n    },\r\n    // Window level Presets\r\n    windowLevelPreset1: {\r\n      commandFn: actions.setWindowLevelPreset,\r\n      storeContexts: ['viewports'],\r\n      options: { preset: 1 },\r\n    },\r\n    windowLevelPreset2: {\r\n      commandFn: actions.setWindowLevelPreset,\r\n      storeContexts: ['viewports'],\r\n      options: { preset: 2 },\r\n    },\r\n    windowLevelPreset3: {\r\n      commandFn: actions.setWindowLevelPreset,\r\n      storeContexts: ['viewports'],\r\n      options: { preset: 3 },\r\n    },\r\n    windowLevelPreset4: {\r\n      commandFn: actions.setWindowLevelPreset,\r\n      storeContexts: ['viewports'],\r\n      options: { preset: 4 },\r\n    },\r\n    windowLevelPreset5: {\r\n      commandFn: actions.setWindowLevelPreset,\r\n      storeContexts: ['viewports'],\r\n      options: { preset: 5 },\r\n    },\r\n    windowLevelPreset6: {\r\n      commandFn: actions.setWindowLevelPreset,\r\n      storeContexts: ['viewports'],\r\n      options: { preset: 6 },\r\n    },\r\n    windowLevelPreset7: {\r\n      commandFn: actions.setWindowLevelPreset,\r\n      storeContexts: ['viewports'],\r\n      options: { preset: 7 },\r\n    },\r\n    windowLevelPreset8: {\r\n      commandFn: actions.setWindowLevelPreset,\r\n      storeContexts: ['viewports'],\r\n      options: { preset: 8 },\r\n    },\r\n    windowLevelPreset9: {\r\n      commandFn: actions.setWindowLevelPreset,\r\n      storeContexts: ['viewports'],\r\n      options: { preset: 9 },\r\n    },\r\n    nextViewportDisplaySet: {\r\n      commandFn: actions.updateViewportDisplaySet,\r\n      storeContexts: ['viewports'],\r\n      options: { direction: 1 },\r\n    },\r\n    previousViewportDisplaySet: {\r\n      commandFn: actions.updateViewportDisplaySet,\r\n      storeContexts: ['viewports'],\r\n      options: { direction: -1 },\r\n    },\r\n  };\r\n\r\n  return {\r\n    definitions,\r\n    defaultContext: 'VIEWER',\r\n  };\r\n};\r\n\r\nexport default commandsModule;\r\n","import commandsModule from './commandsModule.js';\r\n\r\nexport default {\r\n  id: 'generic-viewer-commands',\r\n  get version() {\r\n    return window.version;\r\n  },\r\n  getCommandsModule({ commandsManager }) {\r\n    return commandsModule({ commandsManager });\r\n  },\r\n};\r\n","import { measurements, utils } from '@ohif/core';\r\n\r\nconst { MeasurementApi } = measurements;\r\nconst { studyMetadataManager } = utils;\r\n\r\n// TODO: Move this function to OHIF itself so we can use it on the OHIF measurment table (when it is finished)\r\n\r\n/**\r\n * Activates a set of measurements\r\n *\r\n * @param measurementData\r\n * @param viewportsState\r\n * @param timepointManagerState\r\n * @param options\r\n */\r\nexport default function jumpToRowItem(\r\n  measurementData,\r\n  viewportsState,\r\n  timepointManagerState,\r\n  options = { invertViewportTimepointsOrder: false, childToolKey: null }\r\n) {\r\n  const numViewports = viewportsState.layout.viewports.length;\r\n  const numTimepoints = timepointManagerState.timepoints.length;\r\n  const { measurements, timepoints } = timepointManagerState;\r\n  const numViewportsToUpdate = Math.min(numTimepoints, numViewports);\r\n  const { toolType, measurementNumber } = measurementData;\r\n\r\n  if (options.invertViewportTimepointsOrder) {\r\n    timepoints.reverse();\r\n  }\r\n\r\n  const measurementsForToolGroup = measurements[toolType];\r\n\r\n  // Retrieve the measurements data\r\n  const measurementsToJumpTo = [];\r\n  for (let i = 0; i < numViewportsToUpdate; i++) {\r\n    const { timepointId } = timepoints[i];\r\n\r\n    const dataAtThisTimepoint = measurementsForToolGroup.find(entry => {\r\n      return (\r\n        entry.timepointId === timepointId &&\r\n        entry.measurementNumber === measurementNumber\r\n      );\r\n    });\r\n\r\n    if (!dataAtThisTimepoint) {\r\n      measurementsToJumpTo.push(null);\r\n      continue;\r\n    }\r\n\r\n    let measurement = dataAtThisTimepoint;\r\n\r\n    const { tool } = MeasurementApi.getToolConfiguration(toolType);\r\n    if (options.childToolKey) {\r\n      measurement = dataAtThisTimepoint[options.childToolKey];\r\n    } else if (Array.isArray(tool.childTools)) {\r\n      const key = tool.childTools.find(key => !!dataAtThisTimepoint[key]);\r\n      measurement = dataAtThisTimepoint[key];\r\n    }\r\n\r\n    measurementsToJumpTo.push(measurement);\r\n  }\r\n\r\n  // TODO: Add a single viewports state action which allows\r\n  // - viewportData to be set\r\n  // - layout to be set\r\n  // - activeViewport to be set\r\n\r\n  // Needs to update viewports.viewportData state to set image set data\r\n\r\n  const displaySetContainsSopInstance = (displaySet, SOPInstanceUID) => {\r\n    if (!displaySet.images || !displaySet.images.length) {\r\n      return;\r\n    }\r\n\r\n    return displaySet.images.find(\r\n      image => image.getSOPInstanceUID() === SOPInstanceUID\r\n    );\r\n  };\r\n\r\n  const viewportSpecificData = [];\r\n  measurementsToJumpTo.forEach((data, viewportIndex) => {\r\n    // Skip if there is no measurement to jump\r\n    if (!data) {\r\n      return;\r\n    }\r\n\r\n    const study = studyMetadataManager.get(data.StudyInstanceUID);\r\n    if (!study) {\r\n      throw new Error('Study not found.');\r\n    }\r\n\r\n    const displaySet = study.findDisplaySet(displaySet => {\r\n      return displaySetContainsSopInstance(displaySet, data.SOPInstanceUID);\r\n    });\r\n\r\n    if (!displaySet) {\r\n      throw new Error('Display set not found.');\r\n    }\r\n\r\n    displaySet.SOPInstanceUID = data.SOPInstanceUID;\r\n    if (data.frameIndex) {\r\n      displaySet.frameIndex = data.frameIndex;\r\n    }\r\n\r\n    viewportIndex =\r\n      (viewportIndex + viewportsState.activeViewportIndex) % numViewports;\r\n    viewportSpecificData.push({\r\n      viewportIndex,\r\n      displaySet,\r\n    });\r\n  });\r\n\r\n  return {\r\n    viewportSpecificData,\r\n    layout: [], // TODO: if we need to change layout, we should return this here\r\n  };\r\n}\r\n","import { connect } from 'react-redux';\r\nimport { MeasurementTable } from '@ohif/ui';\r\nimport OHIF, { DICOMSR } from '@ohif/core';\r\nimport moment from 'moment';\r\nimport cornerstone from 'cornerstone-core';\r\n\r\nimport jumpToRowItem from './jumpToRowItem.js';\r\n\r\nconst { setViewportSpecificData } = OHIF.redux.actions;\r\nconst { MeasurementApi } = OHIF.measurements;\r\n\r\n/**\r\n * Takes a list of objects and a property and return the list grouped by the property\r\n *\r\n * @param {Array} list - The objects to be grouped by\r\n * @param {string} props - The property to group the objects\r\n * @returns {Object}\r\n */\r\nfunction groupBy(list, props) {\r\n  return list.reduce((a, b) => {\r\n    (a[b[props]] = a[b[props]] || []).push(b);\r\n    return a;\r\n  }, {});\r\n}\r\n\r\n/**\r\n *  Takes a list of tools grouped and return all tools separately\r\n *\r\n * @param {Array} [toolGroups=[]] - The grouped tools\r\n * @returns {Array} - The list of all tools on all groups\r\n */\r\nfunction getAllTools(toolGroups = []) {\r\n  let tools = [];\r\n  toolGroups.forEach(toolGroup => (tools = tools.concat(toolGroup.childTools)));\r\n\r\n  return tools;\r\n}\r\n\r\n/**\r\n * Takes measurementData and build the measurement text to be used into the table\r\n *\r\n * @param {Object} [measurementData={}]\r\n * @param {string} measurementData.location - The measurement location\r\n * @param {string} measurementData.description - The measurement description\r\n * @returns {string}\r\n */\r\nfunction getMeasurementText(measurementData = {}) {\r\n  const defaultText = '...';\r\n  const { location = '', description = '' } = measurementData;\r\n  const result = location + (description ? ` (${description})` : '');\r\n\r\n  return result || defaultText;\r\n}\r\n\r\n/**\r\n * Takes a list of measurements grouped by measurement numbers and return each measurement data by available timepoint\r\n *\r\n * @param {Array} measurementNumberList - The list of measurements\r\n * @param {Array} timepoints - The list of available timepoints\r\n * @param {Function} displayFunction - The function that builds the display text by each tool\r\n * @returns\r\n */\r\nfunction getDataForEachMeasurementNumber(\r\n  measurementNumberList,\r\n  timepoints,\r\n  displayFunction\r\n) {\r\n  const data = [];\r\n  // on each measurement number we should get each measurement data by available timepoint\r\n  measurementNumberList.forEach(measurement => {\r\n    timepoints.forEach(timepoint => {\r\n      const eachData = {\r\n        displayText: '...',\r\n      };\r\n      if (measurement.timepointId === timepoint.timepointId) {\r\n        eachData.displayText = displayFunction(measurement);\r\n      }\r\n      data.push(eachData);\r\n    });\r\n  });\r\n\r\n  return data;\r\n}\r\n\r\n/**\r\n * Take a measurement toolName and return if any warnings\r\n *\r\n * @param {string} toolName - The tool name\r\n * @returns {string}\r\n */\r\nfunction getWarningsForMeasurement(toolName) {\r\n  const isToolSupported = DICOMSR.isToolSupported(toolName);\r\n\r\n  return {\r\n    hasWarnings: !isToolSupported,\r\n    warningTitle: isToolSupported ? '' : 'Unsupported Tool',\r\n    warningList: isToolSupported\r\n      ? []\r\n      : [`${toolName} cannot be persisted at this time`],\r\n  };\r\n}\r\n\r\n/**\r\n * Take measurements from MeasurementAPI structure and convert into a measurementTable structure\r\n *\r\n * @param {Object} toolCollections - The list of all measurement grouped by groupTool and toolName\r\n * @param {Array} timepoints - The list of available timepoints\r\n * @returns\r\n */\r\nfunction convertMeasurementsToTableData(toolCollections, timepoints) {\r\n  const config = OHIF.measurements.MeasurementApi.getConfiguration();\r\n  const toolGroups = config.measurementTools;\r\n  const tools = getAllTools(toolGroups);\r\n\r\n  const tableMeasurements = toolGroups.map(toolGroup => {\r\n    return {\r\n      groupName: toolGroup.name,\r\n      groupId: toolGroup.id,\r\n      measurements: [],\r\n    };\r\n  });\r\n\r\n  Object.keys(toolCollections).forEach(toolId => {\r\n    const toolMeasurements = toolCollections[toolId];\r\n    const tool = tools.find(tool => tool.id === toolId);\r\n    const { displayFunction } = tool.options.measurementTable;\r\n\r\n    // Group by measurementNumber so we can display then all in the same line\r\n    const groupedMeasurements = groupBy(toolMeasurements, 'measurementNumber');\r\n\r\n    Object.keys(groupedMeasurements).forEach(groupedMeasurementsIndex => {\r\n      const measurementNumberList =\r\n        groupedMeasurements[groupedMeasurementsIndex];\r\n      const measurementData = measurementNumberList[0];\r\n      const {\r\n        measurementNumber,\r\n        lesionNamingNumber,\r\n        toolType,\r\n        isReadOnly\r\n      } = measurementData;\r\n      const measurementId = measurementData._id;\r\n\r\n      const {\r\n        hasWarnings,\r\n        warningTitle,\r\n        warningList,\r\n      } = getWarningsForMeasurement(toolType);\r\n\r\n      //check if all measurements with same measurementNumber will have same LABEL\r\n      const tableMeasurement = {\r\n        itemNumber: lesionNamingNumber,\r\n        label: getMeasurementText(measurementData),\r\n        measurementId,\r\n        measurementNumber,\r\n        lesionNamingNumber,\r\n        toolType,\r\n        hasWarnings,\r\n        isReadOnly,\r\n        warningTitle,\r\n        warningList,\r\n        isSplitLesion: false, //TODO\r\n        data: getDataForEachMeasurementNumber(\r\n          measurementNumberList,\r\n          timepoints,\r\n          displayFunction\r\n        ),\r\n      };\r\n\r\n      // find the group object for the tool\r\n      const toolGroupMeasurements = tableMeasurements.find(group => {\r\n        return group.groupId === tool.toolGroup;\r\n      });\r\n      // inject the new measurement for this measurementNumer\r\n      toolGroupMeasurements.measurements.push(tableMeasurement);\r\n    });\r\n  });\r\n\r\n  // Sort measurements by lesion naming number\r\n  tableMeasurements.forEach(tm => {\r\n    tm.measurements.sort((m1, m2) =>\r\n      m1.lesionNamingNumber > m2.lesionNamingNumber ? 1 : -1\r\n    );\r\n  });\r\n\r\n  return tableMeasurements;\r\n}\r\n\r\n/**\r\n * Take a list of available timepoints and return a list header information for each timepoint\r\n *\r\n * @param {Array} timepoints - The list of available timepoints\r\n * @param {string} timepoints[].latestDate - The date of the last study taken on the timepoint\r\n * @returns {{label: string, key: string, date: string}[]}\r\n */\r\nfunction convertTimepointsToTableData(timepoints) {\r\n  if (!timepoints || !timepoints.length) {\r\n    return [];\r\n  }\r\n\r\n  return [\r\n    {\r\n      label: 'Study date:',\r\n      key: 'StudyDate',\r\n      date: moment(timepoints[0].latestDate).format('DD-MMM-YY'),\r\n    },\r\n  ];\r\n}\r\n\r\n/**\r\n *  Takes server type and return a function or undefined\r\n *\r\n * @param {string} serverType - The server type\r\n * @returns {undefined|Function}\r\n */\r\nfunction getSaveFunction(serverType) {\r\n  if (serverType === 'dicomWeb') {\r\n    return () => {\r\n      const measurementApi = OHIF.measurements.MeasurementApi.Instance;\r\n      const promise = measurementApi.storeMeasurements();\r\n      return promise;\r\n    };\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const { timepointManager, servers } = state;\r\n  const { timepoints, measurements } = timepointManager;\r\n  const activeServer = servers.servers.find(a => a.active === true);\r\n  const saveFunction = getSaveFunction(activeServer.type);\r\n\r\n  return {\r\n    timepoints: convertTimepointsToTableData(timepoints),\r\n    measurementCollection: convertMeasurementsToTableData(\r\n      measurements,\r\n      timepoints\r\n    ),\r\n    timepointManager: state.timepointManager,\r\n    viewports: state.viewports,\r\n    saveFunction,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    dispatchRelabel: (event, measurementData, viewportsState) => {\r\n      event.persist();\r\n\r\n      const activeViewportIndex =\r\n        (viewportsState && viewportsState.activeViewportIndex) || 0;\r\n\r\n      const enabledElements = cornerstone.getEnabledElements();\r\n      if (!enabledElements || enabledElements.length <= activeViewportIndex) {\r\n        OHIF.log.error('Failed to find the enabled element');\r\n        return;\r\n      }\r\n\r\n      const { toolType, measurementId } = measurementData;\r\n      const tool = MeasurementApi.Instance.tools[toolType].find(measurement => {\r\n        return measurement._id === measurementId;\r\n      });\r\n\r\n      // Clone the tool not to set empty location initially\r\n      const toolForLocation = Object.assign({}, tool, { location: null });\r\n\r\n      if (ownProps.onRelabel) {\r\n        ownProps.onRelabel(toolForLocation);\r\n      }\r\n    },\r\n    dispatchEditDescription: (event, measurementData, viewportsState) => {\r\n      event.persist();\r\n\r\n      const activeViewportIndex =\r\n        (viewportsState && viewportsState.activeViewportIndex) || 0;\r\n\r\n      const enabledElements = cornerstone.getEnabledElements();\r\n      if (!enabledElements || enabledElements.length <= activeViewportIndex) {\r\n        OHIF.log.error('Failed to find the enabled element');\r\n        return;\r\n      }\r\n\r\n      const { toolType, measurementId } = measurementData;\r\n      const tool = MeasurementApi.Instance.tools[toolType].find(measurement => {\r\n        return measurement._id === measurementId;\r\n      });\r\n\r\n      if (ownProps.onEditDescription) {\r\n        ownProps.onEditDescription(tool);\r\n      }\r\n    },\r\n    dispatchJumpToRowItem: (\r\n      measurementData,\r\n      viewportsState,\r\n      timepointManagerState,\r\n      options\r\n    ) => {\r\n      const actionData = jumpToRowItem(\r\n        measurementData,\r\n        viewportsState,\r\n        timepointManagerState,\r\n        dispatch,\r\n        options\r\n      );\r\n\r\n      actionData.viewportSpecificData.forEach(viewportSpecificData => {\r\n        const { viewportIndex, displaySet } = viewportSpecificData;\r\n\r\n        dispatch(setViewportSpecificData(viewportIndex, displaySet));\r\n      });\r\n\r\n      const { toolType, measurementNumber } = measurementData;\r\n      const measurementApi = MeasurementApi.Instance;\r\n\r\n      Object.keys(measurementApi.tools).forEach(toolType => {\r\n        const measurements = measurementApi.tools[toolType];\r\n\r\n        measurements.forEach(measurement => {\r\n          measurement.active = false;\r\n        });\r\n      });\r\n\r\n      const measurementsToActive = measurementApi.tools[toolType].filter(\r\n        measurement => {\r\n          return measurement.measurementNumber === measurementNumber;\r\n        }\r\n      );\r\n\r\n      measurementsToActive.forEach(measurementToActive => {\r\n        measurementToActive.active = true;\r\n      });\r\n\r\n      measurementApi.syncMeasurementsAndToolData();\r\n\r\n      cornerstone.getEnabledElements().forEach(enabledElement => {\r\n        if (enabledElement.image) {\r\n          cornerstone.updateImage(enabledElement.element);\r\n        }\r\n      });\r\n\r\n      // Needs to update viewports.layout state to set layout\r\n      //const layout = actionData.layout;\r\n      //dispatch(setLayout(layout))\r\n\r\n      // Needs to update viewports.activeViewportIndex to the first updated viewport\r\n      //const viewportIndex = actionData.viewportIndex;\r\n      //dispatch(setViewportActive(viewportIndex));\r\n\r\n      // Needs to update timepointsManager.measurements state to set active measurementId\r\n      // TODO: Not yet implemented\r\n      //dispatch(setActiveMeasurement(measurementData.measurementId))\r\n\r\n      // (later): Needs to set some property on state.extensions.cornerstone to synchronize viewport scrolling\r\n    },\r\n  };\r\n};\r\n\r\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\r\n  const { timepoints, saveFunction, measurementCollection } = propsFromState;\r\n  const { onSaveComplete, selectedMeasurementNumber } = ownProps;\r\n\r\n  return {\r\n    timepoints,\r\n    saveFunction,\r\n    measurementCollection,\r\n    onSaveComplete,\r\n    selectedMeasurementNumber,\r\n    ...propsFromDispatch,\r\n    onItemClick: (event, measurementData) => {\r\n      // TODO: Add timepointId to .data for measurementData?\r\n      // TODO: Tooltype should be on the level below? This should\r\n      // provide the entire row item?\r\n\r\n      const viewportsState = propsFromState.viewports;\r\n      const timepointManagerState = propsFromState.timepointManager;\r\n\r\n      // TODO: invertViewportTimepointsOrder should be stored in / read from user preferences\r\n      // TODO: childToolKey should come from the measurement table when it supports child tools\r\n      const options = {\r\n        invertViewportTimepointsOrder: false,\r\n        childToolKey: null,\r\n      };\r\n\r\n      propsFromDispatch.dispatchJumpToRowItem(\r\n        measurementData,\r\n        viewportsState,\r\n        timepointManagerState,\r\n        options\r\n      );\r\n    },\r\n    onRelabelClick: (event, measurementData) => {\r\n      const viewportsState = propsFromState.viewports;\r\n      propsFromDispatch.dispatchRelabel(event, measurementData, viewportsState);\r\n    },\r\n    onEditDescriptionClick: (event, measurementData) => {\r\n      const viewportsState = propsFromState.viewports;\r\n      propsFromDispatch.dispatchEditDescription(\r\n        event,\r\n        measurementData,\r\n        viewportsState\r\n      );\r\n    },\r\n    onDeleteClick: (event, measurementData) => {\r\n      const { MeasurementHandlers } = OHIF.measurements;\r\n\r\n      MeasurementHandlers.onRemoved({\r\n        detail: {\r\n          toolType: measurementData.toolType,\r\n          measurementData: {\r\n            _id: measurementData.measurementId,\r\n            lesionNamingNumber: measurementData.lesionNamingNumber,\r\n            measurementNumber: measurementData.measurementNumber,\r\n          },\r\n        },\r\n      });\r\n    },\r\n  };\r\n};\r\n\r\nconst ConnectedMeasurementTable = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n  mergeProps\r\n)(MeasurementTable);\r\n\r\nexport default ConnectedMeasurementTable;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport './LabellingTransition.css';\r\n\r\n// If these variables changes, CSS must be updated\r\nconst transitionDuration = 500;\r\nconst transitionClassName = 'labelling';\r\nconst transitionOnAppear = true;\r\n\r\nexport default class LabellingTransition extends Component {\r\n  static propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    displayComponent: PropTypes.bool.isRequired,\r\n    onTransitionExit: PropTypes.func.isRequired,\r\n  };\r\n  render() {\r\n    return (\r\n      <CSSTransition\r\n        in={this.props.displayComponent}\r\n        appear={transitionOnAppear}\r\n        timeout={transitionDuration}\r\n        classNames={transitionClassName}\r\n        onExited={this.props.onTransitionExit}\r\n      >\r\n        {this.props.children}\r\n      </CSSTransition>\r\n    );\r\n  }\r\n}\r\n","const items = [\r\n  'Abdomen/Chest Wall',\r\n  'Adrenal',\r\n  'Bladder',\r\n  'Bone',\r\n  'Brain',\r\n  'Breast',\r\n  'Colon',\r\n  'Esophagus',\r\n  'Extremities',\r\n  'Gallbladder',\r\n  'Kidney',\r\n  'Liver',\r\n  'Lung',\r\n  'Lymph Node',\r\n  'Mediastinum/Hilum',\r\n  'Muscle',\r\n  'Neck',\r\n  'Other Soft Tissue',\r\n  'Ovary',\r\n  'Pancreas',\r\n  'Pelvis',\r\n  'Peritoneum/Omentum',\r\n  'Prostate',\r\n  'Retroperitoneum',\r\n  'Small Bowel',\r\n  'Spleen',\r\n  'Stomach',\r\n  'Subcutaneous',\r\n];\r\n\r\nconst OHIFLabellingData = items.map(item => {\r\n  return {\r\n    label: item,\r\n    value: item,\r\n  };\r\n});\r\n\r\nexport default OHIFLabellingData;\r\n","import { Component } from 'react';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './SimpleDialog.css';\r\n\r\nclass SimpleDialog extends Component {\r\n  static defaultProps = {\r\n    componentStyle: {},\r\n    rootClass: '',\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`simpleDialog ${this.props.rootClass}`}\r\n        ref={this.props.componentRef}\r\n        style={this.props.componentStyle}\r\n      >\r\n        <form onSubmit={this.props.onConfirm}>\r\n          <div className=\"header\">\r\n            <span className=\"closeBtn\" onClick={this.props.onClose}>\r\n              <span className=\"closeIcon\">x</span>\r\n            </span>\r\n            <h4 className=\"title\">{this.props.headerTitle}</h4>\r\n          </div>\r\n          <div className=\"content\">{this.props.children}</div>\r\n          <div className=\"footer\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-cancel\"\r\n              onClick={this.props.onClose}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-confirm\"\r\n              onClick={this.props.onConfirm}\r\n            >\r\n              Confirm\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n  headerTitle: PropTypes.string.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  onConfirm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SimpleDialog;\r\n","import { Component } from 'react';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport SimpleDialog from '../SimpleDialog/SimpleDialog.js';\r\nimport './EditDescriptionDialog.css';\r\n\r\nexport default class EditDescriptionDialog extends Component {\r\n  static propTypes = {\r\n    description: PropTypes.string,\r\n    measurementData: PropTypes.object.isRequired,\r\n    onCancel: PropTypes.func.isRequired,\r\n    onUpdate: PropTypes.func.isRequired,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      description: props.measurementData.description || '',\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.description !== prevProps.description) {\r\n      this.setState({\r\n        description: this.props.description,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <SimpleDialog\r\n        headerTitle=\"Edit Description\"\r\n        onClose={this.onClose}\r\n        onConfirm={this.onConfirm}\r\n        rootClass=\"editDescriptionDialog\"\r\n      >\r\n        <input\r\n          value={this.state.description}\r\n          className=\"simpleDialogInput\"\r\n          id=\"description\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          onChange={this.handleChange}\r\n        />\r\n      </SimpleDialog>\r\n    );\r\n  }\r\n\r\n  onClose = () => {\r\n    this.props.onCancel();\r\n  };\r\n\r\n  onConfirm = e => {\r\n    e.preventDefault();\r\n    this.props.onUpdate(this.state.description);\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ description: event.target.value });\r\n  };\r\n}\r\n","import { Icon, SelectTree } from '@ohif/ui';\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cloneDeep from 'lodash.clonedeep';\r\n\r\nimport LabellingTransition from './LabellingTransition.js';\r\nimport OHIFLabellingData from './OHIFLabellingData.js';\r\nimport EditDescriptionDialog from './../EditDescriptionDialog/EditDescriptionDialog.js';\r\nimport './LabellingFlow.css';\r\n\r\nconst LabellingFlow = ({\r\n  measurementData,\r\n  editLocation,\r\n  editDescription,\r\n  skipAddLabelButton,\r\n  updateLabelling,\r\n  labellingDoneCallback,\r\n  editDescriptionOnDialog,\r\n}) => {\r\n  const [fadeOutTimer, setFadeOutTimer] = useState();\r\n  const [showComponent, setShowComponent] = useState(true);\r\n  const descriptionInput = useRef();\r\n  const [state, setState] = useState({\r\n    measurementData,\r\n    editLocation,\r\n    editDescription,\r\n    skipAddLabelButton,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const newMeasurementData = cloneDeep(measurementData);\r\n\r\n    if (editDescription) {\r\n      newMeasurementData.description = undefined;\r\n    }\r\n\r\n    if (editLocation) {\r\n      newMeasurementData.location = undefined;\r\n    }\r\n\r\n    let newEditLocation = editLocation;\r\n    if (!editDescription && !editLocation) {\r\n      newEditLocation = true;\r\n    }\r\n\r\n    setState(state => ({\r\n      ...state,\r\n      editLocation: newEditLocation,\r\n      measurementData: newMeasurementData,\r\n    }));\r\n  }, [editDescription, editLocation, measurementData]);\r\n\r\n  useEffect(() => {\r\n    if (descriptionInput.current) {\r\n      descriptionInput.current.focus();\r\n    }\r\n  }, [state]);\r\n\r\n  const relabel = event =>\r\n    setState(state => ({ ...state, editLocation: true }));\r\n\r\n  const setDescriptionUpdateMode = () => {\r\n    descriptionInput.current.focus();\r\n    setState(state => ({ ...state, editDescription: true }));\r\n  };\r\n\r\n  const descriptionCancel = () => {\r\n    const { description = '' } = cloneDeep(state);\r\n    descriptionInput.current.value = description;\r\n    setState(state => ({ ...state, editDescription: false }));\r\n  };\r\n\r\n  const handleKeyPress = event => {\r\n    if (event.key === 'Enter') {\r\n      descriptionSave();\r\n    }\r\n  };\r\n\r\n  const descriptionSave = () => {\r\n    const description = descriptionInput.current.value;\r\n    updateLabelling({ description });\r\n\r\n    setState(state => ({\r\n      ...state,\r\n      description,\r\n      editDescription: false,\r\n    }));\r\n  };\r\n\r\n  const selectTreeSelectCallback = (event, itemSelected) => {\r\n    const location = itemSelected.value;\r\n    const locationLabel = itemSelected.label;\r\n    updateLabelling({ location });\r\n\r\n    setState(state => ({\r\n      ...state,\r\n      editLocation: false,\r\n      measurementData: {\r\n        ...state.measurementData,\r\n        location,\r\n        locationLabel,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const showLabelling = () => {\r\n    setState(state => ({\r\n      ...state,\r\n      skipAddLabelButton: true,\r\n      editLocation: false,\r\n    }));\r\n  };\r\n\r\n  /*\r\n   * Waits for 1 sec to dismiss the labelling component.\r\n   *\r\n   */\r\n  const fadeOutAndLeave = () =>\r\n    setFadeOutTimer(setTimeout(fadeOutAndLeaveFast, 1000));\r\n\r\n  const fadeOutAndLeaveFast = () => setShowComponent(false);\r\n\r\n  const clearFadeOutTimer = () => {\r\n    if (fadeOutTimer) {\r\n      clearTimeout(fadeOutTimer);\r\n      setFadeOutTimer(null);\r\n    }\r\n  };\r\n\r\n  const descriptionDialogUpdate = description => {\r\n    updateLabelling({ description });\r\n    labellingDoneCallback();\r\n  };\r\n\r\n  const labellingStateFragment = () => {\r\n    const { skipAddLabelButton, editLocation, measurementData } = state;\r\n    const { description, locationLabel, location } = measurementData;\r\n\r\n    if (!skipAddLabelButton) {\r\n      return (\r\n        <button\r\n          type=\"button\"\r\n          className=\"addLabelButton\"\r\n          onClick={showLabelling}\r\n        >\r\n          {location ? 'Edit' : 'Add'} Label\r\n        </button>\r\n      );\r\n    } else {\r\n      if (editLocation) {\r\n        return (\r\n          <SelectTree\r\n            items={OHIFLabellingData}\r\n            columns={1}\r\n            onSelected={selectTreeSelectCallback}\r\n            selectTreeFirstTitle=\"Assign Label\"\r\n          />\r\n        );\r\n      } else {\r\n        return (\r\n          <>\r\n            <div className=\"checkIconWrapper\" onClick={fadeOutAndLeaveFast}>\r\n              <Icon name=\"check\" className=\"checkIcon\" />\r\n            </div>\r\n            <div className=\"locationDescriptionWrapper\">\r\n              <div className=\"location\">{locationLabel}</div>\r\n              <div className=\"description\">\r\n                <input\r\n                  id=\"descriptionInput\"\r\n                  ref={descriptionInput}\r\n                  defaultValue={description || ''}\r\n                  autoComplete=\"off\"\r\n                  onKeyPress={handleKeyPress}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"commonButtons\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"commonButton left\"\r\n                onClick={relabel}\r\n              >\r\n                Relabel\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"commonButton right\"\r\n                onClick={setDescriptionUpdateMode}\r\n              >\r\n                {description ? 'Edit ' : 'Add '}\r\n                Description\r\n              </button>\r\n            </div>\r\n            <div className=\"editDescriptionButtons\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"commonButton left\"\r\n                onClick={descriptionCancel}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"commonButton right\"\r\n                onClick={descriptionSave}\r\n              >\r\n                Save\r\n              </button>\r\n            </div>\r\n          </>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  if (editDescriptionOnDialog) {\r\n    return (\r\n      <EditDescriptionDialog\r\n        onCancel={labellingDoneCallback}\r\n        onUpdate={descriptionDialogUpdate}\r\n        measurementData={state.measurementData}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <LabellingTransition\r\n      displayComponent={showComponent}\r\n      onTransitionExit={labellingDoneCallback}\r\n    >\r\n      <>\r\n        <div\r\n          className={`labellingComponent ${state.editDescription &&\r\n            'editDescription'}`}\r\n          onMouseLeave={fadeOutAndLeave}\r\n          onMouseEnter={clearFadeOutTimer}\r\n        >\r\n          {labellingStateFragment()}\r\n        </div>\r\n      </>\r\n    </LabellingTransition>\r\n  );\r\n};\r\n\r\nLabellingFlow.propTypes = {\r\n  measurementData: PropTypes.object.isRequired,\r\n  labellingDoneCallback: PropTypes.func.isRequired,\r\n  updateLabelling: PropTypes.func.isRequired,\r\n  initialTopDistance: PropTypes.number,\r\n  skipAddLabelButton: PropTypes.bool,\r\n  editLocation: PropTypes.bool,\r\n  editDescription: PropTypes.bool,\r\n  editDescriptionOnDialog: PropTypes.bool,\r\n};\r\n\r\nLabellingFlow.defaultProps = {\r\n  skipAddLabelButton: false,\r\n  editLocation: false,\r\n  editDescription: false,\r\n  editDescriptionOnDialog: false,\r\n};\r\n\r\nexport default LabellingFlow;\r\n","import { ContextMenu } from '@ohif/ui';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { commandsManager } from './../App.js';\r\n\r\nconst toolTypes = [\r\n  'Angle',\r\n  'Bidirectional',\r\n  'Length',\r\n  'FreehandMouse',\r\n  'EllipticalRoi',\r\n  'CircleRoi',\r\n  'RectangleRoi',\r\n];\r\n\r\nconst ToolContextMenu = ({\r\n  onSetLabel,\r\n  onSetDescription,\r\n  isTouchEvent,\r\n  eventData,\r\n  onClose,\r\n  onDelete,\r\n}) => {\r\n  const defaultDropdownItems = [\r\n    {\r\n      label: 'Delete measurement',\r\n      actionType: 'Delete',\r\n      action: ({ nearbyToolData, eventData }) =>\r\n        onDelete(nearbyToolData, eventData),\r\n    },\r\n    {\r\n      label: 'Relabel',\r\n      actionType: 'setLabel',\r\n      action: ({ nearbyToolData, eventData }) => {\r\n        const { tool: measurementData } = nearbyToolData;\r\n        onSetLabel(eventData, measurementData);\r\n      },\r\n    },\r\n    {\r\n      actionType: 'setDescription',\r\n      action: ({ nearbyToolData, eventData }) => {\r\n        const { tool: measurementData } = nearbyToolData;\r\n        onSetDescription(eventData, measurementData);\r\n      },\r\n    },\r\n  ];\r\n\r\n  const getDropdownItems = (eventData, isTouchEvent = false) => {\r\n    const nearbyToolData = commandsManager.runCommand('getNearbyToolData', {\r\n      element: eventData.element,\r\n      canvasCoordinates: eventData.currentPoints.canvas,\r\n      availableToolTypes: toolTypes,\r\n    });\r\n\r\n    /*\r\n     * Annotate tools for touch events already have a press handle to edit it,\r\n     * has a better UX for deleting it.\r\n     */\r\n    if (\r\n      isTouchEvent &&\r\n      nearbyToolData &&\r\n      nearbyToolData.toolType === 'arrowAnnotate'\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    let dropdownItems = [];\r\n    if (nearbyToolData) {\r\n      defaultDropdownItems.forEach(item => {\r\n        item.params = { eventData, nearbyToolData };\r\n\r\n        if (item.actionType === 'setDescription') {\r\n          item.label = `${\r\n            nearbyToolData.tool.description ? 'Edit' : 'Add'\r\n          } Description`;\r\n        }\r\n\r\n        dropdownItems.push(item);\r\n      });\r\n    }\r\n\r\n    return dropdownItems;\r\n  };\r\n\r\n  const onClickHandler = ({ action, params }) => {\r\n    action(params);\r\n    if (onClose) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const dropdownItems = getDropdownItems(eventData, isTouchEvent);\r\n\r\n  return (\r\n    <div className=\"ToolContextMenu\">\r\n      <ContextMenu items={dropdownItems} onClick={onClickHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nToolContextMenu.propTypes = {\r\n  isTouchEvent: PropTypes.bool.isRequired,\r\n  eventData: PropTypes.object,\r\n  onClose: PropTypes.func,\r\n  onSetDescription: PropTypes.func,\r\n  onSetLabel: PropTypes.func,\r\n  onDelete: PropTypes.func,\r\n};\r\n\r\nToolContextMenu.defaultProps = {\r\n  isTouchEvent: false,\r\n};\r\n\r\nexport default ToolContextMenu;\r\n","import OHIF from '@ohif/core';\r\nimport cornerstone from 'cornerstone-core';\r\nimport csTools from 'cornerstone-tools';\r\nimport throttle from 'lodash.throttle';\r\n\r\nimport LabellingFlow from '../../components/Labelling/LabellingFlow';\r\nimport ToolContextMenu from '../../connectedComponents/ToolContextMenu';\r\n\r\nconst {\r\n  onAdded,\r\n  onRemoved,\r\n  onModified,\r\n} = OHIF.measurements.MeasurementHandlers;\r\n\r\nconst MEASUREMENT_ACTION_MAP = {\r\n  added: onAdded,\r\n  removed: onRemoved,\r\n  modified: throttle(event => {\r\n    return onModified(event);\r\n  }, 300),\r\n};\r\n\r\n/**\r\n *\r\n *\r\n * @export\r\n * @param {Object} servicesManager\r\n * @param {Object} configuration\r\n */\r\nexport default function init({\r\n  servicesManager,\r\n  commandsManager,\r\n  configuration,\r\n}) {\r\n  const { UIDialogService } = servicesManager.services;\r\n\r\n  // TODO: MEASUREMENT_COMPLETED (not present in initial implementation)\r\n  const onMeasurementsChanged = (action, event) => {\r\n    return MEASUREMENT_ACTION_MAP[action](event);\r\n  };\r\n  const onMeasurementAdded = onMeasurementsChanged.bind(this, 'added');\r\n  const onMeasurementRemoved = onMeasurementsChanged.bind(this, 'removed');\r\n  const onMeasurementModified = onMeasurementsChanged.bind(this, 'modified');\r\n  const onLabelmapModified = onMeasurementsChanged.bind(\r\n    this,\r\n    'labelmapModified'\r\n  );\r\n\r\n  const _getDefaultPosition = event => ({\r\n    x: (event && event.currentPoints.client.x) || 0,\r\n    y: (event && event.currentPoints.client.y) || 0,\r\n  });\r\n\r\n  const _updateLabellingHandler = (labellingData, measurementData) => {\r\n    const { location, description, response } = labellingData;\r\n\r\n    if (location) {\r\n      measurementData.location = location;\r\n    }\r\n\r\n    measurementData.description = description || '';\r\n\r\n    if (response) {\r\n      measurementData.response = response;\r\n    }\r\n\r\n    commandsManager.runCommand(\r\n      'updateTableWithNewMeasurementData',\r\n      measurementData\r\n    );\r\n  };\r\n\r\n  const showLabellingDialog = (props, contentProps, measurementData) => {\r\n    if (!UIDialogService) {\r\n      console.warn('Unable to show dialog; no UI Dialog Service available.');\r\n      return;\r\n    }\r\n\r\n    UIDialogService.create({\r\n      id: 'labelling',\r\n      isDraggable: false,\r\n      showOverlay: true,\r\n      centralize: true,\r\n      content: LabellingFlow,\r\n      contentProps: {\r\n        measurementData,\r\n        labellingDoneCallback: () =>\r\n          UIDialogService.dismiss({ id: 'labelling' }),\r\n        updateLabelling: labellingData =>\r\n          _updateLabellingHandler(labellingData, measurementData),\r\n        ...contentProps,\r\n      },\r\n      ...props,\r\n    });\r\n  };\r\n\r\n  const onRightClick = event => {\r\n    if (!UIDialogService) {\r\n      console.warn('Unable to show dialog; no UI Dialog Service available.');\r\n      return;\r\n    }\r\n\r\n    UIDialogService.dismiss({ id: 'context-menu' });\r\n    UIDialogService.create({\r\n      id: 'context-menu',\r\n      isDraggable: false,\r\n      preservePosition: false,\r\n      defaultPosition: _getDefaultPosition(event.detail),\r\n      content: ToolContextMenu,\r\n      contentProps: {\r\n        eventData: event.detail,\r\n        onDelete: (nearbyToolData, eventData) => {\r\n          const element = eventData.element;\r\n          commandsManager.runCommand('removeToolState', {\r\n            element,\r\n            toolType: nearbyToolData.toolType,\r\n            tool: nearbyToolData.tool,\r\n          });\r\n        },\r\n        onClose: () => UIDialogService.dismiss({ id: 'context-menu' }),\r\n        onSetLabel: (eventData, measurementData) => {\r\n          showLabellingDialog(\r\n            { centralize: true, isDraggable: false },\r\n            { skipAddLabelButton: true, editLocation: true },\r\n            measurementData\r\n          );\r\n        },\r\n        onSetDescription: (eventData, measurementData) => {\r\n          showLabellingDialog(\r\n            { defaultPosition: _getDefaultPosition(eventData) },\r\n            { editDescriptionOnDialog: true },\r\n            measurementData\r\n          );\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const onTouchPress = event => {\r\n    if (!UIDialogService) {\r\n      console.warn('Unable to show dialog; no UI Dialog Service available.');\r\n      return;\r\n    }\r\n\r\n    UIDialogService.create({\r\n      eventData: event.detail,\r\n      content: ToolContextMenu,\r\n      contentProps: {\r\n        isTouchEvent: true,\r\n      },\r\n    });\r\n  };\r\n\r\n  const onTouchStart = () => resetLabelligAndContextMenu();\r\n\r\n  const onMouseClick = () => resetLabelligAndContextMenu();\r\n\r\n  const resetLabelligAndContextMenu = () => {\r\n    if (!UIDialogService) {\r\n      console.warn('Unable to show dialog; no UI Dialog Service available.');\r\n      return;\r\n    }\r\n\r\n    UIDialogService.dismiss({ id: 'context-menu' });\r\n    UIDialogService.dismiss({ id: 'labelling' });\r\n  };\r\n\r\n  // TODO: This makes scrolling painfully slow\r\n  // const onNewImage = ...\r\n\r\n  /*\r\n   * Because click gives us the native \"mouse up\", buttons will always be `0`\r\n   * Need to fallback to event.which;\r\n   *\r\n   */\r\n  const handleClick = cornerstoneMouseClickEvent => {\r\n    const mouseUpEvent = cornerstoneMouseClickEvent.detail.event;\r\n    const isRightClick = mouseUpEvent.which === 3;\r\n\r\n    if (isRightClick) {\r\n      onRightClick(cornerstoneMouseClickEvent);\r\n    } else {\r\n      onMouseClick(cornerstoneMouseClickEvent);\r\n    }\r\n  };\r\n\r\n  function elementEnabledHandler(evt) {\r\n    const element = evt.detail.element;\r\n\r\n    element.addEventListener(\r\n      csTools.EVENTS.MEASUREMENT_ADDED,\r\n      onMeasurementAdded\r\n    );\r\n    element.addEventListener(\r\n      csTools.EVENTS.MEASUREMENT_REMOVED,\r\n      onMeasurementRemoved\r\n    );\r\n    element.addEventListener(\r\n      csTools.EVENTS.MEASUREMENT_MODIFIED,\r\n      onMeasurementModified\r\n    );\r\n    element.addEventListener(\r\n      csTools.EVENTS.LABELMAP_MODIFIED,\r\n      onLabelmapModified\r\n    );\r\n\r\n    element.addEventListener(csTools.EVENTS.TOUCH_PRESS, onTouchPress);\r\n    element.addEventListener(csTools.EVENTS.MOUSE_CLICK, handleClick);\r\n    element.addEventListener(csTools.EVENTS.TOUCH_START, onTouchStart);\r\n\r\n    // TODO: This makes scrolling painfully slow\r\n    // element.addEventListener(cornerstone.EVENTS.NEW_IMAGE, onNewImage);\r\n  }\r\n\r\n  function elementDisabledHandler(evt) {\r\n    const element = evt.detail.element;\r\n\r\n    element.removeEventListener(\r\n      csTools.EVENTS.MEASUREMENT_ADDED,\r\n      onMeasurementAdded\r\n    );\r\n    element.removeEventListener(\r\n      csTools.EVENTS.MEASUREMENT_REMOVED,\r\n      onMeasurementRemoved\r\n    );\r\n    element.removeEventListener(\r\n      csTools.EVENTS.MEASUREMENT_MODIFIED,\r\n      onMeasurementModified\r\n    );\r\n    element.removeEventListener(\r\n      csTools.EVENTS.LABELMAP_MODIFIED,\r\n      onLabelmapModified\r\n    );\r\n\r\n    element.removeEventListener(csTools.EVENTS.TOUCH_PRESS, onTouchPress);\r\n    element.removeEventListener(csTools.EVENTS.MOUSE_CLICK, handleClick);\r\n    element.removeEventListener(csTools.EVENTS.TOUCH_START, onTouchStart);\r\n\r\n    // TODO: This makes scrolling painfully slow\r\n    // element.removeEventListener(cornerstone.EVENTS.NEW_IMAGE, onNewImage);\r\n  }\r\n\r\n  cornerstone.events.addEventListener(\r\n    cornerstone.EVENTS.ELEMENT_ENABLED,\r\n    elementEnabledHandler\r\n  );\r\n  cornerstone.events.addEventListener(\r\n    cornerstone.EVENTS.ELEMENT_DISABLED,\r\n    elementDisabledHandler\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ConnectedMeasurementTable from './ConnectedMeasurementTable.js';\r\nimport init from './init.js';\r\n\r\nimport LabellingFlow from '../../components/Labelling/LabellingFlow';\r\n\r\nexport default {\r\n  /**\r\n   * Only required property. Should be a unique value across all extensions.\r\n   */\r\n  id: 'measurements-table',\r\n  get version() {\r\n    return window.version;\r\n  },\r\n\r\n  preRegistration({ servicesManager, commandsManager, configuration = {} }) {\r\n    init({ servicesManager, commandsManager, configuration });\r\n  },\r\n\r\n  getPanelModule({ servicesManager, commandsManager }) {\r\n    const { UINotificationService, UIDialogService } = servicesManager.services;\r\n\r\n    const showLabellingDialog = (props, measurementData) => {\r\n      if (!UIDialogService) {\r\n        console.warn('Unable to show dialog; no UI Dialog Service available.');\r\n        return;\r\n      }\r\n\r\n      UIDialogService.dismiss({ id: 'labelling' });\r\n      UIDialogService.create({\r\n        id: 'labelling',\r\n        centralize: true,\r\n        isDraggable: false,\r\n        showOverlay: true,\r\n        content: LabellingFlow,\r\n        contentProps: {\r\n          measurementData,\r\n          labellingDoneCallback: () =>\r\n            UIDialogService.dismiss({ id: 'labelling' }),\r\n          updateLabelling: ({ location, description, response }) => {\r\n            measurementData.location = location || measurementData.location;\r\n            measurementData.description = description || '';\r\n            measurementData.response = response || measurementData.response;\r\n\r\n            commandsManager.runCommand(\r\n              'updateTableWithNewMeasurementData',\r\n              measurementData\r\n            );\r\n          },\r\n          ...props,\r\n        },\r\n      });\r\n    };\r\n\r\n    const ExtendedConnectedMeasurementTable = () => (\r\n      <ConnectedMeasurementTable\r\n        onRelabel={tool =>\r\n          showLabellingDialog(\r\n            { editLocation: true, skipAddLabelButton: true },\r\n            tool\r\n          )\r\n        }\r\n        onEditDescription={tool =>\r\n          showLabellingDialog({ editDescriptionOnDialog: true }, tool)\r\n        }\r\n        onSaveComplete={message => {\r\n          if (UINotificationService) {\r\n            UINotificationService.show(message);\r\n          }\r\n        }}\r\n      />\r\n    );\r\n    return {\r\n      menuOptions: [\r\n        {\r\n          icon: 'list',\r\n          label: 'Measurements',\r\n          target: 'measurement-panel',\r\n        },\r\n      ],\r\n      components: [\r\n        {\r\n          id: 'measurement-panel',\r\n          component: ExtendedConnectedMeasurementTable,\r\n        },\r\n      ],\r\n      defaultContext: ['VIEWER'],\r\n    };\r\n  },\r\n};\r\n","import React from 'react';\r\n\r\nconst Bar = ({ progress, animationDuration }) => (\r\n  <div\r\n    style={{\r\n      background: '#29d',\r\n      height: 2,\r\n      left: 0,\r\n      marginLeft: `${(-1 + progress) * 100}%`,\r\n      position: 'fixed',\r\n      top: 0,\r\n      transition: `margin-left ${animationDuration}ms linear`,\r\n      width: '100%',\r\n      zIndex: 1031,\r\n    }}\r\n  >\r\n    <div\r\n      style={{\r\n        boxShadow: '0 0 10px #29d, 0 0 5px #29d',\r\n        display: 'block',\r\n        height: '100%',\r\n        opacity: 1,\r\n        position: 'absolute',\r\n        right: 0,\r\n        transform: 'rotate(3deg) translate(0px, -4px)',\r\n        width: 100,\r\n      }}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default Bar;\r\n","import React from 'react';\r\n\r\nconst Container = ({ children, isFinished, animationDuration }) => (\r\n  <div\r\n    style={{\r\n      opacity: isFinished ? 0 : 1,\r\n      pointerEvents: 'none',\r\n      transition: `opacity ${animationDuration}ms linear`,\r\n    }}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Container;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter, matchPath } from 'react-router';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { NProgress } from '@tanem/react-nprogress';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport { ViewerbaseDragDropContext, ErrorBoundary, asyncComponent, retryImport } from '@ohif/ui';\r\nimport { SignoutCallbackComponent } from 'redux-oidc';\r\nimport * as RoutesUtil from './routes/routesUtil';\r\n\r\nimport NotFound from './routes/NotFound.js';\r\nimport { Bar, Container } from './components/LoadingBar/';\r\nimport './OHIFStandaloneViewer.css';\r\nimport './variables.css';\r\nimport './theme-tide.css';\r\n// Contexts\r\nimport AppContext from './context/AppContext';\r\nconst CallbackPage = asyncComponent(() =>\r\n  retryImport(() => import(/* webpackChunkName: \"CallbackPage\" */ './routes/CallbackPage.js'))\r\n);\r\n\r\nclass OHIFStandaloneViewer extends Component {\r\n  static contextType = AppContext;\r\n  state = {\r\n    isLoading: false,\r\n  };\r\n\r\n  static propTypes = {\r\n    history: PropTypes.object.isRequired,\r\n    user: PropTypes.object,\r\n    setContext: PropTypes.func,\r\n    userManager: PropTypes.object,\r\n    location: PropTypes.object,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.unlisten = this.props.history.listen((location, action) => {\r\n      if (this.props.setContext) {\r\n        this.props.setContext(window.location.pathname);\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unlisten();\r\n  }\r\n\r\n  render() {\r\n    const { user, userManager } = this.props;\r\n    const { appConfig = {} } = this.context;\r\n    const userNotLoggedIn = userManager && (!user || user.expired);\r\n    if (userNotLoggedIn) {\r\n      const { pathname, search } = this.props.location;\r\n\r\n      if (pathname !== '/callback') {\r\n        sessionStorage.setItem(\r\n          'ohif-redirect-to',\r\n          JSON.stringify({ pathname, search })\r\n        );\r\n      }\r\n\r\n      return (\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/silent-refresh.html\"\r\n            onEnter={RoutesUtil.reload}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/logout-redirect\"\r\n            render={() => (\r\n              <SignoutCallbackComponent\r\n                userManager={userManager}\r\n                successCallback={() => console.log('Signout successful')}\r\n                errorCallback={error => {\r\n                  console.warn(error);\r\n                  console.warn('Signout failed');\r\n                }}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/callback\"\r\n            render={() => <CallbackPage userManager={userManager} />}\r\n          />\r\n          <Route\r\n            path=\"/login\"\r\n            component={() => {\r\n              const queryParams = new URLSearchParams(\r\n                this.props.location.search\r\n              );\r\n              const iss = queryParams.get('iss');\r\n              const loginHint = queryParams.get('login_hint');\r\n              const targetLinkUri = queryParams.get('target_link_uri');\r\n              const oidcAuthority =\r\n                appConfig.oidc !== null && appConfig.oidc[0].authority;\r\n              if (iss !== oidcAuthority) {\r\n                console.error(\r\n                  'iss of /login does not match the oidc authority'\r\n                );\r\n                return null;\r\n              }\r\n\r\n              userManager.removeUser().then(() => {\r\n                if (targetLinkUri !== null) {\r\n                  const ohifRedirectTo = {\r\n                    pathname: new URL(targetLinkUri).pathname,\r\n                  };\r\n                  sessionStorage.setItem(\r\n                    'ohif-redirect-to',\r\n                    JSON.stringify(ohifRedirectTo)\r\n                  );\r\n                } else {\r\n                  const ohifRedirectTo = {\r\n                    pathname: '/',\r\n                  };\r\n                  sessionStorage.setItem(\r\n                    'ohif-redirect-to',\r\n                    JSON.stringify(ohifRedirectTo)\r\n                  );\r\n                }\r\n\r\n                if (loginHint !== null) {\r\n                  userManager.signinRedirect({ login_hint: loginHint });\r\n                } else {\r\n                  userManager.signinRedirect();\r\n                }\r\n              });\r\n\r\n              return null;\r\n            }}\r\n          />\r\n          <Route\r\n            component={() => {\r\n              userManager.getUser().then(user => {\r\n                if (user) {\r\n                  userManager.signinSilent();\r\n                } else {\r\n                  userManager.signinRedirect();\r\n                }\r\n              });\r\n\r\n              return null;\r\n            }}\r\n          />\r\n        </Switch>\r\n      );\r\n    }\r\n\r\n    /**\r\n     * Note: this approach for routing is caused by the conflict between\r\n     * react-transition-group and react-router's <Switch> component.\r\n     *\r\n     * See http://reactcommunity.org/react-transition-group/with-react-router/\r\n     */\r\n    const routes = RoutesUtil.getRoutes(appConfig);\r\n\r\n    const currentPath = this.props.location.pathname;\r\n    const noMatchingRoutes = !routes.find(r =>\r\n      matchPath(currentPath, {\r\n        path: r.path,\r\n        exact: true,\r\n      })\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <NProgress isAnimating={this.state.isLoading}>\r\n          {({ isFinished, progress, animationDuration }) => (\r\n            <Container\r\n              isFinished={isFinished}\r\n              animationDuration={animationDuration}\r\n            >\r\n              <Bar progress={progress} animationDuration={animationDuration} />\r\n            </Container>\r\n          )}\r\n        </NProgress>\r\n        <Route exact path=\"/silent-refresh.html\" onEnter={RoutesUtil.reload} />\r\n        <Route exact path=\"/logout-redirect.html\" onEnter={RoutesUtil.reload} />\r\n        {!noMatchingRoutes &&\r\n          routes.map(({ path, Component }) => (\r\n            <Route key={path} exact path={path}>\r\n              {({ match }) => (\r\n                <CSSTransition\r\n                  in={match !== null}\r\n                  timeout={300}\r\n                  classNames=\"fade\"\r\n                  unmountOnExit\r\n                  onEnter={() => {\r\n                    this.setState({\r\n                      isLoading: true,\r\n                    });\r\n                  }}\r\n                  onEntered={() => {\r\n                    this.setState({\r\n                      isLoading: false,\r\n                    });\r\n                  }}\r\n                >\r\n                  {match === null ? (\r\n                    <></>\r\n                  ) : (\r\n                      <ErrorBoundary context={match.url}>\r\n                        <Component match={match} location={this.props.location} />\r\n                      </ErrorBoundary>\r\n                    )}\r\n                </CSSTransition>\r\n              )}\r\n            </Route>\r\n          ))}\r\n        {noMatchingRoutes && <NotFound />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.oidc.user,\r\n  };\r\n};\r\n\r\nconst ConnectedOHIFStandaloneViewer = connect(\r\n  mapStateToProps,\r\n  null\r\n)(OHIFStandaloneViewer);\r\n\r\nexport default ViewerbaseDragDropContext(\r\n  withRouter(ConnectedOHIFStandaloneViewer)\r\n);\r\n","import React, { Component } from 'react';\r\nimport { OidcProvider } from 'redux-oidc';\r\nimport { I18nextProvider } from 'react-i18next';\r\nimport PropTypes from 'prop-types';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { hot } from 'react-hot-loader/root';\r\n\r\nimport OHIFCornerstoneExtension from '@ohif/extension-cornerstone';\r\n\r\nimport {\r\n  SnackbarProvider,\r\n  ModalProvider,\r\n  DialogProvider,\r\n  OHIFModal,\r\n  LoggerProvider,\r\n  ErrorBoundary,\r\n} from '@ohif/ui';\r\n\r\nimport {\r\n  CommandsManager,\r\n  ExtensionManager,\r\n  ServicesManager,\r\n  HotkeysManager,\r\n  UINotificationService,\r\n  UIModalService,\r\n  UIDialogService,\r\n  LoggerService,\r\n  MeasurementService,\r\n  utils,\r\n  redux as reduxOHIF,\r\n} from '@ohif/core';\r\n\r\nimport i18n from '@ohif/i18n';\r\n\r\n// TODO: This should not be here\r\n//import './config';\r\nimport { setConfiguration } from './config';\r\n\r\n/** Utils */\r\nimport {\r\n  getUserManagerForOpenIdConnectClient,\r\n  initWebWorkers,\r\n} from './utils/index.js';\r\n\r\n/** Extensions */\r\nimport { GenericViewerCommands, MeasurementsPanel } from './appExtensions';\r\n\r\n/** Viewer */\r\nimport OHIFStandaloneViewer from './OHIFStandaloneViewer';\r\n\r\n/** Store */\r\nimport { getActiveContexts } from './store/layout/selectors.js';\r\nimport store from './store';\r\n\r\n/** Contexts */\r\nimport WhiteLabelingContext from './context/WhiteLabelingContext';\r\nimport UserManagerContext from './context/UserManagerContext';\r\nimport { AppProvider, useAppContext, CONTEXTS } from './context/AppContext';\r\n\r\n/** ~~~~~~~~~~~~~ Application Setup */\r\nconst commandsManagerConfig = {\r\n  getAppState: () => store.getState(),\r\n  getActiveContexts: () => getActiveContexts(store.getState()),\r\n};\r\n\r\n/** Managers */\r\nconst commandsManager = new CommandsManager(commandsManagerConfig);\r\nconst servicesManager = new ServicesManager();\r\nconst hotkeysManager = new HotkeysManager(commandsManager, servicesManager);\r\nlet extensionManager;\r\n/** ~~~~~~~~~~~~~ End Application Setup */\r\n\r\n// TODO[react] Use a provider when the whole tree is React\r\nwindow.store = store;\r\n\r\nwindow.ohif = window.ohif || {};\r\nwindow.ohif.app = {\r\n  commandsManager,\r\n  hotkeysManager,\r\n  servicesManager,\r\n  extensionManager,\r\n};\r\n\r\nclass App extends Component {\r\n  static propTypes = {\r\n    config: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.shape({\r\n        routerBasename: PropTypes.string.isRequired,\r\n        oidc: PropTypes.array,\r\n        whiteLabeling: PropTypes.shape({\r\n          createLogoComponentFn: PropTypes.func,\r\n        }),\r\n        extensions: PropTypes.array,\r\n      }),\r\n    ]).isRequired,\r\n    defaultExtensions: PropTypes.array,\r\n  };\r\n\r\n  static defaultProps = {\r\n    config: {\r\n      showStudyList: true,\r\n      oidc: [],\r\n      extensions: [],\r\n    },\r\n    defaultExtensions: [],\r\n  };\r\n\r\n  _appConfig;\r\n  _userManager;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { config, defaultExtensions } = props;\r\n\r\n    const appDefaultConfig = {\r\n      showStudyList: true,\r\n      cornerstoneExtensionConfig: {},\r\n      extensions: [],\r\n      routerBasename: '/',\r\n    };\r\n\r\n    this._appConfig = {\r\n      ...appDefaultConfig,\r\n      ...(typeof config === 'function' ? config({ servicesManager }) : config),\r\n    };\r\n\r\n    const {\r\n      servers,\r\n      hotkeys: appConfigHotkeys,\r\n      cornerstoneExtensionConfig,\r\n      extensions,\r\n      oidc,\r\n    } = this._appConfig;\r\n\r\n    setConfiguration(this._appConfig);\r\n\r\n    this.initUserManager(oidc);\r\n    _initServices([\r\n      UINotificationService,\r\n      UIModalService,\r\n      UIDialogService,\r\n      MeasurementService,\r\n      LoggerService,\r\n    ]);\r\n    _initExtensions(\r\n      [...defaultExtensions, ...extensions],\r\n      cornerstoneExtensionConfig,\r\n      this._appConfig\r\n    );\r\n\r\n    /*\r\n     * Must run after extension commands are registered\r\n     * if there is no hotkeys from localStorage set up from config.\r\n     */\r\n    _initHotkeys(appConfigHotkeys);\r\n    _initServers(servers);\r\n    initWebWorkers();\r\n  }\r\n\r\n  render() {\r\n    const { whiteLabeling, routerBasename } = this._appConfig;\r\n    const {\r\n      UINotificationService,\r\n      UIDialogService,\r\n      UIModalService,\r\n      MeasurementService,\r\n      LoggerService,\r\n    } = servicesManager.services;\r\n\r\n    if (this._userManager) {\r\n      return (\r\n        <ErrorBoundary context=\"App\">\r\n          <Provider store={store}>\r\n            <AppProvider config={this._appConfig}>\r\n              <I18nextProvider i18n={i18n}>\r\n                <OidcProvider store={store} userManager={this._userManager}>\r\n                  <UserManagerContext.Provider value={this._userManager}>\r\n                    <Router basename={routerBasename}>\r\n                      <WhiteLabelingContext.Provider value={whiteLabeling}>\r\n                        <LoggerProvider service={LoggerService}>\r\n                          <SnackbarProvider service={UINotificationService}>\r\n                            <DialogProvider service={UIDialogService}>\r\n                              <ModalProvider\r\n                                modal={OHIFModal}\r\n                                service={UIModalService}\r\n                              >\r\n                                <OHIFStandaloneViewer\r\n                                  userManager={this._userManager}\r\n                                />\r\n                              </ModalProvider>\r\n                            </DialogProvider>\r\n                          </SnackbarProvider>\r\n                        </LoggerProvider>\r\n                      </WhiteLabelingContext.Provider>\r\n                    </Router>\r\n                  </UserManagerContext.Provider>\r\n                </OidcProvider>\r\n              </I18nextProvider>\r\n            </AppProvider>\r\n          </Provider>\r\n        </ErrorBoundary>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <ErrorBoundary context=\"App\">\r\n        <Provider store={store}>\r\n          <AppProvider config={this._appConfig}>\r\n            <I18nextProvider i18n={i18n}>\r\n              <Router basename={routerBasename}>\r\n                <WhiteLabelingContext.Provider value={whiteLabeling}>\r\n                  <LoggerProvider service={LoggerService}>\r\n                    <SnackbarProvider service={UINotificationService}>\r\n                      <DialogProvider service={UIDialogService}>\r\n                        <ModalProvider\r\n                          modal={OHIFModal}\r\n                          service={UIModalService}\r\n                        >\r\n                          <OHIFStandaloneViewer />\r\n                        </ModalProvider>\r\n                      </DialogProvider>\r\n                    </SnackbarProvider>\r\n                  </LoggerProvider>\r\n                </WhiteLabelingContext.Provider>\r\n              </Router>\r\n            </I18nextProvider>\r\n          </AppProvider>\r\n        </Provider>\r\n      </ErrorBoundary>\r\n    );\r\n  }\r\n\r\n  initUserManager(oidc) {\r\n    if (oidc && !!oidc.length) {\r\n      const firstOpenIdClient = this._appConfig.oidc[0];\r\n\r\n      const { protocol, host } = window.location;\r\n      const { routerBasename } = this._appConfig;\r\n      const baseUri = `${protocol}//${host}${routerBasename}`;\r\n\r\n      const redirect_uri = firstOpenIdClient.redirect_uri || '/callback';\r\n      const silent_redirect_uri =\r\n        firstOpenIdClient.silent_redirect_uri || '/silent-refresh.html';\r\n      const post_logout_redirect_uri =\r\n        firstOpenIdClient.post_logout_redirect_uri || '/';\r\n\r\n      const openIdConnectConfiguration = Object.assign({}, firstOpenIdClient, {\r\n        redirect_uri: _makeAbsoluteIfNecessary(redirect_uri, baseUri),\r\n        silent_redirect_uri: _makeAbsoluteIfNecessary(\r\n          silent_redirect_uri,\r\n          baseUri\r\n        ),\r\n        post_logout_redirect_uri: _makeAbsoluteIfNecessary(\r\n          post_logout_redirect_uri,\r\n          baseUri\r\n        ),\r\n      });\r\n\r\n      this._userManager = getUserManagerForOpenIdConnectClient(\r\n        store,\r\n        openIdConnectConfiguration\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction _initServices(services) {\r\n  servicesManager.registerServices(services);\r\n}\r\n\r\n/**\r\n * @param\r\n */\r\nfunction _initExtensions(extensions, cornerstoneExtensionConfig, appConfig) {\r\n  extensionManager = new ExtensionManager({\r\n    commandsManager,\r\n    servicesManager,\r\n    appConfig,\r\n    api: {\r\n      contexts: CONTEXTS,\r\n      hooks: {\r\n        useAppContext,\r\n      },\r\n    },\r\n  });\r\n\r\n  const requiredExtensions = [\r\n    GenericViewerCommands,\r\n    [OHIFCornerstoneExtension, cornerstoneExtensionConfig],\r\n  ];\r\n\r\n  if (appConfig.disableMeasurementPanel !== true) {\r\n    /* WARNING: MUST BE REGISTERED _AFTER_ OHIFCornerstoneExtension */\r\n    requiredExtensions.push(MeasurementsPanel);\r\n  }\r\n\r\n  const mergedExtensions = requiredExtensions.concat(extensions);\r\n  extensionManager.registerExtensions(mergedExtensions);\r\n}\r\n\r\n/**\r\n *\r\n * @param {Object} appConfigHotkeys - Default hotkeys, as defined by app config\r\n */\r\nfunction _initHotkeys(appConfigHotkeys) {\r\n  // TODO: Use something more resilient\r\n  // TODO: Mozilla has a special library for this\r\n  const userPreferredHotkeys = JSON.parse(\r\n    localStorage.getItem('hotkey-definitions') || '{}'\r\n  );\r\n\r\n  // TODO: hotkeysManager.isValidDefinitionObject(/* */)\r\n  const hasUserPreferences =\r\n    userPreferredHotkeys && Object.keys(userPreferredHotkeys).length > 0;\r\n  if (hasUserPreferences) {\r\n    hotkeysManager.setHotkeys(userPreferredHotkeys);\r\n  } else {\r\n    hotkeysManager.setHotkeys(appConfigHotkeys);\r\n  }\r\n\r\n  hotkeysManager.setDefaultHotKeys(appConfigHotkeys);\r\n}\r\n\r\nfunction _initServers(servers) {\r\n  if (servers) {\r\n    utils.addServers(servers, store);\r\n  }\r\n}\r\n\r\nfunction _isAbsoluteUrl(url) {\r\n  return url.includes('http://') || url.includes('https://');\r\n}\r\n\r\nfunction _makeAbsoluteIfNecessary(url, base_url) {\r\n  if (_isAbsoluteUrl(url)) {\r\n    return url;\r\n  }\r\n\r\n  /*\r\n   * Make sure base_url and url are not duplicating slashes.\r\n   */\r\n  if (base_url[base_url.length - 1] === '/') {\r\n    base_url = base_url.slice(0, base_url.length - 1);\r\n  }\r\n\r\n  return base_url + url;\r\n}\r\n\r\n/*\r\n * Only wrap/use hot if in dev.\r\n */\r\nconst ExportedApp = process.env.NODE_ENV === 'development' ? hot(App) : App;\r\n\r\nexport default ExportedApp;\r\nexport { commandsManager, extensionManager, hotkeysManager, servicesManager };\r\n","import OHIF from '@ohif/core';\r\nimport cornerstone from 'cornerstone-core';\r\nimport cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\r\nimport dicomParser from 'dicom-parser';\r\nimport version from './version.js';\r\nimport AppContext from './context/AppContext';\r\n\r\nexport function setConfiguration(appConfig) {\r\n  let homepage;\r\n  const { process } = window;\r\n  if (process && process.env && process.env.PUBLIC_URL) {\r\n    homepage = process.env.PUBLIC_URL;\r\n  }\r\n\r\n  window.info = {\r\n    version,\r\n    homepage,\r\n  };\r\n\r\n  // For debugging\r\n  //if (process.env.node_env === 'development') {\r\n  window.cornerstone = cornerstone;\r\n  window.cornerstoneWADOImageLoader = cornerstoneWADOImageLoader;\r\n  //}\r\n\r\n  cornerstoneWADOImageLoader.external.cornerstone = cornerstone;\r\n  cornerstoneWADOImageLoader.external.dicomParser = dicomParser;\r\n\r\n  OHIF.user.getAccessToken = () => {\r\n    // TODO: Get the Redux store from somewhere else\r\n    const state = window.store.getState();\r\n    if (!state.oidc || !state.oidc.user) {\r\n      return;\r\n    }\r\n\r\n    return state.oidc.user.access_token;\r\n  };\r\n\r\n  OHIF.errorHandler.getHTTPErrorHandler = () => {\r\n    // const { appConfig = {} } = AppContext;\r\n\r\n    return appConfig.httpErrorHandler;\r\n  };\r\n\r\n  cornerstoneWADOImageLoader.configure({\r\n    beforeSend: function(xhr) {\r\n      const headers = OHIF.DICOMWeb.getAuthorizationHeader();\r\n\r\n      if (headers.Authorization) {\r\n        xhr.setRequestHeader('Authorization', headers.Authorization);\r\n      }\r\n    },\r\n    errorInterceptor: error => {\r\n      // const { appConfig = {} } = AppContext;\r\n\r\n      if (typeof appConfig.httpErrorHandler === 'function') {\r\n        appConfig.httpErrorHandler(error);\r\n      }\r\n    },\r\n  });\r\n}\r\n","import React from 'react';\r\nimport './NotFound.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAppContext } from '../context/AppContext';\r\n\r\nexport default function NotFound({ message = 'Sorry, this page does not exist.', showGoBackButton = true }) {\r\n  \r\n  const context = useAppContext();\r\n  \r\n  return (\r\n    <div className={'not-found'}>\r\n      <div>\r\n        <h4>{message}</h4>\r\n        {showGoBackButton && context.appConfig.showStudyList && (\r\n          <h5>\r\n            <Link to={'/'}>Go back to the Study List</Link>\r\n          </h5>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Thumbnail } from './Thumbnail.js';\r\nimport './StudyBrowser.styl';\r\n\r\nfunction StudyBrowser(props) {\r\n  const {\r\n    studies,\r\n    onThumbnailClick,\r\n    onThumbnailDoubleClick,\r\n    supportsDrag,\r\n    showThumbnailProgressBar,\r\n  } = props;\r\n\r\n  return (\r\n    <div className=\"study-browser\">\r\n      <div className=\"scrollable-study-thumbnails\">\r\n        {studies\r\n          .map((study, studyIndex) => {\r\n            const { StudyInstanceUID } = study;\r\n            return study.thumbnails.map((thumb, thumbIndex) => {\r\n              // TODO: Thumb has more props than we care about?\r\n              const {\r\n                active,\r\n                altImageText,\r\n                displaySetInstanceUID,\r\n                imageId,\r\n                derivedDisplaySetsNumber,\r\n                numImageFrames,\r\n                SeriesDescription,\r\n                SeriesNumber,\r\n                hasWarnings,\r\n                hasDerivedDisplaySets,\r\n              } = thumb;\r\n\r\n              return (\r\n                <div\r\n                  key={thumb.displaySetInstanceUID}\r\n                  className=\"thumbnail-container\"\r\n                  data-cy=\"thumbnail-list\"\r\n                >\r\n                  <Thumbnail\r\n                    active={active}\r\n                    supportsDrag={supportsDrag}\r\n                    key={`${studyIndex}_${thumbIndex}`}\r\n                    id={`${studyIndex}_${thumbIndex}`} // Unused?\r\n                    // Study\r\n                    StudyInstanceUID={StudyInstanceUID} // used by drop\r\n                    // Thumb\r\n                    altImageText={altImageText}\r\n                    imageId={imageId}\r\n                    derivedDisplaySetsNumber={derivedDisplaySetsNumber}\r\n                    displaySetInstanceUID={displaySetInstanceUID} // used by drop\r\n                    numImageFrames={numImageFrames}\r\n                    SeriesDescription={SeriesDescription}\r\n                    SeriesNumber={SeriesNumber}\r\n                    hasWarnings={hasWarnings}\r\n                    hasDerivedDisplaySets={hasDerivedDisplaySets}\r\n                    // Events\r\n                    onClick={onThumbnailClick.bind(\r\n                      undefined,\r\n                      displaySetInstanceUID\r\n                    )}\r\n                    onDoubleClick={onThumbnailDoubleClick}\r\n                    showProgressBar={showThumbnailProgressBar}\r\n                  />\r\n                </div>\r\n              );\r\n            });\r\n          })\r\n          .flat()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst noop = () => {};\r\n\r\nStudyBrowser.propTypes = {\r\n  studies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      StudyInstanceUID: PropTypes.string.isRequired,\r\n      thumbnails: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          altImageText: PropTypes.string,\r\n          displaySetInstanceUID: PropTypes.string.isRequired,\r\n          imageId: PropTypes.string,\r\n          derivedDisplaySetsNumber: PropTypes.number,\r\n          numImageFrames: PropTypes.number,\r\n          SeriesDescription: PropTypes.string,\r\n          SeriesNumber: PropTypes.number,\r\n          stackPercentComplete: PropTypes.number,\r\n        })\r\n      ),\r\n    })\r\n  ).isRequired,\r\n  supportsDrag: PropTypes.bool,\r\n  onThumbnailClick: PropTypes.func,\r\n  onThumbnailDoubleClick: PropTypes.func,\r\n  showThumbnailProgressBar: PropTypes.bool,\r\n};\r\n\r\nStudyBrowser.defaultProps = {\r\n  studies: [],\r\n  supportsDrag: true,\r\n  onThumbnailClick: noop,\r\n  onThumbnailDoubleClick: noop,\r\n  showThumbnailProgressBar: true,\r\n};\r\n\r\nexport { StudyBrowser };\r\n","const id = 'org.ohif.dicom-sr';\r\n\r\nexport default id;\r\n\r\nconst SOPClassHandlerName = 'dicom-sr';\r\nconst SOPClassHandlerId = `${id}.sopClassHandlerModule.${SOPClassHandlerName}`;\r\nexport { SOPClassHandlerName, SOPClassHandlerId };\r\n","import React from 'react';\r\n\r\nconst UserManagerContext = React.createContext();\r\n\r\nexport default UserManagerContext;\r\n","import './OHIFLogo.css';\r\n\r\nimport { Icon } from '@ohif/ui';\r\nimport React from 'react';\r\n\r\nfunction OHIFLogo() {\r\n  return (\r\n    <a\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n      className=\"header-brand\"\r\n      href=\"http://ohif.org\"\r\n    >\r\n      <Icon name=\"ohif-logo\" className=\"header-logo-image\" />\r\n      {/* Logo text would fit smaller displays at two lines:\r\n       *\r\n       * Open Health\r\n       * Imaging Foundation\r\n       *\r\n       * Or as `OHIF` on really small displays\r\n       */}\r\n      <Icon name=\"ohif-text-logo\" className=\"header-logo-text\" />\r\n    </a>\r\n  );\r\n}\r\n\r\nexport default OHIFLogo;\r\n","export default {\r\n  COMMANDS: 'commandsModule',\r\n  PANEL: 'panelModule',\r\n  SOP_CLASS_HANDLER: 'sopClassHandlerModule',\r\n  TOOLBAR: 'toolbarModule',\r\n  VIEWPORT: 'viewportModule',\r\n};\r\n","import React, { useEffect, useCallback } from 'react';\r\nimport { View2D } from 'react-vtkjs-viewport';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './VTKViewport.css';\r\n\r\nconst VTKViewport = props => {\r\n  const style = { width: '100%', height: '100%', position: 'relative' };\r\n\r\n  const setViewportActiveHandler = useCallback(() => {\r\n    const { setViewportActive, viewportIndex, activeViewportIndex } = props;\r\n\r\n    if (viewportIndex !== activeViewportIndex) {\r\n      // set in Connected\r\n      setViewportActive();\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    const handleScrollEvent = evt => {\r\n      const vtkViewportApiReference = props.onScroll(props.viewportIndex) || {};\r\n      const viewportUID = vtkViewportApiReference.uid;\r\n      const viewportWasScrolled = viewportUID === evt.detail.uid;\r\n\r\n      if (viewportWasScrolled) {\r\n        setViewportActiveHandler();\r\n      }\r\n    };\r\n\r\n    window.addEventListener('vtkscrollevent', handleScrollEvent);\r\n    return () =>\r\n      window.removeEventListener('vtkscrollevent', handleScrollEvent);\r\n  }, [props, props.onScroll, props.viewportIndex, setViewportActiveHandler]);\r\n\r\n  return (\r\n    <div\r\n      className=\"vtk-viewport-handler\"\r\n      style={style}\r\n      onClick={setViewportActiveHandler}\r\n    >\r\n      <View2D {...props} />\r\n    </div>\r\n  );\r\n};\r\n\r\nVTKViewport.propTypes = {\r\n  setViewportActive: PropTypes.func.isRequired,\r\n  viewportIndex: PropTypes.number.isRequired,\r\n  activeViewportIndex: PropTypes.number.isRequired,\r\n  /* Receives viewportIndex */\r\n  onScroll: PropTypes.func,\r\n};\r\n\r\nVTKViewport.defaultProps = {\r\n  onScroll: () => {},\r\n};\r\n\r\nexport default VTKViewport;\r\n","import OHIF from '@ohif/core';\r\nimport { connect } from 'react-redux';\r\nimport VTKViewport from './VTKViewport';\r\n\r\nconst { setViewportActive, setViewportSpecificData } = OHIF.redux.actions;\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  let dataFromStore;\r\n\r\n  if (state.extensions && state.extensions.vtk) {\r\n    dataFromStore = state.extensions.vtk;\r\n  }\r\n\r\n  // If this is the active viewport, enable prefetching.\r\n  const { viewportIndex } = ownProps;\r\n  const isActive = viewportIndex === state.viewports.activeViewportIndex;\r\n  const viewportLayout = state.viewports.layout.viewports[viewportIndex];\r\n  const pluginDetails = viewportLayout.vtk || {};\r\n\r\n  return {\r\n    activeViewportIndex: state.viewports.activeViewportIndex,\r\n    layout: state.viewports.layout,\r\n    isActive,\r\n    ...pluginDetails,\r\n    // Hopefully this doesn't break anything under the hood for this one\r\n    // activeTool: activeButton && activeButton.command,\r\n    ...dataFromStore,\r\n    enableStackPrefetch: isActive,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  const { viewportIndex } = ownProps;\r\n\r\n  return {\r\n    setViewportActive: () => {\r\n      dispatch(setViewportActive(viewportIndex));\r\n    },\r\n\r\n    setViewportSpecificData: data => {\r\n      dispatch(setViewportSpecificData(viewportIndex, data));\r\n    },\r\n  };\r\n};\r\n\r\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\r\n  const { afterCreation } = propsFromState;\r\n\r\n  const props = {\r\n    ...propsFromState,\r\n    ...propsFromDispatch,\r\n    ...ownProps,\r\n    /**\r\n     * Our component sets up the underlying dom element on \"componentDidMount\"\r\n     * for use with VTK.\r\n     *\r\n     * The onCreated prop passes back an Object containing many of the internal\r\n     * components of the VTK scene. We can grab a reference to these here, to\r\n     * make playing with VTK's native methods easier.\r\n     *\r\n     * A similar approach is taken with the Cornerstone extension.\r\n     */\r\n    onCreated: api => {\r\n      // Store the API details for later\r\n      //setViewportSpecificData({ vtkApi: api });\r\n\r\n      if (afterCreation && typeof afterCreation === 'function') {\r\n        afterCreation(api);\r\n      }\r\n    },\r\n  };\r\n  return props;\r\n};\r\n\r\nconst ConnectedVTKViewport = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n  mergeProps\r\n)(VTKViewport);\r\n\r\nexport default ConnectedVTKViewport;\r\n","import './LoadingIndicator.css';\r\n\r\nimport React, { PureComponent } from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass LoadingIndicator extends PureComponent {\r\n  static propTypes = {\r\n    percentComplete: PropTypes.number.isRequired,\r\n    error: PropTypes.object,\r\n  };\r\n\r\n  static defaultProps = {\r\n    percentComplete: 0,\r\n    error: null,\r\n  };\r\n\r\n  render() {\r\n    let percComplete;\r\n    if (this.props.percentComplete && this.props.percentComplete !== 100) {\r\n      percComplete = `${this.props.percentComplete}%`;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.error ? (\r\n          <div className=\"imageViewerErrorLoadingIndicator loadingIndicator\">\r\n            <div className=\"indicatorContents\">\r\n              <h4>Error Loading Image</h4>\r\n              <p className=\"description\">An error has occurred.</p>\r\n              <p className=\"details\">{this.props.error.message}</p>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"imageViewerLoadingIndicator loadingIndicator\">\r\n            <div className=\"indicatorContents\">\r\n              <p>\r\n                {this.props.t('Loading...')}\r\n                <i className=\"fa fa-spin fa-circle-o-notch fa-fw\" />\r\n                {percComplete}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation('Common')(LoadingIndicator);\r\n","import React, { Component } from 'react';\r\nimport { getImageData, loadImageData } from 'react-vtkjs-viewport';\r\nimport ConnectedVTKViewport from './ConnectedVTKViewport';\r\nimport LoadingIndicator from './LoadingIndicator.js';\r\nimport OHIF from '@ohif/core';\r\nimport PropTypes from 'prop-types';\r\nimport cornerstone from 'cornerstone-core';\r\nimport cornerstoneTools from 'cornerstone-tools';\r\nimport vtkDataArray from 'vtk.js/Sources/Common/Core/DataArray';\r\nimport vtkImageData from 'vtk.js/Sources/Common/DataModel/ImageData';\r\nimport vtkVolume from 'vtk.js/Sources/Rendering/Core/Volume';\r\nimport vtkVolumeMapper from 'vtk.js/Sources/Rendering/Core/VolumeMapper';\r\n\r\nconst segmentationModule = cornerstoneTools.getModule('segmentation');\r\n\r\nconst { StackManager } = OHIF.utils;\r\n\r\n// TODO: Figure out where we plan to put this long term\r\nconst volumeCache = {};\r\nconst labelmapCache = {};\r\n\r\n/**\r\n * Create a labelmap image with the same dimensions as our background volume.\r\n *\r\n * @param backgroundImageData vtkImageData\r\n */\r\n/* TODO: Not currently used until we have drawing tools in vtkjs.\r\nfunction createLabelMapImageData(backgroundImageData) {\r\n  // TODO => Need to do something like this if we start drawing a new segmentation\r\n  // On a vtkjs viewport.\r\n\r\n  const labelMapData = vtkImageData.newInstance(\r\n    backgroundImageData.get('spacing', 'origin', 'direction')\r\n  );\r\n  labelMapData.setDimensions(backgroundImageData.getDimensions());\r\n  labelMapData.computeTransforms();\r\n\r\n  const values = new Uint8Array(backgroundImageData.getNumberOfPoints());\r\n  const dataArray = vtkDataArray.newInstance({\r\n    numberOfComponents: 1, // labelmap with single component\r\n    values,\r\n  });\r\n  labelMapData.getPointData().setScalars(dataArray);\r\n\r\n  return labelMapData;\r\n} */\r\n\r\nclass OHIFVTKViewport extends Component {\r\n  state = {\r\n    volumes: null,\r\n    paintFilterLabelMapImageData: null,\r\n    paintFilterBackgroundImageData: null,\r\n    percentComplete: 0,\r\n    isLoaded: false,\r\n  };\r\n\r\n  static propTypes = {\r\n    viewportData: PropTypes.shape({\r\n      studies: PropTypes.array.isRequired,\r\n      displaySet: PropTypes.shape({\r\n        StudyInstanceUID: PropTypes.string.isRequired,\r\n        displaySetInstanceUID: PropTypes.string.isRequired,\r\n        sopClassUIDs: PropTypes.arrayOf(PropTypes.string),\r\n        SOPInstanceUID: PropTypes.string,\r\n        frameIndex: PropTypes.number,\r\n      }),\r\n    }),\r\n    viewportIndex: PropTypes.number.isRequired,\r\n    children: PropTypes.node,\r\n    onScroll: PropTypes.func,\r\n    servicesManager: PropTypes.object.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    onScroll: () => { },\r\n  };\r\n\r\n  static id = 'OHIFVTKViewport';\r\n\r\n  static init() {\r\n    console.log('OHIFVTKViewport init()');\r\n  }\r\n\r\n  static destroy() {\r\n    console.log('OHIFVTKViewport destroy()');\r\n    StackManager.clearStacks();\r\n  }\r\n\r\n  static getCornerstoneStack(\r\n    studies,\r\n    StudyInstanceUID,\r\n    displaySetInstanceUID,\r\n    SOPInstanceUID,\r\n    frameIndex\r\n  ) {\r\n    // Create shortcut to displaySet\r\n    const study = studies.find(\r\n      study => study.StudyInstanceUID === StudyInstanceUID\r\n    );\r\n\r\n    const displaySet = study.displaySets.find(set => {\r\n      return set.displaySetInstanceUID === displaySetInstanceUID;\r\n    });\r\n\r\n    // Get stack from Stack Manager\r\n    const storedStack = StackManager.findOrCreateStack(study, displaySet);\r\n\r\n    // Clone the stack here so we don't mutate it\r\n    const stack = Object.assign({}, storedStack);\r\n\r\n    if (frameIndex !== undefined) {\r\n      stack.currentImageIdIndex = frameIndex;\r\n    } else if (SOPInstanceUID) {\r\n      const index = stack.imageIds.findIndex(imageId => {\r\n        const imageIdSOPInstanceUID = cornerstone.metaData.get(\r\n          'SOPInstanceUID',\r\n          imageId\r\n        );\r\n\r\n        return imageIdSOPInstanceUID === SOPInstanceUID;\r\n      });\r\n\r\n      if (index > -1) {\r\n        stack.currentImageIdIndex = index;\r\n      }\r\n    } else {\r\n      stack.currentImageIdIndex = 0;\r\n    }\r\n\r\n    return stack;\r\n  }\r\n\r\n  getViewportData = (\r\n    studies,\r\n    StudyInstanceUID,\r\n    displaySetInstanceUID,\r\n    SOPClassUID,\r\n    SOPInstanceUID,\r\n    frameIndex\r\n  ) => {\r\n    const { UINotificationService } = this.props.servicesManager.services;\r\n\r\n    const stack = OHIFVTKViewport.getCornerstoneStack(\r\n      studies,\r\n      StudyInstanceUID,\r\n      displaySetInstanceUID,\r\n      SOPClassUID,\r\n      SOPInstanceUID,\r\n      frameIndex\r\n    );\r\n\r\n    const imageDataObject = getImageData(stack.imageIds, displaySetInstanceUID);\r\n    let labelmapDataObject;\r\n    let labelmapColorLUT;\r\n\r\n    const firstImageId = stack.imageIds[0];\r\n    const { state } = segmentationModule;\r\n    const brushStackState = state.series[firstImageId];\r\n\r\n    if (brushStackState) {\r\n      const { activeLabelmapIndex } = brushStackState;\r\n      const labelmap3D = brushStackState.labelmaps3D[activeLabelmapIndex];\r\n\r\n      if (\r\n        brushStackState.labelmaps3D.length > 1 &&\r\n        this.props.viewportIndex === 0\r\n      ) {\r\n        UINotificationService.show({\r\n          title: 'Overlapping Segmentation Found',\r\n          message:\r\n            'Overlapping segmentations cannot be displayed when in MPR mode',\r\n          type: 'info',\r\n        });\r\n      }\r\n\r\n      this.segmentsDefaultProperties = labelmap3D.segmentsHidden.map(\r\n        isHidden => {\r\n          return { visible: !isHidden };\r\n        }\r\n      );\r\n\r\n      const vtkLabelmapID = `${firstImageId}_${activeLabelmapIndex}`;\r\n\r\n      if (labelmapCache[vtkLabelmapID]) {\r\n        labelmapDataObject = labelmapCache[vtkLabelmapID];\r\n      } else {\r\n        // TODO -> We need an imageId based getter in cornerstoneTools\r\n        const labelmapBuffer = labelmap3D.buffer;\r\n\r\n        // Create VTK Image Data with buffer as input\r\n        labelmapDataObject = vtkImageData.newInstance();\r\n\r\n        const dataArray = vtkDataArray.newInstance({\r\n          numberOfComponents: 1, // labelmap with single component\r\n          values: new Uint16Array(labelmapBuffer),\r\n        });\r\n\r\n        labelmapDataObject.getPointData().setScalars(dataArray);\r\n        labelmapDataObject.setDimensions(...imageDataObject.dimensions);\r\n        labelmapDataObject.setSpacing(\r\n          ...imageDataObject.vtkImageData.getSpacing()\r\n        );\r\n        labelmapDataObject.setOrigin(\r\n          ...imageDataObject.vtkImageData.getOrigin()\r\n        );\r\n        labelmapDataObject.setDirection(\r\n          ...imageDataObject.vtkImageData.getDirection()\r\n        );\r\n\r\n        // Cache the labelmap volume.\r\n        labelmapCache[vtkLabelmapID] = labelmapDataObject;\r\n      }\r\n\r\n      labelmapColorLUT = state.colorLutTables[labelmap3D.colorLUTIndex];\r\n    }\r\n\r\n    return {\r\n      imageDataObject,\r\n      labelmapDataObject,\r\n      labelmapColorLUT,\r\n    };\r\n  };\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param {object} imageDataObject\r\n   * @param {object} imageDataObject.vtkImageData\r\n   * @param {object} imageDataObject.imageMetaData0\r\n   * @param {number} [imageDataObject.imageMetaData0.WindowWidth] - The volume's initial WindowWidth\r\n   * @param {number} [imageDataObject.imageMetaData0.WindowCenter] - The volume's initial WindowCenter\r\n   * @param {string} imageDataObject.imageMetaData0.Modality - CT, MR, PT, etc\r\n   * @param {string} displaySetInstanceUID\r\n   * @returns vtkVolumeActor\r\n   * @memberof OHIFVTKViewport\r\n   */\r\n  getOrCreateVolume(imageDataObject, displaySetInstanceUID) {\r\n    if (volumeCache[displaySetInstanceUID]) {\r\n      return volumeCache[displaySetInstanceUID];\r\n    }\r\n\r\n    const { vtkImageData, imageMetaData0 } = imageDataObject;\r\n    // TODO -> Should update react-vtkjs-viewport and react-cornerstone-viewports\r\n    // internals to use naturalized DICOM JSON names.\r\n    const {\r\n      windowWidth: WindowWidth,\r\n      windowCenter: WindowCenter,\r\n      modality: Modality,\r\n    } = imageMetaData0;\r\n\r\n    const { lower, upper } = _getRangeFromWindowLevels(\r\n      WindowWidth,\r\n      WindowCenter,\r\n      Modality\r\n    );\r\n    const volumeActor = vtkVolume.newInstance();\r\n    const volumeMapper = vtkVolumeMapper.newInstance();\r\n\r\n    volumeActor.setMapper(volumeMapper);\r\n    volumeMapper.setInputData(vtkImageData);\r\n\r\n    volumeActor\r\n      .getProperty()\r\n      .getRGBTransferFunction(0)\r\n      .setRange(lower, upper);\r\n\r\n    const spacing = vtkImageData.getSpacing();\r\n    // Set the sample distance to half the mean length of one side. This is where the divide by 6 comes from.\r\n    // https://github.com/Kitware/VTK/blob/6b559c65bb90614fb02eb6d1b9e3f0fca3fe4b0b/Rendering/VolumeOpenGL2/vtkSmartVolumeMapper.cxx#L344\r\n    const sampleDistance = (spacing[0] + spacing[1] + spacing[2]) / 6;\r\n\r\n    volumeMapper.setSampleDistance(sampleDistance);\r\n\r\n    // Be generous to suppress warnings, as the logging really hurts performance.\r\n    // TODO: maybe we should auto adjust samples to 1000.\r\n    volumeMapper.setMaximumSamplesPerRay(4000);\r\n\r\n    volumeCache[displaySetInstanceUID] = volumeActor;\r\n\r\n    return volumeActor;\r\n  }\r\n\r\n  setStateFromProps() {\r\n    const { studies, displaySet } = this.props.viewportData;\r\n    const {\r\n      StudyInstanceUID,\r\n      displaySetInstanceUID,\r\n      sopClassUIDs,\r\n      SOPInstanceUID,\r\n      frameIndex,\r\n    } = displaySet;\r\n\r\n    if (sopClassUIDs.length > 1) {\r\n      console.warn(\r\n        'More than one SOPClassUID in the same series is not yet supported.'\r\n      );\r\n    }\r\n\r\n    const study = studies.find(\r\n      study => study.StudyInstanceUID === StudyInstanceUID\r\n    );\r\n\r\n    const dataDetails = {\r\n      studyDate: study.studyDate,\r\n      studyTime: study.studyTime,\r\n      studyDescription: study.studyDescription,\r\n      patientName: study.patientName,\r\n      patientId: study.patientId,\r\n      seriesNumber: String(displaySet.seriesNumber),\r\n      seriesDescription: displaySet.seriesDescription,\r\n    };\r\n\r\n    try {\r\n      const {\r\n        imageDataObject,\r\n        labelmapDataObject,\r\n        labelmapColorLUT,\r\n      } = this.getViewportData(\r\n        studies,\r\n        StudyInstanceUID,\r\n        displaySetInstanceUID,\r\n        SOPInstanceUID,\r\n        frameIndex\r\n      );\r\n\r\n      this.imageDataObject = imageDataObject;\r\n\r\n      /* TODO: Not currently used until we have drawing tools in vtkjs.\r\n      if (!labelmap) {\r\n        labelmap = createLabelMapImageData(data);\r\n      } */\r\n\r\n      const volumeActor = this.getOrCreateVolume(\r\n        imageDataObject,\r\n        displaySetInstanceUID\r\n      );\r\n\r\n      this.setState(\r\n        {\r\n          percentComplete: 0,\r\n          dataDetails,\r\n        },\r\n        () => {\r\n          this.loadProgressively(imageDataObject);\r\n\r\n          // TODO: There must be a better way to do this.\r\n          // We do this so that if all the data is available the react-vtkjs-viewport\r\n          // Will render _something_ before the volumes are set and the volume\r\n          // Construction that happens in react-vtkjs-viewport locks up the CPU.\r\n          setTimeout(() => {\r\n            this.setState({\r\n              volumes: [volumeActor],\r\n              paintFilterLabelMapImageData: labelmapDataObject,\r\n              paintFilterBackgroundImageData: imageDataObject.vtkImageData,\r\n              labelmapColorLUT,\r\n            });\r\n          }, 200);\r\n        }\r\n      );\r\n    } catch (error) {\r\n      const errorTitle = 'Failed to load 2D MPR';\r\n      console.error(errorTitle, error);\r\n      const {\r\n        UINotificationService,\r\n        LoggerService,\r\n      } = this.props.servicesManager.services;\r\n      if (this.props.viewportIndex === 0) {\r\n        const message = error.message.includes('buffer')\r\n          ? 'Dataset is too big to display in MPR'\r\n          : error.message;\r\n        LoggerService.error({ error, message });\r\n        UINotificationService.show({\r\n          title: errorTitle,\r\n          message,\r\n          type: 'error',\r\n          autoClose: false,\r\n          action: {\r\n            label: 'Exit 2D MPR',\r\n            onClick: ({ close }) => {\r\n              // context: 'ACTIVE_VIEWPORT::VTK',\r\n              close();\r\n              this.props.commandsManager.runCommand('setCornerstoneLayout');\r\n            },\r\n          },\r\n        });\r\n      }\r\n      this.setState({ isLoaded: true });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setStateFromProps();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { displaySet } = this.props.viewportData;\r\n    const prevDisplaySet = prevProps.viewportData.displaySet;\r\n\r\n    if (\r\n      displaySet.displaySetInstanceUID !==\r\n      prevDisplaySet.displaySetInstanceUID ||\r\n      displaySet.SOPInstanceUID !== prevDisplaySet.SOPInstanceUID ||\r\n      displaySet.frameIndex !== prevDisplaySet.frameIndex\r\n    ) {\r\n      this.setStateFromProps();\r\n    }\r\n  }\r\n\r\n  loadProgressively(imageDataObject) {\r\n    loadImageData(imageDataObject);\r\n\r\n    const { isLoading, imageIds } = imageDataObject;\r\n\r\n    if (!isLoading) {\r\n      this.setState({ isLoaded: true });\r\n      return;\r\n    }\r\n\r\n    const NumberOfFrames = imageIds.length;\r\n\r\n    const onPixelDataInsertedCallback = numberProcessed => {\r\n      const percentComplete = Math.floor(\r\n        (numberProcessed * 100) / NumberOfFrames\r\n      );\r\n\r\n      if (percentComplete !== this.state.percentComplete) {\r\n        this.setState({\r\n          percentComplete,\r\n        });\r\n      }\r\n    };\r\n\r\n    const onPixelDataInsertedErrorCallback = error => {\r\n      const {\r\n        UINotificationService,\r\n        LoggerService,\r\n      } = this.props.servicesManager.services;\r\n\r\n      if (!this.hasError) {\r\n        if (this.props.viewportIndex === 0) {\r\n          // Only show the notification from one viewport 1 in MPR2D.\r\n          LoggerService.error({ error, message: error.message });\r\n          UINotificationService.show({\r\n            title: 'MPR Load Error',\r\n            message: error.message,\r\n            type: 'error',\r\n            autoClose: false,\r\n          });\r\n        }\r\n\r\n        this.hasError = true;\r\n      }\r\n    };\r\n\r\n    const onAllPixelDataInsertedCallback = () => {\r\n      this.setState({\r\n        isLoaded: true,\r\n      });\r\n    };\r\n\r\n    imageDataObject.onPixelDataInserted(onPixelDataInsertedCallback);\r\n    imageDataObject.onAllPixelDataInserted(onAllPixelDataInsertedCallback);\r\n    imageDataObject.onPixelDataInsertedError(onPixelDataInsertedErrorCallback);\r\n  }\r\n\r\n  render() {\r\n    let childrenWithProps = null;\r\n    const { configuration } = segmentationModule;\r\n\r\n    // TODO: Does it make more sense to use Context?\r\n    if (this.props.children && this.props.children.length) {\r\n      childrenWithProps = this.props.children.map((child, index) => {\r\n        return (\r\n          child &&\r\n          React.cloneElement(child, {\r\n            viewportIndex: this.props.viewportIndex,\r\n            key: index,\r\n          })\r\n        );\r\n      });\r\n    }\r\n\r\n    const style = { width: '100%', height: '100%', position: 'relative' };\r\n\r\n    return (\r\n      <>\r\n        <div style={style}>\r\n          {!this.state.isLoaded && (\r\n            <LoadingIndicator percentComplete={this.state.percentComplete} />\r\n          )}\r\n          {this.state.volumes && (\r\n            <ConnectedVTKViewport\r\n              volumes={this.state.volumes}\r\n              paintFilterLabelMapImageData={\r\n                this.state.paintFilterLabelMapImageData\r\n              }\r\n              paintFilterBackgroundImageData={\r\n                this.state.paintFilterBackgroundImageData\r\n              }\r\n              viewportIndex={this.props.viewportIndex}\r\n              dataDetails={this.state.dataDetails}\r\n              labelmapRenderingOptions={{\r\n                colorLUT: this.state.labelmapColorLUT,\r\n                globalOpacity: configuration.fillAlpha,\r\n                visible: configuration.renderFill,\r\n                outlineThickness: configuration.outlineWidth,\r\n                renderOutline: configuration.renderOutline,\r\n                segmentsDefaultProperties: this.segmentsDefaultProperties,\r\n                onNewSegmentationRequested: () => {\r\n                  this.setStateFromProps();\r\n                },\r\n              }}\r\n              onScroll={this.props.onScroll}\r\n            />\r\n          )}\r\n        </div>\r\n        )}\r\n        {childrenWithProps}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Takes window levels and converts them to a range (lower/upper)\r\n * for use with VTK RGBTransferFunction\r\n *\r\n * @private\r\n * @param {number} [width] - the width of our window\r\n * @param {number} [center] - the center of our window\r\n * @param {string} [Modality] - 'PT', 'CT', etc.\r\n * @returns { lower, upper } - range\r\n */\r\nfunction _getRangeFromWindowLevels(width, center, Modality = undefined) {\r\n  // For PET just set the range to 0-5 SUV\r\n  if (Modality === 'PT') {\r\n    return { lower: 0, upper: 5 };\r\n  }\r\n\r\n  const levelsAreNotNumbers = isNaN(center) || isNaN(width);\r\n\r\n  if (levelsAreNotNumbers) {\r\n    return { lower: 0, upper: 512 };\r\n  }\r\n\r\n  return {\r\n    lower: center - width / 2.0,\r\n    upper: center + width / 2.0,\r\n  };\r\n}\r\n\r\nexport default OHIFVTKViewport;\r\n","var map = {\n\t\"./af\": 296,\n\t\"./af.js\": 296,\n\t\"./ar\": 297,\n\t\"./ar-dz\": 298,\n\t\"./ar-dz.js\": 298,\n\t\"./ar-kw\": 299,\n\t\"./ar-kw.js\": 299,\n\t\"./ar-ly\": 300,\n\t\"./ar-ly.js\": 300,\n\t\"./ar-ma\": 301,\n\t\"./ar-ma.js\": 301,\n\t\"./ar-sa\": 302,\n\t\"./ar-sa.js\": 302,\n\t\"./ar-tn\": 303,\n\t\"./ar-tn.js\": 303,\n\t\"./ar.js\": 297,\n\t\"./az\": 304,\n\t\"./az.js\": 304,\n\t\"./be\": 305,\n\t\"./be.js\": 305,\n\t\"./bg\": 306,\n\t\"./bg.js\": 306,\n\t\"./bm\": 307,\n\t\"./bm.js\": 307,\n\t\"./bn\": 308,\n\t\"./bn.js\": 308,\n\t\"./bo\": 309,\n\t\"./bo.js\": 309,\n\t\"./br\": 310,\n\t\"./br.js\": 310,\n\t\"./bs\": 311,\n\t\"./bs.js\": 311,\n\t\"./ca\": 312,\n\t\"./ca.js\": 312,\n\t\"./cs\": 313,\n\t\"./cs.js\": 313,\n\t\"./cv\": 314,\n\t\"./cv.js\": 314,\n\t\"./cy\": 315,\n\t\"./cy.js\": 315,\n\t\"./da\": 316,\n\t\"./da.js\": 316,\n\t\"./de\": 317,\n\t\"./de-at\": 318,\n\t\"./de-at.js\": 318,\n\t\"./de-ch\": 319,\n\t\"./de-ch.js\": 319,\n\t\"./de.js\": 317,\n\t\"./dv\": 320,\n\t\"./dv.js\": 320,\n\t\"./el\": 321,\n\t\"./el.js\": 321,\n\t\"./en-SG\": 322,\n\t\"./en-SG.js\": 322,\n\t\"./en-au\": 323,\n\t\"./en-au.js\": 323,\n\t\"./en-ca\": 324,\n\t\"./en-ca.js\": 324,\n\t\"./en-gb\": 325,\n\t\"./en-gb.js\": 325,\n\t\"./en-ie\": 326,\n\t\"./en-ie.js\": 326,\n\t\"./en-il\": 327,\n\t\"./en-il.js\": 327,\n\t\"./en-nz\": 328,\n\t\"./en-nz.js\": 328,\n\t\"./eo\": 329,\n\t\"./eo.js\": 329,\n\t\"./es\": 330,\n\t\"./es-do\": 331,\n\t\"./es-do.js\": 331,\n\t\"./es-us\": 332,\n\t\"./es-us.js\": 332,\n\t\"./es.js\": 330,\n\t\"./et\": 333,\n\t\"./et.js\": 333,\n\t\"./eu\": 334,\n\t\"./eu.js\": 334,\n\t\"./fa\": 335,\n\t\"./fa.js\": 335,\n\t\"./fi\": 336,\n\t\"./fi.js\": 336,\n\t\"./fo\": 337,\n\t\"./fo.js\": 337,\n\t\"./fr\": 338,\n\t\"./fr-ca\": 339,\n\t\"./fr-ca.js\": 339,\n\t\"./fr-ch\": 340,\n\t\"./fr-ch.js\": 340,\n\t\"./fr.js\": 338,\n\t\"./fy\": 341,\n\t\"./fy.js\": 341,\n\t\"./ga\": 342,\n\t\"./ga.js\": 342,\n\t\"./gd\": 343,\n\t\"./gd.js\": 343,\n\t\"./gl\": 344,\n\t\"./gl.js\": 344,\n\t\"./gom-latn\": 345,\n\t\"./gom-latn.js\": 345,\n\t\"./gu\": 346,\n\t\"./gu.js\": 346,\n\t\"./he\": 347,\n\t\"./he.js\": 347,\n\t\"./hi\": 348,\n\t\"./hi.js\": 348,\n\t\"./hr\": 349,\n\t\"./hr.js\": 349,\n\t\"./hu\": 350,\n\t\"./hu.js\": 350,\n\t\"./hy-am\": 351,\n\t\"./hy-am.js\": 351,\n\t\"./id\": 352,\n\t\"./id.js\": 352,\n\t\"./is\": 353,\n\t\"./is.js\": 353,\n\t\"./it\": 354,\n\t\"./it-ch\": 355,\n\t\"./it-ch.js\": 355,\n\t\"./it.js\": 354,\n\t\"./ja\": 356,\n\t\"./ja.js\": 356,\n\t\"./jv\": 357,\n\t\"./jv.js\": 357,\n\t\"./ka\": 358,\n\t\"./ka.js\": 358,\n\t\"./kk\": 359,\n\t\"./kk.js\": 359,\n\t\"./km\": 360,\n\t\"./km.js\": 360,\n\t\"./kn\": 361,\n\t\"./kn.js\": 361,\n\t\"./ko\": 362,\n\t\"./ko.js\": 362,\n\t\"./ku\": 363,\n\t\"./ku.js\": 363,\n\t\"./ky\": 364,\n\t\"./ky.js\": 364,\n\t\"./lb\": 365,\n\t\"./lb.js\": 365,\n\t\"./lo\": 366,\n\t\"./lo.js\": 366,\n\t\"./lt\": 367,\n\t\"./lt.js\": 367,\n\t\"./lv\": 368,\n\t\"./lv.js\": 368,\n\t\"./me\": 369,\n\t\"./me.js\": 369,\n\t\"./mi\": 370,\n\t\"./mi.js\": 370,\n\t\"./mk\": 371,\n\t\"./mk.js\": 371,\n\t\"./ml\": 372,\n\t\"./ml.js\": 372,\n\t\"./mn\": 373,\n\t\"./mn.js\": 373,\n\t\"./mr\": 374,\n\t\"./mr.js\": 374,\n\t\"./ms\": 375,\n\t\"./ms-my\": 376,\n\t\"./ms-my.js\": 376,\n\t\"./ms.js\": 375,\n\t\"./mt\": 377,\n\t\"./mt.js\": 377,\n\t\"./my\": 378,\n\t\"./my.js\": 378,\n\t\"./nb\": 379,\n\t\"./nb.js\": 379,\n\t\"./ne\": 380,\n\t\"./ne.js\": 380,\n\t\"./nl\": 381,\n\t\"./nl-be\": 382,\n\t\"./nl-be.js\": 382,\n\t\"./nl.js\": 381,\n\t\"./nn\": 383,\n\t\"./nn.js\": 383,\n\t\"./pa-in\": 384,\n\t\"./pa-in.js\": 384,\n\t\"./pl\": 385,\n\t\"./pl.js\": 385,\n\t\"./pt\": 386,\n\t\"./pt-br\": 387,\n\t\"./pt-br.js\": 387,\n\t\"./pt.js\": 386,\n\t\"./ro\": 388,\n\t\"./ro.js\": 388,\n\t\"./ru\": 389,\n\t\"./ru.js\": 389,\n\t\"./sd\": 390,\n\t\"./sd.js\": 390,\n\t\"./se\": 391,\n\t\"./se.js\": 391,\n\t\"./si\": 392,\n\t\"./si.js\": 392,\n\t\"./sk\": 393,\n\t\"./sk.js\": 393,\n\t\"./sl\": 394,\n\t\"./sl.js\": 394,\n\t\"./sq\": 395,\n\t\"./sq.js\": 395,\n\t\"./sr\": 396,\n\t\"./sr-cyrl\": 397,\n\t\"./sr-cyrl.js\": 397,\n\t\"./sr.js\": 396,\n\t\"./ss\": 398,\n\t\"./ss.js\": 398,\n\t\"./sv\": 399,\n\t\"./sv.js\": 399,\n\t\"./sw\": 400,\n\t\"./sw.js\": 400,\n\t\"./ta\": 401,\n\t\"./ta.js\": 401,\n\t\"./te\": 402,\n\t\"./te.js\": 402,\n\t\"./tet\": 403,\n\t\"./tet.js\": 403,\n\t\"./tg\": 404,\n\t\"./tg.js\": 404,\n\t\"./th\": 405,\n\t\"./th.js\": 405,\n\t\"./tl-ph\": 406,\n\t\"./tl-ph.js\": 406,\n\t\"./tlh\": 407,\n\t\"./tlh.js\": 407,\n\t\"./tr\": 408,\n\t\"./tr.js\": 408,\n\t\"./tzl\": 409,\n\t\"./tzl.js\": 409,\n\t\"./tzm\": 410,\n\t\"./tzm-latn\": 411,\n\t\"./tzm-latn.js\": 411,\n\t\"./tzm.js\": 410,\n\t\"./ug-cn\": 412,\n\t\"./ug-cn.js\": 412,\n\t\"./uk\": 413,\n\t\"./uk.js\": 413,\n\t\"./ur\": 414,\n\t\"./ur.js\": 414,\n\t\"./uz\": 415,\n\t\"./uz-latn\": 416,\n\t\"./uz-latn.js\": 416,\n\t\"./uz.js\": 415,\n\t\"./vi\": 417,\n\t\"./vi.js\": 417,\n\t\"./x-pseudo\": 418,\n\t\"./x-pseudo.js\": 418,\n\t\"./yo\": 419,\n\t\"./yo.js\": 419,\n\t\"./zh-cn\": 420,\n\t\"./zh-cn.js\": 420,\n\t\"./zh-hk\": 421,\n\t\"./zh-hk.js\": 421,\n\t\"./zh-tw\": 422,\n\t\"./zh-tw.js\": 422\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 768;","import { redux } from '@ohif/core';\r\n\r\nconst { setViewportLayoutAndData } = redux.actions;\r\n\r\n// TODO: Should not be getting dispatch from the window, but I'm not sure how else to do it cleanly\r\nexport default function setLayoutAndViewportData(layout, viewportSpecificData) {\r\n  const action = setViewportLayoutAndData(layout, viewportSpecificData);\r\n\r\n  window.store.dispatch(action);\r\n}\r\n","import setLayoutAndViewportData from './setLayoutAndViewportData.js';\r\n\r\nexport default function setMPRLayout(\r\n  displaySet,\r\n  viewportPropsArray,\r\n  numRows = 1,\r\n  numColumns = 1\r\n) {\r\n  return new Promise((resolve, reject) => {\r\n    const viewports = [];\r\n    const numViewports = numRows * numColumns;\r\n\r\n    if (viewportPropsArray && viewportPropsArray.length !== numViewports) {\r\n      reject(\r\n        new Error(\r\n          'viewportProps is supplied but its length is not equal to numViewports'\r\n        )\r\n      );\r\n    }\r\n\r\n    const viewportSpecificData = {};\r\n\r\n    for (let i = 0; i < numViewports; i++) {\r\n      viewports.push({});\r\n      viewportSpecificData[i] = displaySet;\r\n      viewportSpecificData[i].plugin = 'vtk';\r\n    }\r\n\r\n    const apis = [];\r\n    viewports.forEach((viewport, index) => {\r\n      apis[index] = null;\r\n      const viewportProps = viewportPropsArray[index];\r\n      viewports[index] = Object.assign({}, viewports[index], {\r\n        vtk: {\r\n          mode: 'mpr', // TODO: not used\r\n          afterCreation: api => {\r\n            apis[index] = api;\r\n\r\n            if (apis.every(a => !!a)) {\r\n              resolve(apis);\r\n            }\r\n          },\r\n          ...viewportProps,\r\n        },\r\n      });\r\n    });\r\n\r\n    setLayoutAndViewportData(\r\n      {\r\n        numRows,\r\n        numColumns,\r\n        viewports,\r\n      },\r\n      viewportSpecificData\r\n    );\r\n  });\r\n}\r\n","import setLayoutAndViewportData from './setLayoutAndViewportData.js';\r\n\r\nexport default function setViewportToVTK(\r\n  displaySet,\r\n  viewportIndex,\r\n  numRows,\r\n  numColumns,\r\n  layout,\r\n  viewportSpecificData\r\n) {\r\n  return new Promise((resolve, reject) => {\r\n    /*const currentData = layout.viewports[viewportIndex];\r\n    if (currentData && currentData.plugin === 'vtk') {\r\n      reject(new Error('Should not have reached this point??'));\r\n    }*/\r\n\r\n    const viewports = layout.viewports.slice();\r\n\r\n    viewports[viewportIndex] = Object.assign({}, viewports[viewportIndex], {\r\n      // plugin: 'vtk',\r\n      vtk: {\r\n        mode: 'mpr', // TODO: not used\r\n        afterCreation: api => {\r\n          resolve(api);\r\n        },\r\n      },\r\n    });\r\n\r\n    const updatedViewportData = viewportSpecificData;\r\n\r\n    setLayoutAndViewportData(\r\n      {\r\n        numRows,\r\n        numColumns,\r\n        viewports,\r\n      },\r\n      updatedViewportData\r\n    );\r\n  });\r\n}\r\n","import throttle from 'lodash.throttle';\r\nimport {\r\n  vtkInteractorStyleMPRWindowLevel,\r\n  vtkInteractorStyleRotatableMPRCrosshairs,\r\n  vtkSVGRotatableCrosshairsWidget,\r\n  vtkInteractorStyleMPRRotate,\r\n} from 'react-vtkjs-viewport';\r\nimport { getImageData } from 'react-vtkjs-viewport';\r\nimport { vec3 } from 'gl-matrix';\r\nimport setMPRLayout from './utils/setMPRLayout.js';\r\nimport setViewportToVTK from './utils/setViewportToVTK.js';\r\nimport Constants from 'vtk.js/Sources/Rendering/Core/VolumeMapper/Constants.js';\r\nimport OHIFVTKViewport from './OHIFVTKViewport';\r\n\r\nconst { BlendMode } = Constants;\r\n\r\nconst commandsModule = ({ commandsManager, servicesManager }) => {\r\n  const { UINotificationService, LoggerService } = servicesManager.services;\r\n\r\n  // TODO: Put this somewhere else\r\n  let apis = {};\r\n  let defaultVOI;\r\n\r\n  async function _getActiveViewportVTKApi(viewports) {\r\n    const {\r\n      numRows,\r\n      numColumns,\r\n      layout,\r\n      viewportSpecificData,\r\n      activeViewportIndex,\r\n    } = viewports;\r\n\r\n    const currentData = layout.viewports[activeViewportIndex];\r\n    if (currentData && currentData.plugin === 'vtk') {\r\n      // TODO: I was storing/pulling this from Redux but ran into weird issues\r\n      if (apis[activeViewportIndex]) {\r\n        return apis[activeViewportIndex];\r\n      }\r\n    }\r\n\r\n    const displaySet = viewportSpecificData[activeViewportIndex];\r\n    let api;\r\n    if (!api) {\r\n      try {\r\n        api = await setViewportToVTK(\r\n          displaySet,\r\n          activeViewportIndex,\r\n          numRows,\r\n          numColumns,\r\n          layout,\r\n          viewportSpecificData\r\n        );\r\n      } catch (error) {\r\n        throw new Error(error);\r\n      }\r\n    }\r\n\r\n    return api;\r\n  }\r\n\r\n  function _setView(api, sliceNormal, viewUp) {\r\n    const renderWindow = api.genericRenderWindow.getRenderWindow();\r\n    const istyle = renderWindow.getInteractor().getInteractorStyle();\r\n    istyle.setSliceNormal(...sliceNormal);\r\n    istyle.setViewUp(...viewUp);\r\n\r\n    renderWindow.render();\r\n  }\r\n\r\n  function getVOIFromCornerstoneViewport() {\r\n    const dom = commandsManager.runCommand('getActiveViewportEnabledElement');\r\n    const cornerstoneElement = cornerstone.getEnabledElement(dom);\r\n\r\n    if (cornerstoneElement) {\r\n      const imageId = cornerstoneElement.image.imageId;\r\n\r\n      const Modality = cornerstone.metaData.get('Modality', imageId);\r\n\r\n      if (Modality !== 'PT') {\r\n        const { windowWidth, windowCenter } = cornerstoneElement.viewport.voi;\r\n\r\n        return {\r\n          windowWidth,\r\n          windowCenter,\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  function setVOI(voi) {\r\n    const { windowWidth, windowCenter } = voi;\r\n    const lower = windowCenter - windowWidth / 2.0;\r\n    const upper = windowCenter + windowWidth / 2.0;\r\n\r\n    const rgbTransferFunction = apis[0].volumes[0]\r\n      .getProperty()\r\n      .getRGBTransferFunction(0);\r\n\r\n    rgbTransferFunction.setRange(lower, upper);\r\n\r\n    apis.forEach(api => {\r\n      api.updateVOI(windowWidth, windowCenter);\r\n    });\r\n  }\r\n\r\n  const _convertModelToWorldSpace = (position, vtkImageData) => {\r\n    const indexToWorld = vtkImageData.getIndexToWorld();\r\n    const pos = vec3.create();\r\n\r\n    position[0] += 0.5; /* Move to the centre of the voxel. */\r\n    position[1] += 0.5; /* Move to the centre of the voxel. */\r\n    position[2] += 0.5; /* Move to the centre of the voxel. */\r\n\r\n    vec3.set(pos, position[0], position[1], position[2]);\r\n    vec3.transformMat4(pos, pos, indexToWorld);\r\n\r\n    return pos;\r\n  };\r\n\r\n  const actions = {\r\n    getVtkApis: ({ index }) => {\r\n      return apis[index];\r\n    },\r\n    resetMPRView() {\r\n      // Reset orientation\r\n      apis.forEach(api => api.resetOrientation());\r\n\r\n      // Reset VOI\r\n      if (defaultVOI) setVOI(defaultVOI);\r\n\r\n      // Reset the crosshairs\r\n      apis[0].svgWidgets.rotatableCrosshairsWidget.resetCrosshairs(apis, 0);\r\n    },\r\n    axial: async ({ viewports }) => {\r\n      const api = await _getActiveViewportVTKApi(viewports);\r\n\r\n      apis[viewports.activeViewportIndex] = api;\r\n\r\n      _setView(api, [0, 0, 1], [0, -1, 0]);\r\n    },\r\n    sagittal: async ({ viewports }) => {\r\n      const api = await _getActiveViewportVTKApi(viewports);\r\n\r\n      apis[viewports.activeViewportIndex] = api;\r\n\r\n      _setView(api, [1, 0, 0], [0, 0, 1]);\r\n    },\r\n    coronal: async ({ viewports }) => {\r\n      const api = await _getActiveViewportVTKApi(viewports);\r\n\r\n      apis[viewports.activeViewportIndex] = api;\r\n\r\n      _setView(api, [0, 1, 0], [0, 0, 1]);\r\n    },\r\n    requestNewSegmentation: async ({ viewports }) => {\r\n      const allViewports = Object.values(viewports.viewportSpecificData);\r\n      const promises = allViewports.map(async (viewport, viewportIndex) => {\r\n        let api = apis[viewportIndex];\r\n\r\n        if (!api) {\r\n          api = await _getActiveViewportVTKApi(viewports);\r\n          apis[viewportIndex] = api;\r\n        }\r\n\r\n        api.requestNewSegmentation();\r\n        api.updateImage();\r\n      });\r\n      await Promise.all(promises);\r\n    },\r\n    jumpToSlice: async ({\r\n      viewports,\r\n      studies,\r\n      StudyInstanceUID,\r\n      displaySetInstanceUID,\r\n      SOPClassUID,\r\n      SOPInstanceUID,\r\n      segmentNumber,\r\n      frameIndex,\r\n      frame,\r\n      done = () => {},\r\n    }) => {\r\n      let api = apis[viewports.activeViewportIndex];\r\n\r\n      if (!api) {\r\n        api = await _getActiveViewportVTKApi(viewports);\r\n        apis[viewports.activeViewportIndex] = api;\r\n      }\r\n\r\n      const stack = OHIFVTKViewport.getCornerstoneStack(\r\n        studies,\r\n        StudyInstanceUID,\r\n        displaySetInstanceUID,\r\n        SOPClassUID,\r\n        SOPInstanceUID,\r\n        frameIndex\r\n      );\r\n\r\n      const imageDataObject = getImageData(\r\n        stack.imageIds,\r\n        displaySetInstanceUID\r\n      );\r\n\r\n      let pixelIndex = 0;\r\n      let x = 0;\r\n      let y = 0;\r\n      let count = 0;\r\n\r\n      const rows = imageDataObject.dimensions[1];\r\n      const cols = imageDataObject.dimensions[0];\r\n\r\n      for (let j = 0; j < rows; j++) {\r\n        for (let i = 0; i < cols; i++) {\r\n          // [i, j] =\r\n          const pixel = frame.pixelData[pixelIndex];\r\n          if (pixel === segmentNumber) {\r\n            x += i;\r\n            y += j;\r\n            count++;\r\n          }\r\n          pixelIndex++;\r\n        }\r\n      }\r\n      x /= count;\r\n      y /= count;\r\n\r\n      const position = [x, y, frameIndex];\r\n      const worldPos = _convertModelToWorldSpace(\r\n        position,\r\n        imageDataObject.vtkImageData\r\n      );\r\n\r\n      api.svgWidgets.rotatableCrosshairsWidget.moveCrosshairs(worldPos, apis);\r\n      done();\r\n    },\r\n    setSegmentationConfiguration: async ({\r\n      viewports,\r\n      globalOpacity,\r\n      visible,\r\n      renderOutline,\r\n      outlineThickness,\r\n    }) => {\r\n      const allViewports = Object.values(viewports.viewportSpecificData);\r\n      const promises = allViewports.map(async (viewport, viewportIndex) => {\r\n        let api = apis[viewportIndex];\r\n\r\n        if (!api) {\r\n          api = await _getActiveViewportVTKApi(viewports);\r\n          apis[viewportIndex] = api;\r\n        }\r\n\r\n        api.setGlobalOpacity(globalOpacity);\r\n        api.setVisibility(visible);\r\n        api.setOutlineThickness(outlineThickness);\r\n        api.setOutlineRendering(renderOutline);\r\n        api.updateImage();\r\n      });\r\n      await Promise.all(promises);\r\n    },\r\n    setSegmentConfiguration: async ({ viewports, visible, segmentNumber }) => {\r\n      const allViewports = Object.values(viewports.viewportSpecificData);\r\n      const promises = allViewports.map(async (viewport, viewportIndex) => {\r\n        let api = apis[viewportIndex];\r\n\r\n        if (!api) {\r\n          api = await _getActiveViewportVTKApi(viewports);\r\n          apis[viewportIndex] = api;\r\n        }\r\n\r\n        api.setSegmentVisibility(segmentNumber, visible);\r\n        api.updateImage();\r\n      });\r\n      await Promise.all(promises);\r\n    },\r\n    enableRotateTool: () => {\r\n      apis.forEach((api, apiIndex) => {\r\n        const istyle = vtkInteractorStyleMPRRotate.newInstance();\r\n\r\n        api.setInteractorStyle({\r\n          istyle,\r\n          configuration: { apis, apiIndex, uid: api.uid },\r\n        });\r\n      });\r\n    },\r\n    enableCrosshairsTool: () => {\r\n      apis.forEach((api, apiIndex) => {\r\n        const istyle = vtkInteractorStyleRotatableMPRCrosshairs.newInstance();\r\n\r\n        api.setInteractorStyle({\r\n          istyle,\r\n          configuration: {\r\n            apis,\r\n            apiIndex,\r\n            uid: api.uid,\r\n          },\r\n        });\r\n      });\r\n\r\n      const rotatableCrosshairsWidget =\r\n        apis[0].svgWidgets.rotatableCrosshairsWidget;\r\n\r\n      const referenceLines = rotatableCrosshairsWidget.getReferenceLines();\r\n\r\n      // Initilise crosshairs if not initialised.\r\n      if (!referenceLines) {\r\n        rotatableCrosshairsWidget.resetCrosshairs(apis, 0);\r\n      }\r\n    },\r\n    enableLevelTool: () => {\r\n      function updateVOI(apis, windowWidth, windowCenter) {\r\n        apis.forEach(api => {\r\n          api.updateVOI(windowWidth, windowCenter);\r\n        });\r\n      }\r\n\r\n      const throttledUpdateVOIs = throttle(updateVOI, 16, { trailing: true }); // ~ 60 fps\r\n\r\n      const callbacks = {\r\n        setOnLevelsChanged: ({ windowCenter, windowWidth }) => {\r\n          apis.forEach(api => {\r\n            const renderWindow = api.genericRenderWindow.getRenderWindow();\r\n\r\n            renderWindow.render();\r\n          });\r\n\r\n          throttledUpdateVOIs(apis, windowWidth, windowCenter);\r\n        },\r\n      };\r\n\r\n      apis.forEach((api, apiIndex) => {\r\n        const istyle = vtkInteractorStyleMPRWindowLevel.newInstance();\r\n\r\n        api.setInteractorStyle({\r\n          istyle,\r\n          callbacks,\r\n          configuration: { apis, apiIndex, uid: api.uid },\r\n        });\r\n      });\r\n    },\r\n    setSlabThickness: ({ slabThickness }) => {\r\n      apis.forEach(api => {\r\n        api.setSlabThickness(slabThickness);\r\n      });\r\n    },\r\n    changeSlabThickness: ({ change }) => {\r\n      apis.forEach(api => {\r\n        const slabThickness = Math.max(api.getSlabThickness() + change, 0.1);\r\n\r\n        api.setSlabThickness(slabThickness);\r\n      });\r\n    },\r\n    setBlendModeToComposite: () => {\r\n      apis.forEach(api => {\r\n        const renderWindow = api.genericRenderWindow.getRenderWindow();\r\n        const istyle = renderWindow.getInteractor().getInteractorStyle();\r\n\r\n        const slabThickness = api.getSlabThickness();\r\n\r\n        const mapper = api.volumes[0].getMapper();\r\n        if (mapper.setBlendModeToComposite) {\r\n          mapper.setBlendModeToComposite();\r\n        }\r\n\r\n        if (istyle.setSlabThickness) {\r\n          istyle.setSlabThickness(slabThickness);\r\n        }\r\n        renderWindow.render();\r\n      });\r\n    },\r\n    setBlendModeToMaximumIntensity: () => {\r\n      apis.forEach(api => {\r\n        const renderWindow = api.genericRenderWindow.getRenderWindow();\r\n        const mapper = api.volumes[0].getMapper();\r\n        if (mapper.setBlendModeToMaximumIntensity) {\r\n          mapper.setBlendModeToMaximumIntensity();\r\n        }\r\n        renderWindow.render();\r\n      });\r\n    },\r\n    setBlendMode: ({ blendMode }) => {\r\n      apis.forEach(api => {\r\n        const renderWindow = api.genericRenderWindow.getRenderWindow();\r\n\r\n        api.volumes[0].getMapper().setBlendMode(blendMode);\r\n\r\n        renderWindow.render();\r\n      });\r\n    },\r\n    mpr2d: async ({ viewports }) => {\r\n      // TODO push a lot of this backdoor logic lower down to the library level.\r\n      const displaySet =\r\n        viewports.viewportSpecificData[viewports.activeViewportIndex];\r\n\r\n      // Get current VOI if cornerstone viewport.\r\n      const cornerstoneVOI = getVOIFromCornerstoneViewport();\r\n      defaultVOI = cornerstoneVOI;\r\n\r\n      const viewportProps = [\r\n        {\r\n          //Axial\r\n          orientation: {\r\n            sliceNormal: [0, 0, 1],\r\n            viewUp: [0, -1, 0],\r\n          },\r\n        },\r\n        {\r\n          // Sagittal\r\n          orientation: {\r\n            sliceNormal: [1, 0, 0],\r\n            viewUp: [0, 0, 1],\r\n          },\r\n        },\r\n        {\r\n          // Coronal\r\n          orientation: {\r\n            sliceNormal: [0, 1, 0],\r\n            viewUp: [0, 0, 1],\r\n          },\r\n        },\r\n      ];\r\n\r\n      try {\r\n        apis = await setMPRLayout(displaySet, viewportProps, 1, 3);\r\n      } catch (error) {\r\n        throw new Error(error);\r\n      }\r\n\r\n      if (cornerstoneVOI) {\r\n        setVOI(cornerstoneVOI);\r\n      }\r\n\r\n      // Add widgets and set default interactorStyle of each viewport.\r\n      apis.forEach((api, apiIndex) => {\r\n        api.addSVGWidget(\r\n          vtkSVGRotatableCrosshairsWidget.newInstance(),\r\n          'rotatableCrosshairsWidget'\r\n        );\r\n\r\n        const uid = api.uid;\r\n        const istyle = vtkInteractorStyleRotatableMPRCrosshairs.newInstance();\r\n\r\n        api.setInteractorStyle({\r\n          istyle,\r\n          configuration: { apis, apiIndex, uid },\r\n        });\r\n\r\n        api.svgWidgets.rotatableCrosshairsWidget.setApiIndex(apiIndex);\r\n        api.svgWidgets.rotatableCrosshairsWidget.setApis(apis);\r\n      });\r\n\r\n      const firstApi = apis[0];\r\n\r\n      // Initialise crosshairs\r\n      apis[0].svgWidgets.rotatableCrosshairsWidget.resetCrosshairs(apis, 0);\r\n\r\n      // Check if we have full WebGL 2 support\r\n      const openGLRenderWindow = apis[0].genericRenderWindow.getOpenGLRenderWindow();\r\n\r\n      if (!openGLRenderWindow.getWebgl2()) {\r\n        // Throw a warning if we don't have WebGL 2 support,\r\n        // And the volume is too big to fit in a 2D texture\r\n\r\n        const openGLContext = openGLRenderWindow.getContext();\r\n        const maxTextureSizeInBytes = openGLContext.getParameter(\r\n          openGLContext.MAX_TEXTURE_SIZE\r\n        );\r\n\r\n        const maxBufferLengthFloat32 =\r\n          (maxTextureSizeInBytes * maxTextureSizeInBytes) / 4;\r\n\r\n        const dimensions = firstApi.volumes[0]\r\n          .getMapper()\r\n          .getInputData()\r\n          .getDimensions();\r\n\r\n        const volumeLength = dimensions[0] * dimensions[1] * dimensions[2];\r\n\r\n        if (volumeLength > maxBufferLengthFloat32) {\r\n          const message =\r\n            'This volume is too large to fit in WebGL 1 textures and will display incorrectly. Please use a different browser to view this data';\r\n          LoggerService.error({ message });\r\n          UINotificationService.show({\r\n            title: 'Browser does not support WebGL 2',\r\n            message,\r\n            type: 'error',\r\n            autoClose: false,\r\n          });\r\n        }\r\n      }\r\n    },\r\n  };\r\n\r\n  window.vtkActions = actions;\r\n\r\n  const definitions = {\r\n    requestNewSegmentation: {\r\n      commandFn: actions.requestNewSegmentation,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n    },\r\n    jumpToSlice: {\r\n      commandFn: actions.jumpToSlice,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n    },\r\n    setSegmentationConfiguration: {\r\n      commandFn: actions.setSegmentationConfiguration,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n    },\r\n    setSegmentConfiguration: {\r\n      commandFn: actions.setSegmentConfiguration,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n    },\r\n    axial: {\r\n      commandFn: actions.axial,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n    },\r\n    coronal: {\r\n      commandFn: actions.coronal,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n    },\r\n    sagittal: {\r\n      commandFn: actions.sagittal,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n    },\r\n    enableRotateTool: {\r\n      commandFn: actions.enableRotateTool,\r\n      options: {},\r\n    },\r\n    enableCrosshairsTool: {\r\n      commandFn: actions.enableCrosshairsTool,\r\n      options: {},\r\n    },\r\n    enableLevelTool: {\r\n      commandFn: actions.enableLevelTool,\r\n      options: {},\r\n    },\r\n    resetMPRView: {\r\n      commandFn: actions.resetMPRView,\r\n      options: {},\r\n    },\r\n    setBlendModeToComposite: {\r\n      commandFn: actions.setBlendModeToComposite,\r\n      options: { blendMode: BlendMode.COMPOSITE_BLEND },\r\n    },\r\n    setBlendModeToMaximumIntensity: {\r\n      commandFn: actions.setBlendModeToMaximumIntensity,\r\n      options: { blendMode: BlendMode.MAXIMUM_INTENSITY_BLEND },\r\n    },\r\n    setBlendModeToMinimumIntensity: {\r\n      commandFn: actions.setBlendMode,\r\n      options: { blendMode: BlendMode.MINIMUM_INTENSITY_BLEND },\r\n    },\r\n    setBlendModeToAverageIntensity: {\r\n      commandFn: actions.setBlendMode,\r\n      options: { blendMode: BlendMode.AVERAGE_INTENSITY_BLEND },\r\n    },\r\n    setSlabThickness: {\r\n      // TODO: How do we pass in a function argument?\r\n      commandFn: actions.setSlabThickness,\r\n      options: {},\r\n    },\r\n    increaseSlabThickness: {\r\n      commandFn: actions.changeSlabThickness,\r\n      options: {\r\n        change: 3,\r\n      },\r\n    },\r\n    decreaseSlabThickness: {\r\n      commandFn: actions.changeSlabThickness,\r\n      options: {\r\n        change: -3,\r\n      },\r\n    },\r\n    mpr2d: {\r\n      commandFn: actions.mpr2d,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n      context: 'VIEWER',\r\n    },\r\n    getVtkApiForViewportIndex: {\r\n      commandFn: actions.getVtkApis,\r\n      context: 'VIEWER',\r\n    },\r\n  };\r\n\r\n  return {\r\n    definitions,\r\n    defaultContext: 'ACTIVE_VIEWPORT::VTK',\r\n  };\r\n};\r\n\r\nexport default commandsModule;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport { Range, Checkbox, OldSelect } from '@ohif/ui';\r\n\r\nimport './slab-thickness-toolbar-button.styl';\r\n\r\nconst SLIDER = {\r\n  MIN: 0.1,\r\n  MAX: 1000,\r\n  STEP: 0.1,\r\n};\r\n\r\nconst ToolbarLabel = props => {\r\n  const { label } = props;\r\n  return <div className=\"toolbar-button-label\">{label}</div>;\r\n};\r\n\r\nToolbarLabel.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n};\r\n\r\nconst ToolbarSlider = props => {\r\n  const { value, min, max, onChange } = props;\r\n  return (\r\n    <div className=\"toolbar-slider-container\">\r\n      <label htmlFor=\"toolbar-slider\">{value}mm</label>\r\n      <Range\r\n        value={value}\r\n        min={min}\r\n        max={max}\r\n        step={SLIDER.STEP}\r\n        onChange={onChange}\r\n        id=\"toolbar-slider\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nToolbarSlider.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n  min: PropTypes.number.isRequired,\r\n  max: PropTypes.number.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst _getSelectOptions = button => {\r\n  return button.operationButtons.map(button => {\r\n    return {\r\n      key: button.label,\r\n      value: button.id,\r\n    };\r\n  });\r\n};\r\n\r\nconst _getClassNames = (isActive, className) => {\r\n  return classnames('toolbar-button', 'slab-thickness', className, {\r\n    active: isActive,\r\n  });\r\n};\r\n\r\nconst _applySlabThickness = (\r\n  value,\r\n  modeChecked,\r\n  toolbarClickCallback,\r\n  button\r\n) => {\r\n  if (!modeChecked || !toolbarClickCallback) {\r\n    return;\r\n  }\r\n\r\n  const { actionButton } = button;\r\n\r\n  const generateOperation = (operation, value) => {\r\n    // Combine slider value into slider operation\r\n    const generatedOperation = { ...operation };\r\n    generatedOperation.commandOptions = {\r\n      ...operation.commandOptions,\r\n      slabThickness: value,\r\n    };\r\n\r\n    return generatedOperation;\r\n  };\r\n\r\n  const operation = generateOperation(actionButton, value);\r\n  toolbarClickCallback(operation, event);\r\n};\r\n\r\nconst _applyModeOperation = (\r\n  operation,\r\n  modeChecked,\r\n  toolbarClickCallback,\r\n  button\r\n) => {\r\n  // in case modeChecked has not being triggered by user yet\r\n  if (typeof modeChecked !== 'boolean') {\r\n    return;\r\n  }\r\n\r\n  const { deactivateButton } = button;\r\n\r\n  const _operation = modeChecked ? operation : deactivateButton;\r\n  if (toolbarClickCallback && _operation) {\r\n    toolbarClickCallback(_operation);\r\n  }\r\n};\r\n\r\nconst _getInitialState = currentSelectedOption => {\r\n  return {\r\n    value: SLIDER.MIN,\r\n    sliderMin: SLIDER.MIN,\r\n    sliderMax: SLIDER.MAX,\r\n    modeChecked: undefined,\r\n    operation: currentSelectedOption,\r\n  };\r\n};\r\n\r\nconst INITIAL_OPTION_INDEX = 0;\r\nconst _getInitialtSelectedOption = (button = {}) => {\r\n  return (\r\n    button.operationButtons && button.operationButtons[INITIAL_OPTION_INDEX]\r\n  );\r\n};\r\n\r\nfunction SlabThicknessToolbarComponent({\r\n  parentContext,\r\n  toolbarClickCallback,\r\n  button,\r\n  activeButtons,\r\n  isActive,\r\n  className,\r\n}) {\r\n  const currentSelectedOption = _getInitialtSelectedOption(button);\r\n  const [state, setState] = useState(_getInitialState(currentSelectedOption));\r\n  const { label, operationButtons } = button;\r\n  const _className = _getClassNames(isActive, className);\r\n  const selectOptions = _getSelectOptions(button);\r\n  function onChangeSelect(selectedValue) {\r\n    // find select value\r\n    const operation = operationButtons.find(\r\n      button => button.id === selectedValue\r\n    );\r\n\r\n    if (operation === state.operation) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, operation });\r\n  }\r\n\r\n  function onChangeCheckbox(checked) {\r\n    setState({ ...state, modeChecked: checked });\r\n  }\r\n\r\n  function onChangeSlider(event) {\r\n    const value = Number(event.target.value);\r\n\r\n    if (value !== state.value) {\r\n      setState({ ...state, value, modeChecked: true });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    _applyModeOperation(\r\n      state.operation,\r\n      state.modeChecked,\r\n      toolbarClickCallback,\r\n      button\r\n    );\r\n  }, [state.modeChecked, state.operation]);\r\n\r\n  useEffect(() => {\r\n    _applySlabThickness(\r\n      state.value,\r\n      state.modeChecked,\r\n      toolbarClickCallback,\r\n      button\r\n    );\r\n  }, [state.operation, state.modeChecked, state.value]);\r\n\r\n  return (\r\n    <div className={_className}>\r\n      <div className=\"container\">\r\n        <ToolbarSlider\r\n          value={state.value}\r\n          min={state.sliderMin}\r\n          max={state.sliderMax}\r\n          onChange={onChangeSlider}\r\n        />\r\n        <ToolbarLabel key=\"toolbar-label\" label={label} />\r\n      </div>\r\n      <div className=\"controller\">\r\n        <Checkbox\r\n          label=\"mode\"\r\n          checked={state.modeChecked}\r\n          onChange={onChangeCheckbox}\r\n        ></Checkbox>\r\n        <OldSelect\r\n          key=\"toolbar-select\"\r\n          options={selectOptions}\r\n          value={selectOptions[INITIAL_OPTION_INDEX].value}\r\n          onChange={onChangeSelect}\r\n        ></OldSelect>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nSlabThicknessToolbarComponent.propTypes = {\r\n  parentContext: PropTypes.object.isRequired,\r\n  toolbarClickCallback: PropTypes.func.isRequired,\r\n  button: PropTypes.object.isRequired,\r\n  activeButtons: PropTypes.array.isRequired,\r\n  isActive: PropTypes.bool,\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default SlabThicknessToolbarComponent;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { ToolbarButton } from '@ohif/ui';\r\nimport { utils } from '@ohif/core';\r\n\r\nconst { studyMetadataManager } = utils;\r\n\r\nlet isVisible = true;\r\n\r\nconst _isDisplaySetReconstructable = (viewportSpecificData = {}, activeViewportIndex) => {\r\n  if (!viewportSpecificData[activeViewportIndex]) {\r\n    return false;\r\n  };\r\n\r\n  const { displaySetInstanceUID, StudyInstanceUID } = viewportSpecificData[\r\n    activeViewportIndex\r\n  ];\r\n\r\n  const studies = studyMetadataManager.all();\r\n\r\n  const study = studies.find(\r\n    study => study.studyInstanceUID === StudyInstanceUID\r\n  );\r\n\r\n  if (!study) {\r\n    return false;\r\n  }\r\n\r\n  const displaySet = study._displaySets.find(set => set.displaySetInstanceUID === displaySetInstanceUID);\r\n\r\n  if (!displaySet) {\r\n    return false;\r\n  };\r\n\r\n  return displaySet.isReconstructable;\r\n};\r\n\r\nfunction VTKMPRToolbarButton({\r\n  parentContext,\r\n  toolbarClickCallback,\r\n  button,\r\n  activeButtons,\r\n  isActive,\r\n  className,\r\n}) {\r\n  const { id, label, icon } = button;\r\n  const { viewportSpecificData, activeViewportIndex } = useSelector(state => {\r\n    const { viewports = {} } = state;\r\n    const { viewportSpecificData, activeViewportIndex } = viewports;\r\n\r\n    return {\r\n      viewportSpecificData,\r\n      activeViewportIndex,\r\n    }\r\n  });\r\n\r\n  isVisible = _isDisplaySetReconstructable(\r\n    viewportSpecificData,\r\n    activeViewportIndex,\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isVisible && (\r\n        <ToolbarButton\r\n          key={id}\r\n          label={label}\r\n          icon={icon}\r\n          onClick={evt => toolbarClickCallback(button, evt)}\r\n          isActive={isActive}\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nVTKMPRToolbarButton.propTypes = {\r\n  parentContext: PropTypes.object.isRequired,\r\n  toolbarClickCallback: PropTypes.func.isRequired,\r\n  button: PropTypes.object.isRequired,\r\n  activeButtons: PropTypes.array.isRequired,\r\n  isActive: PropTypes.bool,\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default VTKMPRToolbarButton;\r\n","import SlabThicknessToolbarComponent from './toolbarComponents/SlabThicknessToolbarComponent';\r\nimport VTKMPRToolbarButton from './toolbarComponents/VTKMPRToolbarButton';\r\n\r\nconst TOOLBAR_BUTTON_TYPES = {\r\n  COMMAND: 'command',\r\n  SET_TOOL_ACTIVE: 'setToolActive',\r\n};\r\n\r\nconst definitions = [\r\n  {\r\n    id: 'Crosshairs',\r\n    label: 'Crosshairs',\r\n    icon: 'crosshairs',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n    commandName: 'enableCrosshairsTool',\r\n    commandOptions: {},\r\n  },\r\n  {\r\n    id: 'WWWC',\r\n    label: 'WWWC',\r\n    icon: 'level',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n    commandName: 'enableLevelTool',\r\n    commandOptions: {},\r\n  },\r\n  {\r\n    id: 'Reset',\r\n    label: 'Reset',\r\n    icon: 'reset',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.COMMAND,\r\n    commandName: 'resetMPRView',\r\n    commandOptions: {},\r\n  },\r\n  /*\r\n  {\r\n    id: 'Rotate',\r\n    label: 'Rotate',\r\n    icon: '3d-rotate',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n    commandName: 'enableRotateTool',\r\n    commandOptions: {},\r\n  },\r\n  */\r\n  /*\r\n  {\r\n    id: 'setBlendModeToComposite',\r\n    label: 'Disable MIP',\r\n    icon: 'times',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.COMMAND,\r\n    commandName: 'setBlendModeToComposite',\r\n    commandOptions: {},\r\n  },\r\n  {\r\n    id: 'setBlendModeToMaximumIntensity',\r\n    label: 'Enable MIP',\r\n    icon: 'soft-tissue',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.COMMAND,\r\n    commandName: 'setBlendModeToMaximumIntensity',\r\n    commandOptions: {},\r\n  },\r\n\r\n  {\r\n    id: 'increaseSlabThickness',\r\n    label: 'Increase Slab Thickness',\r\n    icon: 'caret-up',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.COMMAND,\r\n    commandName: 'increaseSlabThickness',\r\n    commandOptions: {},\r\n  },\r\n  {\r\n    id: 'decreaseSlabThickness',\r\n    label: 'Decrease Slab Thickness',\r\n    icon: 'caret-down',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.COMMAND,\r\n    commandName: 'decreaseSlabThickness',\r\n    commandOptions: {},\r\n  },\r\n  */\r\n  {\r\n    id: 'changeSlabThickness',\r\n    label: 'Slab Thickness',\r\n    icon: 'soft-tissue',\r\n    CustomComponent: SlabThicknessToolbarComponent,\r\n    commandName: 'setSlabThickness',\r\n    actionButton: {\r\n      id: 'setSlabThickness',\r\n      label: 'slider',\r\n      type: TOOLBAR_BUTTON_TYPES.COMMAND,\r\n      commandName: 'setSlabThickness',\r\n      commandOptions: {},\r\n    },\r\n    deactivateButton: {\r\n      id: 'setBlendModeToComposite',\r\n      type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n      commandName: 'setBlendModeToComposite',\r\n      commandOptions: {},\r\n    },\r\n    operationButtons: [\r\n      {\r\n        id: 'setBlendModeToMaximumIntensity',\r\n        label: 'MIP',\r\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n        commandName: 'setBlendModeToMaximumIntensity',\r\n        commandOptions: {},\r\n      },\r\n      {\r\n        id: 'setBlendModeToMinimumIntensity',\r\n        label: 'MinIP',\r\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n        commandName: 'setBlendModeToMinimumIntensity',\r\n        commandOptions: {},\r\n      },\r\n      {\r\n        id: 'setBlendModeToAverageIntensity',\r\n        label: 'AvgIP',\r\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n        commandName: 'setBlendModeToAverageIntensity',\r\n        commandOptions: {},\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '2DMPR',\r\n    label: '2D MPR',\r\n    icon: 'cube',\r\n    //\r\n    CustomComponent: VTKMPRToolbarButton,\r\n    type: TOOLBAR_BUTTON_TYPES.COMMAND,\r\n    commandName: 'mpr2d',\r\n    context: 'ACTIVE_VIEWPORT::CORNERSTONE',\r\n  },\r\n];\r\n\r\nexport default {\r\n  definitions,\r\n  defaultContext: 'ACTIVE_VIEWPORT::VTK',\r\n};\r\n","import React from 'react';\r\n\r\nexport default function withCommandsManager(Component, commandsManager = {}) {\r\n  return class WithCommandsManager extends React.Component {\r\n    render() {\r\n      return (\r\n        <Component\r\n          {...this.props}\r\n          onScroll={viewportIndex =>\r\n            commandsManager.runCommand('getVtkApiForViewportIndex', {\r\n              index: viewportIndex,\r\n            })\r\n          }\r\n        />\r\n      );\r\n    }\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { asyncComponent, retryImport } from '@ohif/ui';\r\n\r\nimport commandsModule from './commandsModule.js';\r\nimport toolbarModule from './toolbarModule.js';\r\nimport withCommandsManager from './withCommandsManager.js';\r\nimport { version } from '../package.json';\r\n// This feels weird\r\n// import loadLocales from './loadLocales';\r\n\r\nconst OHIFVTKViewport = asyncComponent(() =>\r\n  retryImport(() =>\r\n    import(/* webpackChunkName: \"OHIFVTKViewport\" */ './OHIFVTKViewport.js')\r\n  )\r\n);\r\n\r\nconst vtkExtension = {\r\n  /**\r\n   * Only required property. Should be a unique value across all extensions.\r\n   */\r\n  id: 'vtk',\r\n  version,\r\n\r\n  getViewportModule({ commandsManager, servicesManager }) {\r\n    const ExtendedVTKViewport = props => (\r\n      <OHIFVTKViewport\r\n        {...props}\r\n        servicesManager={servicesManager}\r\n        commandsManager={commandsManager}\r\n      />\r\n    );\r\n    return withCommandsManager(ExtendedVTKViewport, commandsManager);\r\n  },\r\n  getToolbarModule() {\r\n    return toolbarModule;\r\n  },\r\n  getCommandsModule({ commandsManager, servicesManager }) {\r\n    return commandsModule({ commandsManager, servicesManager });\r\n  },\r\n};\r\n\r\nexport default vtkExtension;\r\n\r\nexport { vtkExtension };\r\n\r\n// loadLocales();\r\n","import { MODULE_TYPES, utils } from '@ohif/core';\r\n\r\n// TODO: Should probably use dcmjs for this\r\nconst SOP_CLASS_UIDS = {\r\n  BASIC_TEXT_SR: '1.2.840.10008.5.1.4.1.1.88.11',\r\n  ENHANCED_SR: '1.2.840.10008.5.1.4.1.1.88.22',\r\n  COMPREHENSIVE_SR: '1.2.840.10008.5.1.4.1.1.88.33',\r\n  COMPREHENSIVE_3D_SR: '1.2.840.10008.5.1.4.1.1.88.34',\r\n  PROCEDURE_LOG_STORAGE: '1.2.840.10008.5.1.4.1.1.88.40',\r\n  MAMMOGRAPHY_CAD_SR: '1.2.840.10008.5.1.4.1.1.88.50',\r\n  CHEST_CAD_SR: '1.2.840.10008.5.1.4.1.1.88.65',\r\n  X_RAY_RADIATION_DOSE_SR: '1.2.840.10008.5.1.4.1.1.88.67',\r\n  ACQUISITION_CONTEXT_SR_STORAGE: '1.2.840.10008.5.1.4.1.1.88.71'\r\n};\r\n\r\nconst sopClassUIDs = Object.values(SOP_CLASS_UIDS);\r\n\r\n// TODO: Handle the case where there is more than one SOP Class Handler for the\r\n// same SOP Class\r\nconst OHIFDicomHtmlSopClassHandler = {\r\n  id: 'OHIFDicomHtmlSopClassHandler',\r\n  type: MODULE_TYPES.SOP_CLASS_HANDLER,\r\n  sopClassUIDs,\r\n  getDisplaySetFromSeries(series, study, dicomWebClient, authorizationHeaders) {\r\n    const instance = series.getFirstInstance();\r\n\r\n    const metadata = instance.getData().metadata;\r\n    const {\r\n      SeriesDescription,\r\n      SeriesNumber,\r\n      SeriesDate,\r\n      SeriesTime,\r\n    } = metadata;\r\n\r\n    return {\r\n      plugin: 'html',\r\n      Modality: 'SR',\r\n      displaySetInstanceUID: utils.guid(),\r\n      wadoRoot: study.getData().wadoRoot,\r\n      wadoUri: instance.getData().wadouri,\r\n      SOPInstanceUID: instance.getSOPInstanceUID(),\r\n      SeriesInstanceUID: series.getSeriesInstanceUID(),\r\n      StudyInstanceUID: study.getStudyInstanceUID(),\r\n      SeriesDescription,\r\n      metadata,\r\n      SeriesDate,\r\n      SeriesTime,\r\n      SeriesNumber,\r\n      authorizationHeaders,\r\n      sopClassUids: sopClassUIDs,\r\n      images: series._instances,\r\n    };\r\n  },\r\n};\r\n\r\nexport default OHIFDicomHtmlSopClassHandler;\r\n","import React from 'react';\r\nimport OHIFDicomHtmlSopClassHandler from './OHIFDicomHtmlSopClassHandler.js';\r\nimport { version } from '../package.json';\r\n\r\nconst Component = React.lazy(() => {\r\n  return import('./OHIFDicomHtmlViewport');\r\n});\r\n\r\nconst OHIFDicomHtmlViewport = props => {\r\n  return (\r\n    <React.Suspense fallback={<div>Loading...</div>}>\r\n      <Component {...props} />\r\n    </React.Suspense>\r\n  );\r\n};\r\n\r\nexport default {\r\n  /**\r\n   * Only required property. Should be a unique value across all extensions.\r\n   */\r\n  id: 'html',\r\n  version,\r\n\r\n  getViewportModule() {\r\n    return OHIFDicomHtmlViewport;\r\n  },\r\n  getSopClassHandlerModule() {\r\n    return OHIFDicomHtmlSopClassHandler;\r\n  },\r\n};\r\n","import cornerstone from 'cornerstone-core';\r\nimport cornerstoneTools from 'cornerstone-tools';\r\n\r\nconst { importInternal } = cornerstoneTools;\r\nconst draw = importInternal('drawing/draw');\r\nconst drawLine = importInternal('drawing/drawLine');\r\nconst getNewContext = importInternal('drawing/getNewContext');\r\n\r\nexport default function _drawCanvasCrosshairs(eventData, center, options) {\r\n  const context = getNewContext(eventData.canvasContext.canvas);\r\n  const { element } = eventData;\r\n\r\n  const centerCanvas = cornerstone.pixelToCanvas(element, center);\r\n\r\n  const { clientWidth: width, clientHeight: height } = element;\r\n\r\n  const offset = 10;\r\n\r\n  draw(context, context => {\r\n    drawLine(\r\n      context,\r\n      element,\r\n      { x: centerCanvas.x + offset, y: centerCanvas.y },\r\n      { x: width, y: centerCanvas.y },\r\n      options,\r\n      'canvas'\r\n    );\r\n\r\n    drawLine(\r\n      context,\r\n      element,\r\n      { x: centerCanvas.x - offset, y: centerCanvas.y },\r\n      { x: 0, y: centerCanvas.y },\r\n      options,\r\n      'canvas'\r\n    );\r\n\r\n    drawLine(\r\n      context,\r\n      element,\r\n      { x: centerCanvas.x, y: centerCanvas.y + offset },\r\n      { x: centerCanvas.x, y: height },\r\n      options,\r\n      'canvas'\r\n    );\r\n\r\n    drawLine(\r\n      context,\r\n      element,\r\n      { x: centerCanvas.x, y: centerCanvas.y - offset },\r\n      { x: centerCanvas.x, y: 0 },\r\n      options,\r\n      'canvas'\r\n    );\r\n  });\r\n}\r\n","import cornerstoneTools, {\r\n  importInternal,\r\n  getToolState,\r\n  toolColors,\r\n  getModule,\r\n  globalImageIdSpecificToolStateManager,\r\n} from 'cornerstone-tools';\r\nimport cornerstone from 'cornerstone-core';\r\nimport drawCanvasCrosshairs from '../utils/drawCanvasCrosshairs';\r\nimport TOOL_NAMES from './TOOL_NAMES';\r\n\r\nconst { DICOM_SEG_TEMP_CROSSHAIRS_TOOL } = TOOL_NAMES;\r\nconst { getters } = getModule('segmentation');\r\n\r\n// Cornerstone 3rd party dev kit imports\r\nconst BaseTool = importInternal('base/BaseTool');\r\n\r\n/**\r\n * @class RTStructDisplayTool - Renders RTSTRUCT data in a read only manner (i.e. as an overlay).\r\n * @extends cornerstoneTools.BaseTool\r\n */\r\nexport default class DICOMSegTempCrosshairsTool extends BaseTool {\r\n  constructor(props = {}) {\r\n    const defaultProps = {\r\n      mixins: ['enabledOrDisabledBinaryTool'],\r\n      name: DICOM_SEG_TEMP_CROSSHAIRS_TOOL,\r\n    };\r\n\r\n    const initialProps = Object.assign(defaultProps, props);\r\n\r\n    super(initialProps);\r\n\r\n    this._rtStructModule = cornerstoneTools.getModule('rtstruct');\r\n  }\r\n\r\n  renderToolData(evt) {\r\n    const eventData = evt.detail;\r\n    const { element } = eventData;\r\n    const toolState = getToolState(evt.currentTarget, this.name);\r\n\r\n    if (!toolState) {\r\n      return;\r\n    }\r\n\r\n    // We have tool data for this element - iterate over each one and draw it\r\n\r\n    for (let i = 0; i < toolState.data.length; i++) {\r\n      const data = toolState.data[i];\r\n      const crossHairCenter = data.center;\r\n\r\n      drawCanvasCrosshairs(eventData, crossHairCenter, {\r\n        color: toolColors.getActiveColor(),\r\n        lineWidth: 1,\r\n      });\r\n\r\n      // Remove the crosshairs, we only render them for one redraw.\r\n      toolState.data.pop();\r\n    }\r\n  }\r\n}\r\n\r\nDICOMSegTempCrosshairsTool.addCrosshair = (element, imageId, segmentNumber) => {\r\n  const labelmap3D = getters.labelmap3D(element);\r\n  const stackToolState = cornerstoneTools.getToolState(element, 'stack');\r\n  const enabledElement = cornerstone.getEnabledElement(element);\r\n\r\n  const { rows, columns } = enabledElement.image;\r\n\r\n  if (!stackToolState) {\r\n    return;\r\n  }\r\n\r\n  const imageIds = stackToolState.data[0].imageIds;\r\n  const imageIdIndex = imageIds.findIndex(imgId => imgId === imageId);\r\n\r\n  const labelmap2D = labelmap3D.labelmaps2D[imageIdIndex];\r\n  const { pixelData } = labelmap2D;\r\n\r\n  let xCenter = 0;\r\n  let yCenter = 0;\r\n\r\n  let count = 0;\r\n\r\n  for (let y = 0; y < rows; y++) {\r\n    for (let x = 0; x < columns; x++) {\r\n      if (pixelData[y * columns + x] === segmentNumber) {\r\n        count++;\r\n        xCenter += x + 0.5;\r\n        yCenter += y + 0.5;\r\n      }\r\n    }\r\n  }\r\n\r\n  xCenter /= count;\r\n  yCenter /= count;\r\n\r\n  const globalToolState = globalImageIdSpecificToolStateManager.saveToolState();\r\n\r\n  if (!globalToolState[imageId]) {\r\n    globalToolState[imageId] = {};\r\n  }\r\n\r\n  const imageIdSpecificToolState = globalToolState[imageId];\r\n\r\n  if (!imageIdSpecificToolState[DICOM_SEG_TEMP_CROSSHAIRS_TOOL]) {\r\n    imageIdSpecificToolState[DICOM_SEG_TEMP_CROSSHAIRS_TOOL] = { data: [] };\r\n  } else if (!imageIdSpecificToolState[DICOM_SEG_TEMP_CROSSHAIRS_TOOL].data) {\r\n    imageIdSpecificToolState[DICOM_SEG_TEMP_CROSSHAIRS_TOOL].data = [];\r\n  }\r\n\r\n  const toolSpecificData =\r\n    imageIdSpecificToolState[DICOM_SEG_TEMP_CROSSHAIRS_TOOL].data;\r\n\r\n  toolSpecificData.push({ center: { x: xCenter, y: yCenter }, segmentNumber });\r\n\r\n  // Enable the tool if not enabled for the element.\r\n\r\n  const tool = cornerstoneTools.getToolForElement(\r\n    element,\r\n    DICOM_SEG_TEMP_CROSSHAIRS_TOOL\r\n  );\r\n\r\n  if (tool.mode !== 'enabled') {\r\n    // If not already active or passive, set passive so contours render.\r\n    cornerstoneTools.setToolEnabled(DICOM_SEG_TEMP_CROSSHAIRS_TOOL);\r\n  }\r\n};\r\n","const TOOL_NAMES = {\r\n  DICOM_SEG_TEMP_CROSSHAIRS_TOOL: 'DICOMSegTempCrosshairsTool',\r\n};\r\n\r\nexport default TOOL_NAMES;\r\n","/* TODO: Creation tools (future release).\r\n\r\nconst TOOLBAR_BUTTON_TYPES = {\r\n  COMMAND: 'command',\r\n  SET_TOOL_ACTIVE: 'setToolActive',\r\n  BUILT_IN: 'builtIn',\r\n};\r\n\r\n*/\r\n\r\nconst definitions = []; /* TODO: Creation tools (future release). [\r\n  {\r\n    id: 'SegDropdown',\r\n    label: 'Segmentation',\r\n    icon: 'ellipse-circle',\r\n    buttons: [\r\n      {\r\n        id: 'Brush',\r\n        label: 'Brush',\r\n        icon: 'brush',\r\n        //\r\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n        commandName: 'setToolActive',\r\n        commandOptions: { toolName: 'Brush' },\r\n      },\r\n      {\r\n        id: 'SphericalBrush',\r\n        label: 'Spherical',\r\n        icon: 'sphere',\r\n        //\r\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n        commandName: 'setToolActive',\r\n        commandOptions: { toolName: 'SphericalBrush' },\r\n      },\r\n      {\r\n        id: 'CorrectionScissors',\r\n        label: 'Correction Scissors',\r\n        icon: 'scissors',\r\n        //\r\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n        commandName: 'setToolActive',\r\n        commandOptions: { toolName: 'CorrectionScissors' },\r\n      },\r\n      {\r\n        id: 'BrushEraser',\r\n        label: 'Eraser',\r\n        icon: 'trash',\r\n        //\r\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n        commandName: 'setToolActive',\r\n        commandOptions: { toolName: 'BrushEraser' },\r\n      },\r\n    ],\r\n  },\r\n]; */\r\n\r\nexport default {\r\n  definitions,\r\n  defaultContext: 'ACTIVE_VIEWPORT::CORNERSTONE',\r\n};\r\n","import dcmjs from 'dcmjs';\r\nimport cornerstone from 'cornerstone-core';\r\nimport cornerstoneTools from 'cornerstone-tools';\r\n\r\nexport default async function loadSegmentation(\r\n  imageIds,\r\n  segDisplaySet,\r\n  labelmapBuffer,\r\n  segMetadata,\r\n  segmentsOnFrame,\r\n  labelmapSegments\r\n) {\r\n  const { setters } = cornerstoneTools.getModule('segmentation');\r\n\r\n  // TODO: Could define a color LUT based on colors in the SEG.\r\n  const labelmapIndex = _getNextLabelmapIndex(imageIds[0]);\r\n  const colorLUTIndex = _makeColorLUTAndGetIndex(segMetadata);\r\n\r\n  setters.labelmap3DByFirstImageId(\r\n    imageIds[0],\r\n    labelmapBuffer,\r\n    labelmapIndex,\r\n    segMetadata,\r\n    imageIds.length,\r\n    segmentsOnFrame,\r\n    colorLUTIndex\r\n  );\r\n\r\n  if (!segDisplaySet.labelmapSegments) {\r\n    segDisplaySet.labelmapSegments = {};\r\n  }\r\n\r\n  /**\r\n   * Cache each labelmap segments.\r\n   * This data is used to determine the active label map when a given segment is activated/clicked.\r\n   */\r\n  segDisplaySet.labelmapSegments[labelmapIndex] = labelmapSegments.length\r\n    ? Array.from(\r\n        new Set(labelmapSegments.filter(a => !!a).reduce((a, b) => a.concat(b)))\r\n      )\r\n    : [];\r\n  segDisplaySet.labelmapIndex = labelmapIndex;\r\n\r\n  /*\r\n   * TODO: Improve the way we notify parts of the app that depends on segs to be loaded.\r\n   *\r\n   * Currently we are using a non-ideal implementation through a custom event to notify the segmentation panel\r\n   * or other components that could rely on loaded segmentations that\r\n   * the segments were loaded so that e.g. when the user opens the panel\r\n   * before the segments are fully loaded, the panel can subscribe to this custom event\r\n   * and update itself with the new segments.\r\n   *\r\n   * This limitation is due to the fact that the cs segmentation module is an object (which will be\r\n   * updated after the segments are loaded) that React its not aware of its changes\r\n   * because the module object its not passed in to the panel component as prop but accessed externally.\r\n   *\r\n   * Improving this event approach to something reactive that can be tracked inside the react lifecycle,\r\n   * allows us to easily watch the module or the segmentations loading process in any other component\r\n   * without subscribing to external events.\r\n   */\r\n  console.log('Segmentation loaded.');\r\n  const event = new CustomEvent('extensiondicomsegmentationsegloaded', {\r\n    detail: {\r\n      imageIds,\r\n      segDisplaySet,\r\n      labelmapBuffer,\r\n      segMetadata,\r\n      segmentsOnFrame,\r\n      labelmapSegments,\r\n    },\r\n  });\r\n  document.dispatchEvent(event);\r\n\r\n  return labelmapIndex;\r\n}\r\n\r\nfunction _getNextLabelmapIndex(firstImageId) {\r\n  const { state } = cornerstoneTools.getModule('segmentation');\r\n  const brushStackState = state.series[firstImageId];\r\n\r\n  let labelmapIndex = 0;\r\n\r\n  if (brushStackState) {\r\n    const { labelmaps3D } = brushStackState;\r\n    labelmapIndex = labelmaps3D.length;\r\n\r\n    for (let i = 0; i < labelmaps3D.length; i++) {\r\n      if (!labelmaps3D[i]) {\r\n        labelmapIndex = i;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return labelmapIndex;\r\n}\r\n\r\nfunction _makeColorLUTAndGetIndex(segMetadata) {\r\n  const { setters, state } = cornerstoneTools.getModule('segmentation');\r\n  const { colorLutTables } = state;\r\n  const colorLUTIndex = _getNextColorLUTIndex();\r\n\r\n  const { data } = segMetadata;\r\n\r\n  if (\r\n    !data.some(\r\n      segment =>\r\n        segment &&\r\n        (segment.ROIDisplayColor || segment.RecommendedDisplayCIELabValue)\r\n    )\r\n  ) {\r\n    // Use default cornerstoneTools colorLUT.\r\n    return 0;\r\n  }\r\n\r\n  const colorLUT = [];\r\n\r\n  for (let i = 0; i < data.length; i++) {\r\n    const segment = data[i];\r\n    if (!segment) {\r\n      continue;\r\n    }\r\n\r\n    const { ROIDisplayColor, RecommendedDisplayCIELabValue } = segment;\r\n\r\n    if (RecommendedDisplayCIELabValue) {\r\n      const rgb = dcmjs.data.Colors.dicomlab2RGB(\r\n        RecommendedDisplayCIELabValue\r\n      ).map(x => Math.round(x * 255));\r\n\r\n      colorLUT[i] = [...rgb, 255];\r\n    } else if (ROIDisplayColor) {\r\n      colorLUT[i] = [...ROIDisplayColor, 255];\r\n    } else {\r\n      colorLUT[i] = [...colorLutTables[0][i]];\r\n    }\r\n  }\r\n\r\n  colorLUT.shift();\r\n  setters.colorLUT(colorLUTIndex, colorLUT);\r\n\r\n  return colorLUTIndex;\r\n}\r\n\r\nfunction _getNextColorLUTIndex() {\r\n  const { state } = cornerstoneTools.getModule('segmentation');\r\n  const { colorLutTables } = state;\r\n\r\n  let colorLUTIndex = colorLutTables.length;\r\n\r\n  for (let i = 0; i < colorLutTables.length; i++) {\r\n    if (!colorLutTables[i]) {\r\n      colorLUTIndex = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  return colorLUTIndex;\r\n}\r\n","export default function refreshViewports() {\r\n  cornerstone.getEnabledElements().forEach(enabledElement => {\r\n    cornerstone.updateImage(enabledElement.element);\r\n  });\r\n}\r\n","import { utils, log } from '@ohif/core';\r\nimport cornerstoneTools from 'cornerstone-tools';\r\nimport refreshViewports from './refreshViewports';\r\n\r\nconst { studyMetadataManager } = utils;\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} viewportSpecificData\r\n * @param {*} studies\r\n * @param {*} displaySet\r\n * @param {*} firstImageId\r\n * @param {*} activeLabelmapIndex\r\n * @returns\r\n */\r\nexport default async function setActiveLabelmap(\r\n  referencedDisplaySet,\r\n  studies,\r\n  displaySet,\r\n  callback = () => {},\r\n  onDisplaySetLoadFailure = err => {\r\n    console.error(err.message);\r\n  }\r\n) {\r\n  const studyMetadata = studyMetadataManager.get(\r\n    referencedDisplaySet.StudyInstanceUID\r\n  );\r\n  const firstImageId = studyMetadata.getFirstImageId(\r\n    referencedDisplaySet.displaySetInstanceUID\r\n  );\r\n\r\n  let { state } = cornerstoneTools.getModule('segmentation');\r\n\r\n  let brushStackState = state.series[firstImageId];\r\n  const activeLabelmapIndex = brushStackState\r\n    ? brushStackState.activeLabelmapIndex\r\n    : undefined;\r\n\r\n  let labelmapIndex =\r\n    displaySet.hasOverlapping === true\r\n      ? displaySet.originLabelMapIndex\r\n      : displaySet.labelmapIndex;\r\n\r\n  if (labelmapIndex === activeLabelmapIndex) {\r\n    log.warn(`${activeLabelmapIndex} is already the active labelmap`);\r\n    return labelmapIndex;\r\n  }\r\n\r\n  if (!displaySet.isLoaded) {\r\n    try {\r\n      await displaySet.load(referencedDisplaySet, studies);\r\n    } catch (error) {\r\n      displaySet.isLoaded = false;\r\n      displaySet.loadError = true;\r\n      onDisplaySetLoadFailure(error);\r\n\r\n      return -1;\r\n    }\r\n  }\r\n\r\n  labelmapIndex =\r\n    displaySet.hasOverlapping === true\r\n      ? displaySet.originLabelMapIndex\r\n      : displaySet.labelmapIndex;\r\n\r\n  // This might have just been created, so need to use the non-cached value.\r\n  state = cornerstoneTools.getModule('segmentation').state;\r\n\r\n  brushStackState = state.series[firstImageId];\r\n  if (brushStackState) {\r\n    brushStackState.activeLabelmapIndex = labelmapIndex;\r\n  }\r\n\r\n  refreshViewports();\r\n  callback();\r\n\r\n  return labelmapIndex;\r\n}\r\n","import setActiveLabelmap from './utils/setActiveLabelMap';\r\nimport { metadata } from '@ohif/core';\r\n\r\nexport default function getSourceDisplaySet(studies, segDisplaySet, activateLabelMap = true, onDisplaySetLoadFailureHandler) {\r\n  const referencedDisplaySet = metadata.StudyMetadata.getReferencedDisplaySet(segDisplaySet, studies);\r\n\r\n  let activatedLabelmapPromise;\r\n  if (activateLabelMap) {\r\n    activatedLabelmapPromise = setActiveLabelmap(referencedDisplaySet, studies, segDisplaySet, undefined, onDisplaySetLoadFailureHandler);\r\n  }\r\n\r\n  return {\r\n    referencedDisplaySet : referencedDisplaySet,\r\n    activatedLabelmapPromise : activatedLabelmapPromise\r\n  }\r\n}\r\n","import { MODULE_TYPES, utils } from '@ohif/core';\r\nimport loadSegmentation from './loadSegmentation';\r\nimport getSourceDisplaySet from './getSourceDisplaySet';\r\nimport OHIF from '@ohif/core';\r\nimport dcmjs from 'dcmjs';\r\n\r\nconst { DicomLoaderService } = OHIF.utils;\r\nconst { DicomMessage, DicomMetaDictionary } = dcmjs.data;\r\n\r\n// TODO: Should probably use dcmjs for this\r\nconst SOP_CLASS_UIDS = {\r\n  DICOM_SEG: '1.2.840.10008.5.1.4.1.1.66.4',\r\n};\r\n\r\nconst sopClassUIDs = Object.values(SOP_CLASS_UIDS);\r\n\r\nexport default function getSopClassHandlerModule({ servicesManager }) {\r\n  // TODO: Handle the case where there is more than one SOP Class Handler for the\r\n  // same SOP Class.\r\n  return {\r\n    id: 'OHIFDicomSegSopClassHandler',\r\n    type: MODULE_TYPES.SOP_CLASS_HANDLER,\r\n    sopClassUIDs,\r\n    getDisplaySetFromSeries: function(\r\n      series,\r\n      study,\r\n      dicomWebClient,\r\n      authorizationHeaders\r\n    ) {\r\n      const instance = series.getFirstInstance();\r\n      const metadata = instance.getData().metadata;\r\n\r\n      const {\r\n        SeriesDate,\r\n        SeriesTime,\r\n        SeriesDescription,\r\n        FrameOfReferenceUID,\r\n        SOPInstanceUID,\r\n        SeriesInstanceUID,\r\n        StudyInstanceUID,\r\n        SeriesNumber,\r\n      } = metadata;\r\n\r\n      const segDisplaySet = {\r\n        Modality: 'SEG',\r\n        displaySetInstanceUID: utils.guid(),\r\n        wadoRoot: study.getData().wadoRoot,\r\n        wadoUri: instance.getData().wadouri,\r\n        SOPInstanceUID,\r\n        SeriesInstanceUID,\r\n        StudyInstanceUID,\r\n        FrameOfReferenceUID,\r\n        authorizationHeaders,\r\n        isDerived: true,\r\n        referencedDisplaySetUID: null, // Assigned when loaded.\r\n        labelmapIndex: null, // Assigned when loaded.\r\n        isLoaded: false,\r\n        loadError: false,\r\n        hasOverlapping: false,\r\n        SeriesDate,\r\n        SeriesTime,\r\n        SeriesNumber,\r\n        SeriesDescription,\r\n        metadata,\r\n      };\r\n\r\n      segDisplaySet.getSourceDisplaySet = function(\r\n        studies,\r\n        activateLabelMap = true,\r\n        onDisplaySetLoadFailureHandler\r\n      ) {\r\n        return getSourceDisplaySet(\r\n          studies,\r\n          segDisplaySet,\r\n          activateLabelMap,\r\n          onDisplaySetLoadFailureHandler\r\n        );\r\n      };\r\n\r\n      segDisplaySet.load = async function(referencedDisplaySet, studies) {\r\n        segDisplaySet.isLoaded = true;\r\n        const { StudyInstanceUID } = referencedDisplaySet;\r\n        const segArrayBuffer = await DicomLoaderService.findDicomDataPromise(\r\n          segDisplaySet,\r\n          studies\r\n        );\r\n        const dicomData = DicomMessage.readFile(segArrayBuffer);\r\n        const dataset = DicomMetaDictionary.naturalizeDataset(dicomData.dict);\r\n        dataset._meta = DicomMetaDictionary.namifyDataset(dicomData.meta);\r\n        const imageIds = _getImageIdsForDisplaySet(\r\n          studies,\r\n          StudyInstanceUID,\r\n          referencedDisplaySet.SeriesInstanceUID\r\n        );\r\n\r\n        const results = await _parseSeg(segArrayBuffer, imageIds);\r\n        if (results === undefined) {\r\n          return;\r\n        }\r\n        const {\r\n          labelmapBufferArray,\r\n          segMetadata,\r\n          segmentsOnFrame,\r\n          segmentsOnFrameArray,\r\n        } = results;\r\n        let labelmapIndex;\r\n        if (labelmapBufferArray.length > 1) {\r\n          let labelmapIndexes = [];\r\n          for (let i = 0; i < labelmapBufferArray.length; ++i) {\r\n            segMetadata.segmentationSeriesInstanceUID =\r\n              segDisplaySet.SeriesInstanceUID;\r\n            segMetadata.hasOverlapping = true;\r\n            labelmapIndexes.push(\r\n              await loadSegmentation(\r\n                imageIds,\r\n                segDisplaySet,\r\n                labelmapBufferArray[i],\r\n                segMetadata,\r\n                segmentsOnFrame,\r\n                segmentsOnFrameArray[i]\r\n              )\r\n            );\r\n          }\r\n          /**\r\n           * Since overlapping segments have virtual labelmaps,\r\n           * originLabelMapIndex is used in the panel to select the correct dropdown value.\r\n           */\r\n          segDisplaySet.hasOverlapping = true;\r\n          segDisplaySet.originLabelMapIndex = labelmapIndexes[0];\r\n          labelmapIndex = labelmapIndexes[0];\r\n          console.warn('Overlapping segments!');\r\n        } else {\r\n          segMetadata.segmentationSeriesInstanceUID =\r\n            segDisplaySet.SeriesInstanceUID;\r\n          segMetadata.hasOverlapping = false;\r\n          labelmapIndex = await loadSegmentation(\r\n            imageIds,\r\n            segDisplaySet,\r\n            labelmapBufferArray[0],\r\n            segMetadata,\r\n            segmentsOnFrame,\r\n            []\r\n          );\r\n        }\r\n      };\r\n\r\n      return segDisplaySet;\r\n    },\r\n  };\r\n}\r\n\r\nfunction _parseSeg(arrayBuffer, imageIds) {\r\n  const skipOverlapping = false;\r\n  const tolerance = 1e-2;\r\n  const cornerstoneToolsVersion = 4;\r\n  return dcmjs.adapters.Cornerstone.Segmentation.generateToolState(\r\n    imageIds,\r\n    arrayBuffer,\r\n    cornerstone.metaData,\r\n    skipOverlapping,\r\n    tolerance,\r\n    cornerstoneToolsVersion\r\n  );\r\n}\r\n\r\nfunction _getImageIdsForDisplaySet(\r\n  studies,\r\n  StudyInstanceUID,\r\n  SeriesInstanceUID\r\n) {\r\n  const study = studies.find(\r\n    study => study.StudyInstanceUID === StudyInstanceUID\r\n  );\r\n\r\n  const displaySets = study.displaySets.filter(displaySet => {\r\n    return displaySet.SeriesInstanceUID === SeriesInstanceUID;\r\n  });\r\n\r\n  if (displaySets.length > 1) {\r\n    console.warn(\r\n      'More than one display set with the same SeriesInstanceUID. This is not supported yet...'\r\n    );\r\n    // TODO -> We could make check the instance list and see if any match?\r\n    // Do we split the segmentation into two cornerstoneTools segmentations if there are images in both series?\r\n    // ^ Will that even happen?\r\n  }\r\n\r\n  const referencedDisplaySet = displaySets[0];\r\n\r\n  return referencedDisplaySet.images.map(image => image.getImageId());\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './BrushColorSelector.css';\r\n\r\nconst BrushColorSelector = ({ defaultColor, index, onNext, onPrev }) => (\r\n  <div className=\"dcmseg-brush-color-selector\">\r\n    <div\r\n      className=\"selector-active-segment\"\r\n      style={{ backgroundColor: defaultColor }}\r\n    >\r\n      {index}\r\n    </div>\r\n    <div className=\"selector-buttons\">\r\n      <button onClick={onPrev}>\r\n        Previous\r\n      </button>\r\n      <button onClick={onNext}>\r\n        Next\r\n      </button>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nBrushColorSelector.propTypes = {\r\n  defaultColor: PropTypes.string.isRequired,\r\n  index: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\r\n  onNext: PropTypes.func.isRequired,\r\n  onPrev: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default BrushColorSelector;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Range } from '@ohif/ui';\r\n\r\nimport './BrushRadius.css';\r\n\r\nconst BrushRadius = ({ value, onChange, min, max, step }) => (\r\n  <div className=\"dcmseg-brush-radius\">\r\n    <label htmlFor=\"dcmseg-brush-radius\">Brush Radius</label>\r\n    <Range\r\n      value={value}\r\n      min={min}\r\n      max={max}\r\n      step={step}\r\n      onChange={onChange}\r\n      id=\"dcmseg-brush-radius\"\r\n    />\r\n  </div>\r\n);\r\n\r\nBrushRadius.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n  onChange: PropTypes.number,\r\n  min: PropTypes.number,\r\n  max: PropTypes.number,\r\n  step: PropTypes.number,\r\n};\r\n\r\nBrushRadius.defaultProps = {\r\n  onChange: () => { },\r\n  min: 1,\r\n  max: 50,\r\n  step: 1,\r\n};\r\n\r\nexport default BrushRadius;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './SegmentationItem.css';\r\n\r\nconst SegmentationItem = ({ onClick, title, description }) => {\r\n  return (\r\n    <li className=\"dcmseg-segmentation-item\" onClick={onClick}>\r\n      <div className=\"segmentation-meta\">\r\n        <div className=\"segmentation-meta-title\">{title}</div>\r\n        <div className=\"segmentation-meta-description\">{description}</div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nSegmentationItem.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n};\r\n\r\nSegmentationItem.defaultProps = {\r\n  description: ''\r\n};\r\n\r\nexport default SegmentationItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Range } from '@ohif/ui';\r\n\r\nimport './SegmentationSettings.css';\r\n\r\nconst SegmentationSettings = ({ configuration, onBack, onChange, disabledFields = [] }) => {\r\n  const [state, setState] = useState({\r\n    renderFill: configuration.renderFill,\r\n    renderOutline: configuration.renderOutline,\r\n    shouldRenderInactiveLabelmaps: configuration.shouldRenderInactiveLabelmaps,\r\n    fillAlpha: configuration.fillAlpha,\r\n    outlineAlpha: configuration.outlineAlpha,\r\n    outlineWidth: configuration.outlineWidth,\r\n    fillAlphaInactive: configuration.fillAlphaInactive,\r\n    outlineAlphaInactive: configuration.outlineAlphaInactive\r\n  });\r\n\r\n  useEffect(() => {\r\n    onChange(state);\r\n  }, [state]);\r\n\r\n  const check = field => {\r\n    setState(state => ({ ...state, [field]: !state[field] }));\r\n  };\r\n\r\n  const save = (field, value) => {\r\n    setState(state => ({ ...state, [field]: value }));\r\n  };\r\n\r\n  const toFloat = value => parseFloat(value / 100).toFixed(2);\r\n\r\n  return (\r\n    <div className=\"dcmseg-segmentation-settings\">\r\n      <div className=\"settings-title\">\r\n        <h3>Segmentations Settings</h3>\r\n        <button className=\"return-button\" onClick={onBack}>\r\n          Back\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"settings-group\"\r\n        style={{ marginBottom: state.renderFill ? 15 : 0 }}\r\n      >\r\n        <CustomCheck\r\n          label=\"Segment Fill\"\r\n          checked={state.renderFill}\r\n          onChange={() => check('renderFill')}\r\n        />\r\n        {state.renderFill && (\r\n          <CustomRange\r\n            label=\"Opacity\"\r\n            step={1}\r\n            min={0}\r\n            max={100}\r\n            value={state.fillAlpha * 100}\r\n            onChange={event => save('fillAlpha', toFloat(event.target.value))}\r\n            showPercentage\r\n          />\r\n        )}\r\n      </div>\r\n      <div\r\n        className=\"settings-group\"\r\n        style={{ marginBottom: state.renderOutline ? 15 : 0 }}\r\n      >\r\n        <CustomCheck\r\n          label=\"Segment Outline\"\r\n          checked={state.renderOutline}\r\n          onChange={() => check('renderOutline')}\r\n        />\r\n        {state.renderOutline && (\r\n          <>\r\n            {!disabledFields.includes('outlineAlpha') && (\r\n              <CustomRange\r\n                value={state.outlineAlpha * 100}\r\n                label=\"Opacity\"\r\n                showPercentage\r\n                step={1}\r\n                min={0}\r\n                max={100}\r\n                onChange={event => save('outlineAlpha', toFloat(event.target.value))}\r\n              />\r\n            )}\r\n            {!disabledFields.includes('outlineWidth') && (\r\n              <CustomRange\r\n                value={state.outlineWidth}\r\n                label=\"Width\"\r\n                showValue\r\n                step={1}\r\n                min={0}\r\n                max={5}\r\n                onChange={event => save('outlineWidth', parseInt(event.target.value))}\r\n              />\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n      {(state.renderFill || state.renderOutline) && !disabledFields.includes('shouldRenderInactiveLabelmaps') && (\r\n        <div\r\n          className=\"settings-group\"\r\n          style={{ marginBottom: state.shouldRenderInactiveLabelmaps ? 15 : 0 }}\r\n        >\r\n          <CustomCheck\r\n            label=\"Render inactive segmentations\"\r\n            checked={state.shouldRenderInactiveLabelmaps}\r\n            onChange={() => check('shouldRenderInactiveLabelmaps')}\r\n          />\r\n          {state.shouldRenderInactiveLabelmaps && (\r\n            <>\r\n              {state.renderFill && !disabledFields.includes('fillAlphaInactive') && (\r\n                <CustomRange\r\n                  label=\"Fill Opacity\"\r\n                  showPercentage\r\n                  step={1}\r\n                  min={0}\r\n                  max={100}\r\n                  value={state.fillAlphaInactive * 100}\r\n                  onChange={event => save('fillAlphaInactive', toFloat(event.target.value))}\r\n                />\r\n              )}\r\n              {state.renderOutline && !disabledFields.includes('outlineAlphaInactive') && (\r\n                <CustomRange\r\n                  label=\"Outline Opacity\"\r\n                  showPercentage\r\n                  step={1}\r\n                  min={0}\r\n                  max={100}\r\n                  value={state.outlineAlphaInactive * 100}\r\n                  onChange={event => save('outlineAlphaInactive', toFloat(event.target.value))}\r\n                />\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CustomCheck = ({ label, checked, onChange }) => {\r\n  return (\r\n    <div className=\"custom-check\">\r\n      <label>\r\n        <span>{label}</span>\r\n        <input type=\"checkbox\" checked={checked} onChange={onChange} />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CustomRange = props => {\r\n  const { label, onChange } = props;\r\n  return (\r\n    <div className=\"range\">\r\n      <label htmlFor=\"range\">{label}</label>\r\n      <Range\r\n        {...props}\r\n        onChange={event => {\r\n          event.persist();\r\n          onChange(event);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nSegmentationSettings.propTypes = {\r\n  configuration: PropTypes.shape({\r\n    renderFill: PropTypes.bool.isRequired,\r\n    renderOutline: PropTypes.bool.isRequired,\r\n    shouldRenderInactiveLabelmaps: PropTypes.bool.isRequired,\r\n    fillAlpha: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired, /* TODO: why fillAlpha is string? */\r\n    outlineAlpha: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired, /* TODO: why fillAlpha is string? */\r\n    outlineWidth: PropTypes.number.isRequired,\r\n    fillAlphaInactive: PropTypes.number.isRequired,\r\n    outlineAlphaInactive: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SegmentationSettings;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TableListItem, Icon } from '@ohif/ui';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nimport './SegmentItem.css';\r\n\r\nconst ColoredCircle = ({ color }) => {\r\n  return (\r\n    <div\r\n      className=\"segment-color\"\r\n      style={{ backgroundColor: `rgba(${color.join(',')})` }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nColoredCircle.propTypes = {\r\n  color: PropTypes.array.isRequired,\r\n};\r\n\r\nconst SegmentItem = ({\r\n  index,\r\n  label,\r\n  onClick,\r\n  itemClass,\r\n  color,\r\n  labelmap3D,\r\n  visible,\r\n  onVisibilityChange,\r\n}) => {\r\n  const [isVisible, setIsVisible] = useState(visible);\r\n\r\n  useEffect(() => {\r\n    setIsVisible(visible);\r\n  }, [visible]);\r\n\r\n  const onClickHandler = () => onClick(index);\r\n\r\n  const onVisibilityChangeHandler = event => {\r\n    event.stopPropagation();\r\n    const newVisibility = !isVisible;\r\n    setIsVisible(newVisibility);\r\n    onVisibilityChange(newVisibility, index, labelmap3D);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dcmseg-segment-item\">\r\n      <TableListItem\r\n        key={index}\r\n        itemKey={index}\r\n        itemIndex={index}\r\n        itemClass={itemClass}\r\n        itemMeta={<ColoredCircle color={color} />}\r\n        itemMetaClass=\"segment-color-section\"\r\n        onItemClick={onClickHandler}\r\n      >\r\n        <div>\r\n          <div className=\"segment-label\" style={{ marginBottom: 4 }}>\r\n            <a data-tip data-for={`SegmentHover${index}`}>\r\n              <span>{label}</span>\r\n            </a>\r\n            <ReactTooltip\r\n              id={`SegmentHover${index}`}\r\n              delayShow={250}\r\n              place=\"right\"\r\n              border={true}\r\n              type=\"light\"\r\n            >\r\n              <span>{label}</span>\r\n            </ReactTooltip>\r\n            <Icon\r\n              className={`eye-icon ${isVisible && '--visible'}`}\r\n              name={isVisible ? 'eye' : 'eye-closed'}\r\n              width=\"20px\"\r\n              height=\"20px\"\r\n              onClick={onVisibilityChangeHandler}\r\n            />\r\n          </div>\r\n          {false && <div className=\"segment-info\">{'...'}</div>}\r\n          {false && (\r\n            <div className=\"segment-actions\">\r\n              <button\r\n                className=\"btnAction\"\r\n                onClick={() => console.log('Relabelling...')}\r\n              >\r\n                <span style={{ marginRight: '4px' }}>\r\n                  <Icon name=\"edit\" width=\"14px\" height=\"14px\" />\r\n                </span>\r\n                Relabel\r\n              </button>\r\n              <button\r\n                className=\"btnAction\"\r\n                onClick={() => console.log('Editing description...')}\r\n              >\r\n                <span style={{ marginRight: '4px' }}>\r\n                  <Icon name=\"edit\" width=\"14px\" height=\"14px\" />\r\n                </span>\r\n                Description\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </TableListItem>\r\n    </div>\r\n  );\r\n};\r\n\r\nSegmentItem.propTypes = {\r\n  index: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n  itemClass: PropTypes.string,\r\n  color: PropTypes.array.isRequired,\r\n};\r\n\r\nSegmentItem.defaultProps = {\r\n  itemClass: '',\r\n  onClick: () => {},\r\n};\r\n\r\nexport default SegmentItem;\r\n","import React from 'react';\r\nimport Select from 'react-select';\r\n\r\nconst SegmentationSelect = ({ value, formatOptionLabel, options }) => (\r\n  <Select\r\n    value={value === undefined ? null : value}\r\n    formatOptionLabel={formatOptionLabel}\r\n    styles={segmentationSelectStyles}\r\n    options={options}\r\n  />\r\n);\r\n\r\nconst computedstyle = getComputedStyle(document.body);\r\nconst uiGrayDarker = computedstyle.getPropertyValue('--ui-gray-darker');\r\nconst activeColor = computedstyle.getPropertyValue('--active-color');\r\nconst defaultColor = computedstyle.getPropertyValue('--default-color');\r\nconst uiGrayDark = computedstyle.getPropertyValue('--ui-gray-dark');\r\n\r\nconst segmentationSelectStyles = {\r\n  singleValue: (base, state) => ({\r\n    ...base,\r\n    width: '100%'\r\n  }),\r\n  control: (base, state) => ({\r\n    ...base,\r\n    cursor: 'pointer',\r\n    background: uiGrayDarker,\r\n    borderRadius: state.isFocused ? '5px 5px 5px 5px' : 5,\r\n    borderColor: state.isFocused ? activeColor : defaultColor,\r\n    boxShadow: state.isFocused ? null : null,\r\n    minHeight: '50px',\r\n    '&:hover': {\r\n      borderColor: activeColor,\r\n    },\r\n  }),\r\n  menu: base => ({\r\n    ...base,\r\n    borderRadius: 5,\r\n    background: uiGrayDarker,\r\n  }),\r\n  option: (base, state) => ({\r\n    ...base,\r\n    cursor: 'pointer',\r\n    '&:first-of-type': {\r\n      borderTopLeftRadius: 5,\r\n      borderTopRightRadius: 5,\r\n    },\r\n    '&:last-of-type': {\r\n      borderBottomLeftRadius: 5,\r\n      borderBottomRightRadius: 5,\r\n    },\r\n    background: state.isSelected ? uiGrayDark : uiGrayDarker,\r\n    '&:hover': {\r\n      background: uiGrayDark,\r\n    },\r\n  }),\r\n};\r\n\r\nexport default SegmentationSelect;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cornerstoneTools from 'cornerstone-tools';\r\nimport cornerstone from 'cornerstone-core';\r\nimport moment from 'moment';\r\nimport classNames from 'classnames';\r\nimport { utils, log } from '@ohif/core';\r\nimport { ScrollableArea, TableList, Icon } from '@ohif/ui';\r\nimport DICOMSegTempCrosshairsTool from '../../tools/DICOMSegTempCrosshairsTool';\r\n\r\nimport setActiveLabelmap from '../../utils/setActiveLabelMap';\r\nimport refreshViewports from '../../utils/refreshViewports';\r\n\r\nimport {\r\n  BrushColorSelector,\r\n  BrushRadius,\r\n  SegmentationItem,\r\n  SegmentItem,\r\n  SegmentationSelect,\r\n} from '../index';\r\n\r\nimport './SegmentationPanel.css';\r\nimport SegmentationSettings from '../SegmentationSettings/SegmentationSettings';\r\n\r\nconst { studyMetadataManager } = utils;\r\n\r\n/**\r\n * SegmentationPanel component\r\n *\r\n * @param {Array} props.studies - Studies data\r\n * @param {Array} props.viewports - Viewports data (viewportSpecificData)\r\n * @param {number} props.activeIndex - Active viewport index\r\n * @param {boolean} props.isOpen - Boolean that indicates if the panel is expanded\r\n * @param {Function} props.onSegmentItemClick - Segment click handler\r\n * @param {Function} props.onSegmentVisibilityChange - Segment visibiliy change handler\r\n * @param {Function} props.onConfigurationChange - Configuration change handler\r\n * @param {Function} props.activeContexts - List of active application contexts\r\n * @param {Function} props.contexts - List of available application contexts\r\n * @returns component\r\n */\r\nconst SegmentationPanel = ({\r\n  studies,\r\n  viewports,\r\n  activeIndex,\r\n  isOpen,\r\n  onSegmentItemClick,\r\n  onSegmentVisibilityChange,\r\n  onConfigurationChange,\r\n  onDisplaySetLoadFailure,\r\n  onSelectedSegmentationChange,\r\n  activeContexts = [],\r\n  contexts = {},\r\n}) => {\r\n  const isVTK = () => activeContexts.includes(contexts.VTK);\r\n  const isCornerstone = () => activeContexts.includes(contexts.CORNERSTONE);\r\n\r\n  /*\r\n   * TODO: wrap get/set interactions with the cornerstoneTools\r\n   * store with context to make these kind of things less blurry.\r\n   */\r\n  const { configuration } = cornerstoneTools.getModule('segmentation');\r\n  const DEFAULT_BRUSH_RADIUS = configuration.radius || 10;\r\n\r\n  /*\r\n   * TODO: We shouldn't hardcode brushColor color, in the future\r\n   * the SEG may set the colorLUT to whatever it wants.\r\n   */\r\n  const [state, setState] = useState({\r\n    brushRadius: DEFAULT_BRUSH_RADIUS,\r\n    brushColor: 'rgba(221, 85, 85, 1)',\r\n    selectedSegment: 0,\r\n    selectedSegmentation: 0,\r\n    showSettings: false,\r\n    labelMapList: [],\r\n    segmentList: [],\r\n    segmentsHidden: [],\r\n    segmentNumbers: [],\r\n    isLoading: false,\r\n    isDisabled: true,\r\n  });\r\n\r\n  const getActiveViewport = () => viewports[activeIndex];\r\n\r\n  const getFirstImageId = () => {\r\n    const { StudyInstanceUID, displaySetInstanceUID } = getActiveViewport();\r\n    const studyMetadata = studyMetadataManager.get(StudyInstanceUID);\r\n    return studyMetadata.getFirstImageId(displaySetInstanceUID);\r\n  };\r\n\r\n  const getActiveLabelMaps3D = () => {\r\n    const { labelmaps3D, activeLabelmapIndex } = getBrushStackState();\r\n    return labelmaps3D[activeLabelmapIndex];\r\n  };\r\n\r\n  const getActiveLabelMapIndex = () => {\r\n    const { activeLabelmapIndex } = getBrushStackState();\r\n    return activeLabelmapIndex;\r\n  };\r\n\r\n  const getActiveSegmentIndex = () => {\r\n    const { activeSegmentIndex } = getActiveLabelMaps3D();\r\n    return activeSegmentIndex;\r\n  };\r\n\r\n  const getActiveLabelMaps2D = () => {\r\n    const { labelmaps2D } = getActiveLabelMaps3D();\r\n    return labelmaps2D;\r\n  };\r\n\r\n  const getCurrentDisplaySet = () => {\r\n    const { StudyInstanceUID, displaySetInstanceUID } = getActiveViewport();\r\n    const studyMetadata = studyMetadataManager.get(StudyInstanceUID);\r\n    const allDisplaySets = studyMetadata.getDisplaySets();\r\n    return allDisplaySets.find(\r\n      ds => ds.displaySetInstanceUID === displaySetInstanceUID\r\n    );\r\n  };\r\n\r\n  const setActiveSegment = segmentIndex => {\r\n    const activeSegmentIndex = getActiveSegmentIndex();\r\n    const activeViewport = getActiveViewport();\r\n\r\n    if (segmentIndex === activeSegmentIndex) {\r\n      log.info(`${activeSegmentIndex} is already the active segment`);\r\n      return;\r\n    }\r\n\r\n    const labelmap3D = getActiveLabelMaps3D();\r\n    labelmap3D.activeSegmentIndex = segmentIndex;\r\n\r\n    /**\r\n     * Activates the correct label map if clicked segment\r\n     * does not belong to the active labelmap\r\n     */\r\n    const { StudyInstanceUID } = activeViewport;\r\n    const studyMetadata = studyMetadataManager.get(StudyInstanceUID);\r\n    const allDisplaySets = studyMetadata.getDisplaySets();\r\n    let selectedSegmentation;\r\n    let newLabelmapIndex = getActiveLabelMapIndex();\r\n    allDisplaySets.forEach(displaySet => {\r\n      if (displaySet.labelmapSegments) {\r\n        Object.keys(displaySet.labelmapSegments).forEach(labelmapIndex => {\r\n          if (\r\n            displaySet.labelmapSegments[labelmapIndex].includes(segmentIndex)\r\n          ) {\r\n            newLabelmapIndex = labelmapIndex;\r\n            selectedSegmentation =\r\n              displaySet.hasOverlapping === true\r\n                ? displaySet.originLabelMapIndex\r\n                : labelmapIndex;\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    const brushStackState = getBrushStackState();\r\n    brushStackState.activeLabelmapIndex = newLabelmapIndex;\r\n    if (selectedSegmentation) {\r\n      setState(state => ({ ...state, selectedSegmentation }));\r\n    }\r\n\r\n    refreshViewports();\r\n\r\n    return segmentIndex;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const labelmapModifiedHandler = event => {\r\n      log.warn('Segmentation Panel: labelmap modified', event);\r\n      refreshSegmentations();\r\n    };\r\n\r\n    /*\r\n     * TODO: Improve the way we notify parts of the app that depends on segs to be loaded.\r\n     *\r\n     * Currently we are using a non-ideal implementation through a custom event to notify the segmentation panel\r\n     * or other components that could rely on loaded segmentations that\r\n     * the segments were loaded so that e.g. when the user opens the panel\r\n     * before the segments are fully loaded, the panel can subscribe to this custom event\r\n     * and update itself with the new segments.\r\n     *\r\n     * This limitation is due to the fact that the cs segmentation module is an object (which will be\r\n     * updated after the segments are loaded) that React its not aware of its changes\r\n     * because the module object its not passed in to the panel component as prop but accessed externally.\r\n     *\r\n     * Improving this event approach to something reactive that can be tracked inside the react lifecycle,\r\n     * allows us to easily watch the module or the segmentations loading process in any other component\r\n     * without subscribing to external events.\r\n     */\r\n    document.addEventListener(\r\n      'extensiondicomsegmentationsegloaded',\r\n      refreshSegmentations\r\n    );\r\n    document.addEventListener(\r\n      'extensiondicomsegmentationsegselected',\r\n      updateSegmentationComboBox\r\n    );\r\n\r\n    /*\r\n     * These are specific to each element;\r\n     * Need to iterate cornerstone-tools tracked enabled elements?\r\n     * Then only care about the one tied to active viewport?\r\n     */\r\n    cornerstoneTools.store.state.enabledElements.forEach(enabledElement =>\r\n      enabledElement.addEventListener(\r\n        'cornerstonetoolslabelmapmodified',\r\n        labelmapModifiedHandler\r\n      )\r\n    );\r\n\r\n    return () => {\r\n      document.removeEventListener(\r\n        'extensiondicomsegmentationsegloaded',\r\n        refreshSegmentations\r\n      );\r\n      document.removeEventListener(\r\n        'extensiondicomsegmentationsegselected',\r\n        updateSegmentationComboBox\r\n      );\r\n      cornerstoneTools.store.state.enabledElements.forEach(enabledElement =>\r\n        enabledElement.removeEventListener(\r\n          'cornerstonetoolslabelmapmodified',\r\n          labelmapModifiedHandler\r\n        )\r\n      );\r\n    };\r\n  }, [\r\n    activeIndex,\r\n    updateSegmentationComboBox,\r\n    viewports,\r\n  ]);\r\n\r\n  const updateSegmentationComboBox = e => {\r\n    const index = e.detail.activatedLabelmapIndex;\r\n    if (index !== -1) {\r\n      setState(state => ({ ...state, selectedSegmentation: index }));\r\n    } else {\r\n      cleanSegmentationComboBox();\r\n    }\r\n  };\r\n\r\n  const cleanSegmentationComboBox = () => {\r\n    setState(state => ({\r\n      ...state,\r\n      segmentsHidden: [],\r\n      segmentNumbers: [],\r\n      labelMapList: [],\r\n      segmentList: [],\r\n      isDisabled: true,\r\n      selectedSegmentation: -1,\r\n    }));\r\n  };\r\n\r\n  const refreshSegmentations = () => {\r\n    const activeViewport = getActiveViewport();\r\n    const isDisabled = !activeViewport || !activeViewport.StudyInstanceUID;\r\n    if (!isDisabled) {\r\n      const brushStackState = getBrushStackState();\r\n      if (brushStackState) {\r\n        const labelMapList = getLabelMapList();\r\n        const {\r\n          items: segmentList,\r\n          numbers: segmentNumbers,\r\n          segmentsHidden,\r\n        } = getSegmentList();\r\n        setState(state => ({\r\n          ...state,\r\n          segmentsHidden,\r\n          segmentNumbers,\r\n          labelMapList,\r\n          segmentList,\r\n          isDisabled,\r\n        }));\r\n      } else {\r\n        setState(state => ({\r\n          ...state,\r\n          segmentsHidden: [],\r\n          segmentNumbers: [],\r\n          labelMapList: [],\r\n          segmentList: [],\r\n          isDisabled,\r\n        }));\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshSegmentations();\r\n  }, [\r\n    viewports,\r\n    activeIndex,\r\n    isOpen,\r\n    state.selectedSegmentation,\r\n    activeContexts,\r\n    state.isLoading,\r\n  ]);\r\n\r\n  /* Handle open/closed panel behaviour */\r\n  useEffect(() => {\r\n    setState(state => ({\r\n      ...state,\r\n      showSettings: state.showSettings && !isOpen,\r\n    }));\r\n  }, [isOpen]);\r\n\r\n  const getLabelMapList = () => {\r\n    const activeViewport = getActiveViewport();\r\n\r\n    /* Get list of SEG labelmaps specific to active viewport (reference series) */\r\n    const referencedSegDisplaysets = _getReferencedSegDisplaysets(\r\n      activeViewport.StudyInstanceUID,\r\n      activeViewport.SeriesInstanceUID\r\n    );\r\n\r\n    const filteredReferencedSegDisplaysets = referencedSegDisplaysets.filter(\r\n      segDisplay => segDisplay.loadError !== true\r\n    );\r\n\r\n    return filteredReferencedSegDisplaysets.map((displaySet, index) => {\r\n      const {\r\n        labelmapIndex,\r\n        originLabelMapIndex,\r\n        hasOverlapping,\r\n        SeriesDate,\r\n        SeriesTime,\r\n      } = displaySet;\r\n\r\n      /* Map to display representation */\r\n      const dateStr = `${SeriesDate}:${SeriesTime}`.split('.')[0];\r\n      const date = moment(dateStr, 'YYYYMMDD:HHmmss');\r\n      const displayDate = date.format('ddd, MMM Do YYYY, h:mm:ss a');\r\n      const displayDescription = displaySet.SeriesDescription;\r\n\r\n      return {\r\n        value: hasOverlapping === true ? originLabelMapIndex : labelmapIndex,\r\n        title: displayDescription,\r\n        description: displayDate,\r\n        onClick: async () => {\r\n          const activatedLabelmapIndex = await setActiveLabelmap(\r\n            activeViewport,\r\n            studies,\r\n            displaySet,\r\n            onSelectedSegmentationChange,\r\n            onDisplaySetLoadFailure\r\n          );\r\n          setState(state => ({\r\n            ...state,\r\n            selectedSegmentation: activatedLabelmapIndex,\r\n          }));\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  const setCurrentSelectedSegment = segmentNumber => {\r\n    setActiveSegment(segmentNumber);\r\n\r\n    const sameSegment = state.selectedSegment === segmentNumber;\r\n    if (!sameSegment) {\r\n      setState(state => ({ ...state, selectedSegment: segmentNumber }));\r\n    }\r\n\r\n    const validIndexList = [];\r\n    getActiveLabelMaps2D().forEach((labelMap2D, index) => {\r\n      if (labelMap2D.segmentsOnLabelmap.includes(segmentNumber)) {\r\n        validIndexList.push(index);\r\n      }\r\n    });\r\n\r\n    const avg = array => array.reduce((a, b) => a + b) / array.length;\r\n    const average = avg(validIndexList);\r\n    const closest = validIndexList.reduce((prev, curr) => {\r\n      return Math.abs(curr - average) < Math.abs(prev - average) ? curr : prev;\r\n    });\r\n\r\n    if (isCornerstone()) {\r\n      const element = getEnabledElement();\r\n      const toolState = cornerstoneTools.getToolState(element, 'stack');\r\n\r\n      if (!toolState) return;\r\n\r\n      const imageIds = toolState.data[0].imageIds;\r\n      const imageId = imageIds[closest];\r\n      const frameIndex = imageIds.indexOf(imageId);\r\n\r\n      const SOPInstanceUID = cornerstone.metaData.get(\r\n        'SOPInstanceUID',\r\n        imageId\r\n      );\r\n      const StudyInstanceUID = cornerstone.metaData.get(\r\n        'StudyInstanceUID',\r\n        imageId\r\n      );\r\n\r\n      DICOMSegTempCrosshairsTool.addCrosshair(element, imageId, segmentNumber);\r\n\r\n      onSegmentItemClick({\r\n        StudyInstanceUID,\r\n        SOPInstanceUID,\r\n        frameIndex,\r\n        activeViewportIndex: activeIndex,\r\n      });\r\n    }\r\n\r\n    if (isVTK()) {\r\n      const labelMaps3D = getActiveLabelMaps3D();\r\n      const currentDisplaySet = getCurrentDisplaySet();\r\n      const frame = labelMaps3D.labelmaps2D[closest];\r\n\r\n      onSegmentItemClick({\r\n        studies,\r\n        StudyInstanceUID: currentDisplaySet.StudyInstanceUID,\r\n        displaySetInstanceUID: currentDisplaySet.displaySetInstanceUID,\r\n        SOPClassUID: getActiveViewport().sopClassUIDs[0],\r\n        SOPInstanceUID: currentDisplaySet.SOPInstanceUID,\r\n        segmentNumber,\r\n        frameIndex: closest,\r\n        frame,\r\n      });\r\n    }\r\n  };\r\n\r\n  const getColorLUTTable = () => {\r\n    const { state } = cornerstoneTools.getModule('segmentation');\r\n    const { colorLUTIndex } = getActiveLabelMaps3D();\r\n    return state.colorLutTables[colorLUTIndex];\r\n  };\r\n\r\n  const getEnabledElement = () => {\r\n    const enabledElements = cornerstone.getEnabledElements();\r\n    return enabledElements[activeIndex].element;\r\n  };\r\n\r\n  const onSegmentVisibilityChangeHandler = (\r\n    isVisible,\r\n    segmentNumber,\r\n    labelmap3D\r\n  ) => {\r\n    let segmentsHidden = [];\r\n    if (labelmap3D.metadata.hasOverlapping) {\r\n      /** Get all labelmaps with this segmentNumber and that\r\n       * are from the same series (overlapping segments) */\r\n      const { labelmaps3D } = getBrushStackState();\r\n\r\n      const sameSeriesLabelMaps3D = labelmaps3D.filter(({ metadata }) => {\r\n        return (\r\n          labelmap3D.metadata.segmentationSeriesInstanceUID ===\r\n          metadata.segmentationSeriesInstanceUID\r\n        );\r\n      });\r\n\r\n      const possibleLabelMaps3D = sameSeriesLabelMaps3D.filter(\r\n        ({ labelmaps2D }) => {\r\n          return labelmaps2D.some(({ segmentsOnLabelmap }) =>\r\n            segmentsOnLabelmap.includes(segmentNumber)\r\n          );\r\n        }\r\n      );\r\n\r\n      possibleLabelMaps3D.forEach(labelmap3D => {\r\n        labelmap3D.segmentsHidden[segmentNumber] = !isVisible;\r\n\r\n        segmentsHidden = [\r\n          ...new Set([...segmentsHidden, ...labelmap3D.segmentsHidden]),\r\n        ];\r\n      });\r\n    } else {\r\n      labelmap3D.segmentsHidden[segmentNumber] = !isVisible;\r\n      segmentsHidden = [...labelmap3D.segmentsHidden];\r\n    }\r\n\r\n    setState(state => ({ ...state, segmentsHidden }));\r\n\r\n    refreshSegmentations();\r\n    refreshViewports();\r\n\r\n    if (isVTK()) {\r\n      onSegmentVisibilityChange(segmentNumber, isVisible);\r\n    }\r\n  };\r\n\r\n  const getSegmentList = () => {\r\n    /*\r\n     * Newly created segments have no `meta`\r\n     * So we instead build a list of all segment indexes in use\r\n     * Then find any associated metadata\r\n     */\r\n    const uniqueSegmentIndexes = getActiveLabelMaps2D()\r\n      .reduce((acc, labelmap2D) => {\r\n        if (labelmap2D) {\r\n          const segmentIndexes = labelmap2D.segmentsOnLabelmap;\r\n\r\n          for (let i = 0; i < segmentIndexes.length; i++) {\r\n            if (!acc.includes(segmentIndexes[i]) && segmentIndexes[i] !== 0) {\r\n              acc.push(segmentIndexes[i]);\r\n            }\r\n          }\r\n        }\r\n\r\n        return acc;\r\n      }, [])\r\n      .sort((a, b) => a - b);\r\n\r\n    const labelmap3D = getActiveLabelMaps3D();\r\n    const colorLutTable = getColorLUTTable();\r\n    const hasLabelmapMeta = labelmap3D.metadata && labelmap3D.metadata.data;\r\n\r\n    const segmentList = [];\r\n    const segmentNumbers = [];\r\n    for (let i = 0; i < uniqueSegmentIndexes.length; i++) {\r\n      const segmentIndex = uniqueSegmentIndexes[i];\r\n\r\n      const color = colorLutTable[segmentIndex];\r\n      let segmentLabel = '(unlabeled)';\r\n      let segmentNumber = segmentIndex;\r\n\r\n      /* Meta */\r\n      if (hasLabelmapMeta) {\r\n        const segmentMeta = labelmap3D.metadata.data[segmentIndex];\r\n        if (segmentMeta) {\r\n          segmentNumber = segmentMeta.SegmentNumber;\r\n          segmentLabel = segmentMeta.SegmentLabel;\r\n        }\r\n      }\r\n\r\n      const sameSegment = state.selectedSegment === segmentNumber;\r\n\r\n      segmentNumbers.push(segmentNumber);\r\n      segmentList.push(\r\n        <SegmentItem\r\n          key={segmentNumber}\r\n          itemClass={`segment-item ${sameSegment && 'selected'}`}\r\n          onClick={setCurrentSelectedSegment}\r\n          label={segmentLabel}\r\n          index={segmentNumber}\r\n          color={color}\r\n          labelmap3D={labelmap3D}\r\n          visible={!labelmap3D.segmentsHidden[segmentIndex]}\r\n          onVisibilityChange={onSegmentVisibilityChangeHandler}\r\n        />\r\n      );\r\n    }\r\n\r\n    return {\r\n      items: segmentList,\r\n      numbers: segmentNumbers,\r\n      segmentsHidden: labelmap3D.segmentsHidden,\r\n    };\r\n\r\n    /*\r\n     * Let's iterate over segmentIndexes ^ above\r\n     * If meta has a match, use it to show info\r\n     * If now, add \"no-meta\" class\r\n     * Show default name\r\n     */\r\n  };\r\n\r\n  const updateBrushSize = evt => {\r\n    const updatedRadius = Number(evt.target.value);\r\n\r\n    if (updatedRadius !== brushRadius) {\r\n      setState(state => ({ ...state, brushRadius: updatedRadius }));\r\n      const module = cornerstoneTools.getModule('segmentation');\r\n      module.setters.radius(updatedRadius);\r\n    }\r\n  };\r\n\r\n  const decrementSegment = event => {\r\n    const activeSegmentIndex = getActiveSegmentIndex();\r\n    event.preventDefault();\r\n    if (activeSegmentIndex > 1) {\r\n      activeSegmentIndex--;\r\n    }\r\n    setState(state => ({ ...state, selectedSegment: activeSegmentIndex }));\r\n    updateActiveSegmentColor();\r\n  };\r\n\r\n  const incrementSegment = event => {\r\n    const activeSegmentIndex = getActiveSegmentIndex();\r\n    event.preventDefault();\r\n    activeSegmentIndex++;\r\n    setState(state => ({ ...state, selectedSegment: activeSegmentIndex }));\r\n    updateActiveSegmentColor();\r\n  };\r\n\r\n  const updateActiveSegmentColor = () => {\r\n    const color = getActiveSegmentColor();\r\n    setState(state => ({ ...state, brushColor: color }));\r\n  };\r\n\r\n  const getBrushStackState = () => {\r\n    const module = cornerstoneTools.getModule('segmentation');\r\n    const firstImageId = getFirstImageId();\r\n    const brushStackState = module.state.series[firstImageId];\r\n    return brushStackState;\r\n  };\r\n\r\n  const getActiveSegmentColor = () => {\r\n    const brushStackState = getBrushStackState();\r\n    if (!brushStackState) {\r\n      return 'rgba(255, 255, 255, 1)';\r\n    }\r\n\r\n    const colorLutTable = getColorLUTTable();\r\n    const color = colorLutTable[labelmap3D.activeSegmentIndex];\r\n    return `rgba(${color.join(',')})`;\r\n  };\r\n\r\n  const updateConfiguration = newConfiguration => {\r\n    configuration.renderFill = newConfiguration.renderFill;\r\n    configuration.renderOutline = newConfiguration.renderOutline;\r\n    configuration.shouldRenderInactiveLabelmaps =\r\n      newConfiguration.shouldRenderInactiveLabelmaps;\r\n    configuration.fillAlpha = newConfiguration.fillAlpha;\r\n    configuration.outlineAlpha = newConfiguration.outlineAlpha;\r\n    configuration.outlineWidth = newConfiguration.outlineWidth;\r\n    configuration.fillAlphaInactive = newConfiguration.fillAlphaInactive;\r\n    configuration.outlineAlphaInactive = newConfiguration.outlineAlphaInactive;\r\n    onConfigurationChange(newConfiguration);\r\n    refreshViewports();\r\n  };\r\n\r\n  const onVisibilityChangeHandler = isVisible => {\r\n    let segmentsHidden = [];\r\n    state.segmentNumbers.forEach(segmentNumber => {\r\n      if (isVTK()) {\r\n        onSegmentVisibilityChange(segmentNumber, isVisible);\r\n      }\r\n\r\n      /** Get all labelmaps with this segmentNumber (overlapping segments) */\r\n      const { labelmaps3D } = getBrushStackState();\r\n      const possibleLabelMaps3D = labelmaps3D.filter(({ labelmaps2D }) => {\r\n        return labelmaps2D.some(({ segmentsOnLabelmap }) =>\r\n          segmentsOnLabelmap.includes(segmentNumber)\r\n        );\r\n      });\r\n\r\n      possibleLabelMaps3D.forEach(labelmap3D => {\r\n        labelmap3D.segmentsHidden[segmentNumber] = !isVisible;\r\n        segmentsHidden = [\r\n          ...new Set([...segmentsHidden, ...labelmap3D.segmentsHidden]),\r\n        ];\r\n      });\r\n    });\r\n\r\n    setState(state => ({ ...state, segmentsHidden }));\r\n\r\n    refreshSegmentations();\r\n    refreshViewports();\r\n  };\r\n\r\n  const disabledConfigurationFields = [\r\n    'outlineAlpha',\r\n    'shouldRenderInactiveLabelmaps',\r\n  ];\r\n\r\n  const selectedSegmentationOption = state.labelMapList.find(\r\n    i => i.value === state.selectedSegmentation\r\n  );\r\n\r\n  if (state.showSettings) {\r\n    return (\r\n      <SegmentationSettings\r\n        disabledFields={isVTK() ? disabledConfigurationFields : []}\r\n        configuration={configuration}\r\n        onBack={() => setState(state => ({ ...state, showSettings: false }))}\r\n        onChange={updateConfiguration}\r\n      />\r\n    );\r\n  } else {\r\n    return (\r\n      <div\r\n        className={classNames('dcmseg-segmentation-panel', {\r\n          disabled: state.isDisabled,\r\n        })}\r\n      >\r\n        {false && (\r\n          <form className=\"selector-form\">\r\n            <BrushColorSelector\r\n              defaultColor={state.brushColor}\r\n              index={state.selectedSegment}\r\n              onNext={incrementSegment}\r\n              onPrev={decrementSegment}\r\n            />\r\n            <BrushRadius\r\n              value={state.brushRadius}\r\n              onChange={updateBrushSize}\r\n              min={configuration.minRadius}\r\n              max={configuration.maxRadius}\r\n            />\r\n          </form>\r\n        )}\r\n        <Icon\r\n          className=\"cog-icon\"\r\n          name=\"cog\"\r\n          width=\"25px\"\r\n          height=\"25px\"\r\n          onClick={() => setState(state => ({ ...state, showSettings: true }))}\r\n        />\r\n        <h3>Segmentations</h3>\r\n        <div className=\"segmentations\">\r\n          <SegmentationSelect\r\n            value={selectedSegmentationOption}\r\n            formatOptionLabel={SegmentationItem}\r\n            options={state.labelMapList}\r\n          />\r\n        </div>\r\n        <SegmentsSection\r\n          count={state.segmentList.length}\r\n          isVisible={\r\n            state.segmentsHidden.filter(isHidden => isHidden === true).length <\r\n            state.segmentNumbers.length\r\n          }\r\n          onVisibilityChange={onVisibilityChangeHandler}\r\n        >\r\n          <ScrollableArea>\r\n            <TableList headless>{state.segmentList}</TableList>\r\n          </ScrollableArea>\r\n        </SegmentsSection>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nSegmentationPanel.propTypes = {\r\n  /*\r\n   * An object, with int index keys?\r\n   * Maps to: state.viewports.viewportSpecificData, in `viewer`\r\n   * Passed in MODULE_TYPES.PANEL when specifying component in viewer\r\n   */\r\n  viewports: PropTypes.shape({\r\n    displaySetInstanceUID: PropTypes.string,\r\n    frameRate: PropTypes.any,\r\n    InstanceNumber: PropTypes.number,\r\n    isMultiFrame: PropTypes.bool,\r\n    isReconstructable: PropTypes.bool,\r\n    Modality: PropTypes.string,\r\n    plugin: PropTypes.string,\r\n    SeriesDate: PropTypes.string,\r\n    SeriesDescription: PropTypes.string,\r\n    SeriesInstanceUID: PropTypes.string,\r\n    SeriesNumber: PropTypes.any,\r\n    SeriesTime: PropTypes.string,\r\n    sopClassUIDs: PropTypes.arrayOf(PropTypes.string),\r\n    StudyInstanceUID: PropTypes.string,\r\n  }),\r\n  activeIndex: PropTypes.number.isRequired,\r\n  studies: PropTypes.array.isRequired,\r\n  isOpen: PropTypes.bool.isRequired,\r\n};\r\nSegmentationPanel.defaultProps = {};\r\n\r\n/**\r\n * Returns SEG DisplaySets that reference the target series, sorted by dateTime\r\n *\r\n * @param {string} StudyInstanceUID\r\n * @param {string} SeriesInstanceUID\r\n * @returns Array\r\n */\r\nconst _getReferencedSegDisplaysets = (StudyInstanceUID, SeriesInstanceUID) => {\r\n  /* Referenced DisplaySets */\r\n  const studyMetadata = studyMetadataManager.get(StudyInstanceUID);\r\n  const referencedDisplaysets = studyMetadata.getDerivedDatasets({\r\n    referencedSeriesInstanceUID: SeriesInstanceUID,\r\n    Modality: 'SEG',\r\n  });\r\n\r\n  /* Sort */\r\n  referencedDisplaysets.sort((a, b) => {\r\n    const aNumber = Number(`${a.SeriesDate}${a.SeriesTime}`);\r\n    const bNumber = Number(`${b.SeriesDate}${b.SeriesTime}`);\r\n    return bNumber - aNumber;\r\n  });\r\n\r\n  return referencedDisplaysets;\r\n};\r\n\r\nconst SegmentsSection = ({\r\n  count,\r\n  children,\r\n  isVisible: defaultVisibility,\r\n  onVisibilityChange,\r\n}) => {\r\n  const [isVisible, setIsVisible] = useState(defaultVisibility);\r\n\r\n  const onVisibilityChangeHandler = () => {\r\n    const newVisibility = !isVisible;\r\n    setIsVisible(newVisibility);\r\n    onVisibilityChange(newVisibility);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsVisible(defaultVisibility);\r\n  }, [defaultVisibility]);\r\n\r\n  return (\r\n    <div className=\"SegmentsSection\">\r\n      <div className=\"header\">\r\n        <div>Segments</div>\r\n        <div className=\"icons\">\r\n          <Icon\r\n            className={`eye-icon ${isVisible && 'expanded'}`}\r\n            name={isVisible ? 'eye' : 'eye-closed'}\r\n            width=\"20px\"\r\n            height=\"20px\"\r\n            onClick={onVisibilityChangeHandler}\r\n          />\r\n          <div className=\"count\">{count}</div>\r\n        </div>\r\n      </div>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst noop = () => {};\r\n\r\nSegmentsSection.defaultProps = {\r\n  onVisibilityChange: noop,\r\n};\r\n\r\nexport default SegmentationPanel;\r\n","import React from 'react';\r\nimport OHIF from '@ohif/core';\r\n\r\nimport init from './init.js';\r\nimport toolbarModule from './toolbarModule.js';\r\nimport getSopClassHandlerModule from './getOHIFDicomSegSopClassHandler.js';\r\nimport SegmentationPanel from './components/SegmentationPanel/SegmentationPanel.js';\r\nimport { version } from '../package.json';\r\nconst { studyMetadataManager } = OHIF.utils;\r\n\r\nexport default {\r\n  /**\r\n   * Only required property. Should be a unique value across all extensions.\r\n   */\r\n  id: 'com.ohif.dicom-segmentation',\r\n  version,\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param {object} [configuration={}]\r\n   * @param {object|array} [configuration.csToolsConfig] - Passed directly to `initCornerstoneTools`\r\n   */\r\n  preRegistration({ servicesManager, configuration = {} }) {\r\n    init({ servicesManager, configuration });\r\n  },\r\n  getToolbarModule({ servicesManager }) {\r\n    return toolbarModule;\r\n  },\r\n  getPanelModule({ commandsManager, api, servicesManager }) {\r\n    const { UINotificationService, LoggerService } = servicesManager.services;\r\n\r\n    const ExtendedSegmentationPanel = props => {\r\n      const { activeContexts } = api.hooks.useAppContext();\r\n\r\n      const onDisplaySetLoadFailureHandler = error => {\r\n        LoggerService.error({ error, message: error.message });\r\n        UINotificationService.show({\r\n          title: 'DICOM Segmentation Loader',\r\n          message: error.message,\r\n          type: 'error',\r\n          autoClose: false,\r\n        });\r\n      };\r\n\r\n      const segmentItemClickHandler = data => {\r\n        commandsManager.runCommand('jumpToImage', data);\r\n        commandsManager.runCommand('jumpToSlice', data);\r\n      };\r\n\r\n      const onSegmentVisibilityChangeHandler = (segmentNumber, visible) => {\r\n        commandsManager.runCommand('setSegmentConfiguration', {\r\n          segmentNumber,\r\n          visible,\r\n        });\r\n      };\r\n\r\n      const onConfigurationChangeHandler = configuration => {\r\n        commandsManager.runCommand('setSegmentationConfiguration', {\r\n          globalOpacity: configuration.fillAlpha,\r\n          outlineThickness: configuration.outlineWidth,\r\n          renderOutline: configuration.renderOutline,\r\n          visible: configuration.renderFill,\r\n        });\r\n      };\r\n\r\n      const onSelectedSegmentationChangeHandler = () => {\r\n        commandsManager.runCommand('requestNewSegmentation');\r\n      };\r\n\r\n      return (\r\n        <SegmentationPanel\r\n          {...props}\r\n          activeContexts={activeContexts}\r\n          contexts={api.contexts}\r\n          onSegmentItemClick={segmentItemClickHandler}\r\n          onSegmentVisibilityChange={onSegmentVisibilityChangeHandler}\r\n          onConfigurationChange={onConfigurationChangeHandler}\r\n          onSelectedSegmentationChange={onSelectedSegmentationChangeHandler}\r\n          onDisplaySetLoadFailure={onDisplaySetLoadFailureHandler}\r\n        />\r\n      );\r\n    };\r\n\r\n    const SegmentationPanelTabUpdatedEvent = 'segmentation-panel-tab-updated';\r\n\r\n    /**\r\n     * Trigger's an event to update the state of the panel's RoundedButtonGroup.\r\n     *\r\n     * This is required to avoid extension state\r\n     * coupling with the viewer's ToolbarRow component.\r\n     *\r\n     * @param {object} data\r\n     */\r\n    const triggerSegmentationPanelTabUpdatedEvent = data => {\r\n      const event = new CustomEvent(SegmentationPanelTabUpdatedEvent, {\r\n        detail: data,\r\n      });\r\n      document.dispatchEvent(event);\r\n    };\r\n\r\n    const onSegmentationsLoaded = ({ detail }) => {\r\n      const { segDisplaySet, segMetadata } = detail;\r\n      const studyMetadata = studyMetadataManager.get(\r\n        segDisplaySet.StudyInstanceUID\r\n      );\r\n      const referencedDisplaysets = studyMetadata.getDerivedDatasets({\r\n        referencedSeriesInstanceUID: segMetadata.seriesInstanceUid,\r\n        Modality: 'SEG',\r\n      });\r\n      triggerSegmentationPanelTabUpdatedEvent({\r\n        badgeNumber: referencedDisplaysets.length,\r\n        target: 'segmentation-panel',\r\n      });\r\n    };\r\n\r\n    document.addEventListener(\r\n      'extensiondicomsegmentationsegloaded',\r\n      onSegmentationsLoaded\r\n    );\r\n\r\n    return {\r\n      menuOptions: [\r\n        {\r\n          icon: 'list',\r\n          label: 'Segmentations',\r\n          target: 'segmentation-panel',\r\n          stateEvent: SegmentationPanelTabUpdatedEvent,\r\n          isDisabled: (studies, activeViewport) => {\r\n            if (!studies) {\r\n              return true;\r\n            }\r\n\r\n            for (let i = 0; i < studies.length; i++) {\r\n              const study = studies[i];\r\n\r\n              if (study && study.series) {\r\n                for (let j = 0; j < study.series.length; j++) {\r\n                  const series = study.series[j];\r\n\r\n                  if (series.Modality === 'SEG') {\r\n                    if (activeViewport) {\r\n                      const studyMetadata = studyMetadataManager.get(\r\n                        activeViewport.StudyInstanceUID\r\n                      );\r\n                      if (!studyMetadata) {\r\n                        return;\r\n                      }\r\n                      const referencedDS = studyMetadata.getDerivedDatasets({\r\n                        referencedSeriesInstanceUID:\r\n                          activeViewport.SeriesInstanceUID,\r\n                        Modality: 'SEG',\r\n                      });\r\n                      triggerSegmentationPanelTabUpdatedEvent({\r\n                        badgeNumber: referencedDS.length,\r\n                        target: 'segmentation-panel',\r\n                      });\r\n                    }\r\n                    return false;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n\r\n            return true;\r\n          },\r\n        },\r\n      ],\r\n      components: [\r\n        {\r\n          id: 'segmentation-panel',\r\n          component: ExtendedSegmentationPanel,\r\n        },\r\n      ],\r\n      defaultContext: ['VIEWER'],\r\n    };\r\n  },\r\n  getSopClassHandlerModule,\r\n};\r\n","import csTools from 'cornerstone-tools';\r\nimport DICOMSegTempCrosshairsTool from './tools/DICOMSegTempCrosshairsTool';\r\n\r\n/**\r\n *\r\n * @param {object} configuration\r\n * @param {Object|Array} configuration.csToolsConfig\r\n */\r\nexport default function init({ servicesManager, configuration = {} }) {\r\n  const { BrushTool, SphericalBrushTool, CorrectionScissorsTool } = csTools;\r\n  const tools = [BrushTool, SphericalBrushTool, CorrectionScissorsTool];\r\n\r\n  tools.forEach(tool => csTools.addTool(tool));\r\n\r\n  csTools.addTool(BrushTool, {\r\n    name: 'BrushEraser',\r\n    configuration: {\r\n      alwaysEraseOnClick: true,\r\n    },\r\n  });\r\n\r\n  csTools.addTool(DICOMSegTempCrosshairsTool);\r\n}\r\n","const TOOL_NAMES = {\r\n  RTSTRUCT_DISPLAY_TOOL: 'RTStructDisplayTool',\r\n};\r\n\r\nexport default TOOL_NAMES;\r\n","import cornerstone from 'cornerstone-core';\r\nimport cornerstoneTools from 'cornerstone-tools';\r\n\r\nconst { importInternal } = cornerstoneTools;\r\nconst draw = importInternal('drawing/draw');\r\nconst drawLine = importInternal('drawing/drawLine');\r\nconst getNewContext = importInternal('drawing/getNewContext');\r\n\r\nexport default function _drawCanvasCrosshairs(eventData, center, options) {\r\n  const context = getNewContext(eventData.canvasContext.canvas);\r\n  const { element } = eventData;\r\n\r\n  const centerCanvas = cornerstone.pixelToCanvas(element, center);\r\n\r\n  const { clientWidth: width, clientHeight: height } = element;\r\n\r\n  const offset = 10;\r\n\r\n  draw(context, context => {\r\n    drawLine(\r\n      context,\r\n      element,\r\n      { x: centerCanvas.x + offset, y: centerCanvas.y },\r\n      { x: width, y: centerCanvas.y },\r\n      options,\r\n      'canvas'\r\n    );\r\n\r\n    drawLine(\r\n      context,\r\n      element,\r\n      { x: centerCanvas.x - offset, y: centerCanvas.y },\r\n      { x: 0, y: centerCanvas.y },\r\n      options,\r\n      'canvas'\r\n    );\r\n\r\n    drawLine(\r\n      context,\r\n      element,\r\n      { x: centerCanvas.x, y: centerCanvas.y + offset },\r\n      { x: centerCanvas.x, y: height },\r\n      options,\r\n      'canvas'\r\n    );\r\n\r\n    drawLine(\r\n      context,\r\n      element,\r\n      { x: centerCanvas.x, y: centerCanvas.y - offset },\r\n      { x: centerCanvas.x, y: 0 },\r\n      options,\r\n      'canvas'\r\n    );\r\n  });\r\n}\r\n","import { importInternal, getToolState, toolColors } from 'cornerstone-tools';\r\nimport TOOL_NAMES from '../utils/toolNames';\r\nimport drawCanvasCrosshairs from '../utils/drawCanvasCrosshairs';\r\n\r\n// Cornerstone 3rd party dev kit imports\r\nconst draw = importInternal('drawing/draw');\r\nconst drawCircle = importInternal('drawing/drawCircle');\r\nconst drawJoinedLines = importInternal('drawing/drawJoinedLines');\r\nconst getNewContext = importInternal('drawing/getNewContext');\r\nconst BaseTool = importInternal('base/BaseTool');\r\n\r\n/**\r\n * @class RTStructDisplayTool - Renders RTSTRUCT data in a read only manner (i.e. as an overlay).\r\n * @extends cornerstoneTools.BaseTool\r\n */\r\nexport default class RTStructDisplayTool extends BaseTool {\r\n  constructor(props = {}) {\r\n    const defaultProps = {\r\n      mixins: ['enabledOrDisabledBinaryTool'],\r\n      name: TOOL_NAMES.RTSTRUCT_DISPLAY_TOOL,\r\n    };\r\n\r\n    const initialProps = Object.assign(defaultProps, props);\r\n\r\n    super(initialProps);\r\n\r\n    this._rtStructModule = cornerstoneTools.getModule('rtstruct');\r\n  }\r\n\r\n  renderToolData(evt) {\r\n    const eventData = evt.detail;\r\n    const rtstructModule = this._rtStructModule;\r\n\r\n    const toolState = getToolState(evt.currentTarget, this.name);\r\n\r\n    if (!toolState) {\r\n      return;\r\n    }\r\n\r\n    const {\r\n      lineWidth,\r\n      opacity,\r\n      highlightOpacity,\r\n    } = rtstructModule.configuration;\r\n\r\n    // We have tool data for this element - iterate over each one and draw it\r\n    const context = getNewContext(eventData.canvasContext.canvas);\r\n\r\n    let crossHairCenter;\r\n\r\n    for (let i = 0; i < toolState.data.length; i++) {\r\n      const data = toolState.data[i];\r\n\r\n      const structureSet = rtstructModule.getters.structureSet(\r\n        data.structureSetSeriesInstanceUid\r\n      );\r\n\r\n      // Don't render if entire StructureSet is hidden.\r\n      if (structureSet.visible === false) {\r\n        continue;\r\n      }\r\n\r\n      const ROIContourData = rtstructModule.getters.ROIContour(\r\n        data.structureSetSeriesInstanceUid,\r\n        data.ROINumber\r\n      );\r\n\r\n      // Don't render if ROIContour is hidden.\r\n      if (ROIContourData.visible === false) {\r\n        continue;\r\n      }\r\n\r\n      const points = data.handles.points;\r\n\r\n      if (!points.length) {\r\n        continue;\r\n      }\r\n\r\n      const colorArray = ROIContourData.colorArray;\r\n      const color = `rgba(${colorArray[0]},${colorArray[1]},${\r\n        colorArray[2]\r\n      },${opacity})`;\r\n\r\n      let highlight = data.highlight;\r\n      const options = { color, lineWidth };\r\n\r\n      if (highlight) {\r\n        crossHairCenter = { x: 0, y: 0 };\r\n\r\n        points.forEach(point => {\r\n          crossHairCenter.x += point.x;\r\n          crossHairCenter.y += point.y;\r\n        });\r\n\r\n        crossHairCenter.x /= points.length;\r\n        crossHairCenter.y /= points.length;\r\n\r\n        // TODO: Disabling hightlight for now, it'd be good to bring it back\r\n        // when we have a good way of doing this for SEG.\r\n\r\n        // options.fillStyle = color = `rgba(${colorArray[0]},${colorArray[1]},${\r\n        //   colorArray[2]\r\n        // },${highlightOpacity})`;\r\n\r\n        // Draw highlight lines.\r\n\r\n        delete data.highlight; // Don't highlight on next render.\r\n      }\r\n\r\n      switch (data.type) {\r\n        case 'CLOSED_PLANAR':\r\n          this._renderClosedPlanar(context, eventData.element, points, options);\r\n          break;\r\n        case 'POINT':\r\n          this._renderPoint(context, eventData.element, points, options);\r\n          break;\r\n        case 'OPEN_PLANAR':\r\n          this._renderOpenPlanar(context, eventData.element, points, options);\r\n          break;\r\n      }\r\n    }\r\n\r\n    if (crossHairCenter) {\r\n      drawCanvasCrosshairs(eventData, crossHairCenter, {\r\n        color: toolColors.getActiveColor(),\r\n        lineWidth: 1,\r\n      });\r\n    }\r\n  }\r\n\r\n  _renderClosedPlanar(context, element, points, options) {\r\n    draw(context, context => {\r\n      drawJoinedLines(\r\n        context,\r\n        element,\r\n        points[points.length - 1],\r\n        points,\r\n        options\r\n      );\r\n    });\r\n  }\r\n\r\n  _renderPoint(context, element, points, options) {\r\n    draw(context, context => {\r\n      drawCircle(context, element, points[0], 3, options);\r\n    });\r\n  }\r\n\r\n  _renderOpenPlanar(context, element, points, options) {\r\n    draw(context, context => {\r\n      drawJoinedLines(context, element, points[0], points, options);\r\n    });\r\n  }\r\n}\r\n","import cornerstoneTools from 'cornerstone-tools';\r\nimport TOOL_NAMES from '../../../utils/toolNames';\r\n\r\nconst globalImageIdSpecificToolStateManager =\r\n  cornerstoneTools.globalImageIdSpecificToolStateManager;\r\n\r\n/**\r\n * getImageIdOfCenterFrameOfROIContour - Returns the imageId nearest to the center of the\r\n * volumes extent in the stack's Z direction which contains one of the ROIContour's Contours.\r\n * @param {string} structureSetSeriesInstanceUid The SeriesInstanceUID of the structure set.\r\n * @param {number} ROINumber The ROINumber of the region.\r\n * @param {string} imageIdsInStack The stack of imageIds.\r\n *\r\n * @returns The imageId\r\n */\r\nexport default function getImageIdOfCenterFrameOfROIContour(\r\n  structureSetSeriesInstanceUid,\r\n  ROINumber,\r\n  imageIdsInStack\r\n) {\r\n  const rtStructDisplayToolName = TOOL_NAMES.RTSTRUCT_DISPLAY_TOOL;\r\n  const toolState = globalImageIdSpecificToolStateManager.saveToolState();\r\n  const imageIdIndicies = [];\r\n\r\n  for (let i = 0; i < imageIdsInStack.length; i++) {\r\n    const imageId = imageIdsInStack[i];\r\n\r\n    const imageIdSpecificToolState = toolState[imageId];\r\n\r\n    if (\r\n      !imageIdSpecificToolState ||\r\n      !imageIdSpecificToolState[rtStructDisplayToolName] ||\r\n      !imageIdSpecificToolState[rtStructDisplayToolName].data\r\n    ) {\r\n      continue;\r\n    }\r\n\r\n    const toolData = imageIdSpecificToolState[rtStructDisplayToolName].data;\r\n\r\n    if (\r\n      _toolDataContainsROIContour(\r\n        toolData,\r\n        structureSetSeriesInstanceUid,\r\n        ROINumber\r\n      )\r\n    ) {\r\n      imageIdIndicies.push(i);\r\n    }\r\n  }\r\n\r\n  const centerImageIdIndex =\r\n    imageIdIndicies[Math.floor(imageIdIndicies.length / 2)];\r\n\r\n  return imageIdsInStack[centerImageIdIndex];\r\n}\r\n\r\nfunction _toolDataContainsROIContour(\r\n  toolData,\r\n  structureSetSeriesInstanceUid,\r\n  ROINumber\r\n) {\r\n  return !!toolData.some(\r\n    toolDataI =>\r\n      toolDataI.structureSetSeriesInstanceUid ===\r\n        structureSetSeriesInstanceUid && toolDataI.ROINumber === ROINumber\r\n  );\r\n}\r\n","import cornerstone from 'cornerstone-core';\r\nimport getImageIdOfCenterFrameOfROIContour from './lib/getImageIdOfCenterFrameOfROIContour';\r\nimport structureSetReferencesSeriesInstanceUid from './lib/structureSetReferencesSeriesInstanceUid';\r\n\r\n// We should put this as a helper somewhere as we are using it in mutliple places.\r\nfunction refreshViewport() {\r\n  cornerstone.getEnabledElements().forEach(enabledElement => {\r\n    if (enabledElement.image) {\r\n      cornerstone.updateImage(enabledElement.element);\r\n    }\r\n  });\r\n}\r\n\r\nconst configuration = {\r\n  lineWidth: 3,\r\n  opacity: 0.75,\r\n  highlightOpacity: 0.5,\r\n};\r\n\r\nconst state = {\r\n  StructureSets: [],\r\n};\r\n\r\n/**\r\n * Adds a structure set to the module.\r\n * @param {Object} structureSetData The structure set data.\r\n */\r\nfunction setStructureSet(structureSetData) {\r\n  state.StructureSets.push(structureSetData);\r\n}\r\n\r\n/**\r\n * Returns the StructureSet with the given SeriesInstanceUID.\r\n * @param {string} SeriesInstanceUID The SeriesInstanceUID of the StructureSet.\r\n *\r\n * @returns {Object} The StructureSet.\r\n */\r\nfunction getStructureSet(SeriesInstanceUID) {\r\n  return state.StructureSets.find(\r\n    structureSet => structureSet.SeriesInstanceUID === SeriesInstanceUID\r\n  );\r\n}\r\n\r\n/**\r\n * Returns the ROI Contour with the given ROINumber on the StructureSet defined by the given\r\n * SeriesInstanceUID.\r\n * @param {string} SeriesInstanceUID The SeriesInstanceUID of the StructureSet.\r\n * @param {number} ROINumber The ROINUmber of the ROIContour to fetch.\r\n */\r\nfunction getROIContour(SeriesInstanceUID, ROINumber) {\r\n  const structureSet = getStructureSet(SeriesInstanceUID);\r\n\r\n  if (!structureSet) {\r\n    return;\r\n  }\r\n\r\n  return structureSet.ROIContours.find(\r\n    ROIContour => ROIContour.ROINumber === ROINumber\r\n  );\r\n}\r\n\r\n/**\r\n * Hides the StructureSet.\r\n * @param {string} SeriesInstanceUID The SeriesInstanceUID of the StructureSet.\r\n */\r\nfunction setHideStructureSet(SeriesInstanceUID) {\r\n  _setStructureSetVisible(SeriesInstanceUID, false);\r\n}\r\n\r\n/**\r\n * Shows the StructureSet.\r\n * @param {string} SeriesInstanceUID The SeriesInstanceUID of the StructureSet.\r\n */\r\nfunction setShowStructureSet(SeriesInstanceUID) {\r\n  _setStructureSetVisible(SeriesInstanceUID, true);\r\n}\r\n\r\n/**\r\n * Sets the visibility of the StructureSet.\r\n * @param {string} SeriesInstanceUID The SeriesInstanceUID of the StructureSet.\r\n * @param {boolean} visible Whether the StructureSet should visible or not.\r\n */\r\nfunction _setStructureSetVisible(SeriesInstanceUID, visible = true) {\r\n  const StructureSet = getStructureSet(SeriesInstanceUID);\r\n\r\n  if (StructureSet) {\r\n    StructureSet.ROIContours.forEach(ROIContour => {\r\n      ROIContour.visible = visible;\r\n    });\r\n\r\n    refreshViewport();\r\n  }\r\n}\r\n\r\n/**\r\n * Toggles the visibility of the StructureSet.\r\n * @param {string} SeriesInstanceUID The SeriesInstanceUID of the StructureSet.\r\n */\r\nfunction setToggleStructureSet(SeriesInstanceUID) {\r\n  const StructureSet = getStructureSet(SeriesInstanceUID);\r\n\r\n  if (StructureSet) {\r\n    StructureSet.visible = !StructureSet.visible;\r\n\r\n    refreshViewport();\r\n  }\r\n}\r\n\r\n/**\r\n * Hides the ROIContour.\r\n * @param {string} SeriesInstanceUID The SeriesInstanceUID of the StructureSet.\r\n * @param {number} ROINumber The ROINUmber of the ROIContour.\r\n */\r\nfunction setHideROIContour(SeriesInstanceUID, ROINumber) {\r\n  _setROIContourVisible(SeriesInstanceUID, ROINumber, false);\r\n}\r\n\r\n/**\r\n * Shows the ROIContour.\r\n * @param {string} SeriesInstanceUID The SeriesInstanceUID of the StructureSet.\r\n * @param {number} ROINumber The ROINUmber of the ROIContour.\r\n */\r\nfunction setShowROIContour(SeriesInstanceUID, ROINumber) {\r\n  _setROIContourVisible(SeriesInstanceUID, ROINumber, true);\r\n}\r\n\r\n/**\r\n * Sets the visibility of the ROIContour.\r\n * @param {string} SeriesInstanceUID The SeriesInstanceUID of the StructureSet.\r\n * @param {number} ROINumber The ROINUmber of the ROIContour.\r\n * @param {boolean} visible Whether the StructureSet should visible or not.\r\n */\r\nfunction _setROIContourVisible(SeriesInstanceUID, ROINumber, visible = true) {\r\n  const ROIContour = getROIContour(SeriesInstanceUID, ROINumber);\r\n\r\n  if (ROIContour) {\r\n    ROIContour.visible = visible;\r\n\r\n    refreshViewport();\r\n  }\r\n}\r\n\r\n/**\r\n * Toggles the visibility of the ROIContour.\r\n * @param {string} SeriesInstanceUID The SeriesInstanceUID of the StructureSet.\r\n * @param {number} ROINumber The ROINUmber of the ROIContour.\r\n */\r\nfunction setToggleROIContour(SeriesInstanceUID, ROINumber) {\r\n  const ROIContour = getROIContour(SeriesInstanceUID, ROINumber);\r\n\r\n  if (ROIContour) {\r\n    ROIContour.visible = !ROIContour.visible;\r\n\r\n    refreshViewport();\r\n  }\r\n}\r\n\r\n/**\r\n * Returns an array of StructureSets which reference the given SeriesInstanceUID.\r\n * @param {string} SeriesInstanceUID The SeriesInstanceUID to check.\r\n */\r\nfunction getStructuresSetsWhichReferenceSeriesInstanceUid(SeriesInstanceUID) {\r\n  const { StructureSets } = state;\r\n  return StructureSets.filter(StructureSet =>\r\n    structureSetReferencesSeriesInstanceUid(StructureSet, SeriesInstanceUID)\r\n  );\r\n}\r\n\r\nexport default {\r\n  getters: {\r\n    structureSet: getStructureSet,\r\n    ROIContour: getROIContour,\r\n    structuresSetsWhichReferenceSeriesInstanceUid: getStructuresSetsWhichReferenceSeriesInstanceUid,\r\n    imageIdOfCenterFrameOfROIContour: getImageIdOfCenterFrameOfROIContour,\r\n  },\r\n  setters: {\r\n    structureSet: setStructureSet,\r\n    hideROIContour: setHideROIContour,\r\n    showROIContour: setShowROIContour,\r\n    toggleROIContour: setToggleROIContour,\r\n    hideStructureSet: setHideStructureSet,\r\n    showStructureSet: setShowStructureSet,\r\n    toggleStructureSet: setToggleStructureSet,\r\n  },\r\n  state,\r\n  configuration,\r\n};\r\n","/**\r\n * structureSetReferencesSeriesInstanceUid - Returns true if the structure set\r\n * references the given SeriesInstanceUID.\r\n * @param {*} StructureSet\r\n * @param {*} SeriesInstanceUID\r\n */\r\nexport default function structureSetReferencesSeriesInstanceUid(\r\n  StructureSet,\r\n  SeriesInstanceUID\r\n) {\r\n  const { referencedSeriesSequence } = StructureSet;\r\n  return referencedSeriesSequence.some(\r\n    referencedSeries =>\r\n      referencedSeries.SeriesInstanceUID ===\r\n      SeriesInstanceUID\r\n  );\r\n}\r\n","import cornerstoneTools from 'cornerstone-tools';\r\nimport RTStructDisplayTool from './tools/RTStructDisplayTool';\r\nimport rtStructModule from './tools/modules/rtStructModule';\r\n\r\nimport TOOL_NAMES from './utils/toolNames';\r\n\r\nconst defaultConfig = {\r\n  TOOL_NAMES: {\r\n    RT_STRUCT_DISPLAY_TOOL: 'RTStructDisplayTool',\r\n  },\r\n};\r\n\r\n/**\r\n *\r\n * @param {object} configuration\r\n * @param {Object|Array} configuration.csToolsConfig\r\n */\r\nexport default function init({ servicesManager, configuration = {} }) {\r\n  const conifg = Object.assign({}, defaultConfig, configuration);\r\n\r\n  TOOL_NAMES.RT_STRUCT_DISPLAY_TOOL = conifg.TOOL_NAMES.RT_STRUCT_DISPLAY_TOOL;\r\n\r\n  cornerstoneTools.register('module', 'rtstruct', rtStructModule);\r\n  cornerstoneTools.addTool(RTStructDisplayTool);\r\n}\r\n","export default function transformPointsToImagePlane(points, imagePlane) {\r\n  // See Equation C.7.6.2.1-1 of the DICOM standard\r\n\r\n  const {\r\n    rowCosines,\r\n    columnCosines,\r\n    rowPixelSpacing: deltaI,\r\n    columnPixelSpacing: deltaJ,\r\n    imagePositionPatient,\r\n  } = imagePlane;\r\n\r\n  const X = [rowCosines[0], rowCosines[1], rowCosines[2]];\r\n  const Y = [columnCosines[0], columnCosines[1], columnCosines[2]];\r\n  const S = [\r\n    imagePositionPatient[0],\r\n    imagePositionPatient[1],\r\n    imagePositionPatient[2],\r\n  ];\r\n\r\n  // 9 sets of simulataneous equations to choose from, choose which set to solve\r\n  // Based on the largest component of each direction cosine.\r\n  // This avoids NaNs or floating point errors caused by dividing by very small numbers and ensures a safe mapping\r\n  // when mapping between planes that are close to orthogonal.\r\n\r\n  let ix = 0;\r\n  let iy = 0;\r\n  let largestDirectionCosineMagnitude = {\r\n    x: 0,\r\n    y: 0,\r\n  };\r\n\r\n  // Find the element with the largest magnitude in each direction cosine vector.\r\n  for (let i = 0; i < X.length; i++) {\r\n    if (Math.abs(X[i]) > largestDirectionCosineMagnitude.x) {\r\n      ix = i;\r\n      largestDirectionCosineMagnitude.x = Math.abs(X[i]);\r\n    }\r\n    if (Math.abs(Y[i]) > largestDirectionCosineMagnitude.y) {\r\n      iy = i;\r\n      largestDirectionCosineMagnitude.y = Math.abs(Y[i]);\r\n    }\r\n  }\r\n\r\n  const ci = {\r\n    // Index of max elements in X and Y\r\n    ix,\r\n    iy,\r\n  };\r\n\r\n  // Sanity Check\r\n  const directionCosineMagnitude = {\r\n    x: Math.pow(X[0], 2) + Math.pow(X[1], 2) + Math.pow(X[2], 2),\r\n    y: Math.pow(Y[0], 2) + Math.pow(Y[1], 2) + Math.pow(Y[2], 2),\r\n  };\r\n\r\n  if (directionCosineMagnitude.x < 0.99 || directionCosineMagnitude.y < 0.99) {\r\n    throw Error(\r\n      `Direction cosines do not sum to 1 in quadrature. There is likely a mistake in the DICOM metadata.` +\r\n        `directionCosineMagnitudes: ${directionCosineMagnitude.x}, ${directionCosineMagnitude.y}`\r\n    );\r\n  }\r\n\r\n  // Fill in elements that won't change between points\r\n  const c = [undefined, Y[ci.ix], X[ci.ix], undefined, X[ci.iy], Y[ci.iy]];\r\n\r\n  for (let pointI = 0; pointI < points.length; pointI++) {\r\n    // Subtract imagePositionPatient from the coordinate\r\n    const r = [\r\n      points[pointI].x - S[0],\r\n      points[pointI].y - S[1],\r\n      points[pointI].z - S[2],\r\n    ];\r\n\r\n    // Set the variable terms in c.\r\n    c[0] = r[ci.ix];\r\n    c[3] = r[ci.iy];\r\n\r\n    // General case: Solves the two choosen simulataneous equations to go from the patient coordinate system to the imagePlane.\r\n    const i =\r\n      (c[0] - (c[1] * c[3]) / c[5]) /\r\n      (c[2] * deltaI * (1 - (c[1] * c[4]) / (c[2] * c[5])));\r\n    const j = (c[3] - c[4] * i * deltaI) / (c[5] * deltaJ);\r\n\r\n    // NOTE: Add (0.5, 0.5) to the coordinate, as PCS reference frame is with respect to the centre of the first pixel.\r\n    points[pointI].x = i + 0.5;\r\n    points[pointI].y = j + 0.5;\r\n    delete points[pointI].z;\r\n  }\r\n\r\n  return;\r\n}\r\n","import OHIF from '@ohif/core';\r\nimport dcmjs from 'dcmjs';\r\nimport cornerstone from 'cornerstone-core';\r\nimport cornerstoneTools from 'cornerstone-tools';\r\nimport transformPointsToImagePlane from './utils/transformPointsToImagePlane';\r\nimport TOOL_NAMES from './utils/toolNames';\r\nimport { vec3 } from 'gl-matrix';\r\n\r\nconst dicomlab2RGB = dcmjs.data.Colors.dicomlab2RGB;\r\nconst globalImageIdSpecificToolStateManager =\r\n  cornerstoneTools.globalImageIdSpecificToolStateManager;\r\nconst { DicomLoaderService } = OHIF.utils;\r\n\r\nexport default async function loadRTStruct(\r\n  rtStructDisplaySet,\r\n  referencedDisplaySet,\r\n  studies\r\n) {\r\n  const rtStructModule = cornerstoneTools.getModule('rtstruct');\r\n  // Set here is loading is asynchronous.\r\n  // If this function throws its set back to false.\r\n  rtStructDisplaySet.isLoaded = true;\r\n\r\n  const { StudyInstanceUID, SeriesInstanceUID } = referencedDisplaySet;\r\n\r\n  const segArrayBuffer = await DicomLoaderService.findDicomDataPromise(\r\n    rtStructDisplaySet,\r\n    studies\r\n  );\r\n\r\n  const dicomData = dcmjs.data.DicomMessage.readFile(segArrayBuffer);\r\n  const rtStructDataset = dcmjs.data.DicomMetaDictionary.naturalizeDataset(\r\n    dicomData.dict\r\n  );\r\n\r\n  rtStructDataset._meta = dcmjs.data.DicomMetaDictionary.namifyDataset(\r\n    dicomData.meta\r\n  );\r\n\r\n  // global cornerstone tools state to attach measurements to.\r\n  const toolState = globalImageIdSpecificToolStateManager.saveToolState();\r\n\r\n  const {\r\n    StructureSetROISequence,\r\n    ROIContourSequence,\r\n    RTROIObservationsSequence,\r\n    StructureSetLabel,\r\n  } = rtStructDataset;\r\n\r\n  // Define our structure set entry and add it to the rtstruct module state.\r\n  const structureSet = {\r\n    StructureSetLabel,\r\n    SeriesInstanceUID: rtStructDataset.SeriesInstanceUID,\r\n    ROIContours: [],\r\n    referencedSeriesSequence:\r\n      rtStructDisplaySet.metadata.ReferencedSeriesSequence,\r\n    visible: true,\r\n  };\r\n\r\n  rtStructModule.setters.structureSet(structureSet);\r\n\r\n  const imageIdSopInstanceUidPairs = _getImageIdSopInstanceUidPairsForDisplaySet(\r\n    studies,\r\n    StudyInstanceUID,\r\n    SeriesInstanceUID\r\n  );\r\n\r\n  const rtStructDisplayToolName = TOOL_NAMES.RTSTRUCT_DISPLAY_TOOL;\r\n\r\n  for (let i = 0; i < ROIContourSequence.length; i++) {\r\n    const ROIContour = ROIContourSequence[i];\r\n    const { ReferencedROINumber, ContourSequence } = ROIContour;\r\n\r\n    if (!ContourSequence) {\r\n      continue;\r\n    }\r\n\r\n    const isSupported = false;\r\n\r\n    const ContourSequenceArray = _toArray(ContourSequence);\r\n\r\n    for (let c = 0; c < ContourSequenceArray.length; c++) {\r\n      const {\r\n        ContourImageSequence,\r\n        ContourData,\r\n        NumberOfContourPoints,\r\n        ContourGeometricType,\r\n      } = ContourSequenceArray[c];\r\n\r\n      const sopInstanceUID = ContourImageSequence\r\n        ? ContourImageSequence.ReferencedSOPInstanceUID\r\n        : _getClosestSOPInstanceUID(\r\n            ContourData,\r\n            ContourGeometricType,\r\n            NumberOfContourPoints,\r\n            imageIdSopInstanceUidPairs\r\n          );\r\n      const imageId = _getImageId(imageIdSopInstanceUidPairs, sopInstanceUID);\r\n\r\n      if (!imageId) {\r\n        continue;\r\n      }\r\n\r\n      const imageIdSpecificToolData = _getOrCreateImageIdSpecificToolData(\r\n        toolState,\r\n        imageId,\r\n        rtStructDisplayToolName\r\n      );\r\n\r\n      const imagePlane = cornerstone.metaData.get('imagePlaneModule', imageId);\r\n      const points = [];\r\n      let measurementData;\r\n\r\n      switch (ContourGeometricType) {\r\n        case 'CLOSED_PLANAR':\r\n        case 'OPEN_PLANAR':\r\n        case 'POINT':\r\n          isSupported = true;\r\n\r\n          for (let p = 0; p < NumberOfContourPoints * 3; p += 3) {\r\n            points.push({\r\n              x: ContourData[p],\r\n              y: ContourData[p + 1],\r\n              z: ContourData[p + 2],\r\n            });\r\n          }\r\n\r\n          transformPointsToImagePlane(points, imagePlane);\r\n\r\n          measurementData = {\r\n            handles: {\r\n              points,\r\n            },\r\n            type: ContourGeometricType,\r\n            structureSetSeriesInstanceUid: rtStructDataset.SeriesInstanceUID,\r\n            ROINumber: ReferencedROINumber,\r\n          };\r\n\r\n          imageIdSpecificToolData.push(measurementData);\r\n          break;\r\n        default:\r\n          continue;\r\n      }\r\n    }\r\n\r\n    _setROIContourMetadata(\r\n      structureSet,\r\n      StructureSetROISequence,\r\n      RTROIObservationsSequence,\r\n      ROIContour,\r\n      isSupported\r\n    );\r\n  }\r\n\r\n  _setToolEnabledIfNotEnabled(rtStructDisplayToolName);\r\n\r\n  /*\r\n   * TODO: Improve the way we notify parts of the app that depends on rts to be loaded.\r\n   *\r\n   * Currently we are using a non-ideal implementation through a custom event to notify the rtstruct panel\r\n   * or other components that could rely on loaded rtstructs that\r\n   * the first batch of structs were loaded so that e.g. when the user opens the panel\r\n   * before the structs are fully loaded, the panel can subscribe to this custom event\r\n   * and update itself with the new structs.\r\n   *\r\n   * This limitation is due to the fact that the rtmodule is an object (which will be\r\n   * updated after the structs are loaded) that React its not aware of its changes\r\n   * because the module object its not passed in to the panel component as prop but accessed externally.\r\n   *\r\n   * Improving this event approach to something reactive that can be tracked inside the react lifecycle,\r\n   * allows us to easily watch the module or the rtstruct loading process in any other component\r\n   * without subscribing to external events.\r\n   */\r\n  const event = new CustomEvent('extensiondicomrtrtloaded', {\r\n    detail: {\r\n      rtStructDisplaySet,\r\n      referencedDisplaySet,\r\n      studies,\r\n    },\r\n  });\r\n  document.dispatchEvent(event);\r\n}\r\n\r\nfunction _setROIContourMetadata(\r\n  structureSet,\r\n  StructureSetROISequence,\r\n  RTROIObservationsSequence,\r\n  ROIContour,\r\n  isSupported\r\n) {\r\n  const StructureSetROI = StructureSetROISequence.find(\r\n    structureSetROI =>\r\n      structureSetROI.ROINumber === ROIContour.ReferencedROINumber\r\n  );\r\n\r\n  const ROIContourData = {\r\n    ROINumber: StructureSetROI.ROINumber,\r\n    ROIName: StructureSetROI.ROIName,\r\n    ROIGenerationAlgorithm: StructureSetROI.ROIGenerationAlgorithm,\r\n    ROIDescription: StructureSetROI.ROIDescription,\r\n    isSupported,\r\n    visible: true,\r\n  };\r\n\r\n  _setROIContourDataColor(ROIContour, ROIContourData);\r\n\r\n  if (RTROIObservationsSequence) {\r\n    // If present, add additional RTROIObservations metadata.\r\n    _setROIContourRTROIObservations(\r\n      ROIContourData,\r\n      RTROIObservationsSequence,\r\n      ROIContour.ReferencedROINumber\r\n    );\r\n  }\r\n\r\n  structureSet.ROIContours.push(ROIContourData);\r\n}\r\n\r\nfunction _setROIContourDataColor(ROIContour, ROIContourData) {\r\n  let { ROIDisplayColor, RecommendedDisplayCIELabValue } = ROIContour;\r\n\r\n  if (!ROIDisplayColor && RecommendedDisplayCIELabValue) {\r\n    // If ROIDisplayColor is absent, try using the RecommendedDisplayCIELabValue color.\r\n    ROIDisplayColor = dicomlab2RGB(RecommendedDisplayCIELabValue);\r\n  }\r\n\r\n  if (ROIDisplayColor) {\r\n    ROIContourData.colorArray = [...ROIDisplayColor];\r\n  } else {\r\n    //Choose a color from the cornerstoneTools colorLUT\r\n    // We sample from the default color LUT here (i.e. 0), as we have nothing else to go on.\r\n    const { getters } = cornerstoneTools.getModule('segmentation');\r\n    const color = getters.colorForSegmentIndexColorLUT(\r\n      0,\r\n      ROIContourData.ROINumber\r\n    );\r\n\r\n    ROIContourData.colorArray = [...color];\r\n  }\r\n}\r\n\r\nfunction _setROIContourRTROIObservations(\r\n  ROIContourData,\r\n  RTROIObservationsSequence,\r\n  ROINumber\r\n) {\r\n  const RTROIObservations = RTROIObservationsSequence.find(\r\n    RTROIObservations => RTROIObservations.ReferencedROINumber === ROINumber\r\n  );\r\n\r\n  if (RTROIObservations) {\r\n    // Deep copy so we don't keep the reference to the dcmjs dataset entry.\r\n    const {\r\n      ObservationNumber,\r\n      ROIObservationDescription,\r\n      RTROIInterpretedType,\r\n      ROIInterpreter,\r\n    } = RTROIObservations;\r\n\r\n    ROIContourData.RTROIObservations = {\r\n      ObservationNumber,\r\n      ROIObservationDescription,\r\n      RTROIInterpretedType,\r\n      ROIInterpreter,\r\n    };\r\n  }\r\n}\r\n\r\nfunction _setToolEnabledIfNotEnabled(toolName) {\r\n  cornerstone.getEnabledElements().forEach(enabledElement => {\r\n    const { element, image } = enabledElement;\r\n    const tool = cornerstoneTools.getToolForElement(element, toolName);\r\n\r\n    if (tool.mode !== 'enabled') {\r\n      // If not already active or passive, set passive so contours render.\r\n      cornerstoneTools.setToolEnabled(toolName);\r\n    }\r\n\r\n    if (image) {\r\n      cornerstone.updateImage(element);\r\n    }\r\n  });\r\n}\r\n\r\nfunction _getOrCreateImageIdSpecificToolData(toolState, imageId, toolName) {\r\n  if (toolState.hasOwnProperty(imageId) === false) {\r\n    toolState[imageId] = {};\r\n  }\r\n\r\n  const imageIdToolState = toolState[imageId];\r\n\r\n  // If we don't have tool state for this type of tool, add an empty object\r\n  if (imageIdToolState.hasOwnProperty(toolName) === false) {\r\n    imageIdToolState[toolName] = {\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  return imageIdToolState[toolName].data;\r\n}\r\n\r\nconst _getImageId = (imageIdSopInstanceUidPairs, sopInstanceUID) => {\r\n  const imageIdSopInstanceUidPairsEntry = imageIdSopInstanceUidPairs.find(\r\n    imageIdSopInstanceUidPairsEntry =>\r\n      imageIdSopInstanceUidPairsEntry.sopInstanceUID === sopInstanceUID\r\n  );\r\n\r\n  return imageIdSopInstanceUidPairsEntry\r\n    ? imageIdSopInstanceUidPairsEntry.imageId\r\n    : null;\r\n};\r\n\r\nfunction _getImageIdSopInstanceUidPairsForDisplaySet(\r\n  studies,\r\n  StudyInstanceUID,\r\n  SeriesInstanceUID\r\n) {\r\n  const study = studies.find(\r\n    study => study.StudyInstanceUID === StudyInstanceUID\r\n  );\r\n\r\n  const displaySets = study.displaySets.filter(set => {\r\n    return set.SeriesInstanceUID === SeriesInstanceUID;\r\n  });\r\n\r\n  if (displaySets.length > 1) {\r\n    console.warn(\r\n      'More than one display set with the same SeriesInstanceUID. This is not supported yet...'\r\n    );\r\n    // TODO -> We could make check the instance list and see if any match?\r\n    // Do we split the segmentation into two cornerstoneTools segmentations if there are images in both series?\r\n    // ^ Will that even happen?\r\n  }\r\n\r\n  const referencedDisplaySet = displaySets[0];\r\n\r\n  return referencedDisplaySet.images.map(image => {\r\n    return {\r\n      imageId: image.getImageId(),\r\n      sopInstanceUID: image.getSOPInstanceUID(),\r\n    };\r\n  });\r\n}\r\n\r\nfunction _toArray(objOrArray) {\r\n  return Array.isArray(objOrArray) ? objOrArray : [objOrArray];\r\n}\r\n\r\nfunction _getClosestSOPInstanceUID(\r\n  ContourData,\r\n  ContourGeometricType,\r\n  NumberOfContourPoints,\r\n  imageIdSopInstanceUidPairs\r\n) {\r\n  const closest = {\r\n    distance: Infinity,\r\n    sopInstanceUID: null,\r\n  };\r\n\r\n  let point;\r\n\r\n  switch (ContourGeometricType) {\r\n    case 'POINT':\r\n      point = ContourData;\r\n      break;\r\n    case 'CLOSED_PLANAR':\r\n    case 'OPEN_PLANAR':\r\n      // These are defined as planar, so get the of the region to get the\r\n      // Best mapping to a plane even if its potentially off center.\r\n\r\n      point = [0, 0, 0];\r\n      for (let p = 0; p < NumberOfContourPoints * 3; p += 3) {\r\n        point[0] += ContourData[p];\r\n        point[1] += ContourData[p + 1];\r\n        point[2] += ContourData[p + 2];\r\n      }\r\n\r\n      point[0] /= NumberOfContourPoints;\r\n      point[1] /= NumberOfContourPoints;\r\n      point[2] /= NumberOfContourPoints;\r\n  }\r\n\r\n  imageIdSopInstanceUidPairs.forEach(pair => {\r\n    const { imageId } = pair;\r\n\r\n    const imagePlaneModule = cornerstone.metaData.get(\r\n      'imagePlaneModule',\r\n      imageId\r\n    );\r\n\r\n    const distance = distanceFromPointToPlane(point, imagePlaneModule);\r\n\r\n    if (distance < closest.distance) {\r\n      closest.distance = distance;\r\n      closest.sopInstanceUID = pair.sopInstanceUID;\r\n    }\r\n  });\r\n\r\n  return closest.sopInstanceUID;\r\n}\r\n\r\n/**\r\n *\r\n * @param {number[3]} P - The point\r\n * @param {object} imagePlaneModule The cornerstone metadata object for the imagePlane\r\n */\r\nfunction distanceFromPointToPlane(P, imagePlaneModule) {\r\n  const {\r\n    rowCosines,\r\n    columnCosines,\r\n    imagePositionPatient: Q,\r\n  } = imagePlaneModule;\r\n\r\n  let N = [];\r\n  vec3.cross(N, rowCosines, columnCosines);\r\n\r\n  const [A, B, C] = N;\r\n\r\n  const D = -A * Q[0] - B * Q[1] - C * Q[2];\r\n\r\n  return Math.abs(A * P[0] + B * P[1] + C * P[2] + D); // Denominator is sqrt(A**2 + B**2 + C**2) which is 1 as its a normal vector\r\n}\r\n","import { metadata } from '@ohif/core';\r\n\r\nexport default function getSourceDisplaySet(studies, rtStructDisplaySet, activateLabelMap = true) {\r\n  const referencedDisplaySet = metadata.StudyMetadata.getReferencedDisplaySet(\r\n    rtStructDisplaySet,\r\n    studies\r\n  );\r\n\r\n  if (activateLabelMap) {\r\n    rtStructDisplaySet.load(referencedDisplaySet, studies);\r\n  }\r\n\r\n  return referencedDisplaySet;\r\n}\r\n","import { MODULE_TYPES, utils, DICOMWeb } from '@ohif/core';\r\nimport loadRTStruct from './loadRTStruct';\r\nimport getSourceDisplaySet from './getSourceDisplaySet';\r\n\r\nimport id from './id';\r\n\r\n// TODO: Should probably use dcmjs for this\r\nconst SOP_CLASS_UIDS = {\r\n  DICOM_RT_STRUCT: '1.2.840.10008.5.1.4.1.1.481.3',\r\n};\r\n\r\nconst sopClassUIDs = Object.values(SOP_CLASS_UIDS);\r\n\r\nconst OHIFDicomRTStructSopClassHandler = {\r\n  id: 'OHIFDicomRTStructSopClassHandler',\r\n  type: MODULE_TYPES.SOP_CLASS_HANDLER,\r\n  sopClassUIDs,\r\n  getDisplaySetFromSeries: function (\r\n    series,\r\n    study,\r\n    dicomWebClient,\r\n    authorizationHeaders\r\n  ) {\r\n    const instance = series.getFirstInstance();\r\n\r\n    const metadata = instance.getData().metadata;\r\n    const {\r\n      SeriesDate,\r\n      SeriesTime,\r\n      SeriesNumber,\r\n      SeriesDescription,\r\n      FrameOfReferenceUID,\r\n      SOPInstanceUID,\r\n      SeriesInstanceUID,\r\n      StudyInstanceUID,\r\n    } = metadata;\r\n\r\n    // TODO -> GET REFERENCED FRAME OF REFERENCE SEQUENCE.\r\n\r\n    const rtStructDisplaySet = {\r\n      Modality: 'RTSTRUCT',\r\n      displaySetInstanceUID: utils.guid(),\r\n      wadoRoot: study.getData().wadoRoot,\r\n      wadoUri: instance.getData().wadouri,\r\n      SOPInstanceUID,\r\n      SeriesInstanceUID,\r\n      StudyInstanceUID,\r\n      FrameOfReferenceUID,\r\n      authorizationHeaders,\r\n      metadata,\r\n      isDerived: true,\r\n      referencedDisplaySetUID: null, // Assigned when loaded.\r\n      labelmapIndex: null, // Assigned when loaded.\r\n      isLoaded: false,\r\n      SeriesDate,\r\n      SeriesTime,\r\n      SeriesNumber,\r\n      SeriesDescription,\r\n      metadata,\r\n    };\r\n\r\n    if (!metadata.ReferencedSeriesSequence) {\r\n      const ReferencedFrameOfReferenceSequence =\r\n        metadata.ReferencedFrameOfReferenceSequence;\r\n\r\n      if (ReferencedFrameOfReferenceSequence) {\r\n        // TODO -> @dannyrb Do we augment metadata or add a (potentially large? fallback list in filterDerivedDisplaySets )\r\n        metadata.ReferencedSeriesSequence = _deriveReferencedSeriesSequenceFromFrameOfReferenceSequence(\r\n          ReferencedFrameOfReferenceSequence\r\n        );\r\n      }\r\n    }\r\n\r\n    rtStructDisplaySet.getSourceDisplaySet = function (studies, activateLabelMap = true) {\r\n      return getSourceDisplaySet(studies, rtStructDisplaySet, activateLabelMap);\r\n    };\r\n\r\n    rtStructDisplaySet.load = function (referencedDisplaySet, studies) {\r\n      return loadRTStruct(\r\n        rtStructDisplaySet,\r\n        referencedDisplaySet,\r\n        studies\r\n      ).catch(error => {\r\n        rtStructDisplaySet.isLoaded = false;\r\n        rtStructDisplaySet.loadError = true;\r\n        throw new Error(error);\r\n      });\r\n    };\r\n\r\n    return rtStructDisplaySet;\r\n  },\r\n};\r\n\r\nfunction _deriveReferencedSeriesSequenceFromFrameOfReferenceSequence(\r\n  ReferencedFrameOfReferenceSequence\r\n) {\r\n  const ReferencedSeriesSequence = [];\r\n\r\n  _getSequenceAsArray(ReferencedFrameOfReferenceSequence).forEach(\r\n    referencedFrameOfReference => {\r\n      const { RTReferencedStudySequence } = referencedFrameOfReference;\r\n\r\n      _getSequenceAsArray(RTReferencedStudySequence).forEach(\r\n        rtReferencedStudy => {\r\n          const { RTReferencedSeriesSequence } = rtReferencedStudy;\r\n\r\n          _getSequenceAsArray(RTReferencedSeriesSequence).forEach(\r\n            rtReferencedSeries => {\r\n              const ReferencedInstanceSequence = [];\r\n              const {\r\n                ContourImageSequence,\r\n                SeriesInstanceUID,\r\n              } = rtReferencedSeries;\r\n\r\n              _getSequenceAsArray(ContourImageSequence).forEach(\r\n                contourImage => {\r\n                  ReferencedInstanceSequence.push({\r\n                    ReferencedSOPInstanceUID:\r\n                      contourImage.ReferencedSOPInstanceUID,\r\n                    ReferencedSOPClassUID: contourImage.ReferencedSOPClassUID,\r\n                  });\r\n                }\r\n              );\r\n\r\n              const referencedSeries = {\r\n                SeriesInstanceUID,\r\n                ReferencedInstanceSequence,\r\n              };\r\n\r\n              ReferencedSeriesSequence.push(referencedSeries);\r\n            }\r\n          );\r\n        }\r\n      );\r\n    }\r\n  );\r\n\r\n  return ReferencedSeriesSequence;\r\n}\r\n\r\nfunction _getSequenceAsArray(sequence) {\r\n  return Array.isArray(sequence) ? sequence : [sequence];\r\n}\r\n\r\nfunction _getReferencedFrameOfReferenceSequence(instance) {\r\n  const referencedFrameOfReferenceSequenceRaw = instance['30060010'];\r\n\r\n  const referencedFrameOfReferenceSequence = [];\r\n\r\n  if (\r\n    !referencedFrameOfReferenceSequenceRaw ||\r\n    !referencedFrameOfReferenceSequenceRaw.Value\r\n  ) {\r\n    return undefined;\r\n  }\r\n\r\n  referencedFrameOfReferenceSequenceRaw.Value.forEach(\r\n    referencedFrameOfReferenceRaw => {\r\n      const frameOfReferenceUID = DICOMWeb.getString(\r\n        referencedFrameOfReferenceRaw['00200052']\r\n      );\r\n\r\n      const referencedFrameOfReference = { frameOfReferenceUID };\r\n      const RTReferencedStudySequenceRaw =\r\n        referencedFrameOfReferenceRaw['30060012'];\r\n\r\n      referencedFrameOfReferenceSequence.push(referencedFrameOfReference);\r\n\r\n      if (RTReferencedStudySequenceRaw && RTReferencedStudySequenceRaw.Value) {\r\n        referencedFrameOfReference.rtReferencedStudySequence = [];\r\n\r\n        const { rtReferencedStudySequence } = referencedFrameOfReference;\r\n\r\n        RTReferencedStudySequenceRaw.Value.forEach(rtReferencedStudyRaw => {\r\n          const referencedSopClassUID = DICOMWeb.getString(\r\n            rtReferencedStudyRaw['00081150']\r\n          );\r\n\r\n          const referencedSOPInstanceUID = DICOMWeb.getString(\r\n            rtReferencedStudyRaw['00081155']\r\n          );\r\n\r\n          const rtReferencedStudy = {\r\n            referencedSopClassUID,\r\n            referencedSOPInstanceUID,\r\n            rtReferencedSeriesSequence: [],\r\n          };\r\n\r\n          rtReferencedStudySequence.push(rtReferencedStudy);\r\n\r\n          const { rtReferencedSeriesSequence } = rtReferencedStudy;\r\n\r\n          const rtReferencedSeriesSequenceRaw =\r\n            rtReferencedStudyRaw['30060014'];\r\n\r\n          rtReferencedSeriesSequenceRaw.Value.forEach(rtReferencedSeriesRaw => {\r\n            const seriesInstanceUID = DICOMWeb.getString(\r\n              rtReferencedSeriesRaw['0020000E']\r\n            );\r\n\r\n            const rtReferencedSeries = {\r\n              seriesInstanceUID,\r\n              contourImageSequence: [],\r\n            };\r\n\r\n            rtReferencedSeriesSequence.push(rtReferencedSeries);\r\n\r\n            const { contourImageSequence } = rtReferencedSeries;\r\n\r\n            const contourImageSequenceRaw = rtReferencedSeriesRaw['30060016'];\r\n\r\n            contourImageSequenceRaw.Value.forEach(contourImageRaw => {\r\n              const referencedSOPClassUID = DICOMWeb.getString(\r\n                contourImageRaw['00081150']\r\n              );\r\n\r\n              const referencedSOPInstanceUID = DICOMWeb.getString(\r\n                contourImageRaw['00081155']\r\n              );\r\n\r\n              const referencedFrameNumber = DICOMWeb.getString(\r\n                contourImageRaw['00081160']\r\n              );\r\n              const referencedSegmentNumber = DICOMWeb.getString(\r\n                contourImageRaw['0062000B']\r\n              );\r\n\r\n              const contourImage = {\r\n                referencedSOPClassUID,\r\n                referencedSOPInstanceUID,\r\n                referencedFrameNumber,\r\n                referencedSegmentNumber,\r\n              };\r\n\r\n              contourImageSequence.push(contourImage);\r\n            });\r\n          });\r\n        });\r\n      }\r\n    }\r\n  );\r\n\r\n  return referencedFrameOfReferenceSequence;\r\n}\r\n\r\nexport default OHIFDicomRTStructSopClassHandler;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TableListItem, Icon, Tooltip, OverlayTrigger } from '@ohif/ui';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nimport './StructureSetItem.css';\r\n\r\nconst ColoredCircle = ({ color }) => {\r\n  return (\r\n    <div\r\n      className=\"item-color\"\r\n      style={{ backgroundColor: `rgba(${color.join(',')})` }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nColoredCircle.propTypes = {\r\n  color: PropTypes.array.isRequired,\r\n};\r\n\r\nconst StructureSetItem = ({\r\n  index,\r\n  label,\r\n  isDisabled,\r\n  onClick,\r\n  itemClass,\r\n  color,\r\n  visible = true,\r\n  onVisibilityChange,\r\n  selected = false,\r\n}) => {\r\n  const [isVisible, setIsVisible] = useState(visible);\r\n\r\n  useEffect(() => {\r\n    setIsVisible(visible);\r\n  }, [visible]);\r\n\r\n  let dcmrtClassNames = `dcmrt-structure-set-item`;\r\n\r\n  if (selected) {\r\n    dcmrtClassNames += ' selected';\r\n  }\r\n\r\n  if (isDisabled) {\r\n    dcmrtClassNames += ' isDisabled';\r\n  }\r\n\r\n  const warningIcon = (\r\n    <span>\r\n      <Icon name=\"exclamation-triangle\" />\r\n    </span>\r\n  );\r\n\r\n  const tableListItem = (\r\n    <TableListItem\r\n      key={index}\r\n      itemKey={index}\r\n      itemIndex={index}\r\n      itemClass={itemClass}\r\n      itemMeta={isDisabled ? warningIcon : <ColoredCircle color={color} />}\r\n      itemMetaClass=\"item-color-section\"\r\n      onItemClick={() => {\r\n        if (isDisabled) {\r\n          return;\r\n        }\r\n\r\n        onClick();\r\n      }}\r\n    >\r\n      <div>\r\n        <div className=\"item-label\" style={{ marginBottom: 4 }}>\r\n          <a data-tip data-for={`StructureHover${index}`}>\r\n            <span>{label}</span>\r\n          </a>\r\n          <ReactTooltip\r\n            id={`StructureHover${index}`}\r\n            delayShow={250}\r\n            place=\"right\"\r\n            border={true}\r\n            type=\"light\"\r\n          >\r\n            <span>{label}</span>\r\n          </ReactTooltip>\r\n          {!isDisabled && (\r\n            <Icon\r\n              className={`eye-icon ${isVisible && '--visible'}`}\r\n              name={isVisible ? 'eye' : 'eye-closed'}\r\n              width=\"20px\"\r\n              height=\"20px\"\r\n              onClick={event => {\r\n                event.stopPropagation();\r\n\r\n                if (isDisabled) {\r\n                  return;\r\n                }\r\n\r\n                const newVisibility = !isVisible;\r\n                setIsVisible(newVisibility);\r\n                onVisibilityChange(newVisibility);\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        {false && <div className=\"item-info\">{'...'}</div>}\r\n        {false && (\r\n          <div className=\"item-actions\">\r\n            <button\r\n              className=\"btnAction\"\r\n              onClick={() => console.log('Relabelling...')}\r\n            >\r\n              <span style={{ marginRight: '4px' }}>\r\n                <Icon name=\"edit\" width=\"14px\" height=\"14px\" />\r\n              </span>\r\n              Relabel\r\n            </button>\r\n            <button\r\n              className=\"btnAction\"\r\n              onClick={() => console.log('Editing description...')}\r\n            >\r\n              <span style={{ marginRight: '4px' }}>\r\n                <Icon name=\"edit\" width=\"14px\" height=\"14px\" />\r\n              </span>\r\n              Description\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </TableListItem>\r\n  );\r\n\r\n  return (\r\n    <div className={dcmrtClassNames}>\r\n      <React.Fragment>\r\n        {isDisabled ? (\r\n          <OverlayTrigger\r\n            key={index}\r\n            placement=\"left\"\r\n            overlay={\r\n              <Tooltip\r\n                placement=\"left\"\r\n                className=\"in tooltip-warning\"\r\n                id=\"tooltip-left\"\r\n              >\r\n                <div className=\"warningTitle\">Unsupported Region</div>\r\n                <div className=\"warningContent\">\r\n                  Contour type currently unsupported.\r\n                </div>\r\n              </Tooltip>\r\n            }\r\n          >\r\n            <div>{tableListItem}</div>\r\n          </OverlayTrigger>\r\n        ) : (\r\n          <React.Fragment>{tableListItem} </React.Fragment>\r\n        )}\r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n};\r\n\r\nStructureSetItem.propTypes = {\r\n  index: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n  itemClass: PropTypes.string,\r\n  color: PropTypes.array.isRequired,\r\n};\r\n\r\nStructureSetItem.defaultProps = {\r\n  itemClass: '',\r\n  onClick: () => {},\r\n};\r\n\r\nexport default StructureSetItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Range } from '@ohif/ui';\r\n\r\nimport './RTSettings.css';\r\n\r\nconst RTSettings = ({ configuration, onBack, onChange }) => {\r\n  const toFloat = value => parseFloat(value / 100).toFixed(2);\r\n\r\n  const save = (field, value) => {\r\n    onChange({ ...configuration, [field]: value });\r\n  };\r\n\r\n  const SettingsSection = ({ title, children }) => {\r\n    return (\r\n      <div className=\"settings-section\">\r\n        <div className=\"header\">{title}</div>\r\n        <div className=\"content\">\r\n          {children}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"dcmrt-settings\">\r\n      <div className=\"settings-title\">\r\n        <h3>RT Structure Set Settings</h3>\r\n        <button className=\"return-button\" onClick={onBack}>\r\n          Back\r\n        </button>\r\n      </div>\r\n\r\n      <SettingsSection title=\"Segment Outline\">\r\n        <div className=\"range\">\r\n          <label htmlFor=\"range\">Opacity</label>\r\n          <Range\r\n            showPercentage\r\n            step={1}\r\n            min={0}\r\n            max={100}\r\n            value={configuration.opacity * 100}\r\n            onChange={event => save('opacity', toFloat(event.target.value))}\r\n          />\r\n        </div>\r\n        <div className=\"range\">\r\n          <label htmlFor=\"range\">Width</label>\r\n          <Range\r\n            showValue\r\n            step={1}\r\n            min={1}\r\n            max={5}\r\n            value={configuration.lineWidth}\r\n            onChange={event => save('lineWidth', parseInt(event.target.value))}\r\n          />\r\n        </div>\r\n      </SettingsSection>\r\n    </div>\r\n  );\r\n};\r\n\r\nRTSettings.propTypes = {\r\n  configuration: PropTypes.shape({\r\n    lineWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\r\n    opacity: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\r\n  }).isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default RTSettings;\r\n","import React from 'react';\r\n\r\nconst LoadingIndicator = ({ height = \"200px\", width = \"200px\", expand = false }) => {\r\n  return (\r\n    <div style={expand ? { height: \"100%\", width: \"100%\" } : {}}>\r\n      <svg style={{ margin: 'auto', background: 'none', display: 'block', shapeRendering: 'auto' }} width={width} height={height} viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n        <g transform=\"rotate(0 50 50)\">\r\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\r\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.9166666666666666s\" repeatCount=\"indefinite\"></animate>\r\n          </rect>\r\n        </g><g transform=\"rotate(30 50 50)\">\r\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\r\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.8333333333333334s\" repeatCount=\"indefinite\"></animate>\r\n          </rect>\r\n        </g><g transform=\"rotate(60 50 50)\">\r\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\r\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.75s\" repeatCount=\"indefinite\"></animate>\r\n          </rect>\r\n        </g><g transform=\"rotate(90 50 50)\">\r\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\r\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.6666666666666666s\" repeatCount=\"indefinite\"></animate>\r\n          </rect>\r\n        </g><g transform=\"rotate(120 50 50)\">\r\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\r\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.5833333333333334s\" repeatCount=\"indefinite\"></animate>\r\n          </rect>\r\n        </g><g transform=\"rotate(150 50 50)\">\r\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\r\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.5s\" repeatCount=\"indefinite\"></animate>\r\n          </rect>\r\n        </g><g transform=\"rotate(180 50 50)\">\r\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\r\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.4166666666666667s\" repeatCount=\"indefinite\"></animate>\r\n          </rect>\r\n        </g><g transform=\"rotate(210 50 50)\">\r\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\r\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.3333333333333333s\" repeatCount=\"indefinite\"></animate>\r\n          </rect>\r\n        </g><g transform=\"rotate(240 50 50)\">\r\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\r\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.25s\" repeatCount=\"indefinite\"></animate>\r\n          </rect>\r\n        </g><g transform=\"rotate(270 50 50)\">\r\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\r\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.16666666666666666s\" repeatCount=\"indefinite\"></animate>\r\n          </rect>\r\n        </g><g transform=\"rotate(300 50 50)\">\r\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\r\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.08333333333333333s\" repeatCount=\"indefinite\"></animate>\r\n          </rect>\r\n        </g><g transform=\"rotate(330 50 50)\">\r\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\r\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"0s\" repeatCount=\"indefinite\"></animate>\r\n          </rect>\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingIndicator;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon } from '@ohif/ui';\r\n\r\nimport './PanelSection.css';\r\nimport LoadingIndicator from '../LoadingIndicator/LoadingIndicator';\r\n\r\nconst PanelSection = ({\r\n  title,\r\n  children,\r\n  visible = false,\r\n  expanded = false,\r\n  loading = false,\r\n  hideVisibleButton = false,\r\n  onVisibilityChange = () => { },\r\n  onExpandChange = () => { }\r\n}) => {\r\n  const [isExpanded, setIsExpanded] = useState(expanded);\r\n  const [isVisible, setIsVisible] = useState(visible);\r\n\r\n  useEffect(() => {\r\n    setIsVisible(visible);\r\n  }, [visible]);\r\n\r\n  return (\r\n    <div\r\n      className=\"dcmrt-panel-section\"\r\n      style={{\r\n        marginBottom: isExpanded ? 0 : 2,\r\n        height: isExpanded ? '100%' : 'unset'\r\n      }}\r\n    >\r\n      <div className=\"header\">\r\n        <div>{title}</div>\r\n        <div className=\"icons\">\r\n          {!hideVisibleButton && (\r\n            <Icon\r\n              className={`eye-icon ${isVisible && 'expanded'}`}\r\n              name={isVisible ? \"eye\" : \"eye-closed\"}\r\n              width=\"20px\"\r\n              height=\"20px\"\r\n              onClick={() => {\r\n                const newVisibility = !isVisible;\r\n                setIsVisible(newVisibility);\r\n                onVisibilityChange(newVisibility);\r\n              }}\r\n            />\r\n          )}\r\n          <Icon\r\n            className={`angle-double-${isExpanded ? 'down' : 'up'} ${isExpanded && 'expanded'}`}\r\n            name={`angle-double-${isExpanded ? 'down' : 'up'}`}\r\n            width=\"20px\"\r\n            height=\"20px\"\r\n            onClick={() => {\r\n              const newExpandValue = !isExpanded;\r\n              setIsExpanded(newExpandValue);\r\n              onExpandChange(newExpandValue);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      {loading && isExpanded && <LoadingIndicator expand height=\"70px\" width=\"70px\" />}\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nPanelSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\r\n  visible: PropTypes.bool,\r\n  expanded: PropTypes.bool,\r\n  onVisibilityChange: PropTypes.func\r\n};\r\n\r\nPanelSection.defaultProps = {\r\n  visible: false,\r\n  expanded: false,\r\n  onVisibilityChange: () => { }\r\n};\r\n\r\nexport default PanelSection;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cornerstoneTools from 'cornerstone-tools';\r\nimport cornerstone from 'cornerstone-core';\r\n\r\nimport { ScrollableArea, TableList, Icon } from '@ohif/ui';\r\n\r\nimport { utils } from '@ohif/core';\r\n\r\nimport './RTPanel.css';\r\nimport StructureSetItem from '../StructureSetItem/StructureSetItem';\r\nimport RTPanelSettings from '../RTSettings/RTSettings';\r\nimport PanelSection from '../PanelSection/PanelSection';\r\nimport LoadingIndicator from '../LoadingIndicator/LoadingIndicator';\r\nimport TOOL_NAMES from '../../utils/toolNames';\r\n\r\nconst { RTSTRUCT_DISPLAY_TOOL } = TOOL_NAMES;\r\n\r\nconst { studyMetadataManager } = utils;\r\n\r\nconst refreshViewport = () => {\r\n  cornerstone.getEnabledElements().forEach(enabledElement => {\r\n    if (enabledElement.image) {\r\n      cornerstone.updateImage(enabledElement.element);\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * RTPanel component\r\n *\r\n * @param {Object} props\r\n * @param {Array} props.studies\r\n * @param {Array} props.getActiveViewport - get active viewport data\r\n * @param {number} props.activeIndex - activeViewportIndex\r\n * @param {number} props.isOpen - isOpen\r\n * @returns component\r\n */\r\nconst RTPanel = ({\r\n  studies,\r\n  activeIndex,\r\n  isOpen,\r\n  onContourItemClick,\r\n  activeContexts = [],\r\n  contexts = {},\r\n  activeViewport,\r\n  getActiveViewport,\r\n}) => {\r\n  const isVTK = () => activeContexts.includes(contexts.VTK);\r\n  const isCornerstone = () => activeContexts.includes(contexts.CORNERSTONE);\r\n\r\n  const [selectedContour, setSelectedContour] = useState();\r\n  const DEFAULT_SET_INDEX = 0;\r\n  const DEFAULT_STATE = {\r\n    referencedDisplaysets: [],\r\n    sets: [],\r\n    selectedSet: null,\r\n    isLocked: false,\r\n  };\r\n\r\n  const [state, setState] = useState(DEFAULT_STATE);\r\n  const [showSettings, setShowSettings] = useState(false);\r\n\r\n  /*\r\n   * TODO: Improve the way we notify parts of the app that depends on rts to be loaded.\r\n   *\r\n   * Currently we are using a non-ideal implementation through a custom event to notify the rtstruct panel\r\n   * or other components that could rely on loaded rtstructs that\r\n   * the first batch of structs were loaded so that e.g. when the user opens the panel\r\n   * before the structs are fully loaded, the panel can subscribe to this custom event\r\n   * and update itself with the new structs.\r\n   *\r\n   * This limitation is due to the fact that the rtmodule is an object (which will be\r\n   * updated after the structs are loaded) that React its not aware of its changes\r\n   * because the module object its not passed in to the panel component as prop but accessed externally.\r\n   *\r\n   * Improving this event approach to something reactive that can be tracked inside the react lifecycle,\r\n   * allows us to easily watch the module or the rtstruct loading process in any other component\r\n   * without subscribing to external events.\r\n   */\r\n  useEffect(() => {\r\n    updateStructureSets();\r\n\r\n    document.addEventListener('rt-panel-tab-updated', updateStructureSets);\r\n\r\n    return () => {\r\n      document.removeEventListener('rt-panel-tab-updated', updateStructureSets);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const studyMetadata = studyMetadataManager.get(\r\n      activeViewport.StudyInstanceUID\r\n    );\r\n    const referencedDisplaysets = studyMetadata.getDerivedDatasets({\r\n      referencedSeriesInstanceUID: activeViewport.SeriesInstanceUID,\r\n      Modality: 'RTSTRUCT',\r\n    });\r\n    setState(state => ({ ...state, isLocked: !referencedDisplaysets.length }));\r\n  }, [activeViewport]);\r\n\r\n  const updateStructureSets = () => {\r\n    const viewport = getActiveViewport();\r\n    const module = cornerstoneTools.getModule('rtstruct');\r\n    const StructureSets = module.state.StructureSets;\r\n\r\n    if (StructureSets && StructureSets.length) {\r\n      const viewportSets = module.getters.structuresSetsWhichReferenceSeriesInstanceUid(\r\n        viewport.SeriesInstanceUID\r\n      );\r\n\r\n      const studyMetadata = studyMetadataManager.get(viewport.StudyInstanceUID);\r\n      const referencedDisplaysets = studyMetadata.getDerivedDatasets({\r\n        referencedSeriesInstanceUID: viewport.SeriesInstanceUID,\r\n        Modality: 'RTSTRUCT',\r\n      });\r\n\r\n      if (viewportSets.length) {\r\n        const defaultSet = viewportSets[DEFAULT_SET_INDEX];\r\n        setState({\r\n          referencedDisplaysets,\r\n          selectedSet: defaultSet,\r\n          sets: viewportSets,\r\n        });\r\n      } else {\r\n        setState(DEFAULT_STATE);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setShowSettings(showSettings && !isOpen);\r\n  }, [isOpen]);\r\n\r\n  const toContourItem = (\r\n    { ROINumber, ROIName, RTROIObservations, colorArray, visible, isSupported },\r\n    loadedSet\r\n  ) => {\r\n    let interpretedType = '';\r\n    if (RTROIObservations && RTROIObservations.RTROIInterpretedType) {\r\n      interpretedType = `(${RTROIObservations.RTROIInterpretedType})`;\r\n    }\r\n\r\n    const isSameContour = selectedContour && selectedContour === ROINumber;\r\n    return (\r\n      <StructureSetItem\r\n        key={ROINumber}\r\n        selected={isSameContour}\r\n        isDisabled={!isSupported}\r\n        onClick={() => {\r\n          setSelectedContour(isSameContour ? null : ROINumber);\r\n\r\n          if (isCornerstone()) {\r\n            const enabledElements = cornerstone.getEnabledElements();\r\n            const element = enabledElements[activeIndex].element;\r\n            const stackToolState = cornerstoneTools.getToolState(\r\n              element,\r\n              'stack'\r\n            );\r\n\r\n            if (!stackToolState) {\r\n              return;\r\n            }\r\n\r\n            const imageIds = stackToolState.data[0].imageIds;\r\n\r\n            const module = cornerstoneTools.getModule('rtstruct');\r\n            const imageId = module.getters.imageIdOfCenterFrameOfROIContour(\r\n              state.selectedSet.SeriesInstanceUID,\r\n              ROINumber,\r\n              imageIds\r\n            );\r\n\r\n            const toolState = cornerstoneTools.globalImageIdSpecificToolStateManager.saveToolState();\r\n            const imageIdSpecificToolState = toolState[imageId];\r\n\r\n            const rtstructData =\r\n              imageIdSpecificToolState[RTSTRUCT_DISPLAY_TOOL];\r\n\r\n            const specificData = rtstructData.data.find(\r\n              rtData => rtData.ROINumber === ROINumber\r\n            );\r\n\r\n            specificData.highlight = true;\r\n\r\n            const frameIndex = imageIds.indexOf(imageId);\r\n            const SOPInstanceUID = cornerstone.metaData.get(\r\n              'SOPInstanceUID',\r\n              imageId\r\n            );\r\n            const StudyInstanceUID = cornerstone.metaData.get(\r\n              'StudyInstanceUID',\r\n              imageId\r\n            );\r\n\r\n            onContourItemClick({\r\n              StudyInstanceUID,\r\n              SOPInstanceUID,\r\n              frameIndex,\r\n              activeViewportIndex: activeIndex,\r\n            });\r\n          }\r\n        }}\r\n        label={`${ROIName} ${interpretedType}`}\r\n        index={ROINumber}\r\n        color={colorArray}\r\n        visible={visible}\r\n        onVisibilityChange={() => {\r\n          const module = cornerstoneTools.getModule('rtstruct');\r\n          module.setters.toggleROIContour(\r\n            state.selectedSet.SeriesInstanceUID,\r\n            ROINumber\r\n          );\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  const configurationChangeHandler = newConfiguration => {\r\n    const module = cornerstoneTools.getModule('rtstruct');\r\n    module.configuration.lineWidth = newConfiguration.lineWidth;\r\n    module.configuration.opacity = newConfiguration.opacity;\r\n    refreshViewport();\r\n  };\r\n\r\n  if (showSettings) {\r\n    const module = cornerstoneTools.getModule('rtstruct');\r\n    return (\r\n      <RTPanelSettings\r\n        configuration={module.configuration}\r\n        onBack={() => setShowSettings(false)}\r\n        onChange={configurationChangeHandler}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"dcmrt-panel\">\r\n      <div className=\"dcmrt-panel-header\">\r\n        {' '}\r\n        {!state.isLocked && (\r\n          <Icon\r\n            className=\"cog-icon\"\r\n            name=\"cog\"\r\n            width=\"25px\"\r\n            height=\"25px\"\r\n            onClick={() => setShowSettings(true)}\r\n          />\r\n        )}\r\n        <h3>RT Structure Sets</h3>\r\n      </div>\r\n      {!state.isLocked && !state.referencedDisplaysets.length && (\r\n        <LoadingIndicator expand height=\"70px\" width=\"70px\" />\r\n      )}\r\n      {state.sets &&\r\n        state.referencedDisplaysets.map(displaySet => {\r\n          const { SeriesInstanceUID, metadata, isLoaded } = displaySet;\r\n\r\n          const module = cornerstoneTools.getModule('rtstruct');\r\n          const sets = module.getters.structuresSetsWhichReferenceSeriesInstanceUid(\r\n            activeViewport.SeriesInstanceUID\r\n          );\r\n\r\n          const loadedSet = sets.find(\r\n            set => set.SeriesInstanceUID === SeriesInstanceUID\r\n          );\r\n\r\n          if (!loadedSet) return null;\r\n\r\n          return (\r\n            <PanelSection\r\n              key={SeriesInstanceUID}\r\n              title={metadata.StructureSetLabel}\r\n              loading={!isLoaded || !loadedSet}\r\n              visible={isLoaded && loadedSet && loadedSet.visible}\r\n              hideVisibleButton={!isLoaded}\r\n              expanded={\r\n                isLoaded &&\r\n                loadedSet.SeriesInstanceUID ===\r\n                  state.selectedSet.SeriesInstanceUID\r\n              }\r\n              onVisibilityChange={newVisibility => {\r\n                const module = cornerstoneTools.getModule('rtstruct');\r\n\r\n                if (newVisibility) {\r\n                  module.setters.showStructureSet(loadedSet.SeriesInstanceUID);\r\n                } else {\r\n                  module.setters.hideStructureSet(loadedSet.SeriesInstanceUID);\r\n                }\r\n                const sets = module.getters.structuresSetsWhichReferenceSeriesInstanceUid(\r\n                  activeViewport.SeriesInstanceUID\r\n                );\r\n                setState(state => ({ ...state, sets }));\r\n                refreshViewport();\r\n              }}\r\n              onExpandChange={async () => {\r\n                if (!isLoaded) {\r\n                  await displaySet.load(activeViewport, studies);\r\n                  const module = cornerstoneTools.getModule('rtstruct');\r\n                  const sets = module.getters.structuresSetsWhichReferenceSeriesInstanceUid(\r\n                    activeViewport.SeriesInstanceUID\r\n                  );\r\n                  const selectedSet = sets.find(\r\n                    set => set.SeriesInstanceUID === SeriesInstanceUID\r\n                  );\r\n                  setState(state => ({ ...state, selectedSet, sets }));\r\n                }\r\n              }}\r\n            >\r\n              <ScrollableArea>\r\n                <TableList headless>\r\n                  {isLoaded &&\r\n                    loadedSet.ROIContours.map(c => toContourItem(c, loadedSet))}\r\n                </TableList>\r\n              </ScrollableArea>\r\n            </PanelSection>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nRTPanel.propTypes = {\r\n  viewports: PropTypes.shape({\r\n    displaySetInstanceUID: PropTypes.string,\r\n    frameRate: PropTypes.any,\r\n    InstanceNumber: PropTypes.number,\r\n    isMultiFrame: PropTypes.bool,\r\n    isReconstructable: PropTypes.bool,\r\n    Modality: PropTypes.string,\r\n    plugin: PropTypes.string,\r\n    SeriesDate: PropTypes.string,\r\n    SeriesDescription: PropTypes.string,\r\n    SeriesInstanceUID: PropTypes.string,\r\n    SeriesNumber: PropTypes.any,\r\n    SeriesTime: PropTypes.string,\r\n    sopClassUIDs: PropTypes.arrayOf(PropTypes.string),\r\n    StudyInstanceUID: PropTypes.string,\r\n  }),\r\n  activeIndex: PropTypes.number.isRequired,\r\n  studies: PropTypes.array.isRequired,\r\n  isOpen: PropTypes.bool.isRequired,\r\n};\r\n\r\nRTPanel.defaultProps = {};\r\n\r\nexport default RTPanel;\r\n","import React from 'react';\r\nimport { utils } from '@ohif/core';\r\n\r\nimport init from './init.js';\r\nimport sopClassHandlerModule from './OHIFDicomRTStructSopClassHandler';\r\nimport id from './id.js';\r\nimport RTPanel from './components/RTPanel/RTPanel';\r\nimport { version } from '../package.json';\r\n\r\nconst { studyMetadataManager } = utils;\r\n\r\nexport default {\r\n  /**\r\n   * Only required property. Should be a unique value across all extensions.\r\n   */\r\n  id,\r\n  version,\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param {object} [configuration={}]\r\n   * @param {object|array} [configuration.csToolsConfig] - Passed directly to `initCornerstoneTools`\r\n   */\r\n  preRegistration({ servicesManager, configuration = {} }) {\r\n    init({ servicesManager, configuration });\r\n  },\r\n  getPanelModule({ commandsManager, servicesManager, api }) {\r\n    const ExtendedRTPanel = props => {\r\n      const { activeContexts } = api.hooks.useAppContext();\r\n\r\n      const contourItemClickHandler = contourData => {\r\n        commandsManager.runCommand('jumpToImage', contourData);\r\n      };\r\n\r\n      return (\r\n        <RTPanel\r\n          {...props}\r\n          onContourItemClick={contourItemClickHandler}\r\n          activeContexts={activeContexts}\r\n          contexts={api.contexts}\r\n        />\r\n      );\r\n    };\r\n\r\n    const RTPanelTabChangedEvent = 'rt-panel-tab-updated';\r\n\r\n    /**\r\n     * Trigger's an event to update the state of the panel's RoundedButtonGroup.\r\n     *\r\n     * This is required to avoid extension state\r\n     * coupling with the viewer's ToolbarRow component.\r\n     *\r\n     * @param {object} data\r\n     */\r\n    const triggerRTPanelUpdatedEvent = data => {\r\n      const event = new CustomEvent(RTPanelTabChangedEvent, {\r\n        detail: data,\r\n      });\r\n      document.dispatchEvent(event);\r\n    };\r\n\r\n    const onRTStructsLoaded = ({ detail }) => {\r\n      const { rtStructDisplaySet, referencedDisplaySet } = detail;\r\n\r\n      const studyMetadata = studyMetadataManager.get(\r\n        rtStructDisplaySet.StudyInstanceUID\r\n      );\r\n      const referencedDisplaysets = studyMetadata.getDerivedDatasets({\r\n        referencedSeriesInstanceUID: referencedDisplaySet.SeriesInstanceUID,\r\n        Modality: 'RTSTRUCT',\r\n      });\r\n      triggerRTPanelUpdatedEvent({\r\n        badgeNumber: referencedDisplaysets.length,\r\n        target: 'rt-panel',\r\n      });\r\n    };\r\n\r\n    document.addEventListener('extensiondicomrtrtloaded', onRTStructsLoaded);\r\n\r\n    return {\r\n      menuOptions: [\r\n        {\r\n          icon: 'list',\r\n          label: 'RTSTRUCT',\r\n          target: 'rt-panel',\r\n          stateEvent: RTPanelTabChangedEvent,\r\n          isDisabled: (studies, activeViewport) => {\r\n            if (!studies) {\r\n              return true;\r\n            }\r\n\r\n            if (activeViewport) {\r\n              const studyMetadata = studyMetadataManager.get(\r\n                activeViewport.StudyInstanceUID\r\n              );\r\n              if (!studyMetadata) {\r\n                return;\r\n              }\r\n              const referencedDisplaySets = studyMetadata.getDerivedDatasets({\r\n                referencedSeriesInstanceUID: activeViewport.SeriesInstanceUID,\r\n                Modality: 'RTSTRUCT',\r\n              });\r\n              if (\r\n                referencedDisplaySets &&\r\n                referencedDisplaySets.some(ds =>\r\n                  ['RTSTRUCT'].includes(ds.Modality)\r\n                )\r\n              ) {\r\n                triggerRTPanelUpdatedEvent({\r\n                  badgeNumber: referencedDisplaySets.length,\r\n                  target: 'rt-panel',\r\n                });\r\n                return false;\r\n              }\r\n            }\r\n\r\n            return true;\r\n          },\r\n        },\r\n      ],\r\n      components: [\r\n        {\r\n          id: 'rt-panel',\r\n          component: ExtendedRTPanel,\r\n        },\r\n      ],\r\n      defaultContext: ['VIEWER'],\r\n    };\r\n  },\r\n  getSopClassHandlerModule({ servicesManager }) {\r\n    return sopClassHandlerModule;\r\n  },\r\n};\r\n","const id = 'rt';\r\n\r\nexport default id;\r\n","import OHIF from '@ohif/core';\r\n\r\nconst { utils } = OHIF;\r\n\r\nconst SOP_CLASS_UIDS = {\r\n  VL_WHOLE_SLIDE_MICROSCOPY_IMAGE_STORAGE: '1.2.840.10008.5.1.4.1.1.77.1.6',\r\n};\r\n\r\nconst DicomMicroscopySopClassHandler = {\r\n  id: 'DicomMicroscopySopClassHandlerPlugin',\r\n  sopClassUIDs: [SOP_CLASS_UIDS.VL_WHOLE_SLIDE_MICROSCOPY_IMAGE_STORAGE],\r\n  getDisplaySetFromSeries(series, study, dicomWebClient) {\r\n    const instance = series.getFirstInstance();\r\n\r\n    const metadata = instance.getData().metadata;\r\n    const {\r\n      SeriesDescription,\r\n      SeriesNumber,\r\n      ContentDate,\r\n      ContentTime,\r\n    } = metadata;\r\n\r\n    // Note: We are passing the dicomweb client into each viewport!\r\n\r\n    return {\r\n      plugin: 'microscopy',\r\n      Modality: 'SM',\r\n      displaySetInstanceUID: utils.guid(),\r\n      dicomWebClient,\r\n      SOPInstanceUID: instance.getSOPInstanceUID(),\r\n      SeriesInstanceUID: series.getSeriesInstanceUID(),\r\n      StudyInstanceUID: study.getStudyInstanceUID(),\r\n      SeriesDescription,\r\n      SeriesDate: ContentDate, // Map ContentDate/Time to SeriesTime for series list sorting.\r\n      SeriesTime: ContentTime,\r\n      SeriesNumber,\r\n      metadata,\r\n    };\r\n  },\r\n};\r\n\r\nexport default DicomMicroscopySopClassHandler;\r\n","import React from 'react';\r\nimport DicomMicroscopySopClassHandler from './DicomMicroscopySopClassHandler.js';\r\nimport { version } from '../package.json';\r\n\r\nconst Component = React.lazy(() => {\r\n  return import('./DicomMicroscopyViewport');\r\n});\r\n\r\nexport default {\r\n  /**\r\n   * Only required property. Should be a unique value across all extensions.\r\n   */\r\n  id: 'microscopy',\r\n  version,\r\n\r\n  getViewportModule({ servicesManager }) {\r\n    return props => {\r\n      return (\r\n        <React.Suspense fallback={<div>Loading...</div>}>\r\n          <Component {...props} servicesManager={servicesManager} />\r\n        </React.Suspense>\r\n      );\r\n    };\r\n  },\r\n  getSopClassHandlerModule() {\r\n    return DicomMicroscopySopClassHandler;\r\n  },\r\n};\r\n","import { MODULE_TYPES, utils } from '@ohif/core';\r\n\r\n// TODO: Should probably use dcmjs for this\r\nconst SOP_CLASS_UIDS = {\r\n  ENCAPSULATED_PDF: '1.2.840.10008.5.1.4.1.1.104.1',\r\n};\r\n\r\nconst OHIFDicomPDFSopClassHandler = {\r\n  id: 'OHIFDicomPDFSopClassHandlerPlugin',\r\n  type: MODULE_TYPES.SOP_CLASS_HANDLER,\r\n  sopClassUIDs: [SOP_CLASS_UIDS.ENCAPSULATED_PDF],\r\n  getDisplaySetFromSeries(series, study, dicomWebClient, authorizationHeaders) {\r\n    const instance = series.getFirstInstance();\r\n\r\n    const metadata = instance.getData().metadata;\r\n    const {\r\n      ContentDate,\r\n      ContentTime,\r\n      SeriesDescription,\r\n      SeriesNumber,\r\n    } = metadata;\r\n\r\n    return {\r\n      plugin: 'pdf',\r\n      Modality: 'DOC',\r\n      displaySetInstanceUID: utils.guid(),\r\n      wadoRoot: study.getData().wadoRoot,\r\n      wadoUri: instance.getData().wadouri,\r\n      SOPInstanceUID: instance.getSOPInstanceUID(),\r\n      SeriesInstanceUID: series.getSeriesInstanceUID(),\r\n      StudyInstanceUID: study.getStudyInstanceUID(),\r\n      SeriesDescription,\r\n      SeriesDate: ContentDate, // Map ContentDate/Time to SeriesTime for series list sorting.\r\n      SeriesTime: ContentTime,\r\n      SeriesNumber,\r\n      metadata,\r\n      authorizationHeaders: authorizationHeaders,\r\n    };\r\n  },\r\n};\r\n\r\nexport default OHIFDicomPDFSopClassHandler;\r\n","import React from 'react';\r\nimport OHIFDicomPDFSopClassHandler from './OHIFDicomPDFSopClassHandler.js';\r\nimport { version } from '../package.json';\r\n\r\nconst Component = React.lazy(() => {\r\n  return import('./ConnectedOHIFDicomPDFViewer');\r\n});\r\n\r\nconst ConnectedOHIFDicomPDFViewer = props => {\r\n  return (\r\n    <React.Suspense fallback={<div>Loading...</div>}>\r\n      <Component {...props} />\r\n    </React.Suspense>\r\n  );\r\n};\r\n\r\nexport default {\r\n  /**\r\n   * Only required property. Should be a unique value across all extensions.\r\n   */\r\n  id: 'pdf',\r\n  version,\r\n  getViewportModule() {\r\n    return ConnectedOHIFDicomPDFViewer;\r\n  },\r\n  getSopClassHandlerModule() {\r\n    return OHIFDicomPDFSopClassHandler;\r\n  },\r\n};\r\n","/**\r\n * Entry point for development and production PWA builds.\r\n * Packaged (NPM) builds go through `index-umd.js`\r\n */\r\n\r\nimport 'regenerator-runtime/runtime';\r\n\r\nimport App from './App.js';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// test\r\n\r\n/**\r\n * EXTENSIONS\r\n * =================\r\n *\r\n * Importing and modifying the extensions our app uses HERE allows us to leverage\r\n * tree shaking and a few other niceties. However, by including them here they become\r\n * \"baked in\" to the published application.\r\n *\r\n * Depending on your use case/needs, you may want to consider not adding any extensions\r\n * by default HERE, and instead provide them via the extensions configuration key or\r\n * by using the exported `App` component, and passing in your extensions as props using\r\n * the defaultExtensions property.\r\n */\r\nimport OHIFVTKExtension from '@ohif/extension-vtk';\r\nimport OHIFDicomHtmlExtension from '@ohif/extension-dicom-html';\r\nimport OHIFDicomSegmentationExtension from '@ohif/extension-dicom-segmentation';\r\nimport OHIFDicomRtExtension from '@ohif/extension-dicom-rt';\r\nimport OHIFDicomMicroscopyExtension from '@ohif/extension-dicom-microscopy';\r\nimport OHIFDicomPDFExtension from '@ohif/extension-dicom-pdf';\r\n//import OHIFDicomTagBrowserExtension from '@ohif/extension-dicom-tag-browser';\r\n// Add this for Debugging purposes:\r\n//import OHIFDebuggingExtension from '@ohif/extension-debugging';\r\nimport { version } from '../package.json';\r\n\r\n/*\r\n * Default Settings\r\n */\r\nlet config = {};\r\n\r\nif (window) {\r\n  config = window.config || {};\r\n  window.version = version;\r\n}\r\n\r\nconst appProps = {\r\n  config,\r\n  defaultExtensions: [\r\n    OHIFVTKExtension,\r\n    OHIFDicomHtmlExtension,\r\n    OHIFDicomMicroscopyExtension,\r\n    OHIFDicomPDFExtension,\r\n    OHIFDicomSegmentationExtension,\r\n    OHIFDicomRtExtension,\r\n    //OHIFDebuggingExtension,\r\n    //OHIFDicomTagBrowserExtension,\r\n  ],\r\n};\r\n\r\n/** Create App */\r\nconst app = React.createElement(App, appProps, null);\r\n\r\n/** Render */\r\nReactDOM.render(app, document.getElementById('root'));\r\n","import MODULE_TYPES from './MODULE_TYPES.js';\r\nimport log from './../log.js';\r\n\r\nexport default class ExtensionManager {\r\n  constructor({ commandsManager, servicesManager, api, appConfig = {} }) {\r\n    this.modules = {};\r\n    this.registeredExtensionIds = [];\r\n    this.registeredExtensionVesions = {};\r\n    this.moduleTypeNames = Object.values(MODULE_TYPES);\r\n    //\r\n    this._commandsManager = commandsManager;\r\n    this._servicesManager = servicesManager;\r\n    this._appConfig = appConfig;\r\n    this._api = api;\r\n\r\n    this.moduleTypeNames.forEach(moduleType => {\r\n      this.modules[moduleType] = [];\r\n    });\r\n  }\r\n\r\n  /**\r\n   * An array of extensions, or an array of arrays that contains extension\r\n   * configuration pairs.\r\n   *\r\n   * @param {Object[]} extensions - Array of extensions\r\n   */\r\n  registerExtensions(extensions) {\r\n    extensions.forEach(extension => {\r\n      const hasConfiguration = Array.isArray(extension);\r\n\r\n      if (hasConfiguration) {\r\n        const [ohifExtension, configuration] = extension;\r\n        this.registerExtension(ohifExtension, configuration);\r\n      } else {\r\n        this.registerExtension(extension);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * TODO: Id Management: SopClassHandlers currently refer to viewport module by id; setting the extension id as viewport module id is a workaround for now\r\n   * @param {Object} extension\r\n   * @param {Object} configuration\r\n   */\r\n  registerExtension(extension, configuration = {}) {\r\n    if (!extension) {\r\n      log.warn(\r\n        'Attempting to register a null/undefined extension. Exiting early.'\r\n      );\r\n      return;\r\n    }\r\n\r\n    let extensionId = extension.id;\r\n    const version = extension.version;\r\n\r\n    if (!extensionId) {\r\n      extensionId = Math.random()\r\n        .toString(36)\r\n        .substr(2, 5);\r\n\r\n      log.warn(`Extension ID not set. Using random string ID: ${extensionId}`);\r\n    }\r\n\r\n    if (this.registeredExtensionIds.includes(extensionId)) {\r\n      log.warn(\r\n        `Extension ID ${extensionId} has already been registered. Exiting before duplicating modules.`\r\n      );\r\n      return;\r\n    }\r\n\r\n    // preRegistrationHook\r\n    if (extension.preRegistration) {\r\n      extension.preRegistration({\r\n        servicesManager: this._servicesManager,\r\n        commandsManager: this._commandsManager,\r\n        appConfig: this._appConfig,\r\n        configuration,\r\n      });\r\n    }\r\n\r\n    // Register Modules\r\n    this.moduleTypeNames.forEach(moduleType => {\r\n      const extensionModule = this._getExtensionModule(\r\n        moduleType,\r\n        extension,\r\n        extensionId,\r\n        configuration\r\n      );\r\n\r\n      if (extensionModule) {\r\n        this._initSpecialModuleTypes(moduleType, extensionModule);\r\n\r\n        this.modules[moduleType].push({\r\n          extensionId,\r\n          module: extensionModule,\r\n        });\r\n      }\r\n    });\r\n\r\n    // Track extension registration\r\n    this.registeredExtensionIds.push(extensionId);\r\n\r\n    this.registeredExtensionVesions[extensionId] = version;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {string} moduleType\r\n   * @param {Object} extension\r\n   * @param {string} extensionId - Used for logging warnings\r\n   */\r\n  _getExtensionModule(moduleType, extension, extensionId, configuration) {\r\n    const getModuleFnName = 'get' + _capitalizeFirstCharacter(moduleType);\r\n    const getModuleFn = extension[getModuleFnName];\r\n\r\n    if (!getModuleFn) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const extensionModule = getModuleFn({\r\n        servicesManager: this._servicesManager,\r\n        commandsManager: this._commandsManager,\r\n        appConfig: this._appConfig,\r\n        configuration,\r\n        api: this._api,\r\n        extensionManager: this,\r\n      });\r\n\r\n      if (!extensionModule) {\r\n        log.warn(\r\n          `Null or undefined returned when registering the ${getModuleFnName} module for the ${extensionId} extension`\r\n        );\r\n      }\r\n\r\n      return extensionModule;\r\n    } catch (ex) {\r\n      log.error(\r\n        `Exception thrown while trying to call ${getModuleFnName} for the ${extensionId} extension`\r\n      );\r\n    }\r\n  }\r\n\r\n  _initSpecialModuleTypes(moduleType, extensionModule) {\r\n    switch (moduleType) {\r\n      case 'commandsModule': {\r\n        const { definitions, defaultContext } = extensionModule;\r\n        if (!definitions || Object.keys(definitions).length === 0) {\r\n          log.warn('Commands Module contains no command definitions');\r\n          return;\r\n        }\r\n        this._initCommandsModule(definitions, defaultContext);\r\n        break;\r\n      }\r\n      default:\r\n      // code block\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @private\r\n   * @param {Object[]} commandDefinitions\r\n   */\r\n  _initCommandsModule(commandDefinitions, defaultContext = 'VIEWER') {\r\n    if (!this._commandsManager.getContext(defaultContext)) {\r\n      this._commandsManager.createContext(defaultContext);\r\n    }\r\n\r\n    Object.keys(commandDefinitions).forEach(commandName => {\r\n      const commandDefinition = commandDefinitions[commandName];\r\n      const commandHasContextThatDoesNotExist =\r\n        commandDefinition.context &&\r\n        !this._commandsManager.getContext(commandDefinition.context);\r\n\r\n      if (commandHasContextThatDoesNotExist) {\r\n        this._commandsManager.createContext(commandDefinition.context);\r\n      }\r\n\r\n      this._commandsManager.registerCommand(\r\n        commandDefinition.context || defaultContext,\r\n        commandName,\r\n        commandDefinition\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n * @param {string} lower\r\n */\r\nfunction _capitalizeFirstCharacter(lower) {\r\n  return lower.charAt(0).toUpperCase() + lower.substr(1);\r\n}\r\n","import log from './../log.js';\r\n\r\nexport default class ServicesManager {\r\n  constructor() {\r\n    this.services = {};\r\n    this.registeredServiceNames = [];\r\n  }\r\n\r\n  /**\r\n   * Registers a new service.\r\n   *\r\n   * @param {Object} service\r\n   * @param {Object} configuration\r\n   */\r\n  registerService(service, configuration = {}) {\r\n    if (!service) {\r\n      log.warn(\r\n        'Attempting to register a null/undefined service. Exiting early.'\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!service.name) {\r\n      log.warn(`Service name not set. Exiting early.`);\r\n      return;\r\n    }\r\n\r\n    if (this.registeredServiceNames.includes(service.name)) {\r\n      log.warn(\r\n        `Service name ${service.name} has already been registered. Exiting before duplicating services.`\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (service.create) {\r\n      this.services[service.name] = service.create({\r\n        configuration,\r\n      });\r\n    } else {\r\n      log.warn(`Service create factory function not defined. Exiting early.`);\r\n      return;\r\n    }\r\n\r\n    /* Track service registration */\r\n    this.registeredServiceNames.push(service.name);\r\n  }\r\n\r\n  /**\r\n   * An array of services, or an array of arrays that contains service\r\n   * configuration pairs.\r\n   *\r\n   * @param {Object[]} services - Array of services\r\n   */\r\n  registerServices(services) {\r\n    services.forEach(service => {\r\n      const hasConfiguration = Array.isArray(service);\r\n\r\n      if (hasConfiguration) {\r\n        const [ohifService, configuration] = service;\r\n        this.registerService(ohifService, configuration);\r\n      } else {\r\n        this.registerService(service);\r\n      }\r\n    });\r\n  }\r\n}\r\n","/**\r\n * A UI Notification\r\n *\r\n * @typedef {Object} Notification\r\n * @property {string} title -\r\n * @property {string} message -\r\n * @property {number} [duration=5000] - in ms\r\n * @property {string} [position=\"bottomRight\"] -\"topLeft\" | \"topCenter | \"topRight\" | \"bottomLeft\" | \"bottomCenter\" | \"bottomRight\"\r\n * @property {string} [type=\"info\"] - \"info\" | \"error\" | \"warning\" | \"success\"\r\n * @property {boolean} [autoClose=true]\r\n * @property {object} [action=null]\r\n */\r\n\r\nconst name = 'UINotificationService';\r\n\r\nconst serviceShowRequestQueue = [];\r\n\r\nconst publicAPI = {\r\n  name,\r\n  hide: _hide,\r\n  show: _show,\r\n  setServiceImplementation,\r\n};\r\n\r\nconst serviceImplementation = {\r\n  _hide: () => console.warn('hide() NOT IMPLEMENTED'),\r\n  _show: showArguments => {\r\n    serviceShowRequestQueue.push(showArguments);\r\n\r\n    console.warn('show() NOT IMPLEMENTED');\r\n  },\r\n};\r\n\r\n/**\r\n * Create and show a new UI notification; returns the\r\n * ID of the created notification.\r\n *\r\n * @param {Notification} notification { title, message, duration, position, type, autoClose, action}\r\n * @returns {number} id\r\n */\r\nfunction _show({\r\n  title,\r\n  message,\r\n  duration = 5000,\r\n  position = 'bottomRight',\r\n  type = 'info',\r\n  autoClose = true,\r\n  action = null,\r\n}) {\r\n  return serviceImplementation._show({\r\n    title,\r\n    message,\r\n    duration,\r\n    position,\r\n    type,\r\n    autoClose,\r\n    action,\r\n  });\r\n}\r\n\r\n/**\r\n * Hides/dismisses the notification, if currently shown\r\n *\r\n * @param {number} id - id of the notification to hide/dismiss\r\n * @returns undefined\r\n */\r\nfunction _hide(id) {\r\n  return serviceImplementation._hide({ id });\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} {\r\n *   hide: hideImplementation,\r\n *   show: showImplementation,\r\n * }\r\n */\r\nfunction setServiceImplementation({\r\n  hide: hideImplementation,\r\n  show: showImplementation,\r\n}) {\r\n  if (hideImplementation) {\r\n    serviceImplementation._hide = hideImplementation;\r\n  }\r\n  if (showImplementation) {\r\n    serviceImplementation._show = showImplementation;\r\n\r\n    while (serviceShowRequestQueue.length > 0) {\r\n      const showArguments = serviceShowRequestQueue.pop();\r\n      serviceImplementation._show(showArguments);\r\n    }\r\n  }\r\n}\r\n\r\nexport default {\r\n  name,\r\n  create: ({ configuration = {} }) => {\r\n    return publicAPI;\r\n  },\r\n};\r\n","/**\r\n * UI Modal\r\n *\r\n * @typedef {Object} ModalProps\r\n * @property {ReactElement|HTMLElement} [content=null] Modal content.\r\n * @property {Object} [contentProps=null] Modal content props.\r\n * @property {boolean} [shouldCloseOnEsc=false] Modal is dismissible via the esc key.\r\n * @property {boolean} [isOpen=true] Make the Modal visible or hidden.\r\n * @property {boolean} [closeButton=true] Should the modal body render the close button.\r\n * @property {string} [title=null] Should the modal render the title independently of the body content.\r\n * @property {string} [customClassName=null] The custom class to style the modal.\r\n * @property {boolean} [showScrollbar=false] Show or hide scrollbar.\r\n * @property {boolean} [noScroll=false] Disable or not the scrollbar.\r\n */\r\n\r\nconst name = 'UIModalService';\r\n\r\nconst publicAPI = {\r\n  name,\r\n  hide: _hide,\r\n  show: _show,\r\n  setServiceImplementation,\r\n};\r\n\r\nconst serviceImplementation = {\r\n  _hide: () => console.warn('hide() NOT IMPLEMENTED'),\r\n  _show: () => console.warn('show() NOT IMPLEMENTED'),\r\n};\r\n\r\n/**\r\n * Show a new UI modal;\r\n *\r\n * @param {ModalProps} props { content, contentProps, shouldCloseOnEsc, isOpen, onClose, closeButton, title, customClassName, showScrollbar, noScroll }\r\n */\r\nfunction _show({\r\n  content = null,\r\n  contentProps = null,\r\n  shouldCloseOnEsc = false,\r\n  isOpen = true,\r\n  onClose = null,\r\n  closeButton = true,\r\n  title = null,\r\n  fullscreen = false,\r\n  customClassName = null,\r\n  showScrollbar = false,\r\n  noScroll = false,\r\n}) {\r\n  return serviceImplementation._show({\r\n    content,\r\n    contentProps,\r\n    shouldCloseOnEsc,\r\n    isOpen,\r\n    onClose,\r\n    closeButton,\r\n    title,\r\n    fullscreen,\r\n    customClassName,\r\n    showScrollbar,\r\n    noScroll,\r\n  });\r\n}\r\n\r\n/**\r\n * Hides/dismisses the modal, if currently shown\r\n *\r\n * @returns void\r\n */\r\nfunction _hide() {\r\n  return serviceImplementation._hide();\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} {\r\n *   hide: hideImplementation,\r\n *   show: showImplementation,\r\n * }\r\n */\r\nfunction setServiceImplementation({\r\n  hide: hideImplementation,\r\n  show: showImplementation,\r\n}) {\r\n  if (hideImplementation) {\r\n    serviceImplementation._hide = hideImplementation;\r\n  }\r\n  if (showImplementation) {\r\n    serviceImplementation._show = showImplementation;\r\n  }\r\n}\r\n\r\nexport default {\r\n  name,\r\n  create: ({ configuration = {} }) => {\r\n    return publicAPI;\r\n  },\r\n};\r\n","/**\r\n * A UI Element Position\r\n *\r\n * @typedef {Object} ElementPosition\r\n * @property {number} top -\r\n * @property {number} left -\r\n * @property {number} right -\r\n * @property {number} bottom -\r\n */\r\n\r\n/**\r\n * UI Dialog\r\n *\r\n * @typedef {Object} DialogProps\r\n * @property {string} id The dialog id.\r\n * @property {ReactElement|HTMLElement} content The dialog content.\r\n * @property {Object} contentProps The dialog content props.\r\n * @property {boolean} [isDraggable=true] Controls if dialog content is draggable or not.\r\n * @property {boolean} [showOverlay=false] Controls dialog overlay.\r\n * @property {boolean} [centralize=false] Center the dialog on the screen.\r\n * @property {boolean} [preservePosition=true] Use last position instead of default.\r\n * @property {ElementPosition} defaultPosition Specifies the `x` and `y` that the dragged item should start at.\r\n * @property {Function} onStart Called when dragging starts. If `false` is returned any handler, the action will cancel.\r\n * @property {Function} onStop Called when dragging stops.\r\n * @property {Function} onDrag Called while dragging.\r\n */\r\n\r\nconst name = 'UIDialogService';\r\n\r\nconst publicAPI = {\r\n  name,\r\n  dismiss: _dismiss,\r\n  dismissAll: _dismissAll,\r\n  create: _create,\r\n  setServiceImplementation,\r\n};\r\n\r\nconst serviceImplementation = {\r\n  _dismiss: () => console.warn('dismiss() NOT IMPLEMENTED'),\r\n  _dismissAll: () => console.warn('dismissAll() NOT IMPLEMENTED'),\r\n  _create: () => console.warn('create() NOT IMPLEMENTED'),\r\n};\r\n\r\n/**\r\n * Show a new UI dialog;\r\n *\r\n * @param {DialogProps} props { id, content, contentProps, onStart, onDrag, onStop, centralize, isDraggable, showOverlay, preservePosition, defaultPosition }\r\n */\r\nfunction _create({\r\n  id,\r\n  content,\r\n  contentProps,\r\n  onStart,\r\n  onDrag,\r\n  onStop,\r\n  centralize = false,\r\n  preservePosition = true,\r\n  isDraggable = true,\r\n  showOverlay = false,\r\n  defaultPosition,\r\n}) {\r\n  return serviceImplementation._create({\r\n    id,\r\n    content,\r\n    contentProps,\r\n    onStart,\r\n    onDrag,\r\n    onStop,\r\n    centralize,\r\n    preservePosition,\r\n    isDraggable,\r\n    showOverlay,\r\n    defaultPosition,\r\n  });\r\n}\r\n\r\n/**\r\n * Destroys all dialogs, if any\r\n *\r\n * @returns void\r\n */\r\nfunction _dismissAll() {\r\n  return serviceImplementation._dismissAll();\r\n}\r\n\r\n/**\r\n * Destroy the dialog, if currently created\r\n *\r\n * @returns void\r\n */\r\nfunction _dismiss({ id }) {\r\n  return serviceImplementation._dismiss({ id });\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} {\r\n *   dismiss: dismissImplementation,\r\n *   dismissAll: dismissAllImplementation,\r\n *   create: createImplementation,\r\n * }\r\n */\r\nfunction setServiceImplementation({\r\n  dismiss: dismissImplementation,\r\n  dismissAll: dismissAllImplementation,\r\n  create: createImplementation,\r\n}) {\r\n  if (dismissImplementation) {\r\n    serviceImplementation._dismiss = dismissImplementation;\r\n  }\r\n  if (dismissAllImplementation) {\r\n    serviceImplementation._dismissAll = dismissAllImplementation;\r\n  }\r\n  if (createImplementation) {\r\n    serviceImplementation._create = createImplementation;\r\n  }\r\n}\r\n\r\nexport default {\r\n  name,\r\n  create: ({ configuration = {} }) => {\r\n    return publicAPI;\r\n  },\r\n};\r\n","const name = 'LoggerService';\r\n\r\nconst publicAPI = {\r\n  name,\r\n  info: _info,\r\n  error: _error,\r\n  setServiceImplementation,\r\n};\r\n\r\nconst serviceImplementation = {\r\n  _info: () => console.warn('info() NOT IMPLEMENTED'),\r\n  _error: () => console.warn('error() NOT IMPLEMENTED'),\r\n};\r\n\r\n/**\r\n * Logs an info\r\n *\r\n * @param {object} props { message, displayOnConsole }\r\n */\r\nfunction _info({ message, displayOnConsole }) {\r\n  return serviceImplementation._info({\r\n    message,\r\n    displayOnConsole,\r\n  });\r\n}\r\n\r\n/**\r\n * Logs an error\r\n *\r\n * @param {object} props { error, stack, message, displayOnConsole }\r\n * @returns void\r\n */\r\nfunction _error({ error, stack, message, displayOnConsole }) {\r\n  return serviceImplementation._error({\r\n    error,\r\n    stack,\r\n    message,\r\n    displayOnConsole,\r\n  });\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} {\r\n *   info: infoImplementation,\r\n *   error: errorImplementation,\r\n * }\r\n */\r\nfunction setServiceImplementation({\r\n  info: infoImplementation,\r\n  error: errorImplementation,\r\n}) {\r\n  if (infoImplementation) {\r\n    serviceImplementation._info = infoImplementation;\r\n  }\r\n  if (errorImplementation) {\r\n    serviceImplementation._error = errorImplementation;\r\n  }\r\n}\r\n\r\nexport default {\r\n  name,\r\n  create: ({ configuration = {} }) => {\r\n    return publicAPI;\r\n  },\r\n};\r\n","import guid from '../../utils/guid';\r\n\r\n/**\r\n * Consumer must implement:\r\n * this.listeners = {}\r\n * this.EVENTS = { \"EVENT_KEY\": \"EVENT_VALUE\" }\r\n */\r\nexport default {\r\n  subscribe,\r\n  publish,\r\n  _unsubscribe,\r\n  _isValidEvent,\r\n};\r\n\r\n/**\r\n * Subscribe to updates.\r\n *\r\n * @param {string} eventName The name of the event\r\n * @param {Function} callback Events callback\r\n * @return {Object} Observable object with actions\r\n */\r\nfunction subscribe(eventName, callback) {\r\n  if (this._isValidEvent(eventName)) {\r\n    const listenerId = guid();\r\n    const subscription = { id: listenerId, callback };\r\n\r\n    console.info(`Subscribing to '${eventName}'.`);\r\n    if (Array.isArray(this.listeners[eventName])) {\r\n      this.listeners[eventName].push(subscription);\r\n    } else {\r\n      this.listeners[eventName] = [subscription];\r\n    }\r\n\r\n    return {\r\n      unsubscribe: () => this._unsubscribe(eventName, listenerId),\r\n    };\r\n  } else {\r\n    throw new Error(`Event ${eventName} not supported.`);\r\n  }\r\n}\r\n\r\n/**\r\n * Unsubscribe to measurement updates.\r\n *\r\n * @param {string} eventName The name of the event\r\n * @param {string} listenerId The listeners id\r\n * @return void\r\n */\r\nfunction _unsubscribe(eventName, listenerId) {\r\n  if (!this.listeners[eventName]) {\r\n    return;\r\n  }\r\n\r\n  const listeners = this.listeners[eventName];\r\n  if (Array.isArray(listeners)) {\r\n    this.listeners[eventName] = listeners.filter(({ id }) => id !== listenerId);\r\n  } else {\r\n    this.listeners[eventName] = undefined;\r\n  }\r\n}\r\n\r\n/**\r\n * Check if a given event is valid.\r\n *\r\n * @param {string} eventName The name of the event\r\n * @return {boolean} Event name validation\r\n */\r\nfunction _isValidEvent(eventName) {\r\n  return Object.values(this.EVENTS).includes(eventName);\r\n}\r\n\r\n/**\r\n * Broadcasts changes.\r\n *\r\n * @param {string} eventName - The event name\r\n * @param {func} callbackProps - Properties to pass callback\r\n * @return void\r\n */\r\nfunction publish(eventName, callbackProps) {\r\n  const hasListeners = Object.keys(this.listeners).length > 0;\r\n  const hasCallbacks = Array.isArray(this.listeners[eventName]);\r\n\r\n  if (hasListeners && hasCallbacks) {\r\n    this.listeners[eventName].forEach(listener => {\r\n      listener.callback(callbackProps);\r\n    });\r\n  }\r\n}\r\n","/** Internal imports */\r\nimport log from '../../log';\r\nimport guid from '../../utils/guid';\r\nimport pubSubServiceInterface from '../_shared/pubSubServiceInterface';\r\n\r\n/**\r\n * Measurement source schema\r\n *\r\n * @typedef {Object} MeasurementSource\r\n * @property {number} id -\r\n * @property {string} name -\r\n * @property {string} version -\r\n */\r\n\r\n/**\r\n * Measurement schema\r\n *\r\n * @typedef {Object} Measurement\r\n * @property {number} id -\r\n * @property {string} SOPInstanceUID -\r\n * @property {string} FrameOfReferenceUID -\r\n * @property {string} referenceSeriesUID -\r\n * @property {string} label -\r\n * @property {string} description -\r\n * @property {string} type -\r\n * @property {string} unit -\r\n * @property {number} area -\r\n * @property {Array} points -\r\n * @property {MeasurementSource} source -\r\n */\r\n\r\n/* Measurement schema keys for object validation. */\r\nconst MEASUREMENT_SCHEMA_KEYS = [\r\n  'id',\r\n  'SOPInstanceUID',\r\n  'FrameOfReferenceUID',\r\n  'referenceStudyUID',\r\n  'referenceSeriesUID',\r\n  'label',\r\n  'description',\r\n  'type',\r\n  'unit',\r\n  'area', // TODO: Add concept names instead (descriptor)\r\n  'mean',\r\n  'stdDev',\r\n  'length',\r\n  'shortestDiameter',\r\n  'longestDiameter',\r\n  'text', // NOTE: There is nothing like this in SR.\r\n  'points',\r\n  'source',\r\n];\r\n\r\nconst EVENTS = {\r\n  MEASUREMENT_UPDATED: 'event::measurement_updated',\r\n  INTERNAL_MEASUREMENT_UPDATED: 'event:internal_measurement_updated',\r\n  MEASUREMENT_ADDED: 'event::measurement_added',\r\n  RAW_MEASUREMENT_ADDED: 'event::raw_measurement_added',\r\n  MEASUREMENT_REMOVED: 'event::measurement_removed',\r\n  MEASUREMENTS_CLEARED: 'event::measurements_cleared',\r\n  JUMP_TO_MEASUREMENT: 'event:jump_to_measurement',\r\n};\r\n\r\nconst VALUE_TYPES = {\r\n  POLYLINE: 'value_type::polyline',\r\n  POINT: 'value_type::point',\r\n  BIDIRECTIONAL: 'value_type::shortAxisLongAxis', // TODO -> Discuss with Danny. => just using SCOORD values isn't enough here.\r\n  ELLIPSE: 'value_type::ellipse',\r\n  MULTIPOINT: 'value_type::multipoint',\r\n  CIRCLE: 'value_type::circle',\r\n};\r\n\r\nclass MeasurementService {\r\n  constructor() {\r\n    this.sources = {};\r\n    this.mappings = {};\r\n    this.measurements = {};\r\n    this.listeners = {};\r\n    this._jumpToMeasurementCache = {};\r\n    Object.defineProperty(this, 'EVENTS', {\r\n      value: EVENTS,\r\n      writable: false,\r\n      enumerable: true,\r\n      configurable: false,\r\n    });\r\n    Object.defineProperty(this, 'VALUE_TYPES', {\r\n      value: VALUE_TYPES,\r\n      writable: false,\r\n      enumerable: true,\r\n      configurable: false,\r\n    });\r\n\r\n    Object.assign(this, pubSubServiceInterface);\r\n  }\r\n\r\n  /**\r\n   * Get all measurements.\r\n   *\r\n   * @return {Measurement[]} Array of measurements\r\n   */\r\n  getMeasurements() {\r\n    const measurements = this._arrayOfObjects(this.measurements);\r\n    return (\r\n      measurements &&\r\n      measurements.map(m => this.measurements[Object.keys(m)[0]])\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get specific measurement by its id.\r\n   *\r\n   * @param {string} id Id of the measurement\r\n   * @return {Measurement} Measurement instance\r\n   */\r\n  getMeasurement(id) {\r\n    let measurement = null;\r\n    const measurements = this.measurements[id];\r\n\r\n    if (measurements && Object.keys(measurements).length > 0) {\r\n      measurement = this.measurements[id];\r\n    }\r\n\r\n    return measurement;\r\n  }\r\n\r\n  /**\r\n   * Create a new source.\r\n   *\r\n   * @param {string} name Name of the source\r\n   * @param {string} version Source name\r\n   * @return {MeasurementSource} Measurement source instance\r\n   */\r\n  createSource(name, version) {\r\n    if (!name) {\r\n      throw new Error('Source name not provided.');\r\n    }\r\n\r\n    if (!version) {\r\n      throw new Error('Source version not provided.');\r\n    }\r\n\r\n    const id = guid();\r\n    const source = {\r\n      id,\r\n      name,\r\n      version,\r\n    };\r\n    source.addOrUpdate = (definition, measurement) => {\r\n      return this.addOrUpdate(source, definition, measurement);\r\n    };\r\n    source.remove = id => {\r\n      return this.remove(id, source);\r\n    };\r\n    source.getAnnotation = (definition, measurementId) => {\r\n      return this.getAnnotation(source, definition, measurementId);\r\n    };\r\n\r\n    log.info(`New '${name}@${version}' source added.`);\r\n    this.sources[id] = source;\r\n\r\n    return source;\r\n  }\r\n\r\n  getSource(name, version) {\r\n    const { sources } = this;\r\n    const id = this._getSourceId(name, version);\r\n\r\n    return sources[id];\r\n  }\r\n\r\n  getSourceMappings(name, version) {\r\n    const { mappings } = this;\r\n    const id = this._getSourceId(name, version);\r\n\r\n    return mappings[id];\r\n  }\r\n\r\n  _getSourceId(name, version) {\r\n    const { sources } = this;\r\n\r\n    const sourceId = Object.keys(sources).find(sourceId => {\r\n      const source = sources[sourceId];\r\n\r\n      return source.name === name && source.version === version;\r\n    });\r\n\r\n    return sourceId;\r\n  }\r\n\r\n  /**\r\n   * Add a new measurement matching criteria along with mapping functions.\r\n   *\r\n   * @param {MeasurementSource} source Measurement source instance\r\n   * @param {string} definition Definition of the measurement (Annotation Type)\r\n   * @param {MatchingCriteria} matchingCriteria The matching criteria\r\n   * @param {Function} toSourceSchema Mapping function to source schema\r\n   * @param {Function} toMeasurementSchema Mapping function to measurement schema\r\n   * @return void\r\n   */\r\n  addMapping(\r\n    source,\r\n    definition,\r\n    matchingCriteria,\r\n    toSourceSchema,\r\n    toMeasurementSchema\r\n  ) {\r\n    if (!this._isValidSource(source)) {\r\n      throw new Error('Invalid source.');\r\n    }\r\n\r\n    if (!matchingCriteria) {\r\n      throw new Error('Matching criteria not provided.');\r\n    }\r\n\r\n    if (!definition) {\r\n      throw new Error('Definition not provided.');\r\n    }\r\n\r\n    if (!toSourceSchema) {\r\n      throw new Error('Mapping function to source schema not provided.');\r\n    }\r\n\r\n    if (!toMeasurementSchema) {\r\n      throw new Error('Measurement mapping function not provided.');\r\n    }\r\n\r\n    const mapping = {\r\n      matchingCriteria,\r\n      definition,\r\n      toSourceSchema,\r\n      toMeasurementSchema,\r\n    };\r\n\r\n    if (Array.isArray(this.mappings[source.id])) {\r\n      this.mappings[source.id].push(mapping);\r\n    } else {\r\n      this.mappings[source.id] = [mapping];\r\n    }\r\n\r\n    log.info(\r\n      `New measurement mapping added to source '${this._getSourceInfo(\r\n        source\r\n      )}'.`\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get annotation for specific source.\r\n   *\r\n   * @param {MeasurementSource} source Measurement source instance\r\n   * @param {string} definition The source definition\r\n   * @param {string} measurementId The measurement service measurement id\r\n   * @return {Object} Source measurement schema\r\n   */\r\n  getAnnotation(source, definition, measurementId) {\r\n    if (!this._isValidSource(source)) {\r\n      log.warn('Invalid source. Exiting early.');\r\n      return;\r\n    }\r\n\r\n    if (!definition) {\r\n      log.warn('No source definition provided. Exiting early.');\r\n      return;\r\n    }\r\n\r\n    const mapping = this._getMappingByMeasurementSource(\r\n      measurementId,\r\n      definition\r\n    );\r\n    const measurement = this.getMeasurement(measurementId);\r\n    if (mapping) return mapping.toSourceSchema(measurement, definition);\r\n\r\n    const matchingMapping = this._getMatchingMapping(\r\n      source,\r\n      definition,\r\n      measurement\r\n    );\r\n\r\n    if (matchingMapping) {\r\n      log.info('Matching mapping found:', matchingMapping);\r\n      const { toSourceSchema, definition } = matchingMapping;\r\n      return toSourceSchema(measurement, definition);\r\n    }\r\n  }\r\n\r\n  update(id, measurement, notYetUpdatedAtSource = false) {\r\n    if (this.measurements[id]) {\r\n      const updatedMeasurement = {\r\n        ...measurement,\r\n        modifiedTimestamp: Math.floor(Date.now() / 1000),\r\n      };\r\n\r\n      log.info(\r\n        `Updating internal measurement representation...`,\r\n        updatedMeasurement\r\n      );\r\n\r\n      this.measurements[id] = updatedMeasurement;\r\n\r\n      this.publish(\r\n        // Add an internal flag to say the measurement has not yet been updated at source.\r\n        this.EVENTS.MEASUREMENT_UPDATED,\r\n        {\r\n          source: measurement.source,\r\n          measurement: updatedMeasurement,\r\n          notYetUpdatedAtSource,\r\n        }\r\n      );\r\n\r\n      return updatedMeasurement.id;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a raw measurement into a source so that it may be\r\n   * Converted to/from annotation in the same way. E.g. import serialized data\r\n   * Of the same form as the measurement source.\r\n   * @param {MeasurementSource} source The measurement source instance.\r\n   * @param {string} definition The source definition you want to add the measurement to.\r\n   * @param {object} data The data you wish to add to the source.\r\n   * @param {function} toMeasurementSchema A function to get the `data` into the same shape as the source definition.\r\n   */\r\n  addRawMeasurement(\r\n    source,\r\n    definition,\r\n    data,\r\n    toMeasurementSchema,\r\n    dataSource = {}\r\n  ) {\r\n    if (!this._isValidSource(source)) {\r\n      log.warn('Invalid source. Exiting early.');\r\n      return;\r\n    }\r\n\r\n    const sourceInfo = this._getSourceInfo(source);\r\n\r\n    if (!definition) {\r\n      log.warn('No source definition provided. Exiting early.');\r\n      return;\r\n    }\r\n\r\n    if (!this._sourceHasMappings(source)) {\r\n      log.warn(\r\n        `No measurement mappings found for '${sourceInfo}' source. Exiting early.`\r\n      );\r\n      return;\r\n    }\r\n\r\n    let measurement = {};\r\n    try {\r\n      /* Convert measurement */\r\n      measurement = toMeasurementSchema(data);\r\n      /* Assign measurement source instance */\r\n      measurement.source = source;\r\n    } catch (error) {\r\n      log.warn(\r\n        `Failed to map '${sourceInfo}' measurement for definition ${definition}:`,\r\n        error.message\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!this._isValidMeasurement(measurement)) {\r\n      log.warn(\r\n        `Attempting to add or update a invalid measurement provided by '${sourceInfo}'. Exiting early.`\r\n      );\r\n      return;\r\n    }\r\n\r\n    let internalId = data.id;\r\n    if (!internalId) {\r\n      internalId = guid();\r\n      log.warn(`Measurement ID not found. Generating UID: ${internalId}`);\r\n    }\r\n\r\n    const newMeasurement = {\r\n      ...measurement,\r\n      modifiedTimestamp: Math.floor(Date.now() / 1000),\r\n      id: internalId,\r\n    };\r\n\r\n    if (this.measurements[internalId]) {\r\n      log.info(\r\n        `Measurement already defined. Updating measurement.`,\r\n        newMeasurement\r\n      );\r\n      this.measurements[internalId] = newMeasurement;\r\n      this.publish(this.EVENTS.MEASUREMENT_UPDATED, {\r\n        source,\r\n        measurement: newMeasurement,\r\n      });\r\n    } else {\r\n      log.info(`Measurement added.`, newMeasurement);\r\n      this.measurements[internalId] = newMeasurement;\r\n      this.publish(this.EVENTS.RAW_MEASUREMENT_ADDED, {\r\n        source,\r\n        measurement: newMeasurement,\r\n        data,\r\n        dataSource,\r\n      });\r\n    }\r\n\r\n    return newMeasurement.id;\r\n  }\r\n\r\n  /**\r\n   * Adds or update persisted measurements.\r\n   *\r\n   * @param {MeasurementSource} source The measurement source instance\r\n   * @param {string} definition The source definition\r\n   * @param {Measurement} measurement The source measurement\r\n   * @return {string} A measurement id\r\n   */\r\n  addOrUpdate(source, definition, sourceMeasurement) {\r\n    if (!this._isValidSource(source)) {\r\n      throw new Error('Invalid source.');\r\n    }\r\n\r\n    if (!definition) {\r\n      throw new Error('No source definition provided.');\r\n    }\r\n\r\n    const sourceInfo = this._getSourceInfo(source);\r\n\r\n    if (!this._sourceHasMappings(source)) {\r\n      throw new Error(\r\n        `No measurement mappings found for '${sourceInfo}' source. Exiting early.`\r\n      );\r\n    }\r\n\r\n    let measurement = {};\r\n    try {\r\n      const sourceMappings = this.mappings[source.id];\r\n      const { toMeasurementSchema } = sourceMappings.find(\r\n        mapping => mapping.definition === definition\r\n      );\r\n\r\n      /* Convert measurement */\r\n      measurement = toMeasurementSchema(sourceMeasurement);\r\n\r\n      /* Assign measurement source instance */\r\n      measurement.source = source;\r\n    } catch (error) {\r\n      throw new Error(\r\n        `Failed to map '${sourceInfo}' measurement for definition ${definition}:`,\r\n        error.message\r\n      );\r\n    }\r\n\r\n    if (!this._isValidMeasurement(measurement)) {\r\n      throw new Error(\r\n        `Attempting to add or update a invalid measurement provided by '${sourceInfo}'. Exiting early.`\r\n      );\r\n    }\r\n\r\n    let internalId = sourceMeasurement.id;\r\n    if (!internalId) {\r\n      internalId = guid();\r\n      log.info(`Measurement ID not found. Generating UID: ${internalId}`);\r\n    }\r\n\r\n    const newMeasurement = {\r\n      ...measurement,\r\n      modifiedTimestamp: Math.floor(Date.now() / 1000),\r\n      id: internalId,\r\n    };\r\n\r\n    if (this.measurements[internalId]) {\r\n      log.info(\r\n        `Measurement already defined. Updating measurement.`,\r\n        newMeasurement\r\n      );\r\n      this.measurements[internalId] = newMeasurement;\r\n      this.publish(this.EVENTS.MEASUREMENT_UPDATED, {\r\n        source,\r\n        measurement: newMeasurement,\r\n        notYetUpdatedAtSource: false,\r\n      });\r\n    } else {\r\n      log.info('Measurement added.', newMeasurement);\r\n      this.measurements[internalId] = newMeasurement;\r\n      this.publish(this.EVENTS.MEASUREMENT_ADDED, {\r\n        source,\r\n        measurement: newMeasurement,\r\n      });\r\n    }\r\n\r\n    return newMeasurement.id;\r\n  }\r\n\r\n  /**\r\n   * Removes a measurement and broadcasts the removed event.\r\n   *\r\n   * @param {string} id The measurement id\r\n   * @param {MeasurementSource} source The measurement source instance\r\n   * @return {string} The removed measurement id\r\n   */\r\n  remove(id, source) {\r\n    if (!id || !this.measurements[id]) {\r\n      log.warn(`No id provided, or unable to find measurement by id.`);\r\n      return;\r\n    }\r\n\r\n    delete this.measurements[id];\r\n    this.publish(this.EVENTS.MEASUREMENT_REMOVED, {\r\n      source,\r\n      measurement: id, // This is weird :shrug:\r\n    });\r\n  }\r\n\r\n  clearMeasurements() {\r\n    this.measurements = {};\r\n    this._jumpToMeasurementCache = {};\r\n    this.publish(this.EVENTS.MEASUREMENTS_CLEARED);\r\n  }\r\n\r\n  jumpToMeasurement(viewportIndex, id) {\r\n    const measurement = this.measurements[id];\r\n\r\n    if (!measurement) {\r\n      log.warn(`No id provided, or unable to find measurement by id.`);\r\n      return;\r\n    }\r\n\r\n    this._addJumpToMeasurement(viewportIndex, id);\r\n\r\n    const eventName = this.EVENTS.JUMP_TO_MEASUREMENT;\r\n\r\n    const hasListeners = Object.keys(this.listeners).length > 0;\r\n    const hasCallbacks = Array.isArray(this.listeners[eventName]);\r\n\r\n    if (hasListeners && hasCallbacks) {\r\n      this.listeners[eventName].forEach(listener => {\r\n        listener.callback({ viewportIndex, measurement });\r\n      });\r\n    }\r\n  }\r\n\r\n  _addJumpToMeasurement(viewportIndex, id) {\r\n    this._jumpToMeasurementCache[viewportIndex] = id;\r\n  }\r\n\r\n  getJumpToMeasurement(viewportIndex) {\r\n    return this._jumpToMeasurementCache[viewportIndex];\r\n  }\r\n\r\n  removeJumpToMeasurement(viewportIndex) {\r\n    delete this._jumpToMeasurementCache[viewportIndex];\r\n  }\r\n\r\n  _getMappingByMeasurementSource(measurementId, definition) {\r\n    const measurement = this.getMeasurement(measurementId);\r\n    if (this._isValidSource(measurement.source)) {\r\n      return this.mappings[measurement.source.id].find(\r\n        m => m.definition === definition\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear all measurements and broadcasts cleared event.\r\n   */\r\n  clear() {\r\n    this.measurements = {};\r\n    this.publish(this.EVENTS.MEASUREMENTS_CLEARED);\r\n  }\r\n\r\n  /**\r\n   * Get measurement mapping function if matching criteria.\r\n   *\r\n   * @param {MeasurementSource} source Measurement source instance\r\n   * @param {string} definition The source definition\r\n   * @param {Measurement} measurement The measurement service measurement\r\n   * @return {Object} The mapping based on matched criteria\r\n   */\r\n  _getMatchingMapping(source, definition, measurement) {\r\n    const sourceMappings = this.mappings[source.id];\r\n\r\n    const sourceMappingsByDefinition = sourceMappings.filter(\r\n      mapping => mapping.definition === definition\r\n    );\r\n\r\n    /* Criteria Matching */\r\n    return sourceMappingsByDefinition.find(({ matchingCriteria }) => {\r\n      if (matchingCriteria.type !== measurement.type) {\r\n        return false;\r\n      }\r\n\r\n      if (\r\n        matchingCriteria.properties &&\r\n        matchingCriteria.properties.every(name =>\r\n          measurement.hasOwnProperty(name)\r\n        )\r\n      ) {\r\n        return true;\r\n      }\r\n\r\n      if (\r\n        measurement.points &&\r\n        measurement.points.length === matchingCriteria.points\r\n      ) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns formatted string with source info.\r\n   *\r\n   * @param {MeasurementSource} source Measurement source\r\n   * @return {string} Source information\r\n   */\r\n  _getSourceInfo(source) {\r\n    return `${source.name}@${source.version}`;\r\n  }\r\n\r\n  /**\r\n   * Checks if given source is valid.\r\n   *\r\n   * @param {MeasurementSource} source Measurement source\r\n   * @return {boolean} Measurement source validation\r\n   */\r\n  _isValidSource(source) {\r\n    return source && this.sources[source.id];\r\n  }\r\n\r\n  /**\r\n   * Checks if a given source has mappings.\r\n   *\r\n   * @param {MeasurementSource} source The measurement source\r\n   * @return {boolean} Validation if source has mappings\r\n   */\r\n  _sourceHasMappings(source) {\r\n    return (\r\n      Array.isArray(this.mappings[source.id]) && this.mappings[source.id].length\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Check if a given measurement data is valid.\r\n   *\r\n   * @param {Measurement} measurementData Measurement data\r\n   * @return {boolean} Measurement validation\r\n   */\r\n  _isValidMeasurement(measurementData) {\r\n    Object.keys(measurementData).forEach(key => {\r\n      if (!MEASUREMENT_SCHEMA_KEYS.includes(key)) {\r\n        log.warn(`Invalid measurement key: ${key}`);\r\n        return false;\r\n      }\r\n    });\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Check if a given measurement service event is valid.\r\n   *\r\n   * @param {string} eventName The name of the event\r\n   * @return {boolean} Event name validation\r\n  //  */\r\n  // _isValidEvent(eventName) {\r\n  //   return Object.values(this.EVENTS).includes(eventName);\r\n  // }\r\n\r\n  /**\r\n   * Converts object of objects to array.\r\n   *\r\n   * @return {Array} Array of objects\r\n   */\r\n  _arrayOfObjects = obj => {\r\n    return Object.entries(obj).map(e => ({ [e[0]]: e[1] }));\r\n  };\r\n}\r\n\r\nexport default MeasurementService;\r\nexport { EVENTS, VALUE_TYPES };\r\n","import MeasurementService from './MeasurementService';\r\n\r\nexport default {\r\n  name: 'MeasurementService',\r\n  create: ({ configuration = {} }) => {\r\n    return new MeasurementService();\r\n  },\r\n};\r\n"],"sourceRoot":""}